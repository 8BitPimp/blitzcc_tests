
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	sub	esp,4
	mov	eax,_aaray
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,60
	mov	esi,_aaray
	add	esi,12
	mov	[esi],ebx
	mov	ebx,60
	mov	esi,_aaray
	add	esi,16
	mov	[esi],ebx
	mov	ebx,3
	mov	esi,_aaray
	add	esi,20
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aaray
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,12
	mov	[esp+4],50
	mov	[esp+8],1
	mov	[esp],50
	call	_fcreateimage
	mov	[ebp-4],eax
	sub	esp,12
	mov	[esp+4],50
	mov	[esp+8],1
	mov	[esp],50
	call	_fcreateimage
	mov	[ebp-8],eax
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fclscolor
	call	_fcls
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],10
	mov	[esp+16],1
	mov	[esp+8],15
	mov	[esp+4],20
	mov	[esp],20
	call	_frect
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fclscolor
	call	_fcls
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	jmp	_14
_13
	call	_fcls
	sub	esp,16
	call	_fmousey
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-12],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,36
	mov	[esp+28],255
	mov	[esp+32],255
	mov	[esp+24],255
	mov	[esp+20],1
	mov	[esp+16],1056964608
	mov	[esp+12],0
	mov	[esp+8],240
	mov	[esp+4],320
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fdrawimage1
	sub	esp,4
	mov	[esp],1
	call	_fflip
_14
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_13
_3
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawimage1
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	cmp	[ebp+40],0
	jle	_15
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+32]
	mov	[esp+4],ebx
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+32]
	mov	[esp+4],ebx
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-4],1
	jmp	_16
_17
	mov	[ebp-8],1
	jmp	_18
_19
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-12],eax
	mov	ebx,_aaray
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	mov	esi,_aaray
	add	esi,16
	mov	esi,[esi]
	imul	esi,0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aaray]
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fgetred
	mov	[ebx],eax
	mov	ebx,_aaray
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	mov	esi,_aaray
	add	esi,16
	mov	esi,[esi]
	shl	esi,byte 0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aaray]
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fgetgreen
	mov	[ebx],eax
	mov	ebx,_aaray
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	mov	esi,_aaray
	add	esi,16
	mov	esi,[esi]
	shl	esi,byte 1
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aaray]
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fgetblue
	mov	[ebx],eax
	add	[ebp-8],1
_18
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	sub	eax,1
	cmp	[ebp-8],eax
	jle	_19
_6
	add	[ebp-4],1
_16
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	sub	eax,1
	cmp	[ebp-4],eax
	jle	_17
_5
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+32]
	mov	[esp+4],ebx
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-4],1
	jmp	_20
_21
	mov	[ebp-8],1
	jmp	_22
_23
	cmp	[ebp+40],1
	jnz	_24
	mov	eax,[ebp-4]
	add	eax,[ebp+24]
	mov	[ebp-20],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-20]
	sub	ebx,1
	cmp	eax,ebx
	setl	al
	movzx	eax,al
	mov	[ebp-20],eax
	mov	ebx,[ebp-4]
	add	ebx,[ebp+24]
	cmp	ebx,0
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	ebx,eax
	mov	eax,[ebp-8]
	add	eax,[ebp+28]
	cmp	eax,0
	setg	al
	movzx	eax,al
	and	ebx,eax
	mov	eax,[ebp-8]
	add	eax,[ebp+28]
	mov	[ebp-20],eax
	mov	eax,esi
	call	_fgraphicsheight
	mov	esi,eax
	mov	eax,[ebp-20]
	sub	esi,1
	cmp	eax,esi
	setl	al
	movzx	eax,al
	and	ebx,eax
	and	ebx,ebx
	jz	_25
	sub	esp,12
	mov	ebx,[ebp-8]
	add	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-4]
	add	eax,[ebp+24]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-12],eax
	sub	esp,28
	mov	ebx,_aaray
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	mov	esi,_aaray
	add	esi,16
	mov	esi,[esi]
	shl	esi,byte 0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aaray]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp+48]
	mov	ecx,255
	cdq
	idiv	ecx
	push	eax
	fild	[esp]
	pop	eax
	fmulp	st(1)
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fgetgreen
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,_aaray
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	mov	esi,_aaray
	add	esi,16
	mov	esi,[esi]
	shl	esi,byte 1
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aaray]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	[ebp-20],eax
	mov	esi,[ebp+52]
	mov	ecx,255
	mov	eax,esi
	cdq
	idiv	ecx
	mov	esi,eax
	mov	eax,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	[ebp-20],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	_fgetblue
	mov	esi,eax
	mov	eax,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,_aaray
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	mov	esi,_aaray
	add	esi,16
	mov	esi,[esi]
	imul	esi,0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aaray]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	[ebp-20],eax
	mov	esi,[ebp+44]
	mov	ecx,255
	mov	eax,esi
	cdq
	idiv	ecx
	mov	esi,eax
	mov	eax,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	[ebp-20],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	_fgetred
	mov	esi,eax
	mov	eax,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp],esi
	mov	eax,esi
	call	_fgetrgb
	mov	esi,eax
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	ebx,[ebp-8]
	add	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	add	eax,[ebp+24]
	mov	[esp],eax
	call	_fwritepixelfast
_25
	jmp	_26
_24
	cmp	[ebp+40],2
	jnz	_27
	mov	eax,[ebp-4]
	add	eax,[ebp+24]
	mov	[ebp-20],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-20]
	sub	ebx,1
	cmp	eax,ebx
	setl	al
	movzx	eax,al
	mov	[ebp-20],eax
	mov	ebx,[ebp-4]
	add	ebx,[ebp+24]
	cmp	ebx,0
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	ebx,eax
	mov	eax,[ebp-8]
	add	eax,[ebp+28]
	cmp	eax,0
	setg	al
	movzx	eax,al
	and	ebx,eax
	mov	eax,[ebp-8]
	add	eax,[ebp+28]
	mov	[ebp-20],eax
	mov	eax,esi
	call	_fgraphicsheight
	mov	esi,eax
	mov	eax,[ebp-20]
	sub	esi,1
	cmp	eax,esi
	setl	al
	movzx	eax,al
	and	ebx,eax
	and	ebx,ebx
	jz	_28
	sub	esp,12
	mov	ebx,[ebp-8]
	add	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-4]
	add	eax,[ebp+24]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fgetred
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fgetgreen
	mov	ebx,eax
	mov	eax,[ebp-20]
	add	eax,ebx
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fgetblue
	mov	ebx,eax
	mov	eax,[ebp-20]
	add	eax,ebx
	mov	[ebp-16],eax
	sub	esp,28
	mov	ebx,_aaray
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	mov	esi,_aaray
	add	esi,16
	mov	esi,[esi]
	shl	esi,byte 0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aaray]
	mov	ebx,[ebx]
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fgetgreen
	imul	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	[ebp-20],eax
	mov	ebx,[ebp+48]
	mov	ecx,255
	mov	eax,ebx
	cdq
	idiv	ecx
	mov	ebx,eax
	mov	eax,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-16]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1144995840
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,_aaray
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	mov	esi,_aaray
	add	esi,16
	mov	esi,[esi]
	shl	esi,byte 1
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aaray]
	mov	ebx,[ebx]
	mov	[ebp-20],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	_fgetblue
	mov	esi,eax
	mov	eax,[ebp-20]
	imul	esi,ebx
	push	esi
	fild	[esp]
	pop	esi
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	[ebp-20],eax
	mov	ebx,[ebp+52]
	mov	ecx,255
	mov	eax,ebx
	cdq
	idiv	ecx
	mov	ebx,eax
	mov	eax,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-16]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1144995840
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,_aaray
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	mov	esi,_aaray
	add	esi,16
	mov	esi,[esi]
	imul	esi,0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aaray]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	[ebp-20],eax
	mov	esi,[ebp+44]
	mov	ecx,255
	mov	eax,esi
	cdq
	idiv	ecx
	mov	esi,eax
	mov	eax,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,1144995840
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	[ebp-20],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	_fgetred
	mov	esi,eax
	mov	eax,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp],esi
	mov	eax,esi
	call	_fgetrgb
	mov	esi,eax
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	ebx,[ebp-8]
	add	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	add	eax,[ebp+24]
	mov	[esp],eax
	call	_fwritepixelfast
_28
_27
_26
	add	[ebp-8],1
_22
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	sub	eax,1
	cmp	[ebp-8],eax
	jle	_23
_8
	add	[ebp-4],1
_20
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	sub	eax,1
	cmp	[ebp-4],eax
	jle	_21
_7
	jmp	_29
_15
	sub	esp,16
	mov	ebx,[ebp+28]
	mov	[esp+8],ebx
	mov	esi,[ebp+32]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdrawimage
_29
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 36
	.align	16
_fgetred
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	shr	eax,byte 16
	mov	ebx,255
	and	eax,ebx
	jmp	_9_leave
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fgetgreen
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	shr	eax,byte 8
	mov	ebx,255
	and	eax,ebx
	jmp	_10_leave
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fgetblue
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	mov	ebx,255
	and	eax,ebx
	jmp	_11_leave
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fgetrgb
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+28]
	mov	ebx,[ebp+24]
	shl	ebx,byte 8
	or	eax,ebx
	mov	ebx,[ebp+20]
	shl	ebx,byte 16
	or	eax,ebx
	jmp	_12_leave
	mov	eax,0
	jmp	_12_leave
_12_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	4
_aaray	.dd	0
	.dd	1
	.dd	3
	.dd	0
	.dd	0
	.dd	0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

