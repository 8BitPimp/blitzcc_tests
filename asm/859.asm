
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	sub	esp,8
	mov	eax,_18
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[_vtermap],eax
	sub	esp,4
	mov	eax,[_vtermap]
	mov	[esp],eax
	call	_fimagewidth
	mov	[_vlmsize],eax
	sub	esp,4
	mov	eax,_ater
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_ater
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,_ater
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ater
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_almap
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_almap
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,_almap
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_almap
	mov	[esp],eax
	call	__bbDimArray
	call	_fmillisecs
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[_vtermap]
	mov	[esp],eax
	mov	ebx,[_vlmsize]
	mov	[esp+4],ebx
	call	_finitialise
	sub	esp,16
	mov	[esp+8],7000
	mov	esi,[_vlmsize]
	mov	[esp+12],esi
	mov	[esp+4],-1000
	mov	[esp],4000
	call	_frenderlmap
	mov	[ebp-8],eax
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],1
	call	_flmblurimage
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vtermap]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],260
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fdrawimage
	call	_fmillisecs
	sub	eax,[ebp-4]
	mov	[ebp-12],eax
	sub	esp,40
	mov	eax,_19
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_20
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_21
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],10
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitkey
	sub	esp,16
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsaveimage
	mov	ebx,eax
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_frenderlmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,12
	mov	ebx,[ebp+32]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+32]
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-4],eax
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fclscolor
	call	_fcls
	mov	[ebp-8],0
	jmp	_23
_24
	mov	[ebp-12],0
	jmp	_25
_26
	sub	esp,24
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+20],esi
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,_ater
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-12]
	add	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_ater]
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_flockedline
	and	eax,eax
	jz	_27
	mov	ebx,1120403456
	mov	esi,_almap
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-12]
	add	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_almap]
	mov	[esi],ebx
_27
	add	[ebp-12],1
_25
	mov	ebx,[ebp+32]
	cmp	[ebp-12],ebx
	jle	_26
_5
	add	[ebp-8],1
_23
	mov	ebx,[ebp+32]
	cmp	[ebp-8],ebx
	jle	_24
_4
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-8],0
	jmp	_28
_29
	mov	[ebp-12],0
	jmp	_30
_31
	mov	ebx,_almap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-12]
	add	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_almap]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	cmp	[ebp-16],255
	jz	_32
	sub	esp,16
	mov	ebx,[ebp-16]
	shl	ebx,byte 16
	mov	esi,[ebp-16]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-16]
	or	ebx,esi
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-12]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fwritepixelfast
_32
	add	[ebp-12],1
_30
	mov	ebx,[ebp+32]
	cmp	[ebp-12],ebx
	jle	_31
_7
	add	[ebp-8],1
_28
	mov	ebx,[ebp+32]
	cmp	[ebp-8],ebx
	jle	_29
_6
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	eax,[ebp-4]
	jmp	_3_leave
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_finitialise
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,4
	mov	eax,_ater
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+24]
	mov	esi,_ater
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,_ater
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ater
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_almap
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+24]
	mov	esi,_almap
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,_almap
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_almap
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-4],0
	jmp	_33
_34
	mov	[ebp-8],0
	jmp	_35
_36
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-12],eax
	mov	ebx,[ebp-12]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,_ater
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-8]
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ater]
	mov	[esi],ebx
	mov	ebx,1132396544
	mov	esi,_almap
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-8]
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_almap]
	mov	[esi],ebx
	add	[ebp-8],1
_35
	mov	ebx,[ebp+24]
	cmp	[ebp-8],ebx
	jle	_36
_10
	add	[ebp-4],1
_33
	mov	ebx,[ebp+24]
	cmp	[ebp-4],ebx
	jle	_34
_9
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_flockedline
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+32],ebx
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+36],ebx
	mov	ebx,[ebp+40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+40],ebx
	sub	esp,4
	mov	eax,[ebp+32]
	mov	[esp],eax
	call	__bbFAbs
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbFAbs
	mov	ebx,eax
	mov	eax,[ebp-12]
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_37
	sub	esp,4
	mov	eax,[ebp+32]
	mov	[esp],eax
	call	__bbFAbs
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-4],eax
	jmp	_38
_37
	sub	esp,4
	mov	eax,[ebp+36]
	mov	[esp],eax
	call	__bbFAbs
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-4],eax
_38
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+36],ebx
	mov	ebx,[ebp+40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+40],ebx
	jmp	_40
_39
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_ater
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	eax,[ebp+20]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	add	eax,ebx
	shl	eax,byte 2
	add	eax,[_ater]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_41
	mov	eax,1
	jmp	_11_leave
_41
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+20],ebx
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+36]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+24],ebx
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+40]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+28],ebx
_40
	mov	eax,[ebp+20]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[_vlmsize]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	mov	[ebp-12],eax
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vlmsize]
	push	esi
	fild	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	mov	[ebp-12],eax
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vlmsize]
	push	esi
	fild	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	mov	[ebp-12],eax
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	mov	[ebp-12],eax
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	mov	[ebp-12],eax
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	and	eax,eax
	jnz	_39
_12
	mov	eax,0
	jmp	_11_leave
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	16
_flmblurimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,80
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-12],eax
	mov	[ebp-16],0
	jmp	_42
_43
	mov	[ebp-20],0
	jmp	_44
_45
	mov	ebx,[ebp-20]
	sub	ebx,[ebp+24]
	mov	[ebp-24],ebx
	mov	ebx,[ebp-16]
	sub	ebx,[ebp+24]
	mov	[ebp-28],ebx
	mov	ebx,[ebp-20]
	add	ebx,[ebp+24]
	mov	[ebp-32],ebx
	mov	ebx,[ebp-16]
	add	ebx,[ebp+24]
	mov	[ebp-36],ebx
	cmp	[ebp-24],0
	jge	_46
	mov	[ebp-24],0
_46
	cmp	[ebp-28],0
	jge	_47
	mov	[ebp-28],0
_47
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-32],ebx
	jle	_48
	mov	ebx,[ebp-8]
	sub	ebx,1
	mov	[ebp-32],ebx
_48
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-36],ebx
	jle	_49
	mov	ebx,[ebp-12]
	sub	ebx,1
	mov	[ebp-36],ebx
_49
	mov	[ebp-40],0
	mov	[ebp-44],0
	mov	[ebp-48],0
	mov	[ebp-52],0
	mov	ebx,[ebp-28]
	mov	[ebp-56],ebx
	jmp	_50
_51
	mov	ebx,[ebp-24]
	mov	[ebp-60],ebx
	jmp	_52
_53
	sub	esp,12
	mov	ebx,[ebp-56]
	mov	[esp+4],ebx
	mov	esi,[ebp-4]
	mov	[esp+8],esi
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	[ebp-64],eax
	mov	ebx,[ebp-64]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-68],ebx
	mov	ebx,[ebp-64]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-72],ebx
	mov	ebx,[ebp-64]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-76],ebx
	mov	ebx,[ebp-68]
	add	[ebp-40],ebx
	mov	ebx,[ebp-72]
	add	[ebp-44],ebx
	mov	ebx,[ebp-76]
	add	[ebp-48],ebx
	add	[ebp-52],1
	add	[ebp-60],1
_52
	mov	ebx,[ebp-32]
	cmp	[ebp-60],ebx
	jle	_53
_17
	add	[ebp-56],1
_50
	mov	ebx,[ebp-36]
	cmp	[ebp-56],ebx
	jle	_51
_16
	mov	eax,[ebp-40]
	mov	ecx,[ebp-52]
	cdq
	idiv	ecx
	mov	[ebp-40],eax
	mov	eax,[ebp-44]
	mov	ecx,[ebp-52]
	cdq
	idiv	ecx
	mov	[ebp-44],eax
	mov	eax,[ebp-48]
	mov	ecx,[ebp-52]
	cdq
	idiv	ecx
	mov	[ebp-48],eax
	mov	ebx,[ebp-48]
	mov	esi,[ebp-44]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-40]
	shl	esi,byte 16
	or	ebx,esi
	mov	[ebp-80],ebx
	sub	esp,16
	mov	ebx,[ebp-80]
	mov	[esp+8],ebx
	mov	esi,[ebp-4]
	mov	[esp+12],esi
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-20],1
_44
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_45
_15
	add	[ebp-16],1
_42
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_43
_14
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_funlockbuffer
	mov	eax,0
	jmp	_13_leave
_13_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	4
_vtermap	.dd	0
_18	.db	"terrain01.bmp",0
	.align	4
_vlmsize	.dd	0
	.align	4
_ater	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_almap	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
_19	.db	"FINISHED in ",0
_20	.db	"ms",0
_21	.db	"Hit Any Key to Save Image",0
_22	.db	"shadow.bmp",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

