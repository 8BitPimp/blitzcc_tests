
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],1
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fhidepointer
	mov	[ebp-4],3
	mov	[ebp-8],1
	sub	esp,4
	mov	eax,_ax
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,200
	mov	esi,_ax
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ax
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ay
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,300
	mov	esi,_ay
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ay
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ar
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,200
	mov	esi,_ar
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ar
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aflag
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,200
	mov	esi,_aflag
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aflag
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_av
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,200
	mov	esi,_av
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_av
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adx
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,200
	mov	esi,_adx
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adx
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aflag
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,200
	mov	esi,_aflag
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aflag
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-12],1
	jmp	_9
_10
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_tmissiles
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,400
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	sub	esp,8
	mov	[esp],1145569280
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	sub	esp,8
	mov	[esp],1145569280
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	add	[ebp-12],1
_9
	mov	ebx,[ebp-4]
	cmp	[ebp-12],ebx
	jle	_10
_3
	call	_fmakecircles
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],400
	mov	[esp],400
	call	_fclscolor
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_tmissiles
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjFirst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	jmp	_12
_11
	call	_fmousex
	mov	[ebp-20],eax
	call	_fmousey
	mov	[ebp-24],eax
	call	_fcls
	sub	esp,16
	mov	ebx,[ebp-20]
	add	ebx,6
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	mov	[esp+12],esi
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-20]
	add	ebx,3
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	add	esi,3
	mov	[esp+12],esi
	mov	esi,[ebp-24]
	sub	esi,3
	mov	[esp+4],esi
	mov	eax,[ebp-20]
	add	eax,3
	mov	[esp],eax
	call	_fline
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_13
	add	[ebp-8],1
	cmp	[ebp-8],50
	jle	_14
	mov	[ebp-8],1
_14
	mov	eax,[ebp-8]
	shl	eax,byte 2
	add	eax,[_aflag]
	mov	eax,[eax]
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-32],eax
	sub	esp,4
	mov	[esp],1
	mov	eax,ebx
	call	_fmousedown
	mov	ebx,eax
	mov	eax,[ebp-32]
	and	eax,ebx
	and	eax,eax
	jz	_15
	mov	ebx,1
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_aflag]
	mov	[esi],ebx
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_ax]
	mov	[esi],ebx
	mov	ebx,[ebp-24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_ay]
	mov	[esi],ebx
	mov	ebx,-1090519040
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_av]
	mov	[esi],ebx
	sub	esp,16
	mov	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	mov	[esp+12],esi
	mov	[esp+4],600
	mov	[esp],400
	call	_fline
	mov	ebx,1
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_adx]
	mov	[esi],ebx
_15
_13
	mov	[ebp-12],1
	jmp	_16
_17
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_aflag]
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_18
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_ar]
	mov	ebx,[ebx]
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_adx]
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_ar]
	mov	[esi],ebx
	sub	esp,16
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_ay]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_ar]
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_ax]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[_vant]
	mov	[esp],eax
	call	_fdrawimage
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_ax]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_av]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_ax]
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_ay]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_av]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_ay]
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_ar]
	mov	ebx,[ebx]
	cmp	ebx,50
	jle	_19
	mov	ebx,2
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_aflag]
	mov	[esi],ebx
	mov	ebx,-1
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_adx]
	mov	[esi],ebx
	mov	ebx,1065353216
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_av]
	mov	[esi],ebx
_19
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_ar]
	mov	ebx,[ebx]
	cmp	ebx,1
	jge	_20
	mov	ebx,0
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_ar]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_aflag]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_ax]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_ay]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_adx]
	mov	[esi],ebx
_20
_18
	add	[ebp-12],1
_16
	cmp	[ebp-12],50
	jle	_17
_5
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],_tmissiles
	call	__bbObjEachFirst
	and	eax,eax
	jz	_6
_21
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,3
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	[ebp-28],eax
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	cmp	eax,600
	setg	al
	movzx	eax,al
	mov	[ebp-32],eax
	cmp	[ebp-28],9437328
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-32]
	or	eax,ebx
	and	eax,eax
	jz	_22
	sub	esp,8
	mov	[esp],1145569280
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,400
	jge	_23
	sub	esp,8
	mov	[esp],1112014848
	mov	[esp+4],0
	call	_frnd
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
_23
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,400
	jle	_24
	sub	esp,8
	mov	[esp],1112014848
	mov	[esp+4],0
	call	_frnd
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
_24
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,400
	jnz	_25
	mov	ebx,400
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
_25
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
_22
	sub	esp,16
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fline
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_21
_6
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+8],eax
	mov	[esp+4],100
	mov	[esp],100
	call	_ftext
	sub	esp,16
	mov	[esp+8],500
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vcity]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,4
	mov	[esp],10
	call	_fdelay
	sub	esp,4
	mov	[esp],1
	call	_fflip
_12
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_11
_4
	ret
_2_leave
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fmakecircles
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,12
	mov	[esp+4],100
	mov	[esp+8],60
	mov	[esp],100
	call	_fcreateimage
	mov	[_vant],eax
	mov	[ebp-4],1
	mov	[ebp-8],1120403456
	mov	[ebp-12],1120403456
	mov	[ebp-16],0
	jmp	_28
_29
	add	[ebp-4],1
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1036831949
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1036831949
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	sub	esp,20
	mov	[esp],1109393408
	mov	[esp+4],0
	call	_frnd
	mov	ebx,1128792064
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp],ebx
	sub	esp,8
	mov	[esp],1112014848
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	eax,ebx
	call	_fcolor
	mov	ebx,eax
	sub	esp,20
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
	sub	esp,16
	mov	[esp+8],100
	mov	esi,[ebp-4]
	mov	[esp+12],esi
	mov	[esp+4],100
	mov	eax,[_vant]
	mov	[esp],eax
	call	_fgrabimage
	call	_fcls
	add	[ebp-16],2
_28
	cmp	[ebp-16],100
	jle	_29
_8
	call	_fcls
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,12
	mov	[esp+4],100
	mov	[esp+8],1
	mov	[esp],800
	call	_fcreateimage
	mov	[_vcity],eax
	sub	esp,20
	mov	[esp+12],50
	mov	[esp+16],1
	mov	[esp+8],800
	mov	[esp+4],50
	mov	[esp],0
	call	_frect
	sub	esp,20
	mov	[esp+12],50
	mov	[esp+16],1
	mov	[esp+8],50
	mov	[esp+4],30
	mov	[esp],100
	call	_frect
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],1
	mov	[esp+8],30
	mov	[esp+4],20
	mov	[esp],110
	call	_frect
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],1
	mov	[esp+8],70
	mov	[esp+4],40
	mov	[esp],90
	call	_frect
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vcity]
	mov	[esp],eax
	call	_fgrabimage
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
_vant	.dd	0
	.align	4
_vcity	.dd	0
	.align	4
_ax	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ay	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ar	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aflag	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_av	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_adx	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_tmissiles	.dd	5
_26	.dd	0
	.dd	_26
	.dd	_26
	.dd	0
	.dd	-1
_27	.dd	0
	.dd	_27
	.dd	_27
	.dd	0
	.dd	-1
	.dd	4
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

