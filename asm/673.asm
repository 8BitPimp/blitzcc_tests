
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fturntriangle
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,80
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	sub	esp,4
	mov	eax,_4
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-28],eax
	sub	esp,4
	mov	eax,_5
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-32],eax
	sub	esp,4
	mov	eax,_6
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-36],eax
	sub	esp,4
	mov	eax,_7
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-40],eax
	sub	esp,4
	mov	eax,[ebp+28]
	mov	[esp],eax
	call	_fcos
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+28]
	mov	[esp],eax
	call	_fsin
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+32]
	mov	[esp],eax
	call	_fcos
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp+32]
	mov	[esp],eax
	call	_fsin
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp+36]
	mov	[esp],eax
	call	_fcos
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	eax,[ebp+36]
	mov	[esp],eax
	call	_fsin
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-24],eax
	mov	[ebp-56],0
	jmp	_10
_11
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	esi,[ebp-56]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-40]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-40]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-28]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-40]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-32]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-40]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-36]
	mov	[ebx],eax
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-28]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-32]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-36]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-52],ebx
	add	[ebp-56],1
_10
	cmp	[ebp-56],2
	jle	_11
_8
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-60],ebx
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-64],ebx
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-68],ebx
	mov	[ebp-56],0
	jmp	_12
_13
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-28]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-60]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-28]
	mov	[esi],ebx
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-32]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-32]
	mov	[esi],ebx
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-36]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-36]
	mov	[esi],ebx
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-32]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-36]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-8]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-36]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-32]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-8]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-36]
	mov	[esi],ebx
	mov	ebx,[ebp-72]
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-32]
	mov	[esi],ebx
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-28]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-36]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-16]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-36]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-28]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-16]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-36]
	mov	[esi],ebx
	mov	ebx,[ebp-76]
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-28]
	mov	[esi],ebx
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-28]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-32]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-24]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-32]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-28]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-24]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-32]
	mov	[esi],ebx
	mov	ebx,[ebp-76]
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-28]
	mov	[esi],ebx
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-28]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-60]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-28]
	mov	[esi],ebx
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-32]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-32]
	mov	[esi],ebx
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-36]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-36]
	mov	[esi],ebx
	sub	esp,20
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-32]
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-36]
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[ebp-28]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[ebp-40]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexcoords
	add	[ebp-56],1
_12
	cmp	[ebp-56],2
	jle	_13
_9
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	[ebp-80],eax
	sub	esp,8
	mov	ebx,[ebp-36]
	mov	[esp],ebx
	mov	[esp+4],_6
	mov	eax,ebx
	call	__bbVecFree
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,8
	mov	esi,[ebp-40]
	mov	[esp],esi
	mov	[esp+4],_7
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,8
	mov	esi,[ebp-32]
	mov	[esp],esi
	mov	[esp+4],_5
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,8
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	[esp+4],_4
	mov	eax,ebx
	call	__bbVecFree
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	4
_4	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_5	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_6	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_7	.dd	6
	.dd	3
	.dd	__bbIntType
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

