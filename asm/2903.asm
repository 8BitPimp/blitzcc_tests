
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,12
	mov	eax,_11
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_12
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],400
	mov	[esp],800
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[_vg01],0
	mov	[_vg02],0
	mov	[_vg03],0
	mov	[_vg04],0
	mov	[_vg05],0
	mov	[_vg06],0
	mov	[_vg07],0
	mov	[_vg08],0
	mov	[_vg09],0
	mov	[_vg10],0
	mov	[_vg11],0
	mov	[_vg12],0
	mov	[_vg13],0
	mov	[_vg14],0
	mov	[_vg15],0
	mov	[_vg16],0
	mov	[_vg17],0
	mov	[_vg18],0
	sub	esp,8
	mov	[esp],_vgame
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_13
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[_vphx01],40
	mov	[_vphy01],20
	mov	[_vphx02],80
	mov	[_vphy02],20
	mov	[_vphx03],120
	mov	[_vphy03],20
	mov	[_vphx04],160
	mov	[_vphy04],20
	mov	[_vphx05],20
	mov	[_vphy05],50
	mov	[_vphx06],100
	mov	[_vphy06],50
	mov	[_vphx07],180
	mov	[_vphy07],50
	mov	[_vphx08],40
	mov	[_vphy08],80
	mov	[_vphx09],80
	mov	[_vphy09],80
	mov	[_vphx10],120
	mov	[_vphy10],80
	mov	[_vphx11],160
	mov	[_vphy11],80
	mov	[_vphx12],20
	mov	[_vphy12],110
	mov	[_vphx13],100
	mov	[_vphy13],110
	mov	[_vphx14],180
	mov	[_vphy14],110
	mov	[_vphx15],40
	mov	[_vphy15],140
	mov	[_vphx16],80
	mov	[_vphy16],140
	mov	[_vphx17],120
	mov	[_vphy17],140
	mov	[_vphx18],160
	mov	[_vphy18],140
	mov	[_vax],60
	mov	[_vay],50
	mov	[_vbx],140
	mov	[_vby],50
	mov	[_vcx],60
	mov	[_vcy],110
	mov	[_vdx],140
	mov	[_vdy],110
_l_2backtogame
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	sub	esp,8
	mov	[esp],_vp1
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_14
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,16
	mov	eax,_vp1
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fupper
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_16
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_15
	call	_frules
_15
	sub	esp,16
	mov	eax,_vp1
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fupper
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_18
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_17
	jmp	_l_2backtogame
_17
	sub	esp,8
	mov	[esp],_vp2
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_19
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-4],1
	jmp	_20
_21
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],2
	call	__bbMod
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ftaketurn
	call	_fcheckforwinner
	mov	[ebp-12],eax
	cmp	[ebp-12],0
	jz	_22
	jmp	_3
_22
	add	[ebp-4],1
_20
	cmp	[ebp-4],18
	jle	_21
_3
	cmp	[ebp-12],1
	jnz	_23
	sub	esp,16
	mov	eax,_vp1
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_24
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_23
	cmp	[ebp-12],2
	jnz	_25
	sub	esp,16
	mov	eax,_vp2
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_26
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_25
	cmp	[ebp-12],0
	jnz	_27
	sub	esp,8
	mov	eax,_28
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_27
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_frules
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	call	_fdrawboard
	sub	esp,8
	mov	[esp],44
	mov	[esp+4],200
	call	_flocate
	sub	esp,8
	mov	eax,_29
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	[esp],44
	mov	[esp+4],215
	call	_flocate
	sub	esp,8
	mov	eax,_30
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	[esp],44
	mov	[esp+4],230
	call	_flocate
	sub	esp,8
	mov	eax,_31
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	[esp],44
	mov	[esp+4],245
	call	_flocate
	sub	esp,8
	mov	eax,_32
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	[esp],44
	mov	[esp+4],260
	call	_flocate
	sub	esp,8
	mov	eax,_33
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	[esp],44
	mov	[esp+4],275
	call	_flocate
	sub	esp,8
	mov	eax,_34
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	[esp],44
	mov	[esp+4],290
	call	_flocate
	sub	esp,8
	mov	eax,_35
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	[esp],44
	mov	[esp+4],305
	call	_flocate
	sub	esp,8
	mov	eax,_36
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	[esp],44
	mov	[esp+4],320
	call	_flocate
	sub	esp,8
	mov	eax,_37
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	[esp],44
	mov	[esp+4],335
	call	_flocate
	sub	esp,8
	mov	eax,_38
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	[esp],44
	mov	[esp+4],350
	call	_flocate
	sub	esp,8
	mov	eax,_39
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fflushkeys
	call	_fwaitkey
	call	_fcls
	sub	esp,4
	mov	[esp],1
	call	_fflip
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcheckforwinner
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	mov	[ebp-4],0
	mov	eax,[_vg02]
	cmp	[_vg01],eax
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[_vg03]
	cmp	[_vg02],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	mov	[ebp-8],eax
	mov	ebx,[_vg04]
	cmp	[_vg03],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	mov	[ebp-8],eax
	cmp	[_vg01],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_40
	mov	[ebp-4],1
_40
	mov	eax,[_vg02]
	cmp	[_vg01],eax
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[_vg03]
	cmp	[_vg02],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	mov	[ebp-8],eax
	mov	ebx,[_vg04]
	cmp	[_vg03],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	mov	[ebp-8],eax
	cmp	[_vg01],2
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_41
	mov	[ebp-4],2
_41
	mov	eax,[_vg09]
	cmp	[_vg08],eax
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[_vg10]
	cmp	[_vg09],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	mov	[ebp-8],eax
	mov	ebx,[_vg11]
	cmp	[_vg10],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	mov	[ebp-8],eax
	cmp	[_vg08],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_42
	mov	[ebp-4],1
_42
	mov	eax,[_vg09]
	cmp	[_vg08],eax
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[_vg10]
	cmp	[_vg09],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	mov	[ebp-8],eax
	mov	ebx,[_vg11]
	cmp	[_vg10],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	mov	[ebp-8],eax
	cmp	[_vg08],2
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_43
	mov	[ebp-4],2
_43
	mov	eax,[_vg16]
	cmp	[_vg15],eax
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[_vg17]
	cmp	[_vg16],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	mov	[ebp-8],eax
	mov	ebx,[_vg18]
	cmp	[_vg17],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	mov	[ebp-8],eax
	cmp	[_vg15],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_44
	mov	[ebp-4],1
_44
	mov	eax,[_vg16]
	cmp	[_vg15],eax
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[_vg17]
	cmp	[_vg16],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	mov	[ebp-8],eax
	mov	ebx,[_vg18]
	cmp	[_vg17],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	mov	[ebp-8],eax
	cmp	[_vg15],2
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_45
	mov	[ebp-4],2
_45
	mov	eax,[ebp-4]
	jmp	_5_leave
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_ftaketurn
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
_l_6invalid
	call	_fdrawboard
	sub	esp,4
	mov	[esp],1
	call	_fflip
	cmp	[ebp+20],1
	jnz	_46
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
_46
	cmp	[ebp+20],0
	jnz	_47
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
_47
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmove
	cmp	eax,0
	jnz	_48
	jmp	_l_6invalid
_48
	call	_fdrawboard
	sub	esp,4
	mov	[esp],1
	call	_fflip
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fdrawboard
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	call	_fcls
	sub	esp,28
	mov	[esp+4],1
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_49
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy01]
	mov	[esp+4],ebx
	mov	eax,[_vphx01]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],2
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_50
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy02]
	mov	[esp+4],ebx
	mov	eax,[_vphx02]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],3
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_51
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy03]
	mov	[esp+4],ebx
	mov	eax,[_vphx03]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],4
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_52
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy04]
	mov	[esp+4],ebx
	mov	eax,[_vphx04]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],5
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_53
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy05]
	mov	[esp+4],ebx
	mov	eax,[_vphx05]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],6
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_54
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy06]
	mov	[esp+4],ebx
	mov	eax,[_vphx06]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],7
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_55
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy07]
	mov	[esp+4],ebx
	mov	eax,[_vphx07]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],8
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_56
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy08]
	mov	[esp+4],ebx
	mov	eax,[_vphx08]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],9
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_57
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy09]
	mov	[esp+4],ebx
	mov	eax,[_vphx09]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],10
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_58
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy10]
	mov	[esp+4],ebx
	mov	eax,[_vphx10]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],11
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_59
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy11]
	mov	[esp+4],ebx
	mov	eax,[_vphx11]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],12
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_60
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy12]
	mov	[esp+4],ebx
	mov	eax,[_vphx12]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],13
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_61
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy13]
	mov	[esp+4],ebx
	mov	eax,[_vphx13]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],14
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_62
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy14]
	mov	[esp+4],ebx
	mov	eax,[_vphx14]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],15
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_63
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy15]
	mov	[esp+4],ebx
	mov	eax,[_vphx15]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],16
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_64
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy16]
	mov	[esp+4],ebx
	mov	eax,[_vphx16]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],17
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_65
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy17]
	mov	[esp+4],ebx
	mov	eax,[_vphx17]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,28
	mov	[esp+4],18
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vgame
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+8],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_66
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	ebx,[_vphy18]
	mov	[esp+4],ebx
	mov	eax,[_vphx18]
	mov	[esp],eax
	call	_frenderoval
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],128
	mov	[esp],128
	call	_fcolor
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],1
	mov	[esp+8],20
	mov	ebx,[_vay]
	mov	[esp+4],ebx
	mov	eax,[_vax]
	mov	[esp],eax
	call	_foval
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],1
	mov	[esp+8],20
	mov	ebx,[_vby]
	mov	[esp+4],ebx
	mov	eax,[_vbx]
	mov	[esp],eax
	call	_foval
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],1
	mov	[esp+8],20
	mov	ebx,[_vcy]
	mov	[esp+4],ebx
	mov	eax,[_vcx]
	mov	[esp],eax
	call	_foval
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],1
	mov	[esp+8],20
	mov	ebx,[_vdy]
	mov	[esp+4],ebx
	mov	eax,[_vdx]
	mov	[esp],eax
	call	_foval
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_67
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[_vay]
	add	ebx,2
	mov	[esp+4],ebx
	mov	eax,[_vax]
	add	eax,5
	mov	[esp],eax
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_68
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[_vby]
	add	ebx,2
	mov	[esp+4],ebx
	mov	eax,[_vbx]
	add	eax,5
	mov	[esp],eax
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_69
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[_vcy]
	add	ebx,2
	mov	[esp+4],ebx
	mov	eax,[_vcx]
	add	eax,5
	mov	[esp],eax
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_70
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[_vdy]
	add	ebx,2
	mov	[esp+4],ebx
	mov	eax,[_vdx]
	add	eax,5
	mov	[esp],eax
	call	_ftext
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_frenderoval
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	mov	[ebp-4],1
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_72
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_71
	mov	[ebp-4],0
_71
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_74
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_73
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
_73
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_76
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_75
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
_75
	sub	esp,20
	mov	[esp+12],20
	mov	esi,[ebp-4]
	mov	[esp+16],esi
	mov	[esp+8],20
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_foval
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_78
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_77
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	lea	eax,[ebp+32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	ebx,[ebp+24]
	add	ebx,2
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	add	eax,2
	mov	[esp],eax
	call	_ftext
_77
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp+32]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fgetmove
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,68
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	cmp	[ebp+20],0
	jnz	_79
	mov	[ebp+20],2
_79
	cmp	[ebp+20],1
	jnz	_80
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	jmp	_81
_80
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
_81
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	cmp	[ebp+20],1
	jnz	_82
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_vp1
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_83
_82
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_vp2
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrStore
_83
	sub	esp,32
	mov	eax,_84
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_85
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_finput
	mov	[esp+4],eax
	lea	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_87
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_86
	call	_fend
_86
	mov	[ebp-12],0
	mov	[ebp-16],0
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_89
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_90
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_88
	mov	[ebp-16],1
_88
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_92
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_93
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_91
	mov	[ebp-16],2
_91
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_95
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],3
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_96
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_94
	mov	[ebp-16],3
_94
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_98
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],4
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_99
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_97
	mov	[ebp-16],4
_97
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_101
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],5
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_102
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_100
	mov	[ebp-16],5
_100
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_104
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],6
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_105
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_103
	mov	[ebp-16],6
_103
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_107
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],7
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_108
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_106
	mov	[ebp-16],7
_106
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_110
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],8
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_111
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_109
	mov	[ebp-16],8
_109
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_113
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],9
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_114
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_112
	mov	[ebp-16],9
_112
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_116
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],10
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_117
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_115
	mov	[ebp-16],10
_115
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_119
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],11
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_120
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_118
	mov	[ebp-16],11
_118
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_122
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],12
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_123
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_121
	mov	[ebp-16],12
_121
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_125
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],13
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_126
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_124
	mov	[ebp-16],13
_124
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_128
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],14
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_129
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_127
	mov	[ebp-16],14
_127
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_131
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],15
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_132
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_130
	mov	[ebp-16],15
_130
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_134
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],16
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_135
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_133
	mov	[ebp-16],16
_133
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_137
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],17
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_138
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_136
	mov	[ebp-16],17
_136
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_140
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	[ebp-64],eax
	sub	esp,12
	mov	[esp+4],18
	mov	[esp+8],1
	mov	[ebp-68],eax
	sub	esp,4
	mov	esi,_vgame
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_141
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-60]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-56]
	and	eax,esi
	and	eax,eax
	jz	_139
	mov	[ebp-16],18
_139
	cmp	[ebp-16],0
	jnz	_142
	jmp	_l_9nonono
_142
	sub	esp,24
	mov	[esp+4],3
	mov	[esp+8],2
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	_fupper
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_143
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,32
	mov	eax,_145
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_146
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	cmp	ebx,0
	jnz	_144
	jmp	_l_9nonono
_144
	mov	[ebp-12],1
	cmp	[ebp-16],1
	jnz	_147
	mov	ebx,[ebp+20]
	mov	[_vg01],ebx
_147
	cmp	[ebp-16],2
	jnz	_148
	mov	ebx,[ebp+20]
	mov	[_vg02],ebx
_148
	cmp	[ebp-16],3
	jnz	_149
	mov	ebx,[ebp+20]
	mov	[_vg03],ebx
_149
	cmp	[ebp-16],4
	jnz	_150
	mov	ebx,[ebp+20]
	mov	[_vg04],ebx
_150
	cmp	[ebp-16],5
	jnz	_151
	mov	ebx,[ebp+20]
	mov	[_vg05],ebx
_151
	cmp	[ebp-16],6
	jnz	_152
	mov	ebx,[ebp+20]
	mov	[_vg06],ebx
_152
	cmp	[ebp-16],7
	jnz	_153
	mov	ebx,[ebp+20]
	mov	[_vg07],ebx
_153
	cmp	[ebp-16],8
	jnz	_154
	mov	ebx,[ebp+20]
	mov	[_vg08],ebx
_154
	cmp	[ebp-16],9
	jnz	_155
	mov	ebx,[ebp+20]
	mov	[_vg09],ebx
_155
	cmp	[ebp-16],10
	jnz	_156
	mov	ebx,[ebp+20]
	mov	[_vg10],ebx
_156
	cmp	[ebp-16],11
	jnz	_157
	mov	ebx,[ebp+20]
	mov	[_vg11],ebx
_157
	cmp	[ebp-16],12
	jnz	_158
	mov	ebx,[ebp+20]
	mov	[_vg12],ebx
_158
	cmp	[ebp-16],13
	jnz	_159
	mov	ebx,[ebp+20]
	mov	[_vg13],ebx
_159
	cmp	[ebp-16],14
	jnz	_160
	mov	ebx,[ebp+20]
	mov	[_vg14],ebx
_160
	cmp	[ebp-16],15
	jnz	_161
	mov	ebx,[ebp+20]
	mov	[_vg15],ebx
_161
	cmp	[ebp-16],16
	jnz	_162
	mov	ebx,[ebp+20]
	mov	[_vg16],ebx
_162
	cmp	[ebp-16],17
	jnz	_163
	mov	ebx,[ebp+20]
	mov	[_vg17],ebx
_163
	cmp	[ebp-16],18
	jnz	_164
	mov	ebx,[ebp+20]
	mov	[_vg18],ebx
_164
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_167
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_166
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_169
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_168
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_171
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_170
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_173
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_172
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_175
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_174
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_177
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_176
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_179
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_178
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_181
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_180
	jmp	_165
_166
	mov	[ebp-12],1
	mov	ebx,[_vg01]
	mov	[ebp-32],ebx
	mov	ebx,[_vg02]
	mov	[ebp-36],ebx
	mov	ebx,[_vg06]
	mov	[ebp-40],ebx
	mov	ebx,[_vg09]
	mov	[ebp-44],ebx
	mov	ebx,[_vg08]
	mov	[ebp-48],ebx
	mov	ebx,[_vg05]
	mov	[ebp-52],ebx
	mov	ebx,[ebp-52]
	mov	[_vg01],ebx
	mov	ebx,[ebp-32]
	mov	[_vg02],ebx
	mov	ebx,[ebp-36]
	mov	[_vg06],ebx
	mov	ebx,[ebp-40]
	mov	[_vg09],ebx
	mov	ebx,[ebp-44]
	mov	[_vg08],ebx
	mov	ebx,[ebp-48]
	mov	[_vg05],ebx
	jmp	_165
_168
	mov	[ebp-12],1
	mov	ebx,[_vg01]
	mov	[ebp-32],ebx
	mov	ebx,[_vg02]
	mov	[ebp-36],ebx
	mov	ebx,[_vg06]
	mov	[ebp-40],ebx
	mov	ebx,[_vg09]
	mov	[ebp-44],ebx
	mov	ebx,[_vg08]
	mov	[ebp-48],ebx
	mov	ebx,[_vg05]
	mov	[ebp-52],ebx
	mov	ebx,[ebp-36]
	mov	[_vg01],ebx
	mov	ebx,[ebp-40]
	mov	[_vg02],ebx
	mov	ebx,[ebp-44]
	mov	[_vg06],ebx
	mov	ebx,[ebp-48]
	mov	[_vg09],ebx
	mov	ebx,[ebp-52]
	mov	[_vg08],ebx
	mov	ebx,[ebp-32]
	mov	[_vg05],ebx
	jmp	_165
_170
	mov	[ebp-12],1
	mov	ebx,[_vg03]
	mov	[ebp-32],ebx
	mov	ebx,[_vg04]
	mov	[ebp-36],ebx
	mov	ebx,[_vg07]
	mov	[ebp-40],ebx
	mov	ebx,[_vg11]
	mov	[ebp-44],ebx
	mov	ebx,[_vg10]
	mov	[ebp-48],ebx
	mov	ebx,[_vg06]
	mov	[ebp-52],ebx
	mov	ebx,[ebp-52]
	mov	[_vg03],ebx
	mov	ebx,[ebp-32]
	mov	[_vg04],ebx
	mov	ebx,[ebp-36]
	mov	[_vg07],ebx
	mov	ebx,[ebp-40]
	mov	[_vg11],ebx
	mov	ebx,[ebp-44]
	mov	[_vg10],ebx
	mov	ebx,[ebp-48]
	mov	[_vg06],ebx
	jmp	_165
_172
	mov	[ebp-12],1
	mov	ebx,[_vg03]
	mov	[ebp-32],ebx
	mov	ebx,[_vg04]
	mov	[ebp-36],ebx
	mov	ebx,[_vg07]
	mov	[ebp-40],ebx
	mov	ebx,[_vg11]
	mov	[ebp-44],ebx
	mov	ebx,[_vg10]
	mov	[ebp-48],ebx
	mov	ebx,[_vg06]
	mov	[ebp-52],ebx
	mov	ebx,[ebp-36]
	mov	[_vg03],ebx
	mov	ebx,[ebp-40]
	mov	[_vg04],ebx
	mov	ebx,[ebp-44]
	mov	[_vg07],ebx
	mov	ebx,[ebp-48]
	mov	[_vg11],ebx
	mov	ebx,[ebp-52]
	mov	[_vg10],ebx
	mov	ebx,[ebp-32]
	mov	[_vg06],ebx
	jmp	_165
_174
	mov	[ebp-12],1
	mov	ebx,[_vg08]
	mov	[ebp-32],ebx
	mov	ebx,[_vg09]
	mov	[ebp-36],ebx
	mov	ebx,[_vg13]
	mov	[ebp-40],ebx
	mov	ebx,[_vg16]
	mov	[ebp-44],ebx
	mov	ebx,[_vg15]
	mov	[ebp-48],ebx
	mov	ebx,[_vg12]
	mov	[ebp-52],ebx
	mov	ebx,[ebp-52]
	mov	[_vg08],ebx
	mov	ebx,[ebp-32]
	mov	[_vg09],ebx
	mov	ebx,[ebp-36]
	mov	[_vg13],ebx
	mov	ebx,[ebp-40]
	mov	[_vg16],ebx
	mov	ebx,[ebp-44]
	mov	[_vg15],ebx
	mov	ebx,[ebp-48]
	mov	[_vg12],ebx
	jmp	_165
_176
	mov	[ebp-12],1
	mov	ebx,[_vg08]
	mov	[ebp-32],ebx
	mov	ebx,[_vg09]
	mov	[ebp-36],ebx
	mov	ebx,[_vg13]
	mov	[ebp-40],ebx
	mov	ebx,[_vg16]
	mov	[ebp-44],ebx
	mov	ebx,[_vg15]
	mov	[ebp-48],ebx
	mov	ebx,[_vg12]
	mov	[ebp-52],ebx
	mov	ebx,[ebp-36]
	mov	[_vg08],ebx
	mov	ebx,[ebp-40]
	mov	[_vg09],ebx
	mov	ebx,[ebp-44]
	mov	[_vg13],ebx
	mov	ebx,[ebp-48]
	mov	[_vg16],ebx
	mov	ebx,[ebp-52]
	mov	[_vg15],ebx
	mov	ebx,[ebp-32]
	mov	[_vg12],ebx
	jmp	_165
_178
	mov	[ebp-12],1
	mov	ebx,[_vg10]
	mov	[ebp-32],ebx
	mov	ebx,[_vg11]
	mov	[ebp-36],ebx
	mov	ebx,[_vg14]
	mov	[ebp-40],ebx
	mov	ebx,[_vg18]
	mov	[ebp-44],ebx
	mov	ebx,[_vg17]
	mov	[ebp-48],ebx
	mov	ebx,[_vg13]
	mov	[ebp-52],ebx
	mov	ebx,[ebp-52]
	mov	[_vg10],ebx
	mov	ebx,[ebp-32]
	mov	[_vg11],ebx
	mov	ebx,[ebp-36]
	mov	[_vg14],ebx
	mov	ebx,[ebp-40]
	mov	[_vg18],ebx
	mov	ebx,[ebp-44]
	mov	[_vg17],ebx
	mov	ebx,[ebp-48]
	mov	[_vg13],ebx
	jmp	_165
_180
	mov	[ebp-12],1
	mov	ebx,[_vg10]
	mov	[ebp-32],ebx
	mov	ebx,[_vg11]
	mov	[ebp-36],ebx
	mov	ebx,[_vg14]
	mov	[ebp-40],ebx
	mov	ebx,[_vg18]
	mov	[ebp-44],ebx
	mov	ebx,[_vg17]
	mov	[ebp-48],ebx
	mov	ebx,[_vg13]
	mov	[ebp-52],ebx
	mov	ebx,[ebp-36]
	mov	[_vg10],ebx
	mov	ebx,[ebp-40]
	mov	[_vg11],ebx
	mov	ebx,[ebp-44]
	mov	[_vg14],ebx
	mov	ebx,[ebp-48]
	mov	[_vg18],ebx
	mov	ebx,[ebp-52]
	mov	[_vg17],ebx
	mov	ebx,[ebp-32]
	mov	[_vg13],ebx
	jmp	_165
_165
_l_9nonono
	cmp	[ebp-12],0
	jnz	_182
	sub	esp,8
	mov	eax,_183
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,4
	mov	[esp],2000
	call	_fdelay
_182
	sub	esp,148
	mov	eax,[_vg01]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg02]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg03]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg04]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg05]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg06]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg07]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg08]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg09]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg10]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg11]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg13]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg14]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg15]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg17]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[_vg18]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp],_vgame
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	eax,[ebp-12]
	jmp	_9_leave
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[ebp-56],eax
	sub	esp,4
	mov	esi,[ebp-28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-56]
	mov	[ebp-56],eax
	sub	esp,4
	mov	esi,[ebp-20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-56]
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[ebp-56],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-56]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
_11	.db	"HexTiles - Enter RULES for Player One's name to see the rules.",0
_12	.db	"",0
	.align	4
_vg01	.dd	0
	.align	4
_vg02	.dd	0
	.align	4
_vg03	.dd	0
	.align	4
_vg04	.dd	0
	.align	4
_vg05	.dd	0
	.align	4
_vg06	.dd	0
	.align	4
_vg07	.dd	0
	.align	4
_vg08	.dd	0
	.align	4
_vg09	.dd	0
	.align	4
_vg10	.dd	0
	.align	4
_vg11	.dd	0
	.align	4
_vg12	.dd	0
	.align	4
_vg13	.dd	0
	.align	4
_vg14	.dd	0
	.align	4
_vg15	.dd	0
	.align	4
_vg16	.dd	0
	.align	4
_vg17	.dd	0
	.align	4
_vg18	.dd	0
	.align	4
_vgame	.dd	0
_13	.db	"000000000000000000",0
	.align	4
_vphx01	.dd	0
	.align	4
_vphy01	.dd	0
	.align	4
_vphx02	.dd	0
	.align	4
_vphy02	.dd	0
	.align	4
_vphx03	.dd	0
	.align	4
_vphy03	.dd	0
	.align	4
_vphx04	.dd	0
	.align	4
_vphy04	.dd	0
	.align	4
_vphx05	.dd	0
	.align	4
_vphy05	.dd	0
	.align	4
_vphx06	.dd	0
	.align	4
_vphy06	.dd	0
	.align	4
_vphx07	.dd	0
	.align	4
_vphy07	.dd	0
	.align	4
_vphx08	.dd	0
	.align	4
_vphy08	.dd	0
	.align	4
_vphx09	.dd	0
	.align	4
_vphy09	.dd	0
	.align	4
_vphx10	.dd	0
	.align	4
_vphy10	.dd	0
	.align	4
_vphx11	.dd	0
	.align	4
_vphy11	.dd	0
	.align	4
_vphx12	.dd	0
	.align	4
_vphy12	.dd	0
	.align	4
_vphx13	.dd	0
	.align	4
_vphy13	.dd	0
	.align	4
_vphx14	.dd	0
	.align	4
_vphy14	.dd	0
	.align	4
_vphx15	.dd	0
	.align	4
_vphy15	.dd	0
	.align	4
_vphx16	.dd	0
	.align	4
_vphy16	.dd	0
	.align	4
_vphx17	.dd	0
	.align	4
_vphy17	.dd	0
	.align	4
_vphx18	.dd	0
	.align	4
_vphy18	.dd	0
	.align	4
_vax	.dd	0
	.align	4
_vay	.dd	0
	.align	4
_vbx	.dd	0
	.align	4
_vby	.dd	0
	.align	4
_vcx	.dd	0
	.align	4
_vcy	.dd	0
	.align	4
_vdx	.dd	0
	.align	4
_vdy	.dd	0
	.align	4
_vp1	.dd	0
_14	.db	"Enter Player One's Name: ",0
_16	.db	"RULES",0
_18	.db	"RULES",0
	.align	4
_vp2	.dd	0
_19	.db	"Enter Player Two's Name: ",0
_24	.db	" WON!",0
_26	.db	" WON!",0
_28	.db	"This game was a draw",0
_29	.db	"HexTiles ('til I think up a better name) is a Two-Player Pass'n'Play Game.",0
_30	.db	"Eighteen numbered place-holders for counter pieces are arranged in four",0
_31	.db	"hexagons named A, B, C And D. Your aim is to make a horizontal line of four",0
_32	.db	"of your coloured counters.",0
_33	.db	"But here's the twist...  each turn is a pair of moves. First you place your",0
_34	.db	"counter on any empty numbered placeholder, then you rotate a hexagon by ",0
_35	.db	"60 degrees in either direction.",0
_36	.db	"Turns are entered with a 4 character string - first the number, then the ",0
_37	.db	"hexagon letter then either C or A for clockwise or anti.",0
_38	.db	"If this game is worth the bother I'll pretty it up with graphics and even",0
_39	.db	"a mouse interface. For now though enjoy and tell me what you think.",0
_49	.db	"01",0
_50	.db	"02",0
_51	.db	"03",0
_52	.db	"04",0
_53	.db	"05",0
_54	.db	"06",0
_55	.db	"07",0
_56	.db	"08",0
_57	.db	"09",0
_58	.db	"10",0
_59	.db	"11",0
_60	.db	"12",0
_61	.db	"13",0
_62	.db	"14",0
_63	.db	"15",0
_64	.db	"16",0
_65	.db	"17",0
_66	.db	"18",0
_67	.db	"A",0
_68	.db	"B",0
_69	.db	"C",0
_70	.db	"D",0
_72	.db	"0",0
_74	.db	"1",0
_76	.db	"2",0
_78	.db	"0",0
_84	.db	"Please enter ",0
_85	.db	"'s move (eg 06AC)",0
_87	.db	"",0
_89	.db	"01",0
_90	.db	"0",0
_92	.db	"02",0
_93	.db	"0",0
_95	.db	"03",0
_96	.db	"0",0
_98	.db	"04",0
_99	.db	"0",0
_101	.db	"05",0
_102	.db	"0",0
_104	.db	"06",0
_105	.db	"0",0
_107	.db	"07",0
_108	.db	"0",0
_110	.db	"08",0
_111	.db	"0",0
_113	.db	"09",0
_114	.db	"0",0
_116	.db	"10",0
_117	.db	"0",0
_119	.db	"11",0
_120	.db	"0",0
_122	.db	"12",0
_123	.db	"0",0
_125	.db	"13",0
_126	.db	"0",0
_128	.db	"14",0
_129	.db	"0",0
_131	.db	"15",0
_132	.db	"0",0
_134	.db	"16",0
_135	.db	"0",0
_137	.db	"17",0
_138	.db	"0",0
_140	.db	"18",0
_141	.db	"0",0
_143	.db	" AC AA BC BA CC CA DC DA ",0
_145	.db	" ",0
_146	.db	" ",0
_167	.db	"AC",0
_169	.db	"AA",0
_171	.db	"BC",0
_173	.db	"BA",0
_175	.db	"CC",0
_177	.db	"CA",0
_179	.db	"DC",0
_181	.db	"DA",0
_183	.db	"INVALID ENTRY - TRY AGAIN",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

