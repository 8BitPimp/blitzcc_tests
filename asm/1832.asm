
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,4
	mov	eax,_3
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[_vpath],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	eax,_agrid
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,9
	mov	esi,_agrid
	add	esi,12
	mov	[esi],ebx
	mov	ebx,9
	mov	esi,_agrid
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_agrid
	mov	[esp],eax
	call	__bbDimArray
	mov	[_vpathcount],0
	mov	[_vquery],0
	sub	esp,4
	mov	eax,_aheap
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,99
	mov	esi,_aheap
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aheap
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_anodeheap
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,99
	mov	esi,_anodeheap
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_anodeheap
	mov	[esp],eax
	call	__bbDimArray
	mov	[_vheapcount],0
	mov	[_vfound],0
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	[_vpivot],eax
	sub	esp,8
	mov	[esp],8
	mov	[esp+4],0
	call	_fcreatesphere
	mov	[_vtarget],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],1132396544
	mov	eax,[_vtarget]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,8
	mov	eax,[_vtarget]
	mov	[esp],eax
	mov	[esp+4],1065353216
	call	_fentityshininess
	sub	esp,12
	mov	[esp+4],1065353216
	mov	[esp+8],0
	mov	eax,[_vtarget]
	mov	[esp],eax
	call	_fentityradius
	sub	esp,12
	mov	[esp+4],4
	mov	[esp+8],0
	mov	eax,[_vtarget]
	mov	[esp],eax
	call	_fentitytype
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1112014848
	mov	[esp+4],0
	mov	eax,[_vtarget]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[_vcamera],eax
	sub	esp,12
	mov	[esp+4],1036831949
	mov	[esp+8],1133903872
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fcamerarange
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1112014848
	mov	[esp+4],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,12
	mov	[esp+4],1065353216
	mov	[esp+8],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fentityradius
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fentitytype
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],0
	call	_fcreatelight
	mov	[ebp-4],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1120403456
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1148846080
	call	_flightrange
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],1119092736
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_frotateentity
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],0
	call	_fcreateplane
	mov	[_vground],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vground]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,16
	mov	[esp+8],1112014848
	mov	[esp+12],1092616192
	mov	[esp+4],1092616192
	mov	eax,[_vground]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,12
	mov	[esp+4],3
	mov	[esp+8],0
	mov	eax,[_vground]
	mov	[esp],eax
	call	_fentitytype
	sub	esp,16
	mov	[esp+8],2
	mov	[esp+12],2
	mov	[esp+4],1
	mov	[esp],2
	call	_fcollisions
	sub	esp,16
	mov	[esp+8],2
	mov	[esp+12],2
	mov	[esp+4],3
	mov	[esp],2
	call	_fcollisions
	sub	esp,16
	mov	[esp+8],2
	mov	[esp+12],1
	mov	[esp+4],1
	mov	[esp],5
	call	_fcollisions
	sub	esp,16
	mov	[esp+8],2
	mov	[esp+12],2
	mov	[esp+4],3
	mov	[esp],5
	call	_fcollisions
	call	_freaddata
	sub	esp,12
	mov	ebx,[_vwalker]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fpointentity
	sub	esp,20
	mov	ebx,[_vcurrenty]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[esp+8],1065353216
	mov	ebx,[_vcurrentx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vpivot]
	mov	[esp],eax
	call	_fpositionentity
	mov	[ebp-8],0
	jmp	_29
_28
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_30
	mov	[ebp-8],1
_30
	sub	esp,4
	mov	[esp],200
	call	_fkeydown
	and	eax,eax
	jz	_31
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1036831949
	mov	[esp+4],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fmoveentity
_31
	sub	esp,4
	mov	[esp],208
	call	_fkeydown
	and	eax,eax
	jz	_32
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],-1110651699
	mov	[esp+4],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fmoveentity
_32
	sub	esp,4
	mov	[esp],203
	call	_fkeydown
	and	eax,eax
	jz	_33
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1065353216
	mov	[esp+4],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fturnentity
_33
	sub	esp,4
	mov	[esp],205
	call	_fkeydown
	and	eax,eax
	jz	_34
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],-1082130432
	mov	[esp+4],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fturnentity
_34
	sub	esp,4
	mov	[esp],57
	call	_fkeyhit
	mov	[ebp-12],eax
	cmp	[_vfound],1
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	and	eax,eax
	jz	_35
	call	_ffindchildren
_35
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],-1082130432
	mov	[esp+4],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_ftranslateentity
	call	_fupdatewalker
	sub	esp,4
	mov	[esp],1065353216
	call	_fupdateworld
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	cmp	[_vfound],1
	jnz	_36
	sub	esp,32
	mov	eax,_37
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[_vcurrentnode]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
_36
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_38
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],10
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	[esp],10
	call	_fdelay
_29
	cmp	[ebp-8],0
	jz	_28
_4
	call	_fend
_l_2nodedata
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_ffindchildren
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,20
	mov	ebx,[_vcurrenty]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[esp+8],1065353216
	mov	ebx,[_vcurrentx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vpivot]
	mov	[esp],eax
	call	_fpositionentity
	mov	ebx,[_vcurrenty]
	sub	ebx,10
	mov	[ebp-4],ebx
	jmp	_41
_42
	mov	ebx,[_vcurrentx]
	sub	ebx,10
	mov	[ebp-8],ebx
	jmp	_43
_44
	sub	esp,16
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fgetnode
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_45
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-16],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	cmp	ebx,2
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	and	eax,ebx
	and	eax,eax
	jz	_46
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	cmp	ebx,1
	jnz	_47
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fisshorterpath
	mov	[_vquery],eax
_47
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_48
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	mov	[ebp-16],eax
	mov	eax,ebx
	call	_fgetnodeparent
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcalculategcost
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcalculatehcost
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcalculatefcost
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_freturnnodenumber
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	esi,[_vheapcount]
	shl	esi,byte 2
	add	esi,[_aheap]
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	esi,[_vheapcount]
	shl	esi,byte 2
	add	esi,[_anodeheap]
	mov	[esi],ebx
	add	[_vheapcount],1
_48
_46
_45
	add	[ebp-8],1
_43
	mov	ebx,[_vcurrentx]
	add	ebx,10
	cmp	[ebp-8],ebx
	jle	_44
_7
	add	[ebp-4],1
_41
	mov	ebx,[_vcurrenty]
	add	ebx,10
	cmp	[ebp-4],ebx
	jle	_42
_6
	call	_fsortheap
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fisshorterpath
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	sub	eax,[_vcurrentx]
	mov	[esp],eax
	call	__bbAbs
	cmp	eax,10
	setz	al
	movzx	eax,al
	mov	[ebp-16],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,[_vcurrenty]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbAbs
	mov	ebx,eax
	mov	eax,[ebp-20]
	cmp	ebx,10
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	and	eax,ebx
	and	eax,eax
	jz	_49
	mov	[ebp-4],14
	jmp	_50
_49
	mov	[ebp-4],10
_50
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],_tnode
	call	__bbObjEachFirst
	and	eax,eax
	jz	_9
_51
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	cmp	eax,[_vcurrentx]
	setz	al
	movzx	eax,al
	mov	[ebp-16],eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,[_vcurrenty]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	and	eax,ebx
	and	eax,eax
	jz	_52
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,[ebp-4]
	mov	[ebp-12],ebx
_52
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_51
_9
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	cmp	[ebp-12],ebx
	jge	_53
	mov	ebx,0
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	eax,1
	jmp	_8_leave
	jmp	_54
_53
	mov	eax,0
	jmp	_8_leave
_54
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fgetnode
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tnode
	call	__bbObjEachFirst
	and	eax,eax
	jz	_11
_55
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	cmp	eax,[ebp+20]
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,[ebp+24]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_56
	mov	eax,[ebp-4]
	jmp	_10_leave
_56
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_55
_11
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fcalculategcost
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	sub	eax,[_vcurrentx]
	mov	[esp],eax
	call	__bbAbs
	cmp	eax,10
	setz	al
	movzx	eax,al
	mov	[ebp-4],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,[_vcurrenty]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbAbs
	mov	ebx,eax
	mov	eax,[ebp-8]
	cmp	ebx,10
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	and	eax,ebx
	and	eax,eax
	jz	_57
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,14
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	jmp	_58
_57
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,10
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
_58
	mov	eax,0
	jmp	_12_leave
_12_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fcalculatehcost
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	sub	eax,[_vtargetx]
	mov	[esp],eax
	call	__bbAbs
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,[_vtargety]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbAbs
	mov	ebx,eax
	mov	eax,[ebp-4]
	add	eax,ebx
	imul	eax,10
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],eax
	mov	eax,0
	jmp	_13_leave
_13_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fcalculatefcost
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	eax,0
	jmp	_14_leave
_14_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsortheap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-4],0
	jmp	_59
_60
	mov	[ebp-8],0
	jmp	_61
_62
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_aheap]
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_63
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aheap]
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	add	esi,1
	shl	esi,byte 2
	add	esi,[_aheap]
	mov	esi,[esi]
	cmp	ebx,esi
	jle	_64
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aheap]
	mov	ebx,[ebx]
	mov	[ebp-12],ebx
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_anodeheap]
	mov	ebx,[ebx]
	mov	[ebp-16],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_aheap]
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_aheap]
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_anodeheap]
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_anodeheap]
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	esi,[ebp-8]
	add	esi,1
	shl	esi,byte 2
	add	esi,[_aheap]
	mov	[esi],ebx
	mov	ebx,[ebp-16]
	mov	esi,[ebp-8]
	add	esi,1
	shl	esi,byte 2
	add	esi,[_anodeheap]
	mov	[esi],ebx
_64
_63
	add	[ebp-8],1
_61
	mov	ebx,[_vheapcount]
	sub	ebx,1
	cmp	[ebp-8],ebx
	jle	_62
_17
	add	[ebp-4],1
_59
	mov	ebx,[_vheapcount]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_60
_16
	call	_fgetnewparent
	mov	eax,0
	jmp	_15_leave
_15_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fgetnewparent
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	mov	ebx,[_vcurrentnode]
	mov	esi,[_vpathcount]
	shl	esi,byte 2
	add	esi,[_vpath]
	mov	[esi],ebx
	add	[_vpathcount],1
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tnode
	call	__bbObjEachFirst
	and	eax,eax
	jz	_19
_65
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_anodeheap]
	mov	esi,[esi]
	cmp	ebx,esi
	jnz	_66
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[_vcurrentx],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[_vcurrenty],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	[_vcurrentnode],ebx
	mov	ebx,2
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	cmp	eax,[_vtargetx]
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,[_vtargety]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_67
	mov	[_vfound],1
_67
	mov	ebx,[_vheapcount]
	sub	ebx,1
	shl	ebx,byte 2
	add	ebx,[_aheap]
	mov	ebx,[ebx]
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_aheap]
	mov	[esi],ebx
	mov	ebx,[_vheapcount]
	sub	ebx,1
	shl	ebx,byte 2
	add	ebx,[_anodeheap]
	mov	ebx,[ebx]
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_anodeheap]
	mov	[esi],ebx
	sub	[_vheapcount],1
	jmp	_19
_66
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_65
_19
	cmp	[_vfound],0
	jnz	_68
_68
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fgetnodeparent
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tnode
	call	__bbObjEachFirst
	and	eax,eax
	jz	_21
_69
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	cmp	eax,[_vcurrentx]
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,[_vcurrenty]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_70
	mov	eax,[ebp-4]
	jmp	_20_leave
_70
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_69
_21
	mov	eax,0
	jmp	_20_leave
_20_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_freturnnodenumber
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	imul	ebx,10
	add	eax,ebx
	jmp	_22_leave
	mov	eax,0
	jmp	_22_leave
_22_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fupdatewalker
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,[_vpivot]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[_vwalker]
	mov	[esp],eax
	call	_fpointentity
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1036831949
	mov	[esp+4],0
	mov	eax,[_vwalker]
	mov	[esp],eax
	call	_fmoveentity
	mov	eax,0
	jmp	_23_leave
_23_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_freaddata
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	sub	esp,4
	mov	eax,__DATA
	add	eax,0
	mov	[esp],eax
	call	__bbRestore
	call	__bbReadInt
	mov	[ebp-4],eax
	call	__bbReadInt
	mov	[ebp-8],eax
	mov	ebx,[ebp-8]
	sub	ebx,1
	mov	[ebp-12],ebx
	jmp	_71
_72
	mov	[ebp-16],0
	jmp	_73
_74
	call	__bbReadInt
	mov	ebx,_agrid
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-12]
	add	ebx,[ebp-16]
	shl	ebx,byte 2
	add	ebx,[_agrid]
	mov	[ebx],eax
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_tnode
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-16]
	imul	ebx,10
	mov	esi,[ebp-20]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	imul	ebx,10
	mov	esi,[ebp-20]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,_agrid
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-12]
	add	ebx,[ebp-16]
	shl	ebx,byte 2
	add	ebx,[_agrid]
	mov	ebx,[ebx]
	mov	[ebp-24],ebx
	cmp	[ebp-24],0
	jz	_76
	cmp	[ebp-24],1
	jz	_77
	cmp	[ebp-24],2
	jz	_78
	cmp	[ebp-24],3
	jz	_79
	cmp	[ebp-24],4
	jz	_80
	jmp	_75
_76
	mov	ebx,0
	mov	esi,[ebp-20]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	sub	esp,4
	mov	[esp],0
	call	_fcreatecube
	mov	[ebp-28],eax
	sub	esp,20
	mov	[esp+12],1084227584
	mov	[esp+16],0
	mov	[esp+8],1065353216
	mov	[esp+4],1084227584
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fscaleentity
	sub	esp,16
	mov	[esp+8],1106247680
	mov	[esp+12],1092616192
	mov	[esp+4],1112014848
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[esp+8],1065353216
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],0
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fentitytype
	jmp	_75
_77
	mov	ebx,1
	mov	esi,[ebp-20]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	jmp	_75
_78
	mov	ebx,1
	mov	esi,[ebp-20]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,2
	mov	esi,[ebp-20]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[_vcurrentx],ebx
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[_vcurrenty],ebx
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_freturnnodenumber
	mov	[_vcurrentnode],eax
	mov	ebx,[_vcurrentnode]
	mov	esi,[ebp-20]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	esi,[_vpathcount]
	shl	esi,byte 2
	add	esi,[_vpath]
	mov	[esi],ebx
	add	[_vpathcount],1
	sub	esp,8
	mov	[esp],8
	mov	[esp+4],0
	call	_fcreatesphere
	mov	[_vwalker],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1132396544
	mov	[esp+4],0
	mov	eax,[_vwalker]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,8
	mov	eax,[_vwalker]
	mov	[esp],eax
	mov	[esp+4],1065353216
	call	_fentityshininess
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[esp+8],1065353216
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vwalker]
	mov	[esp],eax
	call	_fpositionentity
	jmp	_75
_79
	mov	ebx,1
	mov	esi,[ebp-20]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[_vtargetx],ebx
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[_vtargety],ebx
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[esp+8],1065353216
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vtarget]
	mov	[esp],eax
	call	_fpositionentity
	jmp	_75
_80
	mov	ebx,1
	mov	esi,[ebp-20]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[esp+8],1065353216
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fpositionentity
	jmp	_75
_75
	add	[ebp-16],1
_73
	mov	ebx,[ebp-4]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_74
_26
	add	[ebp-12],-1
_71
	cmp	[ebp-12],0
	jge	_72
_25
	mov	eax,0
	jmp	_24_leave
_24_leave
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
_agrid	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_3	.dd	6
	.dd	100
	.dd	__bbIntType
_vpath	.dd	0
	.align	4
_vpathcount	.dd	0
	.align	4
_vquery	.dd	0
	.align	4
_aheap	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_anodeheap	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_vheapcount	.dd	0
	.align	4
_vcurrentx	.dd	0
	.align	4
_vcurrenty	.dd	0
	.align	4
_vcurrentnode	.dd	0
	.align	4
_vtargetx	.dd	0
	.align	4
_vtargety	.dd	0
	.align	4
_vfound	.dd	0
	.align	4
_vpivot	.dd	0
	.align	4
_vwalker	.dd	0
	.align	4
_vtarget	.dd	0
	.align	4
_vcamera	.dd	0
	.align	4
_vground	.dd	0
_37	.db	"Found target node: ",0
_38	.db	"Press spacebar to step through the nodes. First node takes two presses of space bar...",0
	.align	4
_tnode	.dd	5
_39	.dd	0
	.dd	_39
	.dd	_39
	.dd	0
	.dd	-1
_40	.dd	0
	.dd	_40
	.dd	_40
	.dd	0
	.dd	-1
	.dd	9
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	_tnode
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	1
	.dd	10
	.dd	1
	.dd	10
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	2
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	4
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	3
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	0

