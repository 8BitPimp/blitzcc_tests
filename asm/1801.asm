
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,64
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],768
	mov	[esp],1024
	call	_fgraphics
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	sub	esp,4
	call	_fcommandline
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	call	_fcommandline
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_9
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,4
	mov	[esp],75
	call	_fdelay
	sub	esp,12
	mov	eax,_10
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_11
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	_fapptitle
	call	_fcls
	mov	[_vminesdown],0
	mov	[_venminesdown],0
	mov	[_venergy],100
	mov	[_vtroops],150
	mov	[_venenergy],100
	mov	[_ventroops],150
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_12
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,24
	mov	eax,_14
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_15
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_ffiletype
	cmp	eax,1
	jnz	_13
	sub	esp,24
	mov	eax,_16
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_17
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vvics],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vloss],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fclosefile
	sub	esp,24
	mov	eax,_18
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_19
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	jmp	_l_2start
_13
	sub	esp,24
	mov	eax,_20
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_21
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	call	_fwaitkey
	call	_fflushkeys
_l_2start
	call	_fcls
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	sub	esp,8
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_23
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_24
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_25
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_26
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_27
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,24
	mov	eax,_28
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_29
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	call	_fwaitkey
	sub	esp,4
	mov	[esp],2
	call	_fkeyhit
	and	eax,eax
	jz	_30
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_31
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,24
	mov	eax,_32
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_33
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vtroops],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_venergy],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_venenergy],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_ventroops],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fclosefile
_30
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],1
	call	_frand
	mov	[ebp-16],eax
	mov	ebx,[ebp-16]
	mov	[ebp-20],ebx
	cmp	[ebp-20],1
	jnz	_34
	sub	esp,8
	mov	eax,_35
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
_34
	cmp	[ebp-20],1
	jz	_36
	sub	esp,8
	mov	eax,_37
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
_36
	sub	esp,8
	mov	eax,_38
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
_39
	sub	esp,4
	mov	[esp],57
	call	_fkeyhit
	and	eax,eax
	jz	_39
_3
	call	_fflushkeys
	jmp	_41
_40
	cmp	[_ventroops],0
	jg	_42
	call	_fcls
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	sub	esp,24
	mov	eax,_43
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_44
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	add	[_vvics],1
	call	_fwaitkey
	jmp	_4
_42
	cmp	[_vtroops],0
	jg	_45
	call	_fcls
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	sub	esp,24
	mov	eax,_46
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_47
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	add	[_vloss],1
	call	_fwaitkey
	jmp	_4
_45
	call	_fcls
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	sub	esp,16
	mov	eax,_48
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_vtroops]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_49
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_venergy]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_50
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_51
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_ventroops]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_52
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_venenergy]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	cmp	[ebp-24],1
	setz	al
	movzx	eax,al
	mov	[ebp-60],eax
	cmp	[ebp-28],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-60]
	and	eax,ebx
	and	eax,eax
	jz	_53
	call	_fcls
	mov	ebx,[_vtroops]
	mov	[ebp-32],ebx
	mov	ebx,[_ventroops]
	mov	[ebp-36],ebx
	call	_fbattle
	cmp	[_vdefend],1
	jnz	_54
	mov	ebx,[_vtroops]
	sub	ebx,[ebp-32]
	sar	ebx,byte 1
	add	[_vtroops],ebx
_54
	cmp	[_vendefend],1
	jnz	_55
	mov	ebx,[_ventroops]
	sub	ebx,[ebp-36]
	sar	ebx,byte 1
	add	[_ventroops],ebx
_55
	mov	[ebp-24],0
	mov	[ebp-28],0
	mov	[_vdefend],0
	mov	[_vmine],0
	mov	[_vattack],0
	mov	[_vguerrilla],0
	mov	[_vrocket],0
	mov	[_vairbomb],0
	mov	[_vendefend],0
	mov	[_venmine],0
	mov	[_venattack],0
	mov	[_venguerrilla],0
	mov	[_venrocket],0
	mov	[_venairbomb],0
_53
	cmp	[ebp-20],1
	jnz	_56
	call	_fflushkeys
_57
	call	_fcls
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	sub	esp,16
	mov	eax,_58
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_vtroops]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_59
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_venergy]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_60
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_61
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_ventroops]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_62
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_venenergy]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_63
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],512
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_64
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-60],eax
	mov	eax,ebx
	call	_ffontheight
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	mov	[esp],512
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_65
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-60],eax
	mov	eax,ebx
	call	_ffontheight
	mov	ebx,eax
	mov	eax,[ebp-60]
	shl	ebx,byte 1
	mov	[esp+4],ebx
	mov	[esp],512
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_66
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-60],eax
	mov	eax,ebx
	call	_ffontheight
	mov	ebx,eax
	mov	eax,[ebp-60]
	imul	ebx,3
	mov	[esp+4],ebx
	mov	[esp],512
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_67
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-60],eax
	mov	eax,ebx
	call	_ffontheight
	mov	ebx,eax
	mov	eax,[ebp-60]
	shl	ebx,byte 2
	mov	[esp+4],ebx
	mov	[esp],512
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_68
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-60],eax
	mov	eax,ebx
	call	_ffontheight
	mov	ebx,eax
	mov	eax,[ebp-60]
	imul	ebx,5
	mov	[esp+4],ebx
	mov	[esp],512
	call	_ftext
	sub	esp,4
	mov	[esp],2
	call	_fkeyhit
	and	eax,eax
	jz	_69
	mov	[_vdefend],1
	mov	[ebp-24],1
_69
	sub	esp,4
	mov	[esp],3
	call	_fkeyhit
	mov	[ebp-60],eax
	cmp	[_venergy],10
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-60]
	and	eax,ebx
	and	eax,eax
	jz	_70
	sub	[_venergy],10
	mov	[_vattack],1
	mov	[ebp-24],1
_70
	sub	esp,4
	mov	[esp],4
	call	_fkeyhit
	mov	[ebp-60],eax
	cmp	[_venergy],20
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-60]
	and	eax,ebx
	and	eax,eax
	jz	_71
	sub	[_venergy],20
	mov	[_vmine],1
	mov	[ebp-24],1
_71
	sub	esp,4
	mov	[esp],5
	call	_fkeyhit
	mov	[ebp-60],eax
	cmp	[_venergy],25
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-60]
	and	eax,ebx
	and	eax,eax
	jz	_72
	sub	[_venergy],25
	mov	[_vguerrilla],1
	mov	[ebp-24],1
_72
	sub	esp,4
	mov	[esp],6
	call	_fkeyhit
	mov	[ebp-60],eax
	cmp	[_venergy],35
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-60]
	and	eax,ebx
	and	eax,eax
	jz	_73
	sub	[_venergy],35
	mov	[_vrocket],1
	mov	[ebp-24],1
_73
	sub	esp,4
	mov	[esp],7
	call	_fkeyhit
	mov	[ebp-60],eax
	cmp	[_venergy],50
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-60]
	and	eax,ebx
	and	eax,eax
	jz	_74
	sub	[_venergy],50
	mov	[_vairbomb],1
	mov	[ebp-24],1
_74
	sub	esp,4
	mov	[esp],200
	call	_fdelay
	sub	esp,4
	mov	[esp],1
	call	_fflip
	cmp	[ebp-24],1
	jnz	_57
_5
	call	_fcls
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	sub	esp,16
	mov	eax,_75
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_vtroops]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_76
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_venergy]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_77
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_78
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_ventroops]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_79
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_venenergy]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	mov	[ebp-20],0
_56
	cmp	[ebp-20],0
	jnz	_80
	mov	[ebp-24],1
_81
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],6
	call	_frand
	mov	[ebp-40],eax
	mov	ebx,[ebp-40]
	mov	[ebp-44],ebx
	cmp	[ebp-44],1
	jz	_83
	cmp	[ebp-44],2
	jz	_84
	cmp	[ebp-44],3
	jz	_85
	cmp	[ebp-44],4
	jz	_86
	cmp	[ebp-44],5
	jz	_87
	cmp	[ebp-44],6
	jz	_88
	jmp	_82
_83
	mov	[_vendefend],1
	mov	[ebp-28],1
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_89
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],512
	call	_ftext
	jmp	_82
_84
	cmp	[_venenergy],10
	jl	_90
	mov	[_venattack],1
	sub	[_venenergy],10
	mov	[ebp-28],1
_90
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_91
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],512
	call	_ftext
	jmp	_82
_85
	cmp	[_venenergy],25
	jl	_92
	mov	[_venattack],1
	sub	[_venenergy],25
	mov	[ebp-28],1
_92
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_93
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],512
	call	_ftext
	jmp	_82
_86
	cmp	[_venenergy],25
	jl	_94
	mov	[_venattack],1
	sub	[_venenergy],25
	mov	[ebp-28],1
_94
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_95
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],512
	call	_ftext
	jmp	_82
_87
	cmp	[_venenergy],35
	jl	_96
	mov	[_venattack],1
	sub	[_venenergy],35
	mov	[ebp-28],1
_96
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_97
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],512
	call	_ftext
	jmp	_82
_88
	cmp	[_venenergy],50
	jl	_98
	mov	[_venattack],1
	sub	[_venenergy],50
	mov	[ebp-28],1
_98
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_99
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],512
	call	_ftext
	jmp	_82
_82
	cmp	[ebp-28],1
	jnz	_81
_6
	call	_fflushkeys
	call	_fwaitkey
	mov	[ebp-20],1
_80
	cmp	[_ventroops],0
	jg	_100
	call	_fcls
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	sub	esp,24
	mov	eax,_101
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_102
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	add	[_vvics],1
	mov	[ebp-48],1
	call	_fwaitkey
	jmp	_4
_100
	cmp	[_vtroops],0
	jg	_103
	call	_fcls
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	sub	esp,24
	mov	eax,_104
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_105
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	add	[_vloss],1
	call	_fwaitkey
	jmp	_4
_103
	sub	esp,4
	mov	[esp],1
	call	_fflip
_41
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_40
_4
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	call	_fcls
	cmp	[ebp-48],1
	jnz	_106
	sub	[_vvics],1
_106
	sub	esp,16
	mov	eax,_107
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_vvics]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_108
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[_vloss]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	mov	ebx,[_vloss]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1117199474
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vvics]
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-52],esi
	sub	esp,16
	mov	eax,_109
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,24
	mov	eax,_111
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_112
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_ffiletype
	cmp	eax,0
	jz	_110
	sub	esp,24
	mov	eax,_113
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_114
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fdeletefile
_110
	sub	esp,24
	mov	eax,_115
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_116
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fwritefile
	mov	[ebp-56],eax
	sub	esp,8
	mov	eax,[ebp-56]
	mov	[esp],eax
	mov	ebx,[_vvics]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fwritefloat
	sub	esp,8
	mov	eax,[ebp-56]
	mov	[esp],eax
	mov	ebx,[_vloss]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fwritefloat
	sub	esp,4
	mov	eax,[ebp-56]
	mov	[esp],eax
	call	_fclosefile
	call	_fwaitkey
	ret
_2_leave
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[ebp-60],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-60]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fbattle
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	cmp	[_vminesdown],0
	jle	_117
	sub	[_vminesdown],1
	sub	[_ventroops],7
_117
	cmp	[_vmine],1
	jnz	_118
	add	[_vminesdown],1
	sub	[_ventroops],5
_118
	cmp	[_vattack],1
	jnz	_119
	sub	[_ventroops],15
_119
	cmp	[_vguerrilla],1
	jnz	_120
	add	[_vminesdown],2
	sub	[_ventroops],10
_120
	cmp	[_vrocket],1
	jnz	_121
	sub	[_ventroops],18
_121
	cmp	[_vairbomb],1
	jnz	_122
	sub	[_ventroops],25
_122
	cmp	[_venminesdown],0
	jle	_123
	sub	[_venminesdown],1
	sub	[_vtroops],7
_123
	cmp	[_venmine],1
	jnz	_124
	add	[_venminesdown],1
	sub	[_vtroops],5
_124
	cmp	[_venattack],1
	jnz	_125
	sub	[_vtroops],15
_125
	cmp	[_venguerrilla],1
	jnz	_126
	add	[_venminesdown],2
	sub	[_vtroops],10
_126
	cmp	[_venrocket],1
	jnz	_127
	sub	[_vtroops],18
_127
	cmp	[_venairbomb],1
	jnz	_128
	sub	[_vtroops],25
_128
	add	[_venergy],10
	add	[_venenergy],10
	cmp	[_ventroops],0
	jg	_129
	call	_fcls
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	sub	esp,24
	mov	eax,_130
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_131
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	add	[_vvics],1
	mov	[ebp-8],1
_129
	cmp	[_vtroops],0
	jg	_132
	call	_fcls
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	sub	esp,24
	mov	eax,_133
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_134
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	add	[_vloss],1
_132
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
_9	.db	"DOYOYOYOYOYOYOYOY!",0
_10	.db	"War",0
_11	.db	"Coward! A brave man would not retreat!",0
	.align	4
_vdefend	.dd	0
	.align	4
_vattack	.dd	0
	.align	4
_vguerrilla	.dd	0
	.align	4
_vmine	.dd	0
	.align	4
_vrocket	.dd	0
	.align	4
_vairbomb	.dd	0
	.align	4
_vendefend	.dd	0
	.align	4
_venattack	.dd	0
	.align	4
_venguerrilla	.dd	0
	.align	4
_venmine	.dd	0
	.align	4
_venrocket	.dd	0
	.align	4
_venairbomb	.dd	0
	.align	4
_vminesdown	.dd	0
	.align	4
_venminesdown	.dd	0
	.align	4
_venergy	.dd	0
	.align	4
_vtroops	.dd	0
	.align	4
_venenergy	.dd	0
	.align	4
_ventroops	.dd	0
	.align	4
_vvics	.dd	0
	.align	4
_vloss	.dd	0
_12	.db	"You have been promoted to commander, soldier. What name should I put on your badge? ",0
_14	.db	"Users\",0
_15	.db	".war",0
_16	.db	"Users\",0
_17	.db	".war",0
_18	.db	"Oh! My mistake, Commander ",0
_19	.db	" ! Welcome back!",0
_20	.db	"Welcome to the position, Commander ",0
_21	.db	"!",0
_22	.db	"This game is simple. Just use strategy to choose what to do with your soldiers' energy. You",0
_23	.db	"can use guerrilla warfare (-25 energy), air strike (-50 energy), head on attack (-10 energy),",0
_24	.db	"rocket attack (-35 energy), mine traps (-25 energy), or defend (-0 energy). Your energy",0
_25	.db	"regenerates at a rate of 10 per turn. Your enemy chooses out of these too. It is a turn",0
_26	.db	"based system. You play defense, guerrilla, bombing (rock, paper, scissors) to see who goes",0
_27	.db	"first. Your troop number is displayed with the enemy's up in the upper-left corner.Now get",0
_28	.db	"out ther and do your duty, ",0
_29	.db	"! Press any key to go on.",0
_31	.db	"? ",0
_32	.db	"Settings\",0
_33	.db	".inf",0
_35	.db	"You go first!",0
_37	.db	"You go second.",0
_38	.db	"Press 'Space' to go on.",0
_43	.db	"You win, Commander ",0
_44	.db	"! That's a real feather in your cap. Want to try some more?",0
_46	.db	"You lose, Commander ",0
_47	.db	". That is bad for your standing! You'd better try again, huh?",0
_48	.db	"Your troops: ",0
_49	.db	"Your troops' energy: ",0
_50	.db	"",0
_51	.db	"Enemy troops: ",0
_52	.db	"Enemy troops' energy: ",0
_58	.db	"Your troops: ",0
_59	.db	"Your troops' energy: ",0
_60	.db	"",0
_61	.db	"Enemy troops: ",0
_62	.db	"Enemy troops' energy: ",0
_63	.db	"Press '1' to defend your troops. <COST> 0 Energy",0
_64	.db	"Press '2' to attack the enemy head on. <COST> 10 Energy",0
_65	.db	"Press '3' to plant mines for future need. <COST> 20 Energy",0
_66	.db	"Press '4' to attack enemies using guerrilla troops. <COST> 25 Energy",0
_67	.db	"Press '5' to barrage the enmy with rockets. <COST> 35 Energy",0
_68	.db	"Press '6' to form an air strike force. <COST> 50 Energy",0
_75	.db	"Your troops: ",0
_76	.db	"Your troops' energy: ",0
_77	.db	"",0
_78	.db	"Enemy troops: ",0
_79	.db	"Enemy troops' energy: ",0
_89	.db	"Enemy is defending.",0
_91	.db	"Enemy is attacking our troops head on!",0
_93	.db	"Enemy is planting mines!",0
_95	.db	"Enemy is sending in guerrillas!",0
_97	.db	"Enemy is blowing up our troops with rockets!",0
_99	.db	"Enemy is bombing us from the air!",0
_101	.db	"You win, Commander ",0
_102	.db	"! That's a real feather in your cap. Want to try some more?",0
_104	.db	"You lose, Commander ",0
_105	.db	". That is bad for your standing! You'd better try again, huh?",0
_107	.db	"Your victories: ",0
_108	.db	"Your losses: ",0
_109	.db	"Your army's rating for you: ",0
_111	.db	"Users\",0
_112	.db	".war",0
_113	.db	"Users\",0
_114	.db	".war",0
_115	.db	"Users\",0
_116	.db	".war",0
_130	.db	"You win, Commander ",0
_131	.db	"! That's a real feather in your cap. Want to try some more?",0
_133	.db	"You lose, Commander ",0
_134	.db	". That is bad for your standing! You'd better try again, huh?",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

