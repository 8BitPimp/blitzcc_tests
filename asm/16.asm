
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,124
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],64
	mov	[esp],255
	call	_fcolor
	sub	esp,8
	mov	eax,_16
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_17
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_18
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,4
	mov	eax,_adp
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,6
	mov	esi,_adp
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adp
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aargs
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,3
	mov	esi,_aargs
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aargs
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],64
	mov	[esp],0
	call	_fcolor
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	[ebp-116],eax
	sub	esp,4
	mov	ebx,_19
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-116]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_21
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_20
	call	_fend
_20
	sub	esp,12
	mov	[esp+4],21
	mov	[esp+8],0
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fopentcpstream
	mov	[ebp-8],eax
	cmp	[ebp-8],0
	jnz	_22
	sub	esp,8
	mov	eax,_23
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_22
_24
	sub	esp,12
	mov	[esp+4],192
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
_25
_26
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadline
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_feof
	mov	[ebp-16],eax
	cmp	[ebp-16],1
	jnz	_27
	call	_fend
_27
	mov	ebx,[ebp-16]
	and	ebx,ebx
	jz	_28
	sub	esp,8
	mov	eax,_29
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_28
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	eax,3
	jle	_26
_5
	sub	esp,16
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],3
	call	_fleft
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-20],eax
	cmp	[ebp-20],100
	setge	al
	movzx	eax,al
	mov	[ebp-112],eax
	cmp	[ebp-20],600
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-112]
	and	eax,ebx
	mov	[ebp-112],eax
	mov	[ebp-116],eax
	sub	esp,8
	mov	[ebp-120],eax
	sub	esp,12
	mov	[esp+4],4
	mov	[esp+8],1
	mov	[ebp-124],eax
	sub	esp,4
	lea	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-124]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-120]
	mov	[esp],esi
	mov	[ebp-120],eax
	sub	esp,4
	mov	ebx,_30
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-120]
	mov	[esp+4],ebx
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	mov	eax,[ebp-116]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-112]
	and	eax,esi
	and	eax,eax
	jz	_25
_4
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],64
	mov	[esp],0
	call	_fcolor
	cmp	[ebp-20],400
	jge	_31
	mov	ebx,[ebp-20]
	mov	[ebp-24],ebx
	jmp	_32
_31
	mov	ebx,[ebp-28]
	and	ebx,ebx
	jz	_33
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fclosefile
	mov	[ebp-28],0
_33
	mov	ebx,[ebp-32]
	and	ebx,ebx
	jz	_34
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fclosetcpstream
	mov	[ebp-32],0
_34
	cmp	[ebp-20],530
	jnz	_35
	mov	[ebp-24],220
	jmp	_36
_35
	cmp	[ebp-24],300
	setl	al
	movzx	eax,al
	mov	[ebp-112],eax
	cmp	[ebp-24],220
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-112]
	and	eax,ebx
	and	eax,eax
	jz	_37
	mov	[ebp-24],200
_37
_36
_32
	mov	ebx,[ebp-24]
	mov	[ebp-36],ebx
	cmp	[ebp-36],220
	jz	_39
	cmp	[ebp-36],331
	jz	_40
	cmp	[ebp-36],332
	jz	_41
	cmp	[ebp-36],230
	jz	_42
	cmp	[ebp-36],227
	jz	_43
	cmp	[ebp-36],150
	jz	_44
	cmp	[ebp-24],200
	setl	al
	movzx	eax,al
	mov	[ebp-112],eax
	cmp	[ebp-24],300
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-112]
	or	eax,ebx
	and	eax,eax
	jz	_45
	sub	esp,8
	mov	eax,_46
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_45
	sub	esp,8
	lea	eax,[ebp-96]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_47
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
_48
_49
	sub	esp,8
	lea	eax,[ebp-100]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	[ebp-116],eax
	sub	esp,4
	mov	[ebp-120],eax
	sub	esp,4
	mov	ebx,_50
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-120]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-116]
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftrim
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-100]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_51
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_49
_11
	mov	[ebp-16],1
	jmp	_52
_53
	sub	esp,16
	mov	eax,_54
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-112],eax
	sub	esp,4
	lea	ebx,[ebp-100]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	mov	[ebp-56],ebx
	cmp	[ebp-56],0
	jnz	_55
	sub	esp,8
	mov	eax,[ebp-16]
	shl	eax,byte 2
	add	eax,[_aargs]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	lea	ebx,[ebp-100]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_12
_55
	sub	esp,20
	lea	eax,[ebp-100]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	ebx,[ebp-56]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	add	ebx,[_aargs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,24
	mov	ebx,[ebp-56]
	add	ebx,1
	mov	[esp+4],ebx
	mov	[esp+8],-1
	sub	esp,4
	lea	eax,[ebp-100]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	_ftrim
	mov	[esp+4],eax
	lea	ebx,[ebp-100]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-16],1
_52
	cmp	[ebp-16],3
	jle	_53
_12
	sub	esp,8
	lea	eax,[ebp-104]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	[ebp-116],eax
	sub	esp,4
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_aargs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-116]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flower
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-104]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_58
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_57
	sub	esp,12
	lea	eax,[ebp-104]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_60
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_59
	sub	esp,12
	lea	eax,[ebp-104]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_62
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_61
	sub	esp,12
	lea	eax,[ebp-104]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_64
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_63
	sub	esp,12
	lea	eax,[ebp-104]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_66
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_65
	sub	esp,12
	lea	eax,[ebp-104]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_68
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_67
	sub	esp,12
	lea	eax,[ebp-104]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_70
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_69
	sub	esp,12
	lea	eax,[ebp-104]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_72
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_71
	sub	esp,12
	lea	eax,[ebp-104]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_74
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_73
	sub	esp,12
	lea	eax,[ebp-104]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_76
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_75
	sub	esp,12
	lea	eax,[ebp-104]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_77
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_75
	sub	esp,40
	mov	eax,_78
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_aargs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_79
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	jmp	_56
_57
	cmp	[ebp-16],2
	jnz	_80
	sub	esp,20
	mov	eax,_81
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aargs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-96]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_82
_80
	sub	esp,8
	mov	eax,_83
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
_82
	jmp	_56
_59
	cmp	[ebp-16],2
	jle	_84
	sub	esp,8
	mov	eax,_85
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	jmp	_86
_84
	cmp	[ebp-16],2
	jnz	_87
	sub	esp,8
	mov	eax,2
	shl	eax,byte 2
	add	eax,[_aargs]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fchangedir
_87
	sub	esp,16
	mov	eax,_88
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-112],eax
	mov	eax,ebx
	call	_fcurrentdir
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
_86
	jmp	_56
_61
	sub	esp,8
	lea	eax,[ebp-96]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_89
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_56
_63
	call	_fcls
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	jmp	_56
_65
	cmp	[ebp-16],1
	jnz	_90
	sub	esp,8
	lea	eax,[ebp-96]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_91
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-68]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_92
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_93
_90
	cmp	[ebp-16],2
	jnz	_94
	sub	esp,8
	lea	eax,[ebp-96]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_95
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,20
	mov	eax,_96
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aargs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-68]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_97
_94
	sub	esp,8
	mov	eax,_98
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
_97
_93
	jmp	_56
_67
	cmp	[ebp-16],2
	jnz	_99
	sub	esp,24
	mov	eax,_100
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_101
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+8],ebx
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aargs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freplace
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-108]
	mov	[esp],eax
	call	__bbStrStore
	jmp	_103
_102
	sub	esp,36
	mov	eax,_104
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-112],eax
	sub	esp,4
	lea	ebx,[ebp-108]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	add	ebx,1
	mov	[esp+4],ebx
	mov	[esp+8],-1
	sub	esp,4
	lea	eax,[ebp-108]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-108]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_103
	sub	esp,16
	mov	eax,_105
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-112],eax
	sub	esp,4
	lea	ebx,[ebp-108]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	and	ebx,ebx
	jnz	_102
_14
	sub	esp,8
	lea	eax,[ebp-108]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fwritefile
	mov	[ebp-28],eax
	mov	ebx,[ebp-28]
	and	ebx,ebx
	jz	_106
	sub	esp,8
	lea	eax,[ebp-96]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_107
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,20
	mov	eax,_108
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aargs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-68]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_109
_106
	sub	esp,8
	mov	eax,_110
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
_109
	jmp	_111
_99
	sub	esp,8
	mov	eax,_112
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
_111
	jmp	_56
_69
	cmp	[ebp-16],2
	jnz	_113
	sub	esp,24
	mov	eax,_114
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_115
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+8],ebx
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aargs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freplace
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-108]
	mov	[esp],eax
	call	__bbStrStore
	jmp	_117
_116
	sub	esp,36
	mov	eax,_118
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-112],eax
	sub	esp,4
	lea	ebx,[ebp-108]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	add	ebx,1
	mov	[esp+4],ebx
	mov	[esp+8],-1
	sub	esp,4
	lea	eax,[ebp-108]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-108]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_117
	sub	esp,16
	mov	eax,_119
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-112],eax
	sub	esp,4
	lea	ebx,[ebp-108]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	and	ebx,ebx
	jnz	_116
_15
	sub	esp,8
	lea	eax,[ebp-108]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-28],eax
	mov	ebx,[ebp-28]
	and	ebx,ebx
	jz	_120
	sub	esp,8
	lea	eax,[ebp-96]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_121
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,20
	mov	eax,_122
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aargs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-68]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_123
_120
	sub	esp,8
	mov	eax,_124
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
_123
	jmp	_125
_113
	sub	esp,8
	mov	eax,_126
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
_125
	jmp	_56
_71
	sub	esp,8
	mov	eax,_127
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_128
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_129
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_130
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	lea	eax,[ebp-96]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_131
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_56
_73
	sub	esp,8
	call	_ffrontbuffer
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_132
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	_fsavebuffer
	jmp	_56
_75
	sub	esp,8
	lea	eax,[ebp-96]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_133
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_56
_56
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_134
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_48
_10
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	lea	ebx,[ebp-96]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	_fwriteline
	jmp	_38
_39
	sub	esp,20
	mov	eax,_135
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	[ebp-116],eax
	sub	esp,4
	mov	ebx,_136
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-116]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	jmp	_38
_40
	sub	esp,20
	mov	eax,_137
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	[ebp-116],eax
	sub	esp,4
	mov	ebx,_138
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-116]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	jmp	_38
_41
	sub	esp,20
	mov	eax,_139
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	[ebp-116],eax
	sub	esp,4
	mov	ebx,_140
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-116]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	jmp	_38
_42
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_141
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	_fwriteline
	jmp	_38
_43
	sub	esp,16
	mov	eax,_142
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-112],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	mov	[ebp-40],ebx
	sub	esp,16
	mov	eax,_143
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	ebx,[ebp-40]
	mov	[esp+8],ebx
	mov	[ebp-112],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	mov	[ebp-44],ebx
	sub	esp,28
	mov	ebx,[ebp-40]
	add	ebx,1
	mov	[esp+4],ebx
	mov	esi,[ebp-44]
	sub	esi,[ebp-40]
	sub	esi,1
	mov	[esp+8],esi
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_144
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-48]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	[ebp-52],1
	jmp	_145
_146
	sub	esp,16
	mov	eax,_147
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-112],eax
	sub	esp,4
	lea	ebx,[ebp-48]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	mov	[ebp-56],ebx
	sub	esp,16
	lea	eax,[ebp-48]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	ebx,[ebp-56]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	add	ebx,[_adp]
	mov	[ebx],eax
	sub	esp,20
	mov	ebx,[ebp-56]
	add	ebx,1
	mov	[esp+4],ebx
	mov	[esp+8],-1
	sub	esp,4
	lea	eax,[ebp-48]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-48]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-52],1
_145
	cmp	[ebp-52],6
	jle	_146
_7
	sub	esp,60
	mov	eax,1
	shl	eax,byte 2
	add	eax,[_adp]
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_148
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_adp]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_149
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,3
	shl	ebx,byte 2
	add	ebx,[_adp]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_150
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,4
	shl	ebx,byte 2
	add	ebx,[_adp]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-60]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	ebx,5
	shl	ebx,byte 2
	add	ebx,[_adp]
	mov	ebx,[ebx]
	shl	ebx,byte 8
	mov	esi,6
	shl	esi,byte 2
	add	esi,[_adp]
	mov	esi,[esi]
	or	ebx,esi
	mov	[ebp-64],ebx
	sub	esp,12
	mov	ebx,[ebp-64]
	mov	[esp+4],ebx
	mov	[esp+8],0
	sub	esp,4
	lea	eax,[ebp-60]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fopentcpstream
	mov	[ebp-32],eax
	cmp	[ebp-32],0
	jnz	_151
	sub	esp,8
	mov	eax,_152
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_151
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	lea	ebx,[ebp-68]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	_fwriteline
	jmp	_38
_44
	mov	ebx,[ebp-28]
	and	ebx,ebx
	jz	_153
	sub	esp,20
	lea	eax,[ebp-68]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],4
	call	_fleft
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_155
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_154
	mov	ebx,[ebp-28]
	mov	[ebp-72],ebx
	mov	ebx,[ebp-32]
	mov	[ebp-76],ebx
	sub	esp,24
	mov	[esp+4],6
	mov	[esp+8],-1
	sub	esp,4
	lea	eax,[ebp-68]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_156
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwrite
	mov	ebx,eax
	jmp	_157
_154
	mov	ebx,[ebp-32]
	mov	[ebp-72],ebx
	mov	ebx,[ebp-28]
	mov	[ebp-76],ebx
	sub	esp,24
	mov	[esp+4],6
	mov	[esp+8],-1
	sub	esp,4
	lea	eax,[ebp-68]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_158
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwrite
	mov	ebx,eax
_157
	sub	esp,4
	mov	[esp],16384
	call	_fcreatebank
	mov	[ebp-80],eax
	mov	[ebp-84],0
	call	_fmillisecs
	mov	[ebp-88],eax
_159
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],16384
	mov	esi,[ebp-72]
	mov	[esp+4],esi
	mov	eax,[ebp-80]
	mov	[esp],eax
	call	_freadbytes
	mov	[ebp-16],eax
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	esi,[ebp-76]
	mov	[esp+4],esi
	mov	eax,[ebp-80]
	mov	[esp],eax
	call	_fwritebytes
	mov	ebx,[ebp-16]
	add	[ebp-84],ebx
	sub	esp,8
	mov	eax,_160
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fwrite
	cmp	[ebp-16],16384
	jz	_159
_8
	call	_fmillisecs
	sub	eax,[ebp-88]
	mov	[ebp-88],eax
	mov	ebx,[ebp-88]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1148846080
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-92],ebx
	sub	esp,8
	mov	eax,_161
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,32
	mov	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_162
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,[ebp-92]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_163
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,4
	mov	eax,[ebp-80]
	mov	[esp],eax
	call	_ffreebank
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fclosefile
	mov	[ebp-28],0
	jmp	_164
_153
	jmp	_166
_165
	sub	esp,8
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_freadline
	mov	[esp],eax
	call	_fprint
_166
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_feof
	cmp	eax,0
	jz	_165
_9
_164
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fclosetcpstream
	mov	[ebp-32],0
	jmp	_38
_38
	jmp	_24
_3
	ret
_2_leave
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[ebp-112],eax
	sub	esp,4
	mov	esi,[ebp-108]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-112]
	mov	[ebp-112],eax
	sub	esp,4
	mov	esi,[ebp-100]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-112]
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,[ebp-96]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[ebp-112],eax
	sub	esp,4
	mov	esi,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-112]
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,[ebp-60]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[ebp-112],eax
	sub	esp,4
	mov	esi,[ebp-48]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-112]
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[ebp-112],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-112]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
_16	.db	"*****************",0
_17	.db	"* BlitzFTP V1.0 *",0
_18	.db	"*****************",0
	.align	4
_adp	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aargs	.dd	0
	.dd	3
	.dd	1
	.dd	0
_19	.db	"ftp://",0
_21	.db	"",0
_23	.db	"Unable to connect",0
_29	.db	"Stream Error",0
_30	.db	" ",0
_46	.db	"Fatally confused error!",0
_47	.db	"",0
_50	.db	"]",0
_51	.db	"",0
_54	.db	" ",0
_58	.db	"cd",0
_60	.db	"lcd",0
_62	.db	"cdup",0
_64	.db	"cls",0
_66	.db	"dir",0
_68	.db	"get",0
_70	.db	"put",0
_72	.db	"help",0
_74	.db	"shot",0
_76	.db	"quit",0
_77	.db	"exit",0
_78	.db	"Unrecognized command ",0
_79	.db	".",0
_81	.db	"CWD ",0
_83	.db	"Usage: cd remote_dir",0
_85	.db	"Usage: lcd local_dir",0
_88	.db	"Current dir=",0
_89	.db	"CDUP",0
_91	.db	"PASV",0
_92	.db	"LIST",0
_95	.db	"PASV",0
_96	.db	"LIST ",0
_98	.db	"Usage: dir [remote_dir]",0
_100	.db	"\",0
_101	.db	"/",0
_104	.db	"/",0
_105	.db	"/",0
_107	.db	"PASV",0
_108	.db	"RETR ",0
_110	.db	"Unable to open file for writing",0
_112	.db	"Usage: get filename",0
_114	.db	"\",0
_115	.db	"/",0
_118	.db	"/",0
_119	.db	"/",0
_121	.db	"PASV",0
_122	.db	"STOR ",0
_124	.db	"Unable to open file for reading",0
_126	.db	"Usage: put filename",0
_127	.db	"Local help:",0
_128	.db	"cdup, cls, help, quit, exit",0
_129	.db	"cd remote_dir, lcd [local_dir], dir [remote_dir], get remote_file, put remote_file",0
_130	.db	"Remote help:",0
_131	.db	"HELP",0
_132	.db	"ftpshot.bmp",0
_133	.db	"QUIT",0
_134	.db	"",0
_135	.db	"USER ",0
_136	.db	"Username:",0
_137	.db	"PASS ",0
_138	.db	"Password:",0
_139	.db	"ACCT ",0
_140	.db	"Account:",0
_141	.db	"TYPE I",0
_142	.db	"(",0
_143	.db	")",0
_144	.db	",",0
_147	.db	",",0
_148	.db	".",0
_149	.db	".",0
_150	.db	".",0
_152	.db	"Failed to open data port",0
_155	.db	"STOR",0
_156	.db	"Uploading ",0
_158	.db	"Downloading ",0
_160	.db	".",0
_161	.db	"",0
_162	.db	" bytes transferred in ",0
_163	.db	" seconds.",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

