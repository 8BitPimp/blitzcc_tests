
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	[ebp-4],0
	sub	esp,12
	mov	eax,_9
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_10
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	mov	[_vx1],100
	mov	[_vy1],100
	mov	[_vvx1],100
	mov	[_vvy1],100
	mov	[_vx2],540
	mov	[_vy2],380
	mov	[_vvx2],540
	mov	[_vvy2],380
	mov	[_vpoint],0
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
_11
	call	_fcls
	sub	esp,32
	mov	ebx,[_vvx2]
	mov	[esp+24],ebx
	mov	esi,[_vvy2]
	mov	[esp+28],esi
	mov	esi,[_vy2]
	mov	[esp+20],esi
	mov	ebx,[_vx2]
	mov	[esp+16],ebx
	mov	esi,[_vvy1]
	mov	[esp+12],esi
	mov	ebx,[_vvx1]
	mov	[esp+8],ebx
	mov	esi,[_vy1]
	mov	[esp+4],esi
	mov	eax,[_vx1]
	mov	[esp],eax
	call	_fdrawbezier
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	mov	ebx,[_vpoint]
	mov	[ebp-4],ebx
	cmp	[ebp-4],0
	jz	_13
	cmp	[ebp-4],1
	jz	_14
	cmp	[ebp-4],2
	jz	_15
	cmp	[ebp-4],3
	jz	_16
	jmp	_12
_13
	sub	esp,20
	mov	[esp+12],5
	mov	[esp+16],1
	mov	[esp+8],5
	mov	ebx,[_vy1]
	sub	ebx,2
	mov	[esp+4],ebx
	mov	eax,[_vx1]
	sub	eax,2
	mov	[esp],eax
	call	_foval
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	and	eax,eax
	jz	_17
	call	_fmousex
	mov	[_vx1],eax
	call	_fmousey
	mov	[_vy1],eax
_17
	jmp	_12
_14
	sub	esp,20
	mov	[esp+12],5
	mov	[esp+16],1
	mov	[esp+8],5
	mov	ebx,[_vvy1]
	sub	ebx,2
	mov	[esp+4],ebx
	mov	eax,[_vvx1]
	sub	eax,2
	mov	[esp],eax
	call	_foval
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	and	eax,eax
	jz	_18
	call	_fmousex
	mov	[_vvx1],eax
	call	_fmousey
	mov	[_vvy1],eax
_18
	jmp	_12
_15
	sub	esp,20
	mov	[esp+12],5
	mov	[esp+16],1
	mov	[esp+8],5
	mov	ebx,[_vy2]
	sub	ebx,2
	mov	[esp+4],ebx
	mov	eax,[_vx2]
	sub	eax,2
	mov	[esp],eax
	call	_foval
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	and	eax,eax
	jz	_19
	call	_fmousex
	mov	[_vx2],eax
	call	_fmousey
	mov	[_vy2],eax
_19
	jmp	_12
_16
	sub	esp,20
	mov	[esp+12],5
	mov	[esp+16],1
	mov	[esp+8],5
	mov	ebx,[_vvy2]
	sub	ebx,2
	mov	[esp+4],ebx
	mov	eax,[_vvx2]
	sub	eax,2
	mov	[esp],eax
	call	_foval
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	and	eax,eax
	jz	_20
	call	_fmousex
	mov	[_vvx2],eax
	call	_fmousey
	mov	[_vvy2],eax
_20
	jmp	_12
_12
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,32
	mov	eax,_21
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[_vx1]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],10
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[_vy1]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],25
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_23
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[_vvx1]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],40
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_24
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[_vvy1]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],55
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_25
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[_vx2]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],70
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_26
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[_vy2]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],85
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_27
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[_vvx2]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],100
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_28
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[_vvy2]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],115
	mov	[esp],10
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_29
	call	_fchangepoint
_29
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	and	eax,eax
	jz	_11
_3
	call	_fwaitkey
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fchangepoint
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	eax,[_vpoint]
	add	eax,1
	mov	[esp],eax
	mov	[esp+4],4
	call	__bbMod
	mov	[_vpoint],eax
	jmp	_31
_30
_31
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jnz	_30
_6
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawbezier
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-4],0
	jmp	_32
_33
	sub	esp,8
	mov	eax,1065353216
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],1077936128
	call	__bbFPow
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	sub	esp,8
	mov	eax,1065353216
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],1073741824
	call	__bbFPow
	mov	esi,3
	imul	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	edi,[ebp-4]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-4]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,3
	imul	edi,[ebp+44]
	push	edi
	fild	[esp]
	pop	edi
	fmulp	st(1)
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1073741824
	call	__bbFPow
	fmulp	st(1)
	faddp	st(1)
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1077936128
	call	__bbFPow
	mov	esi,[ebp+36]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	sub	esp,8
	mov	eax,1065353216
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],1077936128
	call	__bbFPow
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	sub	esp,8
	mov	eax,1065353216
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],1073741824
	call	__bbFPow
	mov	esi,3
	imul	esi,[ebp+32]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	edi,[ebp-4]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-4]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,3
	imul	edi,[ebp+48]
	push	edi
	fild	[esp]
	pop	edi
	fmulp	st(1)
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1073741824
	call	__bbFPow
	fmulp	st(1)
	faddp	st(1)
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1077936128
	call	__bbFPow
	mov	esi,[ebp+40]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	sub	esp,16
	mov	[esp+8],16777215
	mov	[esp+12],0
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fwritepixel
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1008981770
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
_32
	mov	eax,[ebp-4]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_33
_8
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 32
_9	.db	"Bezier",0
_10	.db	"",0
	.align	4
_vx1	.dd	0
	.align	4
_vy1	.dd	0
	.align	4
_vvx1	.dd	0
	.align	4
_vvy1	.dd	0
	.align	4
_vx2	.dd	0
	.align	4
_vy2	.dd	0
	.align	4
_vvx2	.dd	0
	.align	4
_vvy2	.dd	0
	.align	4
_vpoint	.dd	0
_21	.db	"x1= ",0
_22	.db	"y1= ",0
_23	.db	"vx1=",0
_24	.db	"vy1=",0
_25	.db	"x2= ",0
_26	.db	"y2= ",0
_27	.db	"vx2=",0
_28	.db	"vy2=",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

