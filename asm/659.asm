
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,48
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-4],100
	mov	[ebp-8],100
	mov	[ebp-12],2
	mov	[ebp-16],0
	sub	esp,8
	mov	eax,_10
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-20],eax
	sub	esp,8
	mov	eax,_11
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-24],eax
	sub	esp,4
	mov	eax,_air
	mov	[esp],eax
	call	__bbUndimArray
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimagewidth
	mov	ebx,_air
	add	ebx,12
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimageheight
	mov	ebx,_air
	add	ebx,16
	mov	[ebx],eax
	sub	esp,4
	mov	eax,_air
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aig
	mov	[esp],eax
	call	__bbUndimArray
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimagewidth
	mov	ebx,_aig
	add	ebx,12
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimageheight
	mov	ebx,_aig
	add	ebx,16
	mov	[ebx],eax
	sub	esp,4
	mov	eax,_aig
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aib
	mov	[esp],eax
	call	__bbUndimArray
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimagewidth
	mov	ebx,_aib
	add	ebx,12
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimageheight
	mov	ebx,_aib
	add	ebx,16
	mov	[ebx],eax
	sub	esp,4
	mov	eax,_aib
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ar
	mov	[esp],eax
	call	__bbUndimArray
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimagewidth
	mov	ebx,_ar
	add	ebx,12
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimageheight
	mov	ebx,_ar
	add	ebx,16
	mov	[ebx],eax
	sub	esp,4
	mov	eax,_ar
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ag
	mov	[esp],eax
	call	__bbUndimArray
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimagewidth
	mov	ebx,_ag
	add	ebx,12
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimageheight
	mov	ebx,_ag
	add	ebx,16
	mov	[ebx],eax
	sub	esp,4
	mov	eax,_ag
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ab
	mov	[esp],eax
	call	__bbUndimArray
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimagewidth
	mov	ebx,_ab
	add	ebx,12
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimageheight
	mov	ebx,_ab
	add	ebx,16
	mov	[ebx],eax
	sub	esp,4
	mov	eax,_ab
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-28],0
	mov	[ebp-32],0
	mov	[ebp-36],0
	sub	esp,12
	mov	eax,[ebp-24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-40],1
	jmp	_12
_13
	mov	[ebp-44],1
	jmp	_14
_15
	sub	esp,12
	mov	ebx,[ebp-44]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_freadpixel
	mov	[ebp-48],eax
	mov	ebx,[ebp-48]
	mov	esi,16711680
	and	ebx,esi
	sar	ebx,byte 16
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,_air
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-44]
	add	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_air]
	mov	[esi],ebx
	mov	ebx,[ebp-48]
	mov	esi,65280
	and	ebx,esi
	sar	ebx,byte 8
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,_aig
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-44]
	add	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_aig]
	mov	[esi],ebx
	mov	ebx,[ebp-48]
	mov	esi,255
	and	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,_aib
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-44]
	add	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_aib]
	mov	[esi],ebx
	add	[ebp-44],1
_14
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimageheight
	cmp	[ebp-44],eax
	jle	_15
_4
	add	[ebp-40],1
_12
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimagewidth
	cmp	[ebp-40],eax
	jle	_13
_3
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	jmp	_17
_16
	call	_fcls
	sub	esp,4
	mov	[esp],200
	call	_fkeydown
	and	eax,eax
	jz	_18
	sub	[ebp-8],1
_18
	sub	esp,4
	mov	[esp],208
	call	_fkeydown
	and	eax,eax
	jz	_19
	add	[ebp-8],1
_19
	sub	esp,4
	mov	[esp],3
	call	_fkeyhit
	and	eax,eax
	jz	_20
	mov	[ebp-12],0
	mov	[ebp-16],0
_20
	sub	esp,4
	mov	[esp],4
	call	_fkeyhit
	and	eax,eax
	jz	_21
	mov	[ebp-12],1
	mov	[ebp-16],1065353216
_21
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftileimage
	sub	esp,4
	mov	[esp],2
	call	_fkeyhit
	and	eax,eax
	jz	_22
	call	_l_2getbackroundinfo
_22
	cmp	[ebp-12],2
	jz	_23
	call	_l_2updatefade
_23
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_24
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
_17
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_16
_5
_l_2updatefade
	cmp	[ebp-12],0
	jnz	_25
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1036831949
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_26
	mov	[ebp-16],1065353216
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fdrawimage
	ret
_26
_25
	cmp	[ebp-12],1
	jnz	_27
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1036831949
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_28
	mov	[ebp-16],0
	ret
_28
_27
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-40],1
	jmp	_29
_30
	mov	[ebp-44],1
	jmp	_31
_32
	mov	ebx,_air
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-44]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_air]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,_ar
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-44]
	add	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_ar]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,_ar
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-44]
	add	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_ar]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-28],esi
	mov	ebx,_aig
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-44]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_aig]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,_ag
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-44]
	add	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_ag]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,_ag
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-44]
	add	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_ag]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-32],esi
	mov	ebx,_aib
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-44]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_aib]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,_ab
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-44]
	add	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_ab]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,_ab
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-44]
	add	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_ab]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-36],esi
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1199570944
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1132462080
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	sub	esp,16
	mov	ebx,[ebp-48]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-8]
	add	esi,[ebp-44]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	add	eax,[ebp-40]
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-44],1
_31
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimageheight
	sub	eax,1
	cmp	[ebp-44],eax
	jle	_32
_7
	add	[ebp-40],1
_29
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimagewidth
	sub	eax,1
	cmp	[ebp-40],eax
	jle	_30
_6
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_funlockbuffer
	ret
_l_2getbackroundinfo
	sub	esp,4
	call	_ffrontbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-40],1
	jmp	_33
_34
	mov	[ebp-44],1
	jmp	_35
_36
	sub	esp,12
	mov	ebx,[ebp-8]
	add	ebx,[ebp-44]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-4]
	add	eax,[ebp-40]
	mov	[esp],eax
	call	_freadpixel
	mov	[ebp-48],eax
	mov	ebx,[ebp-48]
	mov	esi,16711680
	and	ebx,esi
	sar	ebx,byte 16
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,_ar
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-44]
	add	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_ar]
	mov	[esi],ebx
	mov	ebx,[ebp-48]
	mov	esi,65280
	and	ebx,esi
	sar	ebx,byte 8
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,_ag
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-44]
	add	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_ag]
	mov	[esi],ebx
	mov	ebx,[ebp-48]
	mov	esi,255
	and	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,_ab
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-44]
	add	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_ab]
	mov	[esi],ebx
	add	[ebp-44],1
_35
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimageheight
	cmp	[ebp-44],eax
	jle	_36
_9
	add	[ebp-40],1
_33
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fimagewidth
	cmp	[ebp-40],eax
	jle	_34
_8
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	ret
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
_10	.db	"final.jpg",0
_11	.db	"grass.jpg",0
	.align	4
_air	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aig	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aib	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ar	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ag	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ab	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
_24	.db	"PRESS 1 TO GRAB COLOR INFO. 2 TO FADE IN IMAGE. 3 TO FADE OUT IMAG",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

