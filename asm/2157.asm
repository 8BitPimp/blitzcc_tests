
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,8
	mov	eax,_10
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[_vimage],eax
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	jmp	_12
_11
	call	_fcls
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_13
	sub	esp,32
	mov	[esp],255
	mov	[esp+4],1
	call	_frand
	mov	[esp+16],eax
	mov	[ebp-4],eax
	sub	esp,8
	mov	[esp],255
	mov	[esp+4],1
	mov	eax,ebx
	call	_frand
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+20],ebx
	mov	[ebp-4],eax
	sub	esp,8
	mov	[esp],255
	mov	[esp+4],1
	mov	eax,ebx
	call	_frand
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	call	_fmousey
	mov	[esp+8],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	mov	eax,[_vimage]
	mov	[esp],eax
	call	_ffloodfill
_13
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vimage]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,20
	mov	[esp],255
	mov	[esp+4],1
	call	_frand
	mov	[esp+4],eax
	mov	[ebp-4],eax
	sub	esp,8
	mov	[esp],255
	mov	[esp+4],1
	mov	eax,ebx
	call	_frand
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+8],ebx
	mov	[ebp-4],eax
	sub	esp,8
	mov	[esp],255
	mov	[esp+4],1
	mov	eax,ebx
	call	_frand
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcolor
	mov	ebx,eax
	sub	esp,8
	call	_fmousex
	mov	[esp],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fplot
	sub	esp,4
	mov	[esp],1
	call	_fflip
_12
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_11
_3
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_ffloodfill
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,72
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	cmp	[ebp+24],0
	setl	al
	movzx	eax,al
	mov	[ebp-68],eax
	mov	[ebp-72],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fimagewidth
	mov	ebx,eax
	mov	eax,[ebp-72]
	sub	ebx,1
	cmp	[ebp+24],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-68]
	or	eax,ebx
	mov	[ebp-68],eax
	cmp	[ebp+28],0
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-68]
	or	eax,ebx
	mov	[ebp-68],eax
	mov	[ebp-72],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fimageheight
	mov	ebx,eax
	mov	eax,[ebp-72]
	sub	ebx,1
	cmp	[ebp+28],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-68]
	or	eax,ebx
	and	eax,eax
	jz	_16
	sub	esp,64
	mov	eax,_17
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,4
	mov	[esp],10
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,4
	mov	ebx,_18
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,4
	mov	ebx,_19
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,4
	mov	[esp],10
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,4
	mov	ebx,_20
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_16
	call	_fgraphicsbuffer
	mov	[ebp-4],eax
	call	_fcolorred
	mov	[ebp-8],eax
	call	_fcolorgreen
	mov	[ebp-12],eax
	call	_fcolorblue
	mov	[ebp-16],eax
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	call	_fpixelred
	mov	[ebp-20],eax
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	call	_fpixelgreen
	mov	[ebp-24],eax
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	call	_fpixelblue
	mov	[ebp-28],eax
	sub	esp,12
	mov	ebx,[ebp+36]
	mov	[esp+4],ebx
	mov	esi,[ebp+40]
	mov	[esp+8],esi
	mov	eax,[ebp+32]
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp+36]
	shl	ebx,byte 8
	add	ebx,[ebp+40]
	mov	esi,[ebp+32]
	shl	esi,byte 16
	add	ebx,esi
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+28]
	mov	[esp+4],esi
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,4
	mov	ebx,_tpixel
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+24]
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
_21
	mov	[ebp-36],0
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[esp+4],_tpixel
	call	__bbObjEachFirst
	and	eax,eax
	jz	_6
_22
	mov	[ebp-40],0
	mov	[ebp-44],0
	mov	[ebp-48],0
	mov	[ebp-52],0
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-56],ebx
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-60],ebx
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_23
	sub	esp,8
	mov	eax,[ebp-32]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	sub	eax,1
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fpixelred
	cmp	eax,[ebp-20]
	setz	al
	movzx	eax,al
	mov	[ebp-68],eax
	mov	[ebp-72],eax
	sub	esp,8
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	sub	ebx,1
	mov	[esp],ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpixelgreen
	mov	ebx,eax
	mov	eax,[ebp-72]
	cmp	ebx,[ebp-24]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-68]
	and	eax,ebx
	mov	[ebp-68],eax
	mov	[ebp-72],eax
	sub	esp,8
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	sub	ebx,1
	mov	[esp],ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpixelblue
	mov	ebx,eax
	mov	eax,[ebp-72]
	cmp	ebx,[ebp-28]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-68]
	and	eax,ebx
	and	eax,eax
	jz	_24
	mov	[ebp-40],1
	mov	[ebp-36],1
_24
_23
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_25
	sub	esp,8
	mov	eax,[ebp-32]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fpixelred
	cmp	eax,[ebp-20]
	setz	al
	movzx	eax,al
	mov	[ebp-68],eax
	mov	[ebp-72],eax
	sub	esp,8
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	sub	esi,1
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpixelgreen
	mov	ebx,eax
	mov	eax,[ebp-72]
	cmp	ebx,[ebp-24]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-68]
	and	eax,ebx
	mov	[ebp-68],eax
	mov	[ebp-72],eax
	sub	esp,8
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	sub	esi,1
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpixelblue
	mov	ebx,eax
	mov	eax,[ebp-72]
	cmp	ebx,[ebp-28]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-68]
	and	eax,ebx
	and	eax,eax
	jz	_26
	mov	[ebp-44],1
	mov	[ebp-36],1
_26
_25
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	sub	eax,1
	cmp	ebx,eax
	jge	_27
	sub	esp,8
	mov	eax,[ebp-32]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,1
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fpixelred
	cmp	eax,[ebp-20]
	setz	al
	movzx	eax,al
	mov	[ebp-68],eax
	mov	[ebp-72],eax
	sub	esp,8
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,1
	mov	[esp],ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpixelgreen
	mov	ebx,eax
	mov	eax,[ebp-72]
	cmp	ebx,[ebp-24]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-68]
	and	eax,ebx
	mov	[ebp-68],eax
	mov	[ebp-72],eax
	sub	esp,8
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,1
	mov	[esp],ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpixelblue
	mov	ebx,eax
	mov	eax,[ebp-72]
	cmp	ebx,[ebp-28]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-68]
	and	eax,ebx
	and	eax,eax
	jz	_28
	mov	[ebp-48],1
	mov	[ebp-36],1
_28
	jmp	_29
_27
	mov	[ebp-48],0
_29
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	sub	eax,1
	cmp	ebx,eax
	jge	_30
	sub	esp,8
	mov	eax,[ebp-32]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,1
	mov	[esp+4],ebx
	call	_fpixelred
	cmp	eax,[ebp-20]
	setz	al
	movzx	eax,al
	mov	[ebp-68],eax
	mov	[ebp-72],eax
	sub	esp,8
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,1
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpixelgreen
	mov	ebx,eax
	mov	eax,[ebp-72]
	cmp	ebx,[ebp-24]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-68]
	and	eax,ebx
	mov	[ebp-68],eax
	mov	[ebp-72],eax
	sub	esp,8
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,1
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpixelblue
	mov	ebx,eax
	mov	eax,[ebp-72]
	cmp	ebx,[ebp-28]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-68]
	and	eax,ebx
	and	eax,eax
	jz	_31
	mov	[ebp-52],1
	mov	[ebp-36],1
_31
	jmp	_32
_30
	mov	[ebp-52],0
_32
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	__bbObjDelete
	sub	[ebp-64],1
	cmp	[ebp-40],1
	jnz	_33
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,4
	mov	ebx,_tpixel
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-56]
	sub	ebx,1
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-60]
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	add	[ebp-64],1
	mov	[ebp-40],0
	sub	esp,16
	mov	ebx,[ebp+36]
	shl	ebx,byte 8
	add	ebx,[ebp+40]
	mov	esi,[ebp+32]
	shl	esi,byte 16
	add	ebx,esi
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-32]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fwritepixelfast
_33
	cmp	[ebp-44],1
	jnz	_34
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,4
	mov	ebx,_tpixel
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-56]
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-60]
	sub	ebx,1
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	add	[ebp-64],1
	mov	[ebp-44],0
	sub	esp,16
	mov	ebx,[ebp+36]
	shl	ebx,byte 8
	add	ebx,[ebp+40]
	mov	esi,[ebp+32]
	shl	esi,byte 16
	add	ebx,esi
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-32]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fwritepixelfast
_34
	cmp	[ebp-48],1
	jnz	_35
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,4
	mov	ebx,_tpixel
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-56]
	add	ebx,1
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-60]
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	add	[ebp-64],1
	mov	[ebp-48],0
	sub	esp,16
	mov	ebx,[ebp+36]
	shl	ebx,byte 8
	add	ebx,[ebp+40]
	mov	esi,[ebp+32]
	shl	esi,byte 16
	add	ebx,esi
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-32]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fwritepixelfast
_35
	cmp	[ebp-52],1
	jnz	_36
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,4
	mov	ebx,_tpixel
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-56]
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-60]
	add	ebx,1
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	add	[ebp-64],1
	mov	[ebp-52],0
	sub	esp,16
	mov	ebx,[ebp+36]
	shl	ebx,byte 8
	add	ebx,[ebp+40]
	mov	esi,[ebp+32]
	shl	esi,byte 16
	add	ebx,esi
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-32]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fwritepixelfast
_36
	sub	esp,4
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_22
_6
	cmp	[ebp-36],0
	jnz	_21
_5
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcolor
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	[ebp-68],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	16
_fpixelgreen
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	call	_fcolorred
	mov	[ebp-4],eax
	call	_fcolorgreen
	mov	[ebp-8],eax
	call	_fcolorblue
	mov	[ebp-12],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fgetcolor
	call	_fcolorgreen
	mov	[ebp-16],eax
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcolor
	mov	eax,[ebp-16]
	jmp	_7_leave
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fpixelred
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	call	_fcolorred
	mov	[ebp-4],eax
	call	_fcolorgreen
	mov	[ebp-8],eax
	call	_fcolorblue
	mov	[ebp-12],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fgetcolor
	call	_fcolorred
	mov	[ebp-16],eax
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcolor
	mov	eax,[ebp-16]
	jmp	_8_leave
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fpixelblue
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	call	_fcolorred
	mov	[ebp-4],eax
	call	_fcolorgreen
	mov	[ebp-8],eax
	call	_fcolorblue
	mov	[ebp-12],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fgetcolor
	call	_fcolorblue
	mov	[ebp-16],eax
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcolor
	mov	eax,[ebp-16]
	jmp	_9_leave
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	4
_vimage	.dd	0
_10	.db	"sample image 1.bmp",0
	.align	4
_tpixel	.dd	5
_14	.dd	0
	.dd	_14
	.dd	_14
	.dd	0
	.dd	-1
_15	.dd	0
	.dd	_15
	.dd	_15
	.dd	0
	.dd	-1
	.dd	2
	.dd	__bbIntType
	.dd	__bbIntType
_17	.db	"GHZLIB ERROR",0
_18	.db	"Invalid coordinates: ",0
_19	.db	",",0
_20	.db	"Coords must be within image boundaries",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

