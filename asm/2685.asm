
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,48
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fsetupgraphics
	call	_fcreateimages
	sub	esp,8
	mov	eax,_55
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fmidhandle
	sub	esp,24
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],1
	sub	esp,4
	mov	eax,_56
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadobject
	mov	[esp+4],eax
	mov	[esp],_vbackground
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,12
	mov	[esp+4],1137180672
	mov	[esp+8],1133903872
	mov	eax,[_vbackground]
	mov	[esp],eax
	call	_fposition
	sub	esp,8
	mov	[esp],_valienlist
	mov	[ebp-44],eax
	mov	eax,ebx
	call	_fcreatelist
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	[esp],_vturretlist
	mov	[ebp-44],eax
	mov	eax,ebx
	call	_fcreatelist
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	[esp],_vprojectilelist
	mov	[ebp-44],eax
	mov	eax,ebx
	call	_fcreatelist
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbObjStore
_57
	sub	esp,4
	mov	[esp],2
	call	_fmousehit
	and	eax,eax
	jz	_58
	sub	esp,24
	mov	[esp+8],64
	mov	[esp+12],64
	mov	[esp+4],3
	sub	esp,4
	mov	eax,_59
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadobject
	mov	[esp+4],eax
	mov	[esp],_valien
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[_valienlist]
	mov	[esp],eax
	mov	ebx,[_valien]
	mov	[esp+4],ebx
	call	_faddtolist
	call	_fmousex
	imul	eax,800
	mov	[ebp-44],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	ecx,ebx
	cdq
	idiv	ecx
	mov	[ebp-8],eax
	call	_fmousey
	imul	eax,600
	mov	[ebp-44],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	ecx,ebx
	cdq
	idiv	ecx
	mov	[ebp-12],eax
	sub	esp,12
	mov	ebx,[ebp-8]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[_valien]
	mov	[esp],eax
	call	_fposition
_58
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_60
	sub	esp,24
	mov	[esp+8],64
	mov	[esp+12],64
	mov	[esp+4],4
	sub	esp,4
	mov	eax,_61
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadobject
	mov	[esp+4],eax
	mov	[esp],_vturret
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[_vturretlist]
	mov	[esp],eax
	mov	ebx,[_vturret]
	mov	[esp+4],ebx
	call	_faddtolist
	call	_fmousex
	imul	eax,800
	mov	[ebp-44],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	ecx,ebx
	cdq
	idiv	ecx
	mov	[ebp-8],eax
	call	_fmousey
	imul	eax,600
	mov	[ebp-44],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	ecx,ebx
	cdq
	idiv	ecx
	mov	[ebp-12],eax
	sub	esp,12
	mov	ebx,[ebp-8]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[_vturret]
	mov	[esp],eax
	call	_fposition
_60
	mov	[ebp-16],0
	jmp	_62
_63
	sub	esp,16
	mov	eax,[_vturretlist]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fgetlistobject
	mov	[esp+4],eax
	mov	[esp],_vturret
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	[ebp-20],1176256512
	mov	[ebp-24],0
	jmp	_64
_65
	sub	esp,16
	mov	eax,[_valienlist]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fgetlistobject
	mov	[esp+4],eax
	mov	[esp],_valien
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[_valien]
	mov	[esp],eax
	mov	ebx,[_vturret]
	mov	[esp+4],ebx
	call	_fdistance
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-28],eax
	mov	eax,[ebp-28]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_66
	sub	esp,8
	mov	eax,[_vturret]
	mov	[esp],eax
	mov	ebx,[_valien]
	mov	[esp+4],ebx
	call	_fpointat
	mov	ebx,[ebp-28]
	mov	[ebp-20],ebx
_66
	add	[ebp-24],1
_64
	sub	esp,4
	mov	eax,[_valienlist]
	mov	[esp],eax
	call	_flistcount
	sub	eax,1
	cmp	[ebp-24],eax
	jle	_65
_7
	mov	ebx,[_vturret]
	mov	ebx,[ebx]
	add	ebx,52
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[_vturret]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[_vturret]
	mov	ebx,[ebx]
	add	ebx,52
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,250
	jle	_67
	mov	ebx,0
	mov	esi,[_vturret]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
_67
	mov	ebx,[_vturret]
	mov	ebx,[ebx]
	add	ebx,52
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_68
	sub	esp,24
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],1
	sub	esp,4
	mov	eax,_69
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadobject
	mov	[esp+4],eax
	mov	[esp],_vprojectile
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,4
	mov	eax,[_vturret]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	neg	eax
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,1084227584
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[_vprojectile]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[_vturret]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	neg	eax
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,1084227584
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[_vprojectile]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[_vturret]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[_vturret]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[_vprojectile]
	mov	[esp],eax
	call	_fposition
	sub	esp,8
	mov	eax,[_vprojectilelist]
	mov	[esp],eax
	mov	ebx,[_vprojectile]
	mov	[esp+4],ebx
	call	_faddtolist
_68
	add	[ebp-16],1
_62
	sub	esp,4
	mov	eax,[_vturretlist]
	mov	[esp],eax
	call	_flistcount
	sub	eax,1
	cmp	[ebp-16],eax
	jle	_63
_6
	mov	[ebp-16],0
	jmp	_70
_71
	sub	esp,16
	mov	eax,[_vprojectilelist]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fgetlistobject
	mov	[esp+4],eax
	mov	[esp],_vprojectile
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,12
	mov	ebx,[_vprojectile]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[_vprojectile]
	mov	esi,[esi]
	add	esi,56
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[_vprojectile]
	mov	[esp],eax
	call	_fmove
	mov	[ebp-32],0
	mov	[ebp-24],0
	jmp	_72
_73
	sub	esp,16
	mov	eax,[_valienlist]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fgetlistobject
	mov	[esp+4],eax
	mov	[esp],_valien
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[_valien]
	mov	[esp],eax
	mov	ebx,[_vprojectile]
	mov	[esp+4],ebx
	call	_fdistance
	mov	ebx,[_valien]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vprojectile]
	mov	esi,[esi]
	add	esi,48
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_74
	sub	esp,8
	mov	eax,[_valienlist]
	mov	[esp],eax
	mov	ebx,[_valien]
	mov	[esp+4],ebx
	call	_fremovefromlist
	sub	esp,4
	mov	eax,[_valien]
	mov	[esp],eax
	call	_ffree
	mov	[ebp-32],1
	jmp	_9
_74
	add	[ebp-24],1
_72
	sub	esp,4
	mov	eax,[_valienlist]
	mov	[esp],eax
	call	_flistcount
	sub	eax,1
	cmp	[ebp-24],eax
	jle	_73
_9
	mov	eax,[_vprojectile]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_75
	mov	[ebp-32],1
_75
	mov	eax,[_vprojectile]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_76
	mov	[ebp-32],1
_76
	mov	eax,[_vprojectile]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1145569280
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_77
	mov	[ebp-32],1
_77
	mov	eax,[_vprojectile]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1142292480
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_78
	mov	[ebp-32],1
_78
	mov	ebx,[ebp-32]
	and	ebx,ebx
	jz	_79
	sub	esp,8
	mov	eax,[_vprojectilelist]
	mov	[esp],eax
	mov	ebx,[_vprojectile]
	mov	[esp+4],ebx
	call	_fremovefromlist
	sub	esp,4
	mov	eax,[_vprojectile]
	mov	[esp],eax
	call	_ffree
_79
	add	[ebp-16],1
_70
	sub	esp,4
	mov	eax,[_vprojectilelist]
	mov	[esp],eax
	call	_flistcount
	sub	eax,1
	cmp	[ebp-16],eax
	jle	_71
_8
	add	[ebp-36],1
	mov	[ebp-16],0
	jmp	_80
_81
	sub	esp,16
	mov	eax,[_valienlist]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fgetlistobject
	mov	[esp+4],eax
	mov	[esp],_valien
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	[ebp-20],1176256512
	sub	esp,8
	mov	[esp],_vturret
	mov	[esp+4],0
	call	__bbObjStore
	mov	[ebp-24],0
	jmp	_82
_83
	sub	esp,16
	mov	eax,[_vturretlist]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fgetlistobject
	mov	[esp+4],eax
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-40]
	mov	[esp],eax
	mov	ebx,[_valien]
	mov	[esp+4],ebx
	call	_fdistance
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-28],eax
	mov	eax,[ebp-28]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_84
	mov	ebx,[ebp-28]
	mov	[ebp-20],ebx
	sub	esp,8
	mov	[esp],_vturret
	mov	ebx,[ebp-40]
	mov	[esp+4],ebx
	call	__bbObjStore
_84
	add	[ebp-24],1
_82
	sub	esp,4
	mov	eax,[_vturretlist]
	mov	[esp],eax
	call	_flistcount
	sub	eax,1
	cmp	[ebp-24],eax
	jle	_83
_11
	sub	esp,8
	mov	eax,[_vturret]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_85
	sub	esp,8
	mov	eax,[_valien]
	mov	[esp],eax
	mov	ebx,[_vturret]
	mov	[esp+4],ebx
	call	_fpointat
	sub	esp,8
	mov	eax,[_vturret]
	mov	[esp],eax
	mov	ebx,[_valien]
	mov	[esp+4],ebx
	call	_fdistance
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-28],eax
	mov	eax,[ebp-28]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1112014848
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_86
	sub	esp,12
	mov	[esp+4],1065353216
	mov	[esp+8],0
	mov	eax,[_valien]
	mov	[esp],eax
	call	_fmove
_86
	mov	eax,[ebp-28]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1112014848
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_87
	cmp	[ebp-36],19
	jle	_88
	mov	[ebp-36],0
_88
	sub	esp,8
	mov	eax,[ebp-36]
	mov	ecx,10
	cdq
	idiv	ecx
	add	eax,1
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[_valien]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fframe
	mov	ebx,eax
	mov	ebx,[_vturret]
	mov	ebx,[ebx]
	add	ebx,52
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[_vturret]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	jmp	_89
_87
	sub	esp,8
	mov	eax,[_valien]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fframe
_89
	sub	esp,8
	mov	eax,[_vturret]
	mov	eax,[eax]
	add	eax,52
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	ecx,40
	cdq
	idiv	ecx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[_vturret]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fframe
	mov	ebx,eax
	mov	ebx,[_vturret]
	mov	ebx,[ebx]
	add	ebx,52
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,160
	jl	_90
	sub	esp,8
	mov	eax,[_vturretlist]
	mov	[esp],eax
	mov	ebx,[_vturret]
	mov	[esp+4],ebx
	call	_fremovefromlist
	sub	esp,4
	mov	eax,[_vturret]
	mov	[esp],eax
	call	_ffree
_90
	jmp	_91
_85
	sub	esp,8
	mov	eax,[_valien]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fframe
	sub	esp,12
	mov	eax,270
	mov	ebx,[_valien]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	sub	eax,ebx
	mov	[esp],eax
	call	__bbSgn
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[_valien]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fturn
	mov	ebx,eax
	sub	esp,12
	mov	[esp+4],1065353216
	mov	[esp+8],0
	mov	eax,[_valien]
	mov	[esp],eax
	call	_fmove
_91
	mov	eax,[_valien]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1145569280
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_92
	sub	esp,8
	mov	eax,[_valienlist]
	mov	[esp],eax
	mov	ebx,[_valien]
	mov	[esp+4],ebx
	call	_fremovefromlist
	sub	esp,4
	mov	eax,[_valien]
	mov	[esp],eax
	call	_ffree
_92
	add	[ebp-16],1
_80
	sub	esp,4
	mov	eax,[_valienlist]
	mov	[esp],eax
	call	_flistcount
	sub	eax,1
	cmp	[ebp-16],eax
	jle	_81
_10
	call	_frender
	sub	esp,40
	mov	eax,_93
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,[_vturretlist]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flistcount
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_94
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,40
	mov	eax,_95
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,[_valienlist]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flistcount
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_96
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],20
	mov	[esp],0
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_97
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],40
	mov	[esp],0
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_98
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],60
	mov	[esp],0
	call	_ftext
	sub	esp,16
	call	_fmousey
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-44],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_57
_5
	call	_fdestroyimages
	call	_fend
	ret
_2_leave
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsetupgraphics
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],2
	call	_fcameraprojmode
	sub	esp,20
	mov	[esp+12],-1006632960
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1050689929
	call	_fcamerazoom
	sub	esp,12
	mov	[esp+4],1132396544
	mov	[esp+8],1132396544
	mov	[esp],1132396544
	call	_fambientlight
	mov	eax,0
	jmp	_12_leave
_12_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fgetsprite
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	[ebp-32],eax
	sub	esp,4
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftrim
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flower
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],_tttexture
	call	__bbObjEachFirst
	and	eax,eax
	jz	_14
_105
	sub	esp,12
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,0
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_106
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-4],ebx
	jmp	_14
_106
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_105
_14
	cmp	[ebp-4],0
	jnz	_107
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-20],eax
	cmp	[ebp+28],0
	jnz	_108
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-12],eax
	jmp	_109
_108
	mov	ebx,[ebp+28]
	mov	[ebp-12],ebx
_109
	cmp	[ebp+32],0
	jnz	_110
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-16],eax
	jmp	_111
_110
	mov	ebx,[ebp+32]
	mov	[ebp-16],ebx
_111
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ffreeimage
	cmp	[ebp+24],1
	jle	_112
	sub	esp,24
	mov	[esp+16],0
	mov	esi,[ebp+24]
	mov	[esp+20],esi
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	[esp+4],4
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadanimtexture
	mov	[ebp-4],eax
	jmp	_113
_112
	sub	esp,12
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],4
	call	_floadtexture
	mov	[ebp-4],eax
_113
	cmp	[ebp-4],0
	jnz	_114
	sub	esp,16
	mov	eax,_115
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_114
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_tttexture
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,0
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,[ebp-4]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp-16]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
_107
	cmp	[_vorgquad],0
	jnz	_116
	sub	esp,8
	mov	[esp],1065353216
	mov	[esp+4],1065353216
	call	_fcreatequad
	mov	[_vorgquad],eax
	sub	esp,4
	mov	eax,[_vorgquad]
	mov	[esp],eax
	call	_fhideentity
_116
	sub	esp,8
	mov	eax,[_vorgquad]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcopyentity
	mov	[ebp-24],eax
	sub	esp,20
	mov	[esp+12],1065353216
	mov	[esp+16],0
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fscaleentity
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fentitytexture
	sub	esp,8
	mov	eax,[ebp-12]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-16]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fmax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[_vreturnradius],eax
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vreturnwidth],ebx
	mov	ebx,[ebp-16]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vreturnheight],ebx
	mov	ebx,[ebp-4]
	mov	[_vreturntexture],ebx
	mov	eax,[ebp-24]
	jmp	_13_leave
	mov	eax,0
	jmp	_13_leave
_13_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fcreatequad
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1132068864
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+20],ebx
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1132068864
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+24],ebx
	sub	esp,4
	mov	[esp],0
	call	_fcreatemesh
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcreatesurface
	mov	[ebp-8],eax
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],1065353216
	mov	[esp+12],0
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,28
	mov	[esp+20],1065353216
	mov	[esp+24],1065353216
	mov	[esp+16],1065353216
	mov	[esp+12],0
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,28
	mov	[esp+20],1065353216
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,16
	mov	[esp+8],1
	mov	[esp+12],2
	mov	[esp+4],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddtriangle
	sub	esp,16
	mov	[esp+8],2
	mov	[esp+12],3
	mov	[esp+4],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddtriangle
	mov	eax,[ebp-4]
	jmp	_15_leave
	mov	eax,0
	jmp	_15_leave
_15_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fmax
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_117
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_16_leave
	jmp	_118
_117
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_16_leave
_118
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_16_leave
_16_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_floadobject
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_ffiletype
	cmp	eax,1
	jz	_119
	sub	esp,16
	mov	eax,_120
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_119
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_ttobject
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,1065353216
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	sub	esp,16
	mov	ebx,[ebp+28]
	mov	[esp+8],ebx
	mov	esi,[ebp+32]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fgetsprite
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],eax
	mov	ebx,[_vreturntexture]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	mov	ebx,[_vreturnradius]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,48
	mov	[esi],ebx
	mov	ebx,[_vreturnwidth]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[_vreturnheight]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,1065353216
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,1065353216
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_121
	sub	esp,16
	mov	eax,_122
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_121
	mov	eax,[ebp-4]
	jmp	_17_leave
	mov	eax,0
	jmp	_17_leave
_17_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fpointat
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	eax,[ebp+24]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fatan2
	mov	ebx,1132920832
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdistance
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	jmp	_19_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_19_leave
_19_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fpointdistance
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+24],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+28],ebx
	sub	esp,4
	mov	eax,[ebp+24]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	jmp	_20_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_20_leave
_20_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fmove
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	add	eax,90
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	add	eax,90
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	eax,0
	jmp	_21_leave
_21_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fframe
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffloor
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp+24],eax
	jmp	_124
_123
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,44
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+24],ebx
_124
	mov	eax,[ebp+24]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jnz	_123
_23
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	__bbFMod
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp+24],eax
	sub	esp,16
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentitytexture
	mov	eax,0
	jmp	_22_leave
_22_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fposition
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+24]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	eax,0
	jmp	_24_leave
_24_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_frotate
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	eax,0
	jmp	_25_leave
_25_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fturn
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	eax,0
	jmp	_26_leave
_26_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fscale
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[esp+12],1065353216
	mov	[esp+16],0
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+24]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	call	_fscaleentity
	mov	ebx,[ebp+24]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	eax,0
	jmp	_27_leave
_27_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fsetorder
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,28
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[ebp-4],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fentityx
	mov	ebx,eax
	mov	eax,[ebp-4]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpositionentity
	mov	eax,0
	jmp	_28_leave
_28_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fhide
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,0
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	call	_fhideentity
	mov	eax,0
	jmp	_29_leave
_29_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fshow
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,1
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	call	_fshowentity
	mov	eax,0
	jmp	_30_leave
_30_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_falpha
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+24]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	eax,0
	jmp	_31_leave
_31_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_ffree
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	__bbObjDelete
	mov	eax,0
	jmp	_32_leave
_32_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_frender
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	call	_fupdateobjects
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	mov	eax,0
	jmp	_33_leave
_33_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fupdateobjects
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_ttobject
	call	__bbObjEachFirst
	and	eax,eax
	jz	_35
_125
	sub	esp,20
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	call	_frotateentity
	sub	esp,20
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1133903872
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	fchs
	mov	esi,1075419546
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,1133903872
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+12],eax
	mov	[esp+16],0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1137180672
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,1078774989
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,1137180672
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fentityalpha
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_125
_35
	mov	eax,0
	jmp	_34_leave
_34_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreatelist
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_ttlist
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	sub	esp,4
	mov	[esp],4
	call	_fcreatebank
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	eax,[ebp-4]
	jmp	_36_leave
	mov	eax,0
	jmp	_36_leave
_36_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_faddtolist
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_126
	sub	esp,8
	mov	eax,_127
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_126
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_128
	sub	esp,8
	mov	eax,_129
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_128
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-4],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[ebp-12],ebx
	mov	ebx,[ebp-8]
	cmp	[ebp-4],ebx
	jl	_130
	sub	esp,4
	mov	eax,[ebp-8]
	shl	eax,byte 2
	shl	eax,byte 1
	mov	[esp],eax
	call	_fcreatebank
	mov	[ebp-16],eax
	sub	esp,20
	mov	[esp+12],0
	mov	esi,[ebp-8]
	shl	esi,byte 2
	mov	[esp+16],esi
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcopybank
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_ffreebank
	mov	ebx,[ebp-16]
	mov	[ebp-12],ebx
	mov	ebx,[ebp-8]
	shl	ebx,byte 1
	mov	[ebp-8],ebx
_130
	sub	esp,12
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	__bbObjToHandle
	mov	[esp+8],eax
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fpokeint
	add	[ebp-4],1
	mov	ebx,[ebp-4]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp+24]
	mov	eax,[eax]
	add	eax,60
	mov	[esp],eax
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	eax,0
	jmp	_37_leave
_37_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fremovefromlist
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_131
	sub	esp,8
	mov	eax,_132
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_131
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_133
	mov	eax,0
	jmp	_38_leave
_133
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-4],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[ebp-12],ebx
	mov	[ebp-16],-1
	mov	[ebp-20],0
	jmp	_134
_135
	sub	esp,24
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	[esp+4],ebx
	call	_fpeekint
	mov	[esp],eax
	mov	[esp+4],_ttobject
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-24]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	__bbObjCompare
	cmp	eax,0
	jnz	_136
	mov	ebx,[ebp-20]
	mov	[ebp-16],ebx
	jmp	_39
_136
	add	[ebp-20],1
_134
	mov	ebx,[ebp-4]
	cmp	[ebp-20],ebx
	jle	_135
_39
	cmp	[ebp-16],-1
	jle	_137
	mov	ebx,[ebp-4]
	cmp	[ebp-16],ebx
	jge	_138
	sub	esp,20
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	[esp+12],ebx
	mov	esi,[ebp-4]
	sub	esi,[ebp-16]
	sub	esi,1
	shl	esi,byte 2
	mov	[esp+16],esi
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	ebx,[ebp-16]
	add	ebx,1
	shl	ebx,byte 2
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcopybank
_138
	sub	[ebp-4],1
_137
	mov	ebx,[ebp-4]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	eax,0
	jmp	_38_leave
_38_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_flistcount
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	jmp	_40_leave
	mov	eax,0
	jmp	_40_leave
_40_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fgetlistobject
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_139
	sub	esp,8
	mov	eax,_140
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_139
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_141
	mov	eax,0
	jmp	_41_leave
_141
	sub	esp,16
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	shl	ebx,byte 2
	mov	[esp+4],ebx
	call	_fpeekint
	mov	[esp],eax
	mov	[esp+4],_ttobject
	call	__bbObjFromHandle
	jmp	_41_leave
	mov	eax,0
	jmp	_41_leave
_41_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fcreateimages
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	[ebp-4],0
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	call	_fcls
	sub	esp,8
	mov	eax,_142
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_143
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_144
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_145
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_146
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_147
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_148
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftrim
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flower
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_150
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_149
	sub	esp,8
	mov	eax,_151
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
	call	_fend
_149
	call	_fcreatecursorimage
	call	_fcreatealienimage
	call	_fcreatebackgroundimage
	call	_fcreateprojectileimage
	call	_fcreateturretimage
	mov	eax,0
	jmp	_42_leave
_42_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdestroyimages
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	[ebp-4],0
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	call	_fcls
	sub	esp,8
	mov	eax,_152
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_153
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_154
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_155
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_156
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_157
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_158
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftrim
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flower
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_160
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_159
	mov	eax,0
	jmp	_43_leave
_159
	sub	esp,8
	mov	eax,_162
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_ffiletype
	cmp	eax,1
	jnz	_161
	sub	esp,8
	mov	eax,_163
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fdeletefile
_161
	sub	esp,8
	mov	eax,_165
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_ffiletype
	cmp	eax,1
	jnz	_164
	sub	esp,8
	mov	eax,_166
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fdeletefile
_164
	sub	esp,8
	mov	eax,_168
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_ffiletype
	cmp	eax,1
	jnz	_167
	sub	esp,8
	mov	eax,_169
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fdeletefile
_167
	sub	esp,8
	mov	eax,_171
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_ffiletype
	cmp	eax,1
	jnz	_170
	sub	esp,8
	mov	eax,_172
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fdeletefile
_170
	sub	esp,8
	mov	eax,_174
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_ffiletype
	cmp	eax,1
	jnz	_173
	sub	esp,8
	mov	eax,_175
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fdeletefile
_173
	mov	eax,0
	jmp	_43_leave
_43_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreatecursorimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,12
	mov	[esp+4],32
	mov	[esp+8],1
	mov	[esp],32
	call	_fcreateimage
	mov	[ebp-4],eax
	call	_fcls
	sub	esp,20
	mov	[esp+12],32
	mov	[esp+16],1
	mov	[esp+8],3
	mov	[esp+4],0
	mov	[esp],15
	call	_frect
	sub	esp,20
	mov	[esp+12],3
	mov	[esp+16],1
	mov	[esp+8],32
	mov	[esp+4],15
	mov	[esp],0
	call	_frect
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fgrabimage
	sub	esp,16
	mov	eax,_176
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsaveimage
	mov	ebx,eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreeimage
	mov	eax,0
	jmp	_44_leave
_44_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreatealienimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],1
	mov	[esp],128
	call	_fcreateimage
	mov	[ebp-4],eax
	call	_fcls
	mov	[ebp-8],5
	mov	[ebp-12],0
	jmp	_177
_178
	mov	[ebp-16],0
	jmp	_179
_180
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],255
	mov	[esp],64
	call	_fcolor
	sub	esp,20
	mov	[esp+12],64
	mov	[esp+16],1
	mov	[esp+8],64
	mov	ebx,[ebp-16]
	shl	ebx,byte 6
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	shl	eax,byte 6
	mov	[esp],eax
	call	_foval
	mov	ebx,[ebp-12]
	shl	ebx,byte 6
	add	ebx,32
	mov	[ebp-20],ebx
	mov	ebx,[ebp-16]
	shl	ebx,byte 6
	add	ebx,32
	mov	[ebp-24],ebx
	sub	esp,12
	mov	[esp+4],12
	mov	[esp+8],64
	mov	[esp],8
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-8]
	shl	ebx,byte 1
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-8]
	shl	esi,byte 1
	mov	[esp+8],esi
	mov	ebx,[ebp-24]
	sub	ebx,[ebp-8]
	add	ebx,8
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	sub	eax,[ebp-8]
	mov	[esp],eax
	call	_foval
	sub	esp,20
	mov	[esp+12],4
	mov	[esp+16],1
	mov	[esp+8],4
	mov	ebx,[ebp-24]
	sub	ebx,14
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	sub	eax,16
	mov	[esp],eax
	call	_foval
	sub	esp,20
	mov	[esp+12],4
	mov	[esp+16],1
	mov	[esp+8],4
	mov	ebx,[ebp-24]
	sub	ebx,14
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	add	eax,12
	mov	[esp],eax
	call	_foval
	add	[ebp-8],2
	add	[ebp-16],1
_179
	cmp	[ebp-16],1
	jle	_180
_47
	add	[ebp-12],1
_177
	cmp	[ebp-12],1
	jle	_178
_46
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fgrabimage
	sub	esp,16
	mov	eax,_181
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsaveimage
	mov	ebx,eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreeimage
	mov	eax,0
	jmp	_45_leave
_45_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreatebackgroundimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,12
	mov	[esp+4],600
	mov	[esp+8],1
	mov	[esp],800
	call	_fcreateimage
	mov	[ebp-4],eax
	call	_fcls
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],300
	mov	[esp+16],1
	mov	[esp+8],800
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],300
	mov	[esp+16],1
	mov	[esp+8],800
	mov	[esp+4],300
	mov	[esp],0
	call	_frect
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fgrabimage
	sub	esp,16
	mov	eax,_182
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsaveimage
	mov	ebx,eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	mov	eax,0
	jmp	_48_leave
_48_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreateprojectileimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	call	_fcls
	mov	[ebp-4],16
	jmp	_183
_184
	mov	ebx,[ebp-4]
	shl	ebx,byte 4
	mov	[ebp-8],ebx
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	esi,[ebp-8]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-4]
	shl	ebx,byte 1
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-4]
	shl	esi,byte 1
	mov	[esp+8],esi
	mov	ebx,16
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	eax,16
	sub	eax,[ebp-4]
	mov	[esp],eax
	call	_foval
	add	[ebp-4],-1
_183
	cmp	[ebp-4],0
	jge	_184
_50
	sub	esp,12
	mov	[esp+4],32
	mov	[esp+8],1
	mov	[esp],32
	call	_fcreateimage
	mov	[ebp-12],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fgrabimage
	sub	esp,16
	mov	eax,_185
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsaveimage
	mov	ebx,eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_ffreeimage
	mov	eax,0
	jmp	_49_leave
_49_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreateturretimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],1
	mov	[esp],128
	call	_fcreateimage
	mov	[ebp-4],eax
	call	_fcls
	mov	[ebp-8],0
	mov	[ebp-12],0
	jmp	_186
_187
	mov	[ebp-16],0
	jmp	_188
_189
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],64
	mov	[esp+16],1
	mov	[esp+8],64
	mov	ebx,[ebp-12]
	shl	ebx,byte 6
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	shl	eax,byte 6
	mov	[esp],eax
	call	_foval
	mov	[ebp-20],1
	jmp	_190
_191
	sub	esp,8
	mov	[esp],54
	mov	[esp+4],1
	call	_frand
	mov	ebx,[ebp-16]
	shl	ebx,byte 6
	add	eax,ebx
	mov	[ebp-24],eax
	sub	esp,8
	mov	[esp],54
	mov	[esp+4],1
	call	_frand
	mov	ebx,[ebp-12]
	shl	ebx,byte 6
	add	eax,ebx
	mov	[ebp-28],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],10
	mov	[esp+16],1
	mov	[esp+8],10
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_foval
	add	[ebp-20],1
_190
	mov	ebx,[ebp-8]
	cmp	[ebp-20],ebx
	jle	_191
_54
	add	[ebp-8],35
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],32
	mov	[esp+16],1
	mov	[esp+8],4
	mov	ebx,[ebp-12]
	shl	ebx,byte 6
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	shl	eax,byte 6
	add	eax,30
	mov	[esp],eax
	call	_frect
	add	[ebp-16],1
_188
	cmp	[ebp-16],1
	jle	_189
_53
	add	[ebp-12],1
_186
	cmp	[ebp-12],1
	jle	_187
_52
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fgrabimage
	sub	esp,16
	mov	eax,_192
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsaveimage
	mov	ebx,eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	mov	eax,0
	jmp	_51_leave
_51_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
_55	.db	"cursor.bmp",0
	.align	4
_vbackground	.dd	0
	.align	4
_valien	.dd	0
	.align	4
_vturret	.dd	0
	.align	4
_vprojectile	.dd	0
_56	.db	"background.bmp",0
	.align	4
_valienlist	.dd	0
	.align	4
_vturretlist	.dd	0
	.align	4
_vprojectilelist	.dd	0
_59	.db	"alien.bmp",0
_61	.db	"turret.bmp",0
_69	.db	"projectile.bmp",0
_93	.db	"You have ",0
_94	.db	" turrets",0
_95	.db	"There are ",0
_96	.db	" aliens",0
_97	.db	"Use LMB to place turrets, use RMB to place aliens",0
_98	.db	"ESC=END",0
	.align	4
_vorgquad	.dd	0
	.align	4
_vreturntexture	.dd	0
	.align	4
_vreturnradius	.dd	0
	.align	4
_vreturnwidth	.dd	0
	.align	4
_vreturnheight	.dd	0
	.align	4
_tttexture	.dd	5
_99	.dd	0
	.dd	_99
	.dd	_99
	.dd	0
	.dd	-1
_100	.dd	0
	.dd	_100
	.dd	_100
	.dd	0
	.dd	-1
	.dd	4
	.dd	__bbStrType
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbFltType
	.align	4
_3	.dd	6
	.dd	256
	.dd	__bbIntType
	.align	4
_4	.dd	6
	.dd	256
	.dd	__bbFltType
	.align	4
_ttobject	.dd	5
_101	.dd	0
	.dd	_101
	.dd	_101
	.dd	0
	.dd	-1
_102	.dd	0
	.dd	_102
	.dd	_102
	.dd	0
	.dd	-1
	.dd	16
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	_3
	.dd	_4
	.dd	_ttlist
	.align	4
_ttlist	.dd	5
_103	.dd	0
	.dd	_103
	.dd	_103
	.dd	0
	.dd	-1
_104	.dd	0
	.dd	_104
	.dd	_104
	.dd	0
	.dd	-1
	.dd	3
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
_115	.db	"Could not load texture: ",0
_120	.db	"could not find file: ",0
_122	.db	"could not load sprite: ",0
_127	.db	"Invalid list",0
_129	.db	"Invalid/Null object",0
_132	.db	"Invalid list",0
_140	.db	"Invalid list",0
_142	.db	"cursor.bmp",0
_143	.db	"alien.bmp",0
_144	.db	"background.bmp",0
_145	.db	"projectile.bmp",0
_146	.db	"turret.bmp",0
_147	.db	"",0
_148	.db	"you want to create all these image files (y/n) ?",0
_150	.db	"y",0
_151	.db	"cannot proceed..",0
_152	.db	"cursor.bmp",0
_153	.db	"alien.bmp",0
_154	.db	"background.bmp",0
_155	.db	"projectile.bmp",0
_156	.db	"turret.bmp",0
_157	.db	"",0
_158	.db	"you want to delete all these image files (y/n) ?",0
_160	.db	"y",0
_162	.db	"cursor.bmp",0
_163	.db	"cursor.bmp",0
_165	.db	"alien.bmp",0
_166	.db	"alien.bmp",0
_168	.db	"background.bmp",0
_169	.db	"background.bmp",0
_171	.db	"projectile.bmp",0
_172	.db	"projectile.bmp",0
_174	.db	"turret.bmp",0
_175	.db	"turret.bmp",0
_176	.db	"cursor.bmp",0
_181	.db	"alien.bmp",0
_182	.db	"background.bmp",0
_185	.db	"projectile.bmp",0
_192	.db	"turret.bmp",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

