
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	mov	[ebp-4],5
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	jmp	_9
_8
	mov	ebx,[ebp-8]
	add	ebx,1000
	call	_fmillisecs
	cmp	ebx,eax
	jg	_10
	call	_fmillisecs
	mov	[ebp-8],eax
	mov	ebx,[ebp-16]
	mov	[ebp-12],ebx
	mov	[ebp-16],0
_10
	add	[ebp-16],1
	sub	esp,32
	mov	eax,_11
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],580
	mov	[esp],0
	call	_ftext
	mov	ebx,[ebp-20]
	add	ebx,100
	call	_fmillisecs
	cmp	ebx,eax
	jg	_12
	call	_fmillisecs
	mov	[ebp-20],eax
	call	_l_2createring
_12
	mov	[ebp-24],0
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_tringdot
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjLast
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbObjStore
_13
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	sar	ebx,byte 1
	add	ebx,50
	mov	[esp+4],ebx
	mov	esi,[ebp-28]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	sar	esi,byte 1
	add	esi,50
	mov	[esp+8],esi
	mov	eax,[ebp-28]
	mov	eax,[eax]
	add	eax,16
	mov	eax,[eax]
	sar	eax,byte 1
	add	eax,50
	mov	[esp],eax
	call	_fcolor
	sub	esp,24
	mov	eax,[ebp-28]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-28]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-28]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],2
	mov	[esp+16],1
	mov	[esp+8],2
	sub	esp,4
	mov	eax,[ebp-28]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	esi,[ebp-28]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-28]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp],esi
	mov	eax,esi
	call	_frect
	mov	esi,eax
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjPrev
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbObjStore
	add	[ebp-24],1
	sub	esp,8
	mov	eax,[ebp-28]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_13
_4
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,32
	mov	eax,_14
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_15
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],340
	call	_ftext
	mov	ebx,[ebp-32]
	add	ebx,5
	call	_fmillisecs
	cmp	ebx,eax
	jg	_16
	call	_fmillisecs
	mov	[ebp-32],eax
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[esp+4],_tringdot
	call	__bbObjEachFirst
	and	eax,eax
	jz	_5
_17
	mov	ebx,[ebp-28]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,[ebp-4]
	mov	esi,[ebp-28]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp-28]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	cmp	ebx,400
	jle	_18
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	__bbObjDelete
_18
	sub	esp,4
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_17
_5
_16
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fcls
_9
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_8
_3
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[esp+4],_tringdot
	call	__bbObjEachFirst
	and	eax,eax
	jz	_6
_19
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_19
_6
	call	_fend
_l_2createring
	mov	[ebp-36],0
	jmp	_20
_21
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_tringdot
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbObjStore
	call	_fmousex
	mov	ebx,[ebp-28]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	call	_fmousey
	mov	ebx,[ebp-28]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	mov	ebx,[ebp-36]
	mov	esi,[ebp-28]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,5
	mov	esi,[ebp-28]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,2
	mov	esi,[ebp-28]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	add	[ebp-36],5
_20
	cmp	[ebp-36],360
	jle	_21
_7
	ret
	ret
_2_leave
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
_11	.db	"FPS: ",0
_14	.db	"# Dots: ",0
_15	.db	"MOVE YOUR MOUSE!",0
	.align	4
_tringdot	.dd	5
_22	.dd	0
	.dd	_22
	.dd	_22
	.dd	0
	.dd	-1
_23	.dd	0
	.dd	_23
	.dd	_23
	.dd	0
	.dd	-1
	.dd	5
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

