
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_freplay_init
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+20]
	mov	[_vreplay_recordtime],ebx
	mov	[_vreplay_recordms],0
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_freplay_addentity
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	cmp	[ebp+20],0
	jnz	_35
	mov	eax,0
	jmp	_4_leave
_35
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_treplay_object
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	sub	esp,4
	mov	[esp],0
	call	_fcreatebank
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,16
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fentityname
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
	add	[_vreplay_entitycount],1
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjToHandle
	jmp	_4_leave
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_freplay_record
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	call	_fmillisecs
	mov	[ebp-4],eax
	cmp	[_vreplay_playon],1
	jnz	_36
	call	_freplay_playstop
_36
	cmp	[_vreplay_recordon],0
	jnz	_37
	mov	ebx,[ebp-4]
	mov	[_vreplay_globaltime],ebx
	mov	[_vreplay_recordms],0
	mov	[_vreplay_recordon],1
	sub	esp,4
	mov	eax,_treplay_data
	mov	[esp],eax
	call	__bbObjDeleteEach
	mov	[_vreplay_recorddatacount],0
_37
	cmp	[_vreplay_recordon],1
	jnz	_38
	mov	ebx,[ebp-4]
	cmp	[_vreplay_recordms],ebx
	jg	_39
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],_treplay_object
	call	__bbObjEachFirst
	and	eax,eax
	jz	_6
_40
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_treplay_data
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,0
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_41
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
_41
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-4]
	sub	ebx,[_vreplay_globaltime]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,48
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,20
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentitypitch
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityyaw
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityroll
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_freplay_getentityscale
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_freplay_getentityscale
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,40
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],2
	call	_freplay_getentityscale
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,44
	mov	[ebx],eax
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_40
_6
	add	[_vreplay_recorddatacount],1
	mov	ebx,[ebp-4]
	add	ebx,[_vreplay_recordtime]
	mov	[_vreplay_recordms],ebx
_39
_38
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_freplay_recorddemo
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	call	_fmillisecs
	mov	[ebp-8],eax
	cmp	[_vreplay_demoon],0
	jnz	_42
	call	_freplay_recordstop
	call	_freplay_playstop
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fwritefile
	mov	[_vreplay_demostream],eax
	sub	esp,4
	mov	eax,[_vreplay_demostream]
	mov	[esp],eax
	call	_fclosefile
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fopenfile
	mov	[_vreplay_demostream],eax
	cmp	[_vreplay_demostream],0
	jz	_43
	sub	esp,8
	mov	eax,[_vreplay_demostream]
	mov	[esp],eax
	mov	ebx,[_vreplay_entitycount]
	mov	[esp+4],ebx
	call	_fwriteint
	mov	[ebp-12],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_treplay_object
	call	__bbObjEachFirst
	and	eax,eax
	jz	_8
_44
	add	[ebp-12],1
	mov	ebx,[ebp-12]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[_vreplay_demostream]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fwriteint
	sub	esp,8
	mov	eax,[_vreplay_demostream]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	_fwritestring
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_44
_8
	mov	[_vreplay_demoon],1
	mov	[_vreplay_demoseek],0
	mov	[_vreplay_recordon],1
	mov	ebx,[ebp-8]
	mov	[_vreplay_globaltime],ebx
_43
_42
	cmp	[_vreplay_demoon],1
	jnz	_45
	mov	ebx,[ebp-8]
	cmp	[_vreplay_recordms],ebx
	jg	_46
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_treplay_object
	call	__bbObjEachFirst
	and	eax,eax
	jz	_9
_47
	sub	esp,8
	mov	eax,[_vreplay_demostream]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fwriteint
	sub	esp,8
	mov	eax,[_vreplay_demostream]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	sub	ebx,[_vreplay_globaltime]
	mov	[esp+4],ebx
	call	_fwriteint
	sub	esp,16
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[_vreplay_demostream]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritefloat
	mov	ebx,eax
	sub	esp,16
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[_vreplay_demostream]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritefloat
	mov	ebx,eax
	sub	esp,16
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[_vreplay_demostream]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritefloat
	mov	ebx,eax
	sub	esp,16
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentitypitch
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[_vreplay_demostream]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritefloat
	mov	ebx,eax
	sub	esp,16
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityyaw
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[_vreplay_demostream]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritefloat
	mov	ebx,eax
	sub	esp,16
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityroll
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[_vreplay_demostream]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritefloat
	mov	ebx,eax
	sub	esp,16
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_freplay_getentityscale
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[_vreplay_demostream]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritefloat
	mov	ebx,eax
	sub	esp,16
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_freplay_getentityscale
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[_vreplay_demostream]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritefloat
	mov	ebx,eax
	sub	esp,16
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],2
	call	_freplay_getentityscale
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[_vreplay_demostream]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritefloat
	mov	ebx,eax
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_47
_9
	add	[_vreplay_recorddatacount],1
	mov	ebx,[ebp-8]
	add	ebx,[_vreplay_recordtime]
	mov	[_vreplay_recordms],ebx
_46
_45
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_freplay_recordstop
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	[_vreplay_recordon],0
	mov	[_vreplay_demoon],0
	cmp	[_vreplay_demostream],0
	jz	_48
	sub	esp,4
	mov	eax,[_vreplay_demostream]
	mov	[esp],eax
	call	_fclosefile
	mov	[_vreplay_demostream],0
_48
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_freplay_play
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,84
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-80],ebx
	sub	esp,4
	mov	eax,_12
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-44],eax
	sub	esp,4
	mov	eax,_13
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-48],eax
	sub	esp,4
	mov	eax,_14
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-52],eax
	sub	esp,4
	mov	eax,_15
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-56],eax
	sub	esp,4
	mov	eax,_16
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-60],eax
	sub	esp,4
	mov	eax,_17
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-64],eax
	sub	esp,4
	mov	eax,_18
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-68],eax
	sub	esp,4
	mov	eax,_19
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-72],eax
	sub	esp,4
	mov	eax,_20
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-76],eax
	call	_fmillisecs
	mov	[ebp-32],eax
	mov	ebx,[ebp-32]
	sub	ebx,[_vreplay_framems]
	mov	[_vreplay_frametime],ebx
	mov	ebx,[ebp-32]
	mov	[_vreplay_framems],ebx
	mov	ebx,[ebp-32]
	cmp	[_vreplay_frametime],ebx
	jnz	_49
	mov	[_vreplay_frametime],16
_49
	cmp	[_vreplay_recordon],1
	jnz	_50
	call	_freplay_recordstop
_50
	cmp	[_vreplay_playon],0
	jnz	_51
	mov	ebx,[_vreplay_recorddatacount]
	imul	ebx,40
	mov	[ebp-12],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_treplay_object
	call	__bbObjEachFirst
	and	eax,eax
	jz	_21
_52
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fresizebank
	mov	[ebp-16],0
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],_treplay_data
	call	__bbObjEachFirst
	and	eax,eax
	jz	_22
_53
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	__bbObjCompare
	cmp	eax,0
	jnz	_54
	sub	esp,12
	mov	ebx,[ebp-16]
	add	ebx,0
	mov	[esp+4],ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-16]
	add	ebx,4
	mov	[esp+4],ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-16]
	add	ebx,8
	mov	[esp+4],ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-16]
	add	ebx,16
	mov	[esp+4],ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-16]
	add	ebx,20
	mov	[esp+4],ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-16]
	add	ebx,24
	mov	[esp+4],ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-16]
	add	ebx,28
	mov	[esp+4],ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,36
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-16]
	add	ebx,32
	mov	[esp+4],ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-16]
	add	ebx,36
	mov	[esp+4],ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,44
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	add	[ebp-16],40
_54
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_53
_22
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_52
_21
	mov	[_vreplay_playon],1
	mov	[_vreplay_playtime],1065353216
	mov	[ebp-80],0
_51
	cmp	[_vreplay_playon],1
	jnz	_55
	sub	esp,4
	mov	eax,[_vreplay_playtime]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[_vreplay_recordtime]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	eax,[_vreplay_playtime]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[_vreplay_recordtime]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fceil
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-28],eax
	mov	ebx,[ebp-28]
	cmp	[ebp-24],ebx
	jnz	_56
	add	[ebp-28],1
_56
	mov	eax,[_vreplay_recorddatacount]
	cmp	[ebp-24],eax
	setg	al
	movzx	eax,al
	mov	[ebp-84],eax
	mov	ebx,[_vreplay_recorddatacount]
	cmp	[ebp-28],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-84]
	or	eax,ebx
	and	eax,eax
	jz	_57
	mov	ebx,[_vreplay_recorddatacount]
	mov	[ebp-24],ebx
	mov	ebx,[_vreplay_recorddatacount]
	mov	[ebp-28],ebx
_57
	sub	esp,8
	mov	eax,[_vreplay_playtime]
	mov	[esp],eax
	mov	ebx,[_vreplay_recordtime]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	__bbFMod
	mov	ebx,[_vreplay_recordtime]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_treplay_object
	call	__bbObjEachFirst
	and	eax,eax
	jz	_23
_58
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	imul	ebx,40
	add	ebx,0
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,0
	add	ebx,[ebp-44]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	imul	ebx,40
	add	ebx,4
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,0
	add	ebx,[ebp-48]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	imul	ebx,40
	add	ebx,8
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,0
	add	ebx,[ebp-52]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	imul	ebx,40
	add	ebx,16
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,0
	add	ebx,[ebp-56]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	imul	ebx,40
	add	ebx,20
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,0
	add	ebx,[ebp-60]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	imul	ebx,40
	add	ebx,24
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,0
	add	ebx,[ebp-64]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	imul	ebx,40
	add	ebx,28
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,0
	add	ebx,[ebp-68]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	imul	ebx,40
	add	ebx,32
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,0
	add	ebx,[ebp-72]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	imul	ebx,40
	add	ebx,36
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,0
	add	ebx,[ebp-76]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	imul	ebx,40
	add	ebx,0
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,4
	add	ebx,[ebp-44]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	imul	ebx,40
	add	ebx,4
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,4
	add	ebx,[ebp-48]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	imul	ebx,40
	add	ebx,8
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,4
	add	ebx,[ebp-52]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	imul	ebx,40
	add	ebx,16
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,4
	add	ebx,[ebp-56]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	imul	ebx,40
	add	ebx,20
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,4
	add	ebx,[ebp-60]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	imul	ebx,40
	add	ebx,24
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,4
	add	ebx,[ebp-64]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	imul	ebx,40
	add	ebx,28
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,4
	add	ebx,[ebp-68]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	imul	ebx,40
	add	ebx,32
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,4
	add	ebx,[ebp-72]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	imul	ebx,40
	add	ebx,36
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,4
	add	ebx,[ebp-76]
	mov	[ebx],eax
	mov	ebx,4
	add	ebx,[ebp-44]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	add	esi,[ebp-44]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,0
	add	esi,[ebp-44]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,8
	add	ebx,[ebp-44]
	mov	[ebx],esi
	mov	ebx,4
	add	ebx,[ebp-48]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	add	esi,[ebp-48]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,0
	add	esi,[ebp-48]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,8
	add	ebx,[ebp-48]
	mov	[ebx],esi
	mov	ebx,4
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	add	esi,[ebp-52]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,0
	add	esi,[ebp-52]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,8
	add	ebx,[ebp-52]
	mov	[ebx],esi
	mov	ebx,4
	add	ebx,[ebp-56]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	add	esi,[ebp-56]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,0
	add	esi,[ebp-56]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,8
	add	ebx,[ebp-56]
	mov	[ebx],esi
	mov	ebx,4
	add	ebx,[ebp-60]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	add	esi,[ebp-60]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,0
	add	esi,[ebp-60]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,8
	add	ebx,[ebp-60]
	mov	[ebx],esi
	mov	ebx,4
	add	ebx,[ebp-64]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	add	esi,[ebp-64]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,0
	add	esi,[ebp-64]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,8
	add	ebx,[ebp-64]
	mov	[ebx],esi
	mov	ebx,4
	add	ebx,[ebp-68]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	add	esi,[ebp-68]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,0
	add	esi,[ebp-68]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,8
	add	ebx,[ebp-68]
	mov	[ebx],esi
	mov	ebx,4
	add	ebx,[ebp-72]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	add	esi,[ebp-72]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,0
	add	esi,[ebp-72]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,8
	add	ebx,[ebp-72]
	mov	[ebx],esi
	mov	ebx,4
	add	ebx,[ebp-76]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	add	esi,[ebp-76]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,0
	add	esi,[ebp-76]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,8
	add	ebx,[ebp-76]
	mov	[ebx],esi
	sub	esp,20
	mov	ebx,8
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,8
	add	esi,[ebp-48]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,8
	add	ebx,[ebp-44]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,20
	mov	ebx,8
	add	ebx,[ebp-64]
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,8
	add	esi,[ebp-60]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,8
	add	ebx,[ebp-56]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_frotateentity
	sub	esp,20
	mov	ebx,8
	add	ebx,[ebp-68]
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,8
	add	esi,[ebp-72]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,8
	add	ebx,[ebp-68]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fscaleentity
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_58
_23
	mov	ebx,[_vreplay_recorddatacount]
	imul	ebx,[_vreplay_recordtime]
	sub	ebx,[_vreplay_recordtime]
	mov	[ebp-36],ebx
	sub	esp,8
	mov	ebx,[_vreplay_frametime]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[_vreplay_playtime]
	push	eax
	fld	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-36]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	__bbFMod
	push	eax
	fstp	[esp]
	pop	eax
	mov	[_vreplay_playtime],eax
	mov	eax,[_vreplay_playtime]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_59
	mov	ebx,[ebp-36]
	sub	ebx,[_vreplay_recordtime]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vreplay_playtime],ebx
_59
_55
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	[ebp-84],eax
	sub	esp,8
	mov	ebx,[ebp-72]
	mov	[esp],ebx
	mov	[esp+4],_19
	mov	eax,ebx
	call	__bbVecFree
	mov	ebx,eax
	mov	eax,[ebp-84]
	mov	[ebp-84],eax
	sub	esp,8
	mov	esi,[ebp-76]
	mov	[esp],esi
	mov	[esp+4],_20
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-84]
	mov	[ebp-84],eax
	sub	esp,8
	mov	esi,[ebp-68]
	mov	[esp],esi
	mov	[esp+4],_18
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-84]
	mov	[ebp-84],eax
	sub	esp,8
	mov	ebx,[ebp-64]
	mov	[esp],ebx
	mov	[esp+4],_17
	mov	eax,ebx
	call	__bbVecFree
	mov	ebx,eax
	mov	eax,[ebp-84]
	mov	[ebp-84],eax
	sub	esp,8
	mov	esi,[ebp-60]
	mov	[esp],esi
	mov	[esp+4],_16
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-84]
	mov	[ebp-84],eax
	sub	esp,8
	mov	ebx,[ebp-56]
	mov	[esp],ebx
	mov	[esp+4],_15
	mov	eax,ebx
	call	__bbVecFree
	mov	ebx,eax
	mov	eax,[ebp-84]
	mov	[ebp-84],eax
	sub	esp,8
	mov	esi,[ebp-52]
	mov	[esp],esi
	mov	[esp+4],_14
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-84]
	mov	[ebp-84],eax
	sub	esp,8
	mov	ebx,[ebp-48]
	mov	[esp],ebx
	mov	[esp+4],_13
	mov	eax,ebx
	call	__bbVecFree
	mov	ebx,eax
	mov	eax,[ebp-84]
	mov	[ebp-84],eax
	sub	esp,8
	mov	esi,[ebp-44]
	mov	[esp],esi
	mov	[esp+4],_12
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-84]
	mov	[ebp-84],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-84]
	mov	[ebp-84],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-84]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_freplay_loaddemo
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,4
	mov	eax,_treplay_data
	mov	[esp],eax
	call	__bbObjDeleteEach
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-4],eax
	cmp	[ebp-4],0
	jnz	_60
	mov	eax,0
	jmp	_24_leave
_60
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadint
	mov	[ebp-8],eax
	mov	[ebp-32],1
	jmp	_61
_62
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadint
	mov	[ebp-12],eax
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadstring
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],_treplay_object
	call	__bbObjEachFirst
	and	eax,eax
	jz	_26
_63
	sub	esp,12
	mov	eax,[ebp-20]
	mov	eax,[eax]
	add	eax,16
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_64
	mov	ebx,[ebp-12]
	mov	esi,[ebp-20]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_26
_64
	sub	esp,4
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_63
_26
	add	[ebp-32],1
_61
	mov	ebx,[ebp-8]
	cmp	[ebp-32],ebx
	jle	_62
_25
	mov	[_vreplay_recorddatacount],0
	mov	[ebp-28],-1
	jmp	_66
_65
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadint
	mov	[ebp-12],eax
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_treplay_data
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadint
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,48
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,20
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,40
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,44
	mov	[ebx],eax
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],_treplay_object
	call	__bbObjEachFirst
	and	eax,eax
	jz	_28
_67
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	cmp	ebx,[ebp-12]
	jnz	_68
	sub	esp,8
	mov	eax,[ebp-24]
	mov	eax,[eax]
	add	eax,0
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-24]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-24]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_69
	sub	esp,8
	mov	eax,[ebp-24]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	__bbObjStore
_69
	sub	esp,8
	mov	eax,[ebp-20]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	__bbObjStore
	jmp	_28
_68
	sub	esp,4
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_67
_28
	mov	eax,[ebp-24]
	mov	eax,[eax]
	add	eax,48
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	and	eax,eax
	jz	_70
	add	[_vreplay_recorddatacount],1
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
_70
_66
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_feof
	cmp	eax,0
	jz	_65
_27
	mov	eax,0
	jmp	_24_leave
_24_leave
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,[ebp-24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,[ebp-16]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_freplay_playstop
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	[_vreplay_playon],0
	mov	eax,0
	jmp	_29_leave
_29_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_freplay_getentityscale
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	cmp	[ebp+20],0
	jnz	_71
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_30_leave
_71
	cmp	[ebp+24],0
	jge	_72
	mov	[ebp+24],0
_72
	cmp	[ebp+24],2
	jle	_73
	mov	[ebp+24],2
_73
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	jmp	_30_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_30_leave
_30_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	4
_vreplay_recordtime	.dd	0
	.align	4
_vreplay_recordms	.dd	0
	.align	4
_vreplay_globaltime	.dd	0
	.align	4
_vreplay_recordon	.dd	0
	.align	4
_vreplay_recorddatacount	.dd	0
	.align	4
_vreplay_playon	.dd	0
	.align	4
_vreplay_playtime	.dd	0
	.align	4
_vreplay_framems	.dd	0
	.align	4
_vreplay_frametime	.dd	0
	.align	4
_vreplay_demoon	.dd	0
	.align	4
_vreplay_demostream	.dd	0
	.align	4
_vreplay_demoseek	.dd	0
	.align	4
_vreplay_entitycount	.dd	0
	.align	4
_treplay_object	.dd	5
_31	.dd	0
	.dd	_31
	.dd	_31
	.dd	0
	.dd	-1
_32	.dd	0
	.dd	_32
	.dd	_32
	.dd	0
	.dd	-1
	.dd	6
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	_treplay_data
	.dd	__bbIntType
	.dd	__bbStrType
	.dd	__bbIntType
	.align	4
_treplay_data	.dd	5
_33	.dd	0
	.dd	_33
	.dd	_33
	.dd	0
	.dd	-1
_34	.dd	0
	.dd	_34
	.dd	_34
	.dd	0
	.dd	-1
	.dd	13
	.dd	_treplay_object
	.dd	_treplay_data
	.dd	_treplay_data
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.align	4
_12	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_13	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_14	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_15	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_16	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_17	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_18	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_19	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_20	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

