
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,64
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	sub	esp,4
	mov	eax,_3
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-24],eax
	sub	esp,4
	mov	eax,_4
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-28],eax
	sub	esp,4
	mov	eax,_5
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-32],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics3d
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[ebp-4],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],-1061158912
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fmoveentity
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],0
	call	_fcreatelight
	mov	[ebp-8],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1110704128
	mov	[esp+4],1106247680
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fturnentity
	sub	esp,8
	mov	[esp],10
	mov	[esp+4],0
	call	_fcreatesphere
	mov	[ebp-12],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],1077936128
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fentitypickmode
	sub	esp,4
	mov	[esp],0
	call	_fcreatecube
	mov	[ebp-16],eax
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fentitypickmode
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],0
	mov	[esp],14
	call	_fcreatecylinder
	mov	[ebp-20],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],-1069547520
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fentitypickmode
	sub	esp,4
	mov	[esp],0
	call	_fcreatemesh
	mov	[ebp-36],eax
	sub	esp,8
	mov	eax,[ebp-36]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcreatesurface
	mov	[ebp-40],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],1132396544
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,8
	mov	eax,[ebp-36]
	mov	[esp],eax
	mov	[esp+4],-9
	call	_fentityorder
	jmp	_16
_15
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	call	_fpickedentity
	and	eax,eax
	jz	_17
	sub	esp,48
	mov	eax,_18
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	[ebp-60],eax
	mov	eax,ebx
	call	_fpickedquad
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_19
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	[ebp-60],eax
	sub	esp,4
	mov	[ebp-64],eax
	mov	eax,ebx
	call	_fpickedsurface
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcountquads
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],5
	mov	[esp],5
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_20
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],35
	mov	[esp],5
	call	_ftext
	sub	esp,36
	call	_fpickedquad
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	[ebp-56],eax
	mov	eax,ebx
	call	_fpickedsurface
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fquadvertex
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],50
	mov	[esp],15
	call	_ftext
	sub	esp,36
	call	_fpickedquad
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-56],eax
	mov	eax,ebx
	call	_fpickedsurface
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fquadvertex
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],65
	mov	[esp],15
	call	_ftext
	sub	esp,36
	call	_fpickedquad
	mov	[esp+4],eax
	mov	[esp+8],2
	mov	[ebp-56],eax
	mov	eax,ebx
	call	_fpickedsurface
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fquadvertex
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],80
	mov	[esp],15
	call	_ftext
	sub	esp,36
	call	_fpickedquad
	mov	[esp+4],eax
	mov	[esp+8],3
	mov	[ebp-56],eax
	mov	eax,ebx
	call	_fpickedsurface
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fquadvertex
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],95
	mov	[esp],15
	call	_ftext
_17
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_21
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],440
	mov	[esp],320
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_22
	sub	esp,12
	call	_fmousex
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-56],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-56]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcamerapick
	mov	ebx,eax
	call	_fpickedentity
	and	eax,eax
	jz	_23
	call	_fpickedsurface
	mov	[ebp-44],eax
	mov	[ebp-48],0
	jmp	_24
_25
	sub	esp,12
	call	_fpickedquad
	mov	[esp+4],eax
	mov	ebx,[ebp-48]
	mov	[esp+8],ebx
	mov	ebx,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fquadvertex
	mov	ebx,eax
	mov	[ebp-52],ebx
	sub	esp,28
	mov	eax,[ebp-44]
	mov	[esp],eax
	mov	ebx,[ebp-52]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[ebp-56],eax
	mov	eax,ebx
	call	_fpickedentity
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[ebp-56],eax
	sub	esp,8
	mov	ebx,[ebp-44]
	mov	[esp],ebx
	mov	esi,[ebp-52]
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fvertexy
	mov	ebx,eax
	mov	eax,[ebp-56]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	sub	esp,8
	mov	eax,[ebp-44]
	mov	[esp],eax
	mov	esi,[ebp-52]
	mov	[esp+4],esi
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftformpoint
	call	_ftformedx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-48]
	shl	ebx,byte 2
	add	ebx,[ebp-24]
	mov	[ebx],eax
	call	_ftformedy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-48]
	shl	ebx,byte 2
	add	ebx,[ebp-28]
	mov	[ebx],eax
	call	_ftformedz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-48]
	shl	ebx,byte 2
	add	ebx,[ebp-32]
	mov	[ebx],eax
	add	[ebp-48],1
_24
	cmp	[ebp-48],3
	jle	_25
_7
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fclearsurface
	sub	esp,52
	mov	ebx,12
	add	ebx,[ebp-28]
	mov	ebx,[ebx]
	mov	[esp+44],ebx
	mov	esi,12
	add	esi,[ebp-32]
	mov	esi,[esi]
	mov	[esp+48],esi
	mov	esi,12
	add	esi,[ebp-24]
	mov	esi,[esi]
	mov	[esp+40],esi
	mov	ebx,8
	add	ebx,[ebp-32]
	mov	ebx,[ebx]
	mov	[esp+36],ebx
	mov	esi,8
	add	esi,[ebp-28]
	mov	esi,[esi]
	mov	[esp+32],esi
	mov	ebx,8
	add	ebx,[ebp-24]
	mov	ebx,[ebx]
	mov	[esp+28],ebx
	mov	esi,4
	add	esi,[ebp-32]
	mov	esi,[esi]
	mov	[esp+24],esi
	mov	ebx,4
	add	ebx,[ebp-28]
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	esi,4
	add	esi,[ebp-24]
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,0
	add	ebx,[ebp-32]
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,0
	add	esi,[ebp-28]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,0
	add	ebx,[ebp-24]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_faddquad2
	sub	esp,4
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fupdatenormals
_23
	jmp	_26
_22
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fclearsurface
_26
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1053609165
	mov	[esp+4],1050253722
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fturnentity
_16
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_15
_6
	call	_fend
	ret
_2_leave
	mov	[ebp-56],eax
	sub	esp,8
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	[esp+4],_4
	mov	eax,ebx
	call	__bbVecFree
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[ebp-56],eax
	sub	esp,8
	mov	esi,[ebp-32]
	mov	[esp],esi
	mov	[esp+4],_5
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-56]
	mov	[ebp-56],eax
	sub	esp,8
	mov	esi,[ebp-24]
	mov	[esp],esi
	mov	[esp+4],_3
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-56]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_faddquad
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,16
	mov	ebx,[ebp+28]
	mov	[esp+8],ebx
	mov	esi,[ebp+32]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddtriangle
	mov	[ebp-4],eax
	sub	esp,16
	mov	ebx,[ebp+32]
	mov	[esp+8],ebx
	mov	esi,[ebp+36]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddtriangle
	mov	eax,[ebp-4]
	sar	eax,byte 1
	jmp	_8_leave
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_faddquad2
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	ebx,[ebp+32]
	mov	[esp+12],ebx
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-4],eax
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],1065353216
	mov	ebx,[ebp+44]
	mov	[esp+12],ebx
	mov	esi,[ebp+40]
	mov	[esp+8],esi
	mov	ebx,[ebp+36]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-8],eax
	sub	esp,28
	mov	[esp+20],1065353216
	mov	[esp+24],1065353216
	mov	[esp+16],1065353216
	mov	ebx,[ebp+56]
	mov	[esp+12],ebx
	mov	esi,[ebp+52]
	mov	[esp+8],esi
	mov	ebx,[ebp+48]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-12],eax
	sub	esp,28
	mov	[esp+20],1065353216
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	ebx,[ebp+68]
	mov	[esp+12],ebx
	mov	esi,[ebp+64]
	mov	[esp+8],esi
	mov	ebx,[ebp+60]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-16],eax
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddtriangle
	mov	[ebp-20],eax
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddtriangle
	mov	eax,[ebp-20]
	sar	eax,byte 1
	jmp	_9_leave
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 52
	.align	16
_fcountquads
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcounttriangles
	sar	eax,byte 1
	jmp	_10_leave
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fquadvertex
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	cmp	[ebp+28],3
	jge	_27
	sub	esp,12
	mov	ebx,[ebp+24]
	shl	ebx,byte 1
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ftrianglevertex
	jmp	_11_leave
_27
	sub	esp,12
	mov	ebx,[ebp+24]
	shl	ebx,byte 1
	add	ebx,1
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ftrianglevertex
	jmp	_11_leave
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fpickedquad
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	call	_fpickedtriangle
	sar	eax,byte 1
	jmp	_12_leave
	mov	eax,0
	jmp	_12_leave
_12_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fpickedvertex
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-32],-1082130432
	call	_fpickedsurface
	mov	[ebp-36],eax
	sub	esp,20
	mov	[esp+12],0
	call	_fpickedentity
	mov	[esp+16],eax
	call	_fpickedz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[ebp-40],eax
	mov	eax,ebx
	call	_fpickedy
	mov	ebx,eax
	mov	eax,[ebp-40]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fpickedx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftformpoint
	mov	[ebp-4],0
	jmp	_28
_29
	sub	esp,12
	call	_fpickedtriangle
	mov	[esp+4],eax
	mov	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftrianglevertex
	mov	ebx,eax
	mov	[ebp-24],ebx
	sub	esp,8
	mov	eax,[ebp-36]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fvertexx
	mov	[ebp-40],eax
	mov	eax,ebx
	call	_ftformedx
	mov	ebx,eax
	mov	eax,[ebp-40]
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	sub	esp,8
	mov	eax,[ebp-36]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fvertexy
	mov	[ebp-40],eax
	mov	eax,ebx
	call	_ftformedy
	mov	ebx,eax
	mov	eax,[ebp-40]
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	sub	esp,8
	mov	eax,[ebp-36]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fvertexz
	mov	[ebp-40],eax
	mov	eax,ebx
	call	_ftformedz
	mov	ebx,eax
	mov	eax,[ebp-40]
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-16]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-20]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	mov	eax,[ebp-28]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	[ebp-40],eax
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-40]
	or	eax,ebx
	and	eax,eax
	jz	_30
	mov	ebx,[ebp-24]
	mov	[ebp-8],ebx
	mov	ebx,[ebp-28]
	mov	[ebp-32],ebx
_30
	add	[ebp-4],1
_28
	cmp	[ebp-4],2
	jle	_29
_14
	mov	eax,[ebp-8]
	jmp	_13_leave
	mov	eax,0
	jmp	_13_leave
_13_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
_3	.dd	6
	.dd	5
	.dd	__bbFltType
	.align	4
_4	.dd	6
	.dd	5
	.dd	__bbFltType
	.align	4
_5	.dd	6
	.dd	5
	.dd	__bbFltType
_18	.db	"picked quad = ",0
_19	.db	"/",0
_20	.db	"quad verts:",0
_21	.db	"Use mouse to click on objects",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

