
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	sub	esp,8
	mov	[esp],_vsblitzsysdllnamea101b6
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_35
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	mov	eax,_36
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_37
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fdllfindblitzruntimehwnd
	mov	[_vhwnd],eax
	sub	esp,44
	mov	eax,_38
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	[esp],10
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_39
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	[esp],10
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_40
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp],_vfont_okay
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,28
	mov	eax,_41
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	[esp],10
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_42
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp],_vfont_not_okay
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,28
	mov	eax,_43
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	[esp],10
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_44
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp],_vfont_image
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	[_viconflags],262197
	sub	esp,8
	mov	[esp],_vdisplay
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_vfont_not_okay
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[_vgetclick],2
	sub	esp,8
	mov	eax,[_vhwnd]
	mov	[esp],eax
	mov	[esp+4],6
	call	_fdllshowwindow
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	call	_fcls
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	jmp	_46
_45
	sub	esp,8
	mov	[esp],_vselectedfont
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fselectfont
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	mov	eax,_vselectedfont
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_48
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_47
	sub	esp,20
	mov	eax,_vselectedfont
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_49
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp],_vcaption
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	mov	[esp],_vdisplay
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_vfont_okay
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[_viconflags],262179
	mov	[_vclickresultyesretry],3
	mov	[_vclickresultno],1
	mov	[_vclickresultother],2
	jmp	_50
_47
	sub	esp,8
	mov	[esp],_vcaption
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_51
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	[esp],_vdisplay
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_vfont_not_okay
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[_viconflags],262197
	mov	[_vclickresultyesretry],1
	mov	[_vclickresultno],2
	mov	[_vclickresultother],2
_50
	sub	esp,16
	mov	eax,_vdisplay
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	ebx,[_viconflags]
	mov	[esp+8],ebx
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_vcaption
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwindowmessage
	mov	ebx,eax
	mov	[_vgetclick],ebx
	cmp	[_vgetclick],2
	jnz	_52
	sub	esp,12
	mov	eax,_53
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_54
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,8
	mov	eax,_55
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_52
	cmp	[_vgetclick],3
	jnz	_56
	sub	esp,8
	mov	eax,_vselectedfont
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fcreatefontimage
	sub	esp,8
	mov	[esp],_vcaption
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_57
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	[esp],_vdisplay
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_vfont_image
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[_viconflags],262180
	mov	[_vclickresultyesretry],1
	mov	[_vclickresultno],2
	mov	[_vclickresultother],2
	sub	esp,16
	mov	eax,_vdisplay
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	ebx,[_viconflags]
	mov	[esp+8],ebx
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_vcaption
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwindowmessage
	mov	ebx,eax
	cmp	ebx,2
	jnz	_58
	sub	esp,12
	mov	eax,_59
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_60
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,8
	mov	eax,_61
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_58
_56
_46
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_45
_3
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fwindowmessage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,16
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	ebx,[ebp+28]
	mov	[esp+8],ebx
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fdllmessagebox
	mov	ebx,eax
	mov	[ebp-4],ebx
	cmp	[ebp-4],6
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp-4],4
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	mov	[ebp-8],eax
	cmp	[ebp-4],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_62
	mov	eax,[_vclickresultyesretry]
	jmp	_4_leave
_62
	cmp	[ebp-4],7
	jnz	_63
	mov	eax,[_vclickresultno]
	jmp	_4_leave
_63
	mov	eax,[_vclickresultother]
	jmp	_4_leave
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fselectfont
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,4
	mov	[esp],65
	call	_fcreatebank
	mov	[ebp-8],eax
	mov	[ebp-16],14
	mov	[ebp-20],0
	mov	[ebp-24],0
	mov	[ebp-28],0
	mov	[ebp-32],0
	sub	esp,12
	mov	[esp+4],14
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+8],eax
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fdllsetfontattribute
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+8],eax
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fdllsetfontattribute
	sub	esp,12
	mov	[esp+4],6
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+8],eax
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fdllsetfontattribute
	sub	esp,12
	mov	[esp+4],7
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+8],eax
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fdllsetfontattribute
	sub	esp,12
	mov	[esp+4],15
	sub	esp,4
	mov	eax,_64
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fdllsetfontattribute
	sub	esp,12
	mov	[esp+4],2
	sub	esp,4
	mov	eax,_65
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fdllsetfontattribute
	sub	esp,16
	mov	[esp+8],10
	mov	[esp+12],16
	mov	[esp+4],8454209
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fdllchoosefont
	and	eax,eax
	jz	_66
	sub	esp,16
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],15
	call	_fdllgetfontattribute
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_68
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_67
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],14
	call	_fdllgetfontattribute
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-20],eax
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	call	_fdllgetfontattribute
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-24],eax
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],6
	call	_fdllgetfontattribute
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-28],eax
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],7
	call	_fdllgetfontattribute
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-32],eax
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],2
	call	_fdllgetfontattribute
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-16],eax
	sub	esp,20
	mov	ebx,[ebp-28]
	mov	[esp+12],ebx
	mov	esi,[ebp-32]
	mov	[esp+16],esi
	mov	esi,[ebp-24]
	mov	[esp+8],esi
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-4],eax
	mov	ebx,[ebp-4]
	and	ebx,ebx
	jz	_69
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetfont
	jmp	_70
_69
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_71
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrStore
_70
_67
_66
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_5_leave
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreebank
	sub	esp,4
	mov	eax,_72
	mov	[esp],eax
	call	__bbStrConst
	jmp	_5_leave
_5_leave
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fgetfontcharmaxwidth
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-4],0
	mov	[ebp-8],0
	mov	[ebp-12],0
	mov	[ebp-8],31
	jmp	_73
_74
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fchr
	mov	[esp],eax
	call	_fstringwidth
	mov	[ebp-12],eax
	mov	ebx,[ebp-4]
	cmp	[ebp-12],ebx
	jle	_75
	mov	ebx,[ebp-12]
	mov	[ebp-4],ebx
_75
	add	[ebp-8],1
_73
	cmp	[ebp-8],126
	jle	_74
_7
	mov	eax,[ebp-4]
	jmp	_6_leave
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fgetfontcharmaxheight
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-4],0
	mov	[ebp-8],0
	mov	[ebp-12],0
	mov	[ebp-8],31
	jmp	_76
_77
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fchr
	mov	[esp],eax
	call	_fstringheight
	mov	[ebp-12],eax
	mov	ebx,[ebp-4]
	cmp	[ebp-12],ebx
	jle	_78
	mov	ebx,[ebp-12]
	mov	[ebp-4],ebx
_78
	add	[ebp-8],1
_76
	cmp	[ebp-8],126
	jle	_77
_9
	mov	eax,[ebp-4]
	jmp	_8_leave
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreatefontimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,56
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	call	_fgetfontcharmaxwidth
	mov	[ebp-4],eax
	call	_fgetfontcharmaxheight
	mov	[ebp-8],eax
	mov	ebx,[ebp-4]
	shr	ebx,byte 1
	mov	[ebp-12],ebx
	mov	ebx,[ebp-8]
	shr	ebx,byte 1
	mov	[ebp-16],ebx
	sub	esp,12
	mov	ebx,[ebp-8]
	shl	ebx,byte 4
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-4]
	shl	eax,byte 4
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-28],eax
	sub	esp,12
	mov	eax,[ebp-28]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fcls
	mov	[ebp-24],0
	jmp	_79
_80
	mov	[ebp-20],0
	jmp	_81
_82
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,[ebp-24]
	shl	eax,byte 4
	add	eax,[ebp-20]
	mov	[esp],eax
	call	_fchr
	mov	[esp+8],eax
	mov	ebx,[ebp-24]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	imul	eax,[ebp-4]
	add	eax,[ebp-12]
	mov	[esp],eax
	call	_ftext
	add	[ebp-20],1
_81
	cmp	[ebp-20],15
	jle	_82
_12
	add	[ebp-24],1
_79
	cmp	[ebp-24],15
	jle	_80
_11
	sub	esp,12
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_84
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_83
	jmp	_86
_85
	sub	esp,20
	mov	[esp+4],65
	mov	[esp+8],512
	sub	esp,4
	mov	eax,_87
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fdllbrowseforfolder
	mov	[esp+4],eax
	lea	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_86
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_ffiletype
	cmp	eax,2
	jnz	_85
_13
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_89
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-36],eax
	mov	[ebp-40],eax
	sub	esp,8
	mov	[ebp-44],eax
	sub	esp,8
	mov	[ebp-48],eax
	sub	esp,4
	lea	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp],ebx
	mov	[esp+4],1
	mov	eax,ebx
	call	_fright
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp],ebx
	mov	[ebp-44],eax
	sub	esp,4
	mov	esi,_90
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-44]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrCompare
	mov	ebx,eax
	mov	eax,[ebp-40]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	and	eax,ebx
	and	eax,eax
	jz	_88
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_91
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_88
_83
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,16
	mov	eax,[ebp-28]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,8
	mov	[ebp-40],eax
	sub	esp,8
	mov	[ebp-44],eax
	sub	esp,8
	mov	[ebp-48],eax
	sub	esp,8
	mov	[ebp-52],eax
	sub	esp,8
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	[ebp-56],eax
	sub	esp,4
	lea	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-56]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	[ebp-52],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrFromInt
	mov	esi,eax
	mov	eax,[ebp-52]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp],ebx
	mov	[ebp-48],eax
	sub	esp,4
	mov	esi,_92
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-48]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp],ebx
	mov	[ebp-44],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrFromInt
	mov	esi,eax
	mov	eax,[ebp-44]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	[ebp-40],eax
	sub	esp,4
	mov	esi,_93
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-40]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	_fsavebuffer
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_ffreeimage
	mov	[ebp-28],0
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,[ebp-32]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fdllfindblitzruntimehwnd
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_94
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	mov	[ebp-16],0
	jmp	_95
_96
	sub	esp,28
	mov	[esp],1115815936
	mov	[esp+4],1119092736
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fchr
	mov	[esp+4],eax
	mov	[ebp-20],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrStore
	add	[ebp-16],1
_95
	cmp	[ebp-16],50
	jle	_96
_15
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_97
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fdllfindwindow
	mov	[ebp-4],eax
	sub	esp,4
	mov	[esp],0
	call	_fseedrnd
	cmp	[ebp-4],0
	jnz	_98
	sub	esp,8
	mov	eax,_99
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_98
	sub	esp,12
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	_fapptitle
	mov	eax,[ebp-4]
	jmp	_14_leave
	mov	eax,0
	jmp	_14_leave
_14_leave
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[ebp-20],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-20]
	mov	[ebp-20],eax
	sub	esp,4
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-20]
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdllfindwindow
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	add	eax,1
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcreatebank
	mov	[ebp-8],eax
	sub	esp,16
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fpokestring
	mov	ebx,eax
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	[esp+8],ebx
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_100
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_vsblitzsysdllnamea101b6
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalldll
	mov	ebx,eax
	mov	[ebp-12],ebx
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreebank
	mov	eax,[ebp-12]
	jmp	_16_leave
	mov	eax,0
	jmp	_16_leave
_16_leave
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fdllsetwindowzorder
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdllgetwindowx
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdllgetwindowy
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdllgetwindowwidth
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdllgetwindowheight
	mov	[ebp-16],eax
	sub	esp,28
	mov	ebx,[ebp-16]
	mov	[esp+20],ebx
	mov	[esp+24],0
	mov	esi,[ebp-12]
	mov	[esp+16],esi
	mov	ebx,[ebp-8]
	mov	[esp+12],ebx
	mov	esi,[ebp-4]
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdllsetwindowpos
	jmp	_17_leave
	mov	eax,0
	jmp	_17_leave
_17_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdllsetwindowpos
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,4
	mov	[esp],28
	call	_fcreatebank
	mov	[ebp-4],eax
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp+20]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],4
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],8
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],12
	mov	esi,[ebp+32]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],16
	mov	esi,[ebp+36]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],20
	mov	esi,[ebp+40]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],24
	mov	esi,[ebp+44]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_101
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_vsblitzsysdllnamea101b6
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalldll
	mov	ebx,eax
	mov	[ebp-8],ebx
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreebank
	mov	eax,[ebp-8]
	jmp	_18_leave
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 28
	.align	16
_fdllgetwindowx
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,4
	mov	[esp],4
	call	_fcreatebank
	mov	[ebp-4],eax
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp+20]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_102
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_vsblitzsysdllnamea101b6
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalldll
	mov	ebx,eax
	mov	[ebp-8],ebx
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreebank
	mov	eax,[ebp-8]
	jmp	_19_leave
	mov	eax,0
	jmp	_19_leave
_19_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fdllgetwindowy
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,4
	mov	[esp],4
	call	_fcreatebank
	mov	[ebp-4],eax
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp+20]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_103
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_vsblitzsysdllnamea101b6
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalldll
	mov	ebx,eax
	mov	[ebp-8],ebx
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreebank
	mov	eax,[ebp-8]
	jmp	_20_leave
	mov	eax,0
	jmp	_20_leave
_20_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fdllgetwindowwidth
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,4
	mov	[esp],4
	call	_fcreatebank
	mov	[ebp-4],eax
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp+20]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_104
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_vsblitzsysdllnamea101b6
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalldll
	mov	ebx,eax
	mov	[ebp-8],ebx
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreebank
	mov	eax,[ebp-8]
	jmp	_21_leave
	mov	eax,0
	jmp	_21_leave
_21_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fdllgetwindowheight
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,4
	mov	[esp],4
	call	_fcreatebank
	mov	[ebp-4],eax
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp+20]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_105
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_vsblitzsysdllnamea101b6
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalldll
	mov	ebx,eax
	mov	[ebp-8],ebx
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreebank
	mov	eax,[ebp-8]
	jmp	_22_leave
	mov	eax,0
	jmp	_22_leave
_22_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fdllgetfontattribute
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	cmp	[ebp+20],0
	jz	_106
	mov	ebx,[ebp+24]
	mov	[ebp-4],ebx
	cmp	[ebp-4],2
	jz	_108
	cmp	[ebp-4],1
	jz	_109
	cmp	[ebp-4],3
	jz	_110
	cmp	[ebp-4],4
	jz	_111
	cmp	[ebp-4],5
	jz	_112
	cmp	[ebp-4],6
	jz	_113
	cmp	[ebp-4],7
	jz	_114
	cmp	[ebp-4],8
	jz	_115
	cmp	[ebp-4],9
	jz	_116
	cmp	[ebp-4],12
	jz	_117
	cmp	[ebp-4],13
	jz	_118
	cmp	[ebp-4],14
	jz	_119
	cmp	[ebp-4],15
	jz	_120
	sub	esp,4
	mov	eax,_121
	mov	[esp],eax
	call	__bbStrConst
	jmp	_23_leave
	jmp	_107
_108
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[esp],eax
	call	__bbStrFromInt
	jmp	_23_leave
	jmp	_107
_109
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekint
	mov	[esp],eax
	call	__bbStrFromInt
	jmp	_23_leave
	jmp	_107
_110
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],8
	call	_fpeekint
	mov	[esp],eax
	call	__bbStrFromInt
	jmp	_23_leave
	jmp	_107
_111
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekint
	mov	[esp],eax
	call	__bbStrFromInt
	jmp	_23_leave
	jmp	_107
_112
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],16
	call	_fpeekint
	mov	[esp],eax
	call	__bbStrFromInt
	jmp	_23_leave
	jmp	_107
_113
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],20
	call	_fpeekbyte
	mov	[esp],eax
	call	__bbStrFromInt
	jmp	_23_leave
	jmp	_107
_114
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],21
	call	_fpeekbyte
	mov	[esp],eax
	call	__bbStrFromInt
	jmp	_23_leave
	jmp	_107
_115
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],22
	call	_fpeekbyte
	mov	[esp],eax
	call	__bbStrFromInt
	jmp	_23_leave
	jmp	_107
_116
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],23
	call	_fpeekbyte
	mov	[esp],eax
	call	__bbStrFromInt
	jmp	_23_leave
	jmp	_107
_117
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],26
	call	_fpeekbyte
	mov	[esp],eax
	call	__bbStrFromInt
	jmp	_23_leave
	jmp	_107
_118
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],27
	call	_fpeekbyte
	mov	[esp],eax
	call	__bbStrFromInt
	jmp	_23_leave
	jmp	_107
_119
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],61
	call	_fpeekint
	mov	[esp],eax
	call	__bbStrFromInt
	jmp	_23_leave
	jmp	_107
_120
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],28
	call	_fpeekstring
	jmp	_23_leave
	jmp	_107
_107
_106
	sub	esp,4
	mov	eax,_122
	mov	[esp],eax
	call	__bbStrConst
	jmp	_23_leave
_23_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdllsetfontattribute
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+20],0
	jz	_123
	mov	ebx,[ebp+24]
	mov	[ebp-4],ebx
	cmp	[ebp-4],2
	jz	_125
	cmp	[ebp-4],1
	jz	_126
	cmp	[ebp-4],3
	jz	_127
	cmp	[ebp-4],4
	jz	_128
	cmp	[ebp-4],5
	jz	_129
	cmp	[ebp-4],6
	jz	_130
	cmp	[ebp-4],7
	jz	_131
	cmp	[ebp-4],8
	jz	_132
	cmp	[ebp-4],9
	jz	_133
	cmp	[ebp-4],12
	jz	_134
	cmp	[ebp-4],13
	jz	_135
	cmp	[ebp-4],14
	jz	_136
	cmp	[ebp-4],15
	jz	_137
	jmp	_124
_125
	sub	esp,20
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	ebx,1068149419
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokeint
	jmp	_124
_126
	sub	esp,12
	mov	[esp+4],4
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp+8],eax
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokeint
	jmp	_124
_127
	sub	esp,12
	mov	[esp+4],8
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp+8],eax
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokeint
	jmp	_124
_128
	sub	esp,12
	mov	[esp+4],12
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp+8],eax
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokeint
	jmp	_124
_129
	sub	esp,12
	mov	[esp+4],16
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp+8],eax
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokeint
	jmp	_124
_130
	sub	esp,12
	mov	[esp+4],20
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp+8],eax
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokebyte
	jmp	_124
_131
	sub	esp,12
	mov	[esp+4],21
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp+8],eax
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokebyte
	jmp	_124
_132
	sub	esp,12
	mov	[esp+4],22
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp+8],eax
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokebyte
	jmp	_124
_133
	sub	esp,12
	mov	[esp+4],23
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp+8],eax
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokebyte
	jmp	_124
_134
	sub	esp,12
	mov	[esp+4],26
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp+8],eax
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokebyte
	jmp	_124
_135
	sub	esp,12
	mov	[esp+4],27
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp+8],eax
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokebyte
	jmp	_124
_136
	sub	esp,12
	mov	[esp+4],61
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp+8],eax
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokeint
	jmp	_124
_137
	sub	esp,24
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],32
	call	_fleft
	mov	[esp+4],eax
	mov	[esp+8],28
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fpokestring
	mov	ebx,eax
	jmp	_124
_124
_123
	mov	eax,0
	jmp	_25_leave
_25_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fdllchoosefont
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,4
	mov	[esp],16
	call	_fcreatebank
	mov	[ebp-4],eax
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],4
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],8
	mov	esi,[ebp+32]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	[esp+12],esi
	sub	esp,4
	mov	eax,_138
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_vsblitzsysdllnamea101b6
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalldll
	mov	ebx,eax
	mov	[ebp-8],ebx
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreebank
	mov	eax,[ebp-8]
	jmp	_27_leave
	mov	eax,0
	jmp	_27_leave
_27_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fpokestring
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	mov	[ebp-4],1
	jmp	_139
_140
	sub	esp,28
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	_fasc
	mov	[esp+8],eax
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokebyte
	add	[ebp+28],1
	add	[ebp-4],1
_139
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jle	_140
_29
	sub	esp,12
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokebyte
	mov	eax,0
	jmp	_28_leave
_28_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fpeekstring
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_141
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-12],0
	jmp	_142
_143
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fpeekbyte
	mov	[ebp-8],eax
	cmp	[ebp-8],0
	jz	_144
	sub	esp,20
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_145
_144
	jmp	_31
_145
	add	[ebp+24],1
	add	[ebp-12],1
_142
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fbanksize
	cmp	[ebp-12],eax
	jle	_143
_31
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_30_leave
	sub	esp,4
	mov	eax,_146
	mov	[esp],eax
	call	__bbStrConst
	jmp	_30_leave
_30_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdllbrowseforfolder
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_147
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	add	eax,5
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcreatebank
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+28]
	mov	[esp],eax
	call	_fcreatebank
	mov	[ebp-12],eax
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,16
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	[esp+8],4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fpokestring
	mov	ebx,eax
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	mov	[esp+12],esi
	sub	esp,4
	mov	eax,_148
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_vsblitzsysdllnamea101b6
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalldll
	mov	ebx,eax
	mov	[ebp-16],ebx
	cmp	[ebp-16],0
	jz	_149
	sub	esp,16
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekstring
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_149
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreebank
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_ffreebank
	sub	esp,4
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_32_leave
	sub	esp,4
	mov	eax,_150
	mov	[esp],eax
	call	__bbStrConst
	jmp	_32_leave
_32_leave
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[ebp-24],eax
	sub	esp,4
	mov	esi,[ebp-20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-24]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fdllmessagebox
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	mov	[ebp-20],eax
	sub	esp,4
	mov	[ebp-24],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-20]
	add	eax,ebx
	add	eax,6
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcreatebank
	mov	[ebp-8],eax
	sub	esp,16
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fpokestring
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	add	eax,1
	mov	[ebp-16],eax
	sub	esp,16
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	ebx,[ebp-16]
	mov	[esp+8],ebx
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fpokestring
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	add	eax,[ebp-16]
	add	eax,1
	mov	[ebp-16],eax
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	[esp+8],ebx
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_151
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_vsblitzsysdllnamea101b6
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalldll
	mov	ebx,eax
	mov	[ebp-12],ebx
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreebank
	mov	eax,[ebp-12]
	jmp	_33_leave
	mov	eax,0
	jmp	_33_leave
_33_leave
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[ebp-20],eax
	sub	esp,4
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-20]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fdllshowwindow
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,4
	mov	[esp],8
	call	_fcreatebank
	mov	[ebp-8],eax
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp+20]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],4
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	[esp+8],ebx
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_152
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_vsblitzsysdllnamea101b6
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalldll
	mov	ebx,eax
	mov	[ebp-12],ebx
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreebank
	mov	eax,[ebp-12]
	jmp	_34_leave
	mov	eax,0
	jmp	_34_leave
_34_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	4
_vsblitzsysdllnamea101b6	.dd	0
_35	.db	"blitzsys",0
	.align	4
_vhwnd	.dd	0
_36	.db	"MakeFont",0
_37	.db	"",0
	.align	4
_vfont_okay	.dd	0
_38	.db	"To Proceed and generate bitmap, click Yes,",0
_39	.db	"To select another Font, click No.",0
_40	.db	"To Exit, close this message window Or click Cancel.",0
	.align	4
_vfont_not_okay	.dd	0
_41	.db	"To Select another Font, click Retry.",0
_42	.db	" Otherwise, click Cancel to Exit this program.",0
	.align	4
_vfont_image	.dd	0
_43	.db	"To Select another Font, click Yes.",0
_44	.db	"Otherwise, click No to Exit this program.",0
	.align	4
_vcaption	.dd	0
	.align	4
_viconflags	.dd	0
	.align	4
_vdisplay	.dd	0
	.align	4
_vgetclick	.dd	0
	.align	4
_vselectedfont	.dd	0
	.align	4
_vclickresultyesretry	.dd	0
	.align	4
_vclickresultno	.dd	0
	.align	4
_vclickresultother	.dd	0
_48	.db	"",0
_49	.db	" Font Selected.",0
_51	.db	"No Valid Font Selected",0
_53	.db	"Program Ended",0
_54	.db	"Thank you for using Makefont",0
_55	.db	"Thank you for using Makefont",0
_57	.db	"Bitmap Font Image Created.",0
_59	.db	"Program Ended",0
_60	.db	"Thank you for using Makefont",0
_61	.db	"Thank you for using Makefont",0
_64	.db	"Arial",0
_65	.db	"14",0
_68	.db	"",0
_71	.db	"",0
_72	.db	"",0
_84	.db	"",0
_87	.db	"Select a location in which to save the image",0
_89	.db	"/",0
_90	.db	"\",0
_91	.db	"/",0
_92	.db	" x ",0
_93	.db	".bmp",0
_94	.db	" ",0
_97	.db	"",0
_99	.db	"Blitz window could not be found! Program Terminating!",0
_100	.db	"FindWindowWrapper",0
_101	.db	"SetWindowPosWrapper",0
_102	.db	"GetWindowXWrapper",0
_103	.db	"GetWindowYWrapper",0
_104	.db	"GetWindowWidthWrapper",0
_105	.db	"GetWindowHeightWrapper",0
_121	.db	"0",0
_122	.db	"",0
_138	.db	"ChooseFontWrapper",0
_141	.db	"",0
_146	.db	"",0
_147	.db	"",0
_148	.db	"BrowseForFolderWrapper",0
_150	.db	"",0
_151	.db	"MsgBoxWrapper",0
_152	.db	"ShowWindowWrapper",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

