
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	sub	esp,12
	mov	eax,_15
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_16
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	_fapptitle
	mov	[_vsw],800
	mov	[_vsh],600
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	esi,[_vsh]
	mov	[esp+4],esi
	mov	eax,[_vsw]
	mov	[esp],eax
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	[esp],2138367
	call	_fsetclscolor
	jmp	_18
_17
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1101004800
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	eax,[ebp-4]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1135869952
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_19
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1135869952
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
_19
	call	_fcls
	sub	esp,8
	mov	eax,[ebp-8]
	add	eax,1
	mov	[esp],eax
	mov	[esp+4],4
	call	__bbMod
	mov	[ebp-8],eax
	mov	ebx,[ebp-8]
	mov	[ebp-12],ebx
	cmp	[ebp-12],0
	jz	_21
	cmp	[ebp-12],1
	jz	_22
	cmp	[ebp-12],2
	jz	_23
	cmp	[ebp-12],3
	jz	_24
	jmp	_20
_21
	mov	[ebp-16],16777215
	mov	[ebp-20],0
	jmp	_20
_22
	mov	[ebp-16],13684944
	mov	[ebp-20],0
	jmp	_20
_23
	mov	[ebp-16],16777152
	mov	[ebp-20],128
	jmp	_20
_24
	mov	[ebp-16],10551200
	mov	[ebp-20],32768
	jmp	_20
_20
	sub	esp,44
	mov	[esp],2
	mov	[esp+4],6
	call	_frand
	mov	[esp+24],eax
	mov	ebx,[ebp-20]
	mov	[esp+28],ebx
	mov	esi,[ebp-16]
	mov	[esp+32],esi
	mov	ebx,[ebp-4]
	mov	[esp+20],ebx
	sub	esp,8
	mov	[esp],30
	mov	[esp+4],200
	call	_frand
	mov	[esp+16],eax
	mov	[esp+12],150
	mov	[esp+8],300
	mov	[esp+4],300
	mov	[esp],400
	call	_fsbubble
	sub	esp,4
	mov	[esp],16711680
	call	_fsetcolor
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_25
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],260
	mov	[esp],400
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_26
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],275
	mov	[esp],400
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_27
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],290
	mov	[esp],400
	call	_ftext
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fsetcolor
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_28
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],335
	mov	[esp],400
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_29
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],350
	mov	[esp],400
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitmouse
_18
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	cmp	eax,0
	jz	_17
_3
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsbubble
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	cmp	[ebp+44],2
	jge	_30
	mov	[ebp+44],2
_30
	mov	ebx,[ebp+44]
	shl	ebx,byte 1
	mov	[ebp-4],ebx
	mov	ebx,[ebp+28]
	sar	ebx,byte 1
	mov	[ebp-8],ebx
	mov	ebx,[ebp+32]
	sar	ebx,byte 1
	mov	[ebp-12],ebx
	sub	esp,4
	mov	eax,[ebp+48]
	mov	[esp],eax
	call	_fsetcolor
	sub	esp,20
	mov	ebx,[ebp+32]
	add	ebx,[ebp-4]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp+28]
	add	esi,[ebp-4]
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	sub	ebx,[ebp-12]
	sub	ebx,[ebp+44]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	sub	eax,[ebp-8]
	sub	eax,[ebp+44]
	mov	[esp],eax
	call	_foval
	sub	esp,4
	mov	eax,[ebp+40]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1084227584
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-8]
	sub	ebx,5
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp+40]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1084227584
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-12]
	sub	ebx,5
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	eax,[ebp+40]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1084227584
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-8]
	sub	ebx,5
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	eax,[ebp+40]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1084227584
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-12]
	sub	ebx,5
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	eax,[ebp+40]
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-8]
	add	ebx,[ebp+36]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	eax,[ebp+40]
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-12]
	add	ebx,[ebp+36]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,20
	mov	ebx,[ebp-36]
	mov	[esp+12],ebx
	mov	esi,[ebp-4]
	mov	[esp+16],esi
	mov	esi,[ebp-32]
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_ffatline
	sub	esp,20
	mov	ebx,[ebp-36]
	mov	[esp+12],ebx
	mov	esi,[ebp-4]
	mov	[esp+16],esi
	mov	esi,[ebp-32]
	mov	[esp+8],esi
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_ffatline
	sub	esp,4
	mov	eax,[ebp+52]
	mov	[esp],eax
	call	_fsetcolor
	sub	esp,24
	mov	ebx,[ebp-24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	esi,[ebp-28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+20],esi
	mov	esi,[ebp-36]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffilltriangle
	sub	esp,20
	mov	ebx,[ebp+32]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	sub	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	sub	eax,[ebp-8]
	mov	[esp],eax
	call	_foval
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 36
	.align	16
_fsetcolor
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,[ebp+20]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp+20]
	mov	edi,255
	and	esi,edi
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	shr	eax,byte 16
	mov	esi,255
	and	eax,esi
	mov	[esp],eax
	call	_fcolor
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsetclscolor
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,[ebp+20]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp+20]
	mov	edi,255
	and	esi,edi
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	shr	eax,byte 16
	mov	esi,255
	and	eax,esi
	mov	[esp],eax
	call	_fclscolor
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_frgb2hex
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	shl	eax,byte 16
	mov	ebx,[ebp+24]
	shl	ebx,byte 8
	or	eax,ebx
	mov	ebx,[ebp+28]
	or	eax,ebx
	jmp	_8_leave
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_freticle
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	ebx,[ebp-16]
	mov	[ebp-4],ebx
	mov	ebx,[ebp-20]
	mov	[ebp-8],ebx
	mov	ebx,[ebp-24]
	mov	[ebp-12],ebx
	sub	esp,4
	mov	eax,[ebp+28]
	mov	[esp],eax
	call	_fsetcolor
	sub	esp,16
	mov	ebx,[ebp+20]
	add	ebx,5
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	sub	eax,5
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp+20]
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	add	esi,5
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	sub	esi,5
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcolor
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_ffilltriangle
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	eax,[ebp+28]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_31
	mov	ebx,[ebp+28]
	mov	[ebp-16],ebx
	mov	ebx,[ebp+32]
	mov	[ebp-20],ebx
	mov	ebx,[ebp+20]
	mov	[ebp+28],ebx
	mov	ebx,[ebp+24]
	mov	[ebp+32],ebx
	mov	ebx,[ebp-16]
	mov	[ebp+20],ebx
	mov	ebx,[ebp-20]
	mov	[ebp+24],ebx
_31
	mov	eax,[ebp+36]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_32
	mov	ebx,[ebp+36]
	mov	[ebp-16],ebx
	mov	ebx,[ebp+40]
	mov	[ebp-20],ebx
	mov	ebx,[ebp+20]
	mov	[ebp+36],ebx
	mov	ebx,[ebp+24]
	mov	[ebp+40],ebx
	mov	ebx,[ebp-16]
	mov	[ebp+20],ebx
	mov	ebx,[ebp-20]
	mov	[ebp+24],ebx
_32
	mov	eax,[ebp+36]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_33
	mov	ebx,[ebp+36]
	mov	[ebp-16],ebx
	mov	ebx,[ebp+40]
	mov	[ebp-20],ebx
	mov	ebx,[ebp+28]
	mov	[ebp+36],ebx
	mov	ebx,[ebp+32]
	mov	[ebp+40],ebx
	mov	ebx,[ebp-16]
	mov	[ebp+28],ebx
	mov	ebx,[ebp-20]
	mov	[ebp+32],ebx
_33
	mov	eax,[ebp+20]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	and	eax,eax
	jz	_34
	mov	ebx,[ebp+40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+36]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
_34
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	mov	eax,[ebp-24]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	and	eax,eax
	jz	_35
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	[ebp-16],0
	jmp	_36
_37
	sub	esp,16
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-8]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp+24]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-4]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp+24]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
_36
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_37
_11
_35
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	mov	eax,[ebp-24]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	and	eax,eax
	jz	_38
	mov	ebx,[ebp+40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+36]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+28]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],0
	jmp	_39
_40
	sub	esp,16
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-12]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp+32]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-4]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-20]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
_39
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_40
_12
_38
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	16
_ffatline
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,56
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	cmp	[ebp+36],1
	jge	_41
	mov	eax,0
	jmp	_13_leave
_41
	cmp	[ebp+36],1
	jnz	_42
	sub	esp,16
	mov	ebx,[ebp+28]
	mov	[esp+8],ebx
	mov	esi,[ebp+32]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fline
	mov	eax,0
	jmp	_13_leave
_42
	mov	ebx,[ebp+36]
	sar	ebx,byte 1
	mov	[ebp-4],ebx
	sub	esp,4
	mov	eax,[ebp+28]
	sub	eax,[ebp+20]
	mov	[esp],eax
	call	__bbAbs
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+32]
	sub	eax,[ebp+24]
	mov	[esp],eax
	call	__bbAbs
	mov	[ebp-12],eax
	mov	ebx,[ebp-12]
	cmp	[ebp-8],ebx
	jl	_43
	mov	ebx,[ebp-8]
	add	ebx,1
	mov	[ebp-16],ebx
	mov	ebx,[ebp-12]
	shl	ebx,byte 1
	sub	ebx,[ebp-8]
	mov	[ebp-20],ebx
	mov	ebx,[ebp-12]
	shl	ebx,byte 1
	mov	[ebp-24],ebx
	mov	ebx,[ebp-12]
	sub	ebx,[ebp-8]
	shl	ebx,byte 1
	mov	[ebp-28],ebx
	mov	[ebp-32],1
	mov	[ebp-36],1
	mov	[ebp-40],0
	mov	[ebp-44],1
	jmp	_44
_43
	mov	ebx,[ebp-12]
	add	ebx,1
	mov	[ebp-16],ebx
	mov	ebx,[ebp-8]
	shl	ebx,byte 1
	sub	ebx,[ebp-12]
	mov	[ebp-20],ebx
	mov	ebx,[ebp-8]
	shl	ebx,byte 1
	mov	[ebp-24],ebx
	mov	ebx,[ebp-8]
	sub	ebx,[ebp-12]
	shl	ebx,byte 1
	mov	[ebp-28],ebx
	mov	[ebp-32],0
	mov	[ebp-36],1
	mov	[ebp-40],1
	mov	[ebp-44],1
_44
	mov	ebx,[ebp+28]
	cmp	[ebp+20],ebx
	jle	_45
	mov	ebx,[ebp-32]
	neg	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp-36]
	neg	ebx
	mov	[ebp-36],ebx
_45
	mov	ebx,[ebp+32]
	cmp	[ebp+24],ebx
	jle	_46
	mov	ebx,[ebp-40]
	neg	ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp-44]
	neg	ebx
	mov	[ebp-44],ebx
_46
	mov	ebx,[ebp+20]
	sub	ebx,[ebp-4]
	mov	[ebp-48],ebx
	mov	ebx,[ebp+24]
	sub	ebx,[ebp-4]
	mov	[ebp-52],ebx
	mov	[ebp-56],1
	jmp	_47
_48
	sub	esp,20
	mov	ebx,[ebp+36]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp+36]
	mov	[esp+8],esi
	mov	ebx,[ebp-52]
	mov	[esp+4],ebx
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_foval
	cmp	[ebp-20],0
	jge	_49
	mov	ebx,[ebp-24]
	add	[ebp-20],ebx
	mov	ebx,[ebp-32]
	add	[ebp-48],ebx
	mov	ebx,[ebp-40]
	add	[ebp-52],ebx
	jmp	_50
_49
	mov	ebx,[ebp-28]
	add	[ebp-20],ebx
	mov	ebx,[ebp-36]
	add	[ebp-48],ebx
	mov	ebx,[ebp-44]
	add	[ebp-52],ebx
_50
	add	[ebp-56],1
_47
	mov	ebx,[ebp-16]
	cmp	[ebp-56],ebx
	jle	_48
_14
	mov	eax,0
	jmp	_13_leave
_13_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
_15	.db	"Cartoon Speech Bubbles",0
_16	.db	"",0
	.align	4
_vsw	.dd	0
	.align	4
_vsh	.dd	0
_25	.db	"Speech bubbles can be",0
_26	.db	"small or large,",0
_27	.db	"and can be just about any color!",0
_28	.db	"R-click for more bubbles",0
_29	.db	"L-click to exit",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

