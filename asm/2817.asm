
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	sub	esp,12
	mov	eax,_8
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_9
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-4],100
	sub	esp,4
	call	_fgraphicsbuffer
	mov	[esp],eax
	call	_flockbuffer
	call	_fmillisecs
	mov	[ebp-8],eax
	mov	[ebp-12],1
	jmp	_10
_11
	sub	esp,24
	mov	[esp+16],16769056
	mov	[esp+20],0
	mov	[esp+12],290
	mov	[esp+8],390
	mov	[esp+4],300
	mov	[esp],400
	call	_fellipse
	add	[ebp-12],1
_10
	mov	ebx,[ebp-4]
	cmp	[ebp-12],ebx
	jle	_11
_3
	call	_fmillisecs
	sub	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	call	_fmillisecs
	mov	[ebp-8],eax
	mov	[ebp-12],1
	jmp	_12
_13
	sub	esp,20
	mov	[esp+12],580
	mov	[esp+16],1
	mov	[esp+8],780
	mov	[esp+4],10
	mov	[esp],10
	call	_foval
	add	[ebp-12],1
_12
	mov	ebx,[ebp-4]
	cmp	[ebp-12],ebx
	jle	_13
_4
	call	_fmillisecs
	sub	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	sub	esp,40
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_14
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_15
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],5
	mov	[esp],5
	call	_ftext
	sub	esp,40
	mov	eax,[ebp-20]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_16
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_17
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],20
	mov	[esp],5
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitmouse
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fellipse
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,12
	mov	ebx,[ebp+36]
	mov	esi,65280
	and	ebx,esi
	shr	ebx,byte 8
	mov	[esp+4],ebx
	mov	esi,[ebp+36]
	mov	edi,255
	and	esi,edi
	mov	[esp+8],esi
	mov	eax,[ebp+36]
	mov	esi,16711680
	and	eax,esi
	shr	eax,byte 16
	mov	[esp],eax
	call	_fcolor
	mov	ebx,[ebp+28]
	imul	ebx,[ebp+28]
	shl	ebx,byte 1
	mov	[ebp-24],ebx
	mov	ebx,[ebp+32]
	imul	ebx,[ebp+32]
	shl	ebx,byte 1
	mov	[ebp-28],ebx
	mov	ebx,[ebp+28]
	mov	[ebp-4],ebx
	mov	[ebp-8],0
	mov	ebx,1
	mov	esi,[ebp+28]
	shl	esi,byte 1
	sub	ebx,esi
	mov	esi,[ebp+32]
	imul	esi,[ebp+32]
	imul	esi,ebx
	mov	[ebp-12],esi
	mov	ebx,[ebp+28]
	imul	ebx,[ebp+28]
	mov	[ebp-16],ebx
	mov	[ebp-20],0
	mov	ebx,[ebp-28]
	imul	ebx,[ebp+28]
	mov	[ebp-32],ebx
	mov	[ebp-36],0
	jmp	_19
_18
	cmp	[ebp+40],0
	jz	_20
	sub	esp,16
	mov	ebx,[ebp+20]
	add	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	add	esi,[ebp-8]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	add	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	sub	eax,[ebp-4]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp+20]
	add	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	sub	esi,[ebp-8]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	sub	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	sub	eax,[ebp-4]
	mov	[esp],eax
	call	_fline
	jmp	_21
_20
	sub	esp,16
	mov	ebx,[ebp+36]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	add	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	add	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,16
	mov	ebx,[ebp+36]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	add	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	sub	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,16
	mov	ebx,[ebp+36]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	sub	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	sub	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,16
	mov	ebx,[ebp+36]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	sub	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	add	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritepixelfast
_21
	add	[ebp-8],1
	mov	ebx,[ebp-24]
	add	[ebp-36],ebx
	mov	ebx,[ebp-16]
	add	[ebp-20],ebx
	mov	ebx,[ebp-24]
	add	[ebp-16],ebx
	mov	ebx,[ebp-20]
	shl	ebx,byte 1
	add	ebx,[ebp-12]
	cmp	ebx,0
	jle	_22
	sub	[ebp-4],1
	mov	ebx,[ebp-28]
	sub	[ebp-32],ebx
	mov	ebx,[ebp-12]
	add	[ebp-20],ebx
	mov	ebx,[ebp-28]
	add	[ebp-12],ebx
_22
_19
	mov	ebx,[ebp-36]
	cmp	[ebp-32],ebx
	jge	_18
_6
	mov	[ebp-4],0
	mov	ebx,[ebp+32]
	mov	[ebp-8],ebx
	mov	ebx,[ebp+32]
	imul	ebx,[ebp+32]
	mov	[ebp-12],ebx
	mov	ebx,1
	mov	esi,[ebp+32]
	shl	esi,byte 1
	sub	ebx,esi
	mov	esi,[ebp+28]
	imul	esi,[ebp+28]
	imul	esi,ebx
	mov	[ebp-16],esi
	mov	[ebp-20],0
	mov	[ebp-32],0
	mov	ebx,[ebp-24]
	imul	ebx,[ebp+32]
	mov	[ebp-36],ebx
	jmp	_24
_23
	cmp	[ebp+40],0
	jz	_25
	sub	esp,16
	mov	ebx,[ebp+20]
	add	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	add	esi,[ebp-8]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	add	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	sub	eax,[ebp-4]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp+20]
	add	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	sub	esi,[ebp-8]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	sub	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	sub	eax,[ebp-4]
	mov	[esp],eax
	call	_fline
	jmp	_26
_25
	sub	esp,16
	mov	ebx,[ebp+36]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	add	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	add	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,16
	mov	ebx,[ebp+36]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	add	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	sub	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,16
	mov	ebx,[ebp+36]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	sub	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	sub	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,16
	mov	ebx,[ebp+36]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	sub	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	add	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritepixelfast
_26
	add	[ebp-4],1
	mov	ebx,[ebp-28]
	add	[ebp-32],ebx
	mov	ebx,[ebp-12]
	add	[ebp-20],ebx
	mov	ebx,[ebp-28]
	add	[ebp-12],ebx
	mov	ebx,[ebp-20]
	shl	ebx,byte 1
	add	ebx,[ebp-16]
	cmp	ebx,0
	jle	_27
	sub	[ebp-8],1
	mov	ebx,[ebp-24]
	sub	[ebp-36],ebx
	mov	ebx,[ebp-16]
	add	[ebp-20],ebx
	mov	ebx,[ebp-24]
	add	[ebp-16],ebx
_27
_24
	mov	ebx,[ebp-36]
	cmp	[ebp-32],ebx
	jle	_23
_7
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
_8	.db	"Bresenham Ellipse",0
_9	.db	"",0
_14	.db	"Avg/Ellipse: ",0
_15	.db	"ms",0
_16	.db	"   Avg/Oval: ",0
_17	.db	"ms",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

