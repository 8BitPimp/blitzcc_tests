
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreatevector
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,4
	mov	[esp],13
	call	_fcreatebank
	mov	[ebp-4],eax
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp+20]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	[esp+4],4
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	[esp+4],8
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	[esp+4],12
	mov	[esp+8],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokebyte
	mov	eax,[ebp-4]
	jmp	_3_leave
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_ftvector
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,4
	mov	[esp],13
	call	_fcreatebank
	mov	[ebp-4],eax
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp+20]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	[esp+4],4
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	[esp+4],8
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	[esp+4],12
	mov	[esp+8],1
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokebyte
	mov	eax,[ebp-4]
	jmp	_4_leave
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_ffreevector
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	cmp	[ebp+20],0
	jnz	_35
	mov	eax,0
	jmp	_5_leave
	jmp	_36
_35
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
	mov	eax,1
	jmp	_5_leave
_36
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fcopyvector
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-4],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	or	eax,ebx
	and	eax,eax
	jz	_37
	mov	eax,0
	jmp	_6_leave
	jmp	_38
_37
	sub	esp,20
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],8
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],8
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_39
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_39
	mov	eax,1
	jmp	_6_leave
_38
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsetvector
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	cmp	[ebp+20],0
	jnz	_40
	mov	eax,0
	jmp	_7_leave
	jmp	_41
_40
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	[esp+4],4
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	[esp+4],8
	mov	esi,[ebp+32]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	mov	eax,1
	jmp	_7_leave
_41
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fsetvectorx
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsetvectory
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	[esp+4],4
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_9_leave
_9_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsetvectorz
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	[esp+4],8
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fvectorx
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekfloat
	jmp	_11_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_11_leave
_11_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fvectory
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekfloat
	jmp	_12_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_12_leave
_12_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fvectorz
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],8
	call	_fpeekfloat
	jmp	_13_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_13_leave
_13_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fvectorax
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	sub	esp,28
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],1073741824
	call	__bbFPow
	mov	[ebp-4],eax
	sub	esp,8
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	[esp+4],1073741824
	mov	eax,ebx
	call	__bbFPow
	mov	ebx,eax
	mov	eax,[ebp-4]
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],4
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-4]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fatan2
	mov	ebx,1119092736
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	jmp	_14_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_14_leave
_14_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fvectoray
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,16
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekfloat
	fchs
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-4]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fatan2
	jmp	_15_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_15_leave
_15_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fvectormagnitude
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	cmp	[ebp+20],0
	jnz	_42
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_16_leave
	jmp	_43
_42
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],1073741824
	call	__bbFPow
	mov	[ebp-4],eax
	sub	esp,8
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],4
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	[esp+4],1073741824
	mov	eax,ebx
	call	__bbFPow
	mov	ebx,eax
	mov	eax,[ebp-4]
	faddp	st(1)
	mov	[ebp-4],eax
	sub	esp,8
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	[esp+4],1073741824
	mov	eax,ebx
	call	__bbFPow
	mov	ebx,eax
	mov	eax,[ebp-4]
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	jmp	_16_leave
_43
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_16_leave
_16_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_faddvectors
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-4],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	or	eax,ebx
	and	eax,eax
	jz	_44
	mov	eax,0
	jmp	_17_leave
	jmp	_45
_44
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekfloat
	mov	[ebp-4],eax
	sub	esp,8
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-4]
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekfloat
	mov	[ebp-4],eax
	sub	esp,8
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	[esp+4],4
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-4]
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],8
	call	_fpeekfloat
	mov	[ebp-4],eax
	sub	esp,8
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-4]
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],8
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_46
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_46
	mov	eax,1
	jmp	_17_leave
_45
	mov	eax,0
	jmp	_17_leave
_17_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsubtractvectors
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-4],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	or	eax,ebx
	and	eax,eax
	jz	_47
	mov	eax,0
	jmp	_18_leave
	jmp	_48
_47
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekfloat
	mov	[ebp-4],eax
	sub	esp,8
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-4]
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekfloat
	mov	[ebp-4],eax
	sub	esp,8
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	[esp+4],4
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-4]
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],8
	call	_fpeekfloat
	mov	[ebp-4],eax
	sub	esp,8
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-4]
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],8
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_49
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_49
	mov	eax,1
	jmp	_18_leave
_48
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_ftaddvectors
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_50
	mov	eax,0
	jmp	_19_leave
	jmp	_51
_50
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	[esp+4],4
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	[esp+4],8
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	[esp+4],0
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftvector
	mov	ebx,eax
	mov	[ebp-4],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_52
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_52
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_53
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_53
	mov	eax,[ebp-4]
	jmp	_19_leave
_51
	mov	eax,0
	jmp	_19_leave
_19_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_ftsubtractvectors
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_54
	mov	eax,0
	jmp	_20_leave
	jmp	_55
_54
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	[esp+4],4
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	[esp+4],8
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	[esp+4],0
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftvector
	mov	ebx,eax
	mov	[ebp-4],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_56
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_56
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_57
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_57
	mov	eax,[ebp-4]
	jmp	_20_leave
_55
	mov	eax,0
	jmp	_20_leave
_20_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fscalevector
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	cmp	[ebp+20],0
	jnz	_58
	mov	eax,0
	jmp	_21_leave
	jmp	_59
_58
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekfloat
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekfloat
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],8
	call	_fpeekfloat
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],8
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokefloat
	mov	eax,1
	jmp	_21_leave
_59
	mov	eax,0
	jmp	_21_leave
_21_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_funitvector
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	cmp	[ebp+20],0
	jnz	_60
	mov	eax,0
	jmp	_22_leave
	jmp	_61
_60
	sub	esp,8
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvectormagnitude
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fscalevector
	mov	eax,1
	jmp	_22_leave
_61
	mov	eax,0
	jmp	_22_leave
_22_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_ftscalevector
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+20],0
	jnz	_62
	mov	eax,0
	jmp	_23_leave
	jmp	_63
_62
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekfloat
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftvector
	mov	ebx,eax
	mov	[ebp-4],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp+28],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_64
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_64
	mov	eax,[ebp-4]
	jmp	_23_leave
_63
	mov	eax,0
	jmp	_23_leave
_23_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_ftunitvector
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	cmp	[ebp+20],0
	jnz	_65
	mov	eax,0
	jmp	_24_leave
	jmp	_66
_65
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvectormagnitude
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekfloat
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[ebp-12],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftvector
	mov	ebx,eax
	mov	[ebp-8],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-12],eax
	cmp	[ebp+24],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	and	eax,eax
	jz	_67
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_67
	mov	eax,[ebp-8]
	jmp	_24_leave
_66
	mov	eax,0
	jmp	_24_leave
_24_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdotproduct
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_68
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_25_leave
	jmp	_69
_68
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],4
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	[esp+4],4
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	faddp	st(1)
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	[esp+4],8
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp+28],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_70
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_70
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp+28],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_71
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_71
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_25_leave
_69
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_25_leave
_25_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fcrossproduct
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_72
	mov	eax,0
	jmp	_26_leave
	jmp	_73
_72
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],8
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	[esp+4],8
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	[esp+4],4
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	[esp+4],4
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	edi,[ebp+24]
	mov	[esp],edi
	mov	[esp+4],0
	mov	eax,edi
	call	_fpeekfloat
	mov	edi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],4
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	[esp+4],8
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	[esp+4],8
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	edi,[ebp+24]
	mov	[esp],edi
	mov	[esp+4],4
	mov	eax,edi
	call	_fpeekfloat
	mov	edi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcreatevector
	mov	ebx,eax
	mov	[ebp-4],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_74
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_74
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_75
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_75
	mov	eax,[ebp-4]
	jmp	_26_leave
_73
	mov	eax,0
	jmp	_26_leave
_26_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_ftcrossproduct
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_76
	mov	eax,0
	jmp	_27_leave
	jmp	_77
_76
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],8
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	[esp+4],8
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	[esp+4],4
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	[esp+4],4
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	edi,[ebp+24]
	mov	[esp],edi
	mov	[esp+4],0
	mov	eax,edi
	call	_fpeekfloat
	mov	edi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],4
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	[esp+4],8
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	mov	[ebp-8],eax
	sub	esp,8
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	[esp+4],8
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,8
	mov	edi,[ebp+24]
	mov	[esp],edi
	mov	[esp+4],4
	mov	eax,edi
	call	_fpeekfloat
	mov	edi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftvector
	mov	ebx,eax
	mov	[ebp-4],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp+28],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_78
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_78
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp+28],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_79
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_79
	mov	eax,[ebp-4]
	jmp	_27_leave
_77
	mov	eax,0
	jmp	_27_leave
_27_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fdotanglebetween
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_80
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_28_leave
	jmp	_81
_80
	sub	esp,16
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdotproduct
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvectormagnitude
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	eax,esi
	call	_fvectormagnitude
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_facos
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_82
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_82
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_83
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_83
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_28_leave
_81
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_28_leave
_28_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fcrossanglebetween
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_84
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_29_leave
	jmp	_85
_84
	sub	esp,20
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ftcrossproduct
	mov	[esp],eax
	call	_fvectormagnitude
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvectormagnitude
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	eax,esi
	call	_fvectormagnitude
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fasin
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_86
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_86
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_87
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_87
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_29_leave
_85
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_29_leave
_29_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fscalarprojection
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_88
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_30_leave
	jmp	_89
_88
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdotproduct
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvectormagnitude
	mov	ebx,eax
	mov	eax,[ebp-8]
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_90
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_90
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_91
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_91
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_30_leave
_89
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_30_leave
_30_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fvectorprojection
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-12],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	or	eax,ebx
	and	eax,eax
	jz	_92
	mov	eax,0
	jmp	_31_leave
	jmp	_93
_92
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdotproduct
	mov	[ebp-12],eax
	sub	esp,12
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	_fdotproduct
	mov	esi,eax
	mov	eax,[ebp-12]
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekfloat
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[ebp-12],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcreatevector
	mov	ebx,eax
	mov	[ebp-8],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_94
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_94
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_95
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_95
	mov	eax,[ebp-8]
	jmp	_31_leave
_93
	mov	eax,0
	jmp	_31_leave
_31_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_ftvectorprojection
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-12],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	or	eax,ebx
	and	eax,eax
	jz	_96
	mov	eax,0
	jmp	_32_leave
	jmp	_97
_96
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdotproduct
	mov	[ebp-12],eax
	sub	esp,12
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	_fdotproduct
	mov	esi,eax
	mov	eax,[ebp-12]
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekfloat
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[ebp-12],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftvector
	mov	ebx,eax
	mov	[ebp-8],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_98
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_98
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_99
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_99
	mov	eax,[ebp-8]
	jmp	_32_leave
_97
	mov	eax,0
	jmp	_32_leave
_32_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_forthogonalprojection
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-12],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	or	eax,ebx
	and	eax,eax
	jz	_100
	mov	eax,0
	jmp	_33_leave
	jmp	_101
_100
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdotproduct
	mov	[ebp-12],eax
	sub	esp,12
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	_fdotproduct
	mov	esi,eax
	mov	eax,[ebp-12]
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcreatevector
	mov	[ebp-8],eax
	sub	esp,36
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekfloat
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[ebp-12],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftvector
	mov	ebx,eax
	mov	[esp+4],ebx
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ftsubtractvectors
	mov	[esp+4],eax
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcopyvector
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_102
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_102
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_103
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_103
	mov	eax,[ebp-8]
	jmp	_33_leave
_101
	mov	eax,0
	jmp	_33_leave
_33_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_ftorthogonalprojection
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-12],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	or	eax,ebx
	and	eax,eax
	jz	_104
	mov	eax,0
	jmp	_34_leave
	jmp	_105
_104
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdotproduct
	mov	[ebp-12],eax
	sub	esp,12
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	_fdotproduct
	mov	esi,eax
	mov	eax,[ebp-12]
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,28
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekfloat
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],8
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[ebp-12],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftvector
	mov	ebx,eax
	mov	[esp+4],ebx
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ftsubtractvectors
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_106
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
_106
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekbyte
	cmp	eax,1
	jnz	_107
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreebank
_107
	mov	eax,[ebp-8]
	jmp	_34_leave
_105
	mov	eax,0
	jmp	_34_leave
_34_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

