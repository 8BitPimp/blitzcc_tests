
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,56
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	[esp+4],300
	mov	[esp],400
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[ebp-4],eax
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],0
	call	_fcreatelight
	mov	[ebp-8],eax
	sub	esp,16
	mov	[esp+8],1109393408
	mov	[esp+12],1113325568
	mov	[esp+4],1109393408
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcameraclscolor
	sub	esp,8
	mov	[esp],_vfilter
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_23
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	mov	eax,_adrctrs
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_adrctrs
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adrctrs
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_arealfiles
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_arealfiles
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_arealfiles
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_atxtfiles
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_atxtfiles
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atxtfiles
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adrv
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_adrv
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adrv
	mov	[esp],eax
	call	__bbDimArray
	call	_fcount_drives
	jmp	_25
_24
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	call	_fmousey
	cmp	eax,47
	setg	al
	movzx	eax,al
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,60
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,144
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,170
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	and	eax,eax
	jz	_26
	sub	esp,12
	mov	[esp+4],80
	mov	[esp+8],110
	mov	[esp],64
	call	_fcolor
	sub	esp,20
	mov	[esp+12],12
	mov	[esp+16],1
	mov	[esp+8],27
	mov	[esp+4],47
	mov	[esp],144
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_27
	mov	[ebp-12],0
	mov	[ebp-16],0
	mov	[ebp-20],0
	mov	[ebp-24],1
	jmp	_29
_28
	mov	ebx,[ebp-24]
	mov	[ebp-20],ebx
	sub	esp,16
	mov	eax,_30
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	ebx,[ebp-24]
	add	ebx,1
	mov	[esp+8],ebx
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_vactivepath
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	mov	[ebp-24],ebx
_29
	mov	eax,[ebp-20]
	cmp	[ebp-24],eax
	setg	al
	movzx	eax,al
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_vactivepath
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	[ebp-24],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	and	eax,eax
	jnz	_28
_4
	cmp	[ebp-20],1
	jnz	_31
	mov	[ebp-20],0
_31
	sub	esp,20
	mov	eax,_vactivepath
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	mov	[esp],_vactivepath
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[_vdrive]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_vactivepath
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fread_dir
	sub	esp,8
	mov	[esp],_vselectedfile
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_32
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrStore
_33
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	cmp	eax,0
	jnz	_33
_5
_27
_26
	sub	esp,12
	mov	[esp+4],78
	mov	[esp+8],112
	mov	[esp],56
	call	_fcolor
	sub	esp,20
	mov	[esp+12],270
	mov	[esp+16],1
	mov	[esp+8],40
	mov	[esp+4],30
	mov	[esp],0
	call	_frect
	sub	esp,20
	mov	[esp+12],29
	mov	[esp+16],1
	mov	[esp+8],400
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,16
	mov	[esp+8],400
	mov	[esp+12],45
	mov	[esp+4],45
	mov	[esp],41
	call	_fline
	sub	esp,16
	mov	[esp+8],400
	mov	[esp+12],60
	mov	[esp+4],60
	mov	[esp],41
	call	_fline
	sub	esp,16
	mov	[esp+8],384
	mov	[esp+12],300
	mov	[esp+4],46
	mov	[esp],384
	call	_fline
	sub	esp,16
	mov	[esp+8],180
	mov	[esp+12],300
	mov	[esp+4],46
	mov	[esp],180
	call	_fline
	sub	esp,16
	mov	[esp+8],196
	mov	[esp+12],300
	mov	[esp+4],46
	mov	[esp],196
	call	_fline
	sub	esp,12
	mov	[esp+4],50
	mov	[esp+8],75
	mov	[esp],50
	call	_fcolor
	sub	esp,20
	mov	[esp+12],15
	mov	[esp+16],1
	mov	[esp+8],359
	mov	[esp+4],30
	mov	[esp],41
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],100
	mov	[esp],50
	call	_fcolor
	sub	esp,16
	mov	[esp+8],40
	mov	[esp+12],300
	mov	[esp+4],0
	mov	[esp],40
	call	_fline
	sub	esp,16
	mov	[esp+8],400
	mov	[esp+12],29
	mov	[esp+4],29
	mov	[esp],0
	call	_fline
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_34
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],2
	mov	[esp],1
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_35
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],13
	mov	[esp],1
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_36
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],7
	mov	[esp],50
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_37
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],48
	mov	[esp],50
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_38
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],32
	mov	[esp],50
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],80
	mov	[esp],255
	call	_fcolor
	sub	esp,40
	mov	eax,[_vdrive]
	shl	eax,byte 2
	add	eax,[_adrv]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_39
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,8
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_vactivepath
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	[esp+4],60
	mov	eax,ebx
	call	_fleft
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],32
	mov	[esp],80
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_40
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],48
	mov	[esp],145
	call	_ftext
	sub	esp,32
	mov	eax,_vselectedfile
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],29
	call	_fleft
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],48
	mov	[esp],233
	call	_ftext
	sub	esp,32
	mov	eax,_41
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_vfilter
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],7
	mov	[esp],200
	call	_ftext
	call	_fmousey
	cmp	eax,29
	jge	_42
	call	_fmousex
	cmp	eax,50
	setg	al
	movzx	eax,al
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,100
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	and	eax,eax
	jz	_43
	sub	esp,12
	mov	[esp+4],170
	mov	[esp+8],170
	mov	[esp],50
	call	_fcolor
	sub	esp,20
	mov	[esp+12],23
	mov	[esp+16],0
	mov	[esp+8],51
	mov	[esp+4],3
	mov	[esp],47
	call	_frect
_43
	call	_fmousex
	cmp	eax,113
	setg	al
	movzx	eax,al
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,145
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	and	eax,eax
	jz	_44
	sub	esp,12
	mov	[esp+4],170
	mov	[esp+8],170
	mov	[esp],50
	call	_fcolor
	sub	esp,20
	mov	[esp+12],23
	mov	[esp+16],0
	mov	[esp+8],36
	mov	[esp+4],3
	mov	[esp],113
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_45
	call	_fend
_45
_44
_42
	mov	[ebp-28],0
	jmp	_46
_47
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],100
	mov	[esp],50
	call	_fcolor
	sub	esp,32
	mov	eax,[ebp-28]
	shl	eax,byte 2
	add	eax,[_adrv]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_48
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	ebx,[ebp-28]
	imul	ebx,20
	add	ebx,35
	mov	[esp+4],ebx
	mov	[esp],16
	call	_ftext
	call	_fmousey
	mov	ebx,[ebp-28]
	imul	ebx,20
	add	ebx,30
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,29
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	ebx,eax
	and	ebx,ebx
	jz	_49
	call	_fmousey
	mov	ebx,[_vdrvcnt]
	imul	ebx,20
	add	ebx,30
	cmp	eax,ebx
	setl	al
	movzx	eax,al
	mov	[ebp-48],eax
	sub	esp,4
	mov	[esp],1
	mov	eax,ebx
	call	_fmousedown
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	and	eax,eax
	jz	_50
	call	_fmousey
	sub	eax,30
	mov	ecx,20
	cdq
	idiv	ecx
	mov	[_vdrive],eax
	sub	esp,8
	mov	eax,[_vdrive]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_51
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fread_dir
	sub	esp,8
	mov	[esp],_vactivepath
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_52
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	[esp],_vselectedfile
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_53
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-12],0
	mov	[ebp-16],0
_50
	call	_fmousey
	mov	ebx,[_vdrvcnt]
	imul	ebx,20
	add	ebx,30
	cmp	eax,ebx
	jle	_54
	jmp	_l_2skip
_54
	sub	esp,12
	mov	[esp+4],170
	mov	[esp+8],170
	mov	[esp],50
	call	_fcolor
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],0
	mov	[esp+8],38
	mov	ebx,[ebp-28]
	imul	ebx,20
	add	ebx,31
	mov	[esp+4],ebx
	mov	[esp],1
	call	_frect
	cmp	[ebp-28],0
	jnz	_55
	jmp	_l_2skip
_55
	sub	esp,12
	mov	[esp+4],78
	mov	[esp+8],112
	mov	[esp],56
	call	_fcolor
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],0
	mov	[esp+8],38
	mov	ebx,[ebp-28]
	sub	ebx,1
	imul	ebx,20
	add	ebx,31
	mov	[esp+4],ebx
	mov	[esp],1
	call	_frect
_l_2skip
_49
	add	[ebp-28],1
_46
	mov	ebx,[_vdrvcnt]
	sub	ebx,1
	cmp	[ebp-28],ebx
	jle	_47
_6
	cmp	[_vdirectories],19
	jle	_56
	call	_fflushmouse
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_57
	call	_fmousex
	cmp	eax,179
	setg	al
	movzx	eax,al
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,197
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	mov	ebx,[_vmouseinuse]
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,esi
	call	_fmousex
	mov	esi,eax
	mov	eax,[ebp-52]
	cmp	esi,210
	mov	eax,esi
	setl	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-48]
	and	ebx,esi
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,esi
	call	_fmousex
	mov	esi,eax
	mov	eax,[ebp-52]
	cmp	esi,160
	mov	eax,esi
	setg	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-48]
	and	ebx,esi
	or	eax,ebx
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,61
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,299
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	and	eax,eax
	jz	_58
	call	_fmousey
	sub	eax,6
	mov	[ebp-12],eax
	cmp	[_vdscr],0
	jle	_59
	mov	ebx,1130561536
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vdscr]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	sub	esp,4
	mov	eax,[ebp-12]
	sub	eax,56
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vdrd1],eax
	mov	ebx,[_vdrd1]
	add	ebx,19
	mov	[_vdrd2],ebx
_59
	mov	[_vmouseinuse],1
_58
	jmp	_60
_57
	mov	[_vmouseinuse],0
_60
	sub	esp,12
	mov	[esp+4],234
	mov	[esp+8],99
	mov	[esp],255
	call	_fcolor
	cmp	[ebp-12],62
	jge	_61
	mov	[ebp-12],62
_61
	cmp	[ebp-12],284
	jle	_62
	mov	[ebp-12],284
_62
	sub	esp,20
	mov	[esp+12],15
	mov	[esp+16],1
	mov	[esp+8],13
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp],182
	call	_frect
_56
	cmp	[_vtxtcount],19
	jle	_63
	call	_fflushmouse
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_64
	call	_fmousex
	cmp	eax,383
	setg	al
	movzx	eax,al
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,400
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	mov	ebx,[_vmouseinuse]
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,esi
	call	_fmousex
	mov	esi,eax
	mov	eax,[ebp-52]
	cmp	esi,400
	mov	eax,esi
	setl	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-48]
	and	ebx,esi
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,esi
	call	_fmousex
	mov	esi,eax
	mov	eax,[ebp-52]
	cmp	esi,360
	mov	eax,esi
	setg	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-48]
	and	ebx,esi
	or	eax,ebx
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,61
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,292
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	and	eax,eax
	jz	_65
	call	_fmousey
	sub	eax,6
	mov	[ebp-16],eax
	cmp	[_vtscr],0
	jle	_66
	mov	ebx,1130561536
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vtscr]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	sub	esp,4
	mov	eax,[ebp-16]
	sub	eax,56
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vtrd1],eax
	mov	ebx,[_vtrd1]
	add	ebx,19
	mov	[_vtrd2],ebx
_66
	mov	[_vmouseinuse],1
_65
	jmp	_67
_64
	mov	[_vmouseinuse],0
_67
	sub	esp,12
	mov	[esp+4],234
	mov	[esp+8],99
	mov	[esp],255
	call	_fcolor
	cmp	[ebp-16],62
	jge	_68
	mov	[ebp-16],62
_68
	cmp	[ebp-16],284
	jle	_69
	mov	[ebp-16],284
_69
	sub	esp,20
	mov	[esp+12],15
	mov	[esp+16],1
	mov	[esp+8],13
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp],386
	call	_frect
_63
	call	_fmousey
	cmp	eax,60
	setg	al
	movzx	eax,al
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,50
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,180
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	mov	[ebp-48],eax
	cmp	[_vmouseinuse],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	and	eax,eax
	jz	_70
	sub	esp,12
	mov	[esp+4],80
	mov	[esp+8],110
	mov	[esp],64
	call	_fcolor
	sub	esp,20
	call	_fmousey
	sub	eax,46
	mov	ecx,12
	cdq
	idiv	ecx
	imul	eax,12
	add	eax,49
	mov	[esp+4],eax
	mov	[esp+12],11
	mov	[esp+16],1
	mov	[esp+8],130
	mov	[esp],49
	mov	eax,ebx
	call	_frect
	mov	ebx,eax
	call	_fflushmouse
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_71
	sub	esp,4
	call	_fmousey
	sub	eax,46
	mov	ecx,12
	cdq
	idiv	ecx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	mov	ebx,[_vdrd1]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	ebx,[_vdirectories]
	cmp	[ebp-40],ebx
	jge	_72
	sub	esp,28
	mov	eax,_vactivepath
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_adrctrs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_73
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp],_vactivepath
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[_vdrive]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_vactivepath
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fread_dir
	mov	[ebp-12],0
	mov	[ebp-16],0
	sub	esp,8
	mov	[esp],_vselectedfile
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_74
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrStore
_72
_75
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	cmp	eax,0
	jnz	_75
_7
_71
_70
	call	_fmousey
	cmp	eax,60
	setg	al
	movzx	eax,al
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,202
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	mov	[ebp-48],eax
	mov	[ebp-52],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	ebx,384
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	mov	[ebp-48],eax
	cmp	[_vmouseinuse],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-48]
	and	eax,ebx
	and	eax,eax
	jz	_76
	sub	esp,12
	mov	[esp+4],80
	mov	[esp+8],110
	mov	[esp],64
	call	_fcolor
	sub	esp,20
	call	_fmousey
	sub	eax,46
	mov	ecx,12
	cdq
	idiv	ecx
	imul	eax,12
	add	eax,49
	mov	[esp+4],eax
	mov	[esp+12],11
	mov	[esp+16],1
	mov	[esp+8],182
	mov	[esp],201
	mov	eax,ebx
	call	_frect
	mov	ebx,eax
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_77
	sub	esp,4
	call	_fmousey
	sub	eax,46
	mov	ecx,12
	cdq
	idiv	ecx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	mov	ebx,[_vtrd1]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	mov	ebx,[_vtxtcount]
	cmp	[ebp-44],ebx
	jge	_78
	sub	esp,8
	mov	[esp],_vselectedfile
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,[ebp-44]
	shl	ebx,byte 2
	add	ebx,[_atxtfiles]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrStore
_78
_79
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	cmp	eax,0
	jnz	_79
_8
_77
_76
	call	_fdisplay
	sub	esp,4
	mov	[esp],1
	call	_fflip
_25
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_24
_3
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fread_dir
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,44
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[_vdirectories],0
	mov	[ebp-4],0
	mov	[_vdrd1],0
	mov	[_vtrd1],0
	sub	esp,24
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_adrv]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_80
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_freaddir
	mov	[ebp-8],eax
_81
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fnextfile
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_83
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_82
	jmp	_l_9readfiles
_82
	add	[ebp-4],1
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_85
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-36],eax
	mov	[ebp-40],eax
	sub	esp,8
	mov	[ebp-44],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp],ebx
	mov	[ebp-44],eax
	sub	esp,4
	mov	esi,_86
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-44]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrCompare
	mov	ebx,eax
	mov	eax,[ebp-40]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	and	eax,ebx
	and	eax,eax
	jz	_84
	sub	esp,32
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_adrv]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_88
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_ffiletype
	cmp	eax,2
	jnz	_87
	add	[_vdirectories],1
_87
_84
	jmp	_81
_10
_l_9readfiles
	sub	esp,4
	mov	eax,_adrctrs
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vdirectories]
	mov	esi,_adrctrs
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adrctrs
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_arealfiles
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-4]
	sub	ebx,[_vdirectories]
	mov	esi,_arealfiles
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_arealfiles
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,24
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_adrv]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_89
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_freaddir
	mov	[ebp-16],eax
	mov	[ebp-20],0
	mov	[ebp-24],0
	jmp	_90
_91
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fnextfile
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,32
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_adrv]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_93
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_ffiletype
	cmp	eax,2
	jnz	_92
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_95
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-36],eax
	mov	[ebp-40],eax
	sub	esp,8
	mov	[ebp-44],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp],ebx
	mov	[ebp-44],eax
	sub	esp,4
	mov	esi,_96
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-44]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrCompare
	mov	ebx,eax
	mov	eax,[ebp-40]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	and	eax,ebx
	and	eax,eax
	jz	_94
	sub	esp,8
	mov	eax,[ebp-20]
	shl	eax,byte 2
	add	eax,[_adrctrs]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	add	[ebp-20],1
_94
	jmp	_97
_92
	sub	esp,8
	mov	eax,[ebp-24]
	sub	eax,[ebp-20]
	shl	eax,byte 2
	add	eax,[_arealfiles]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
_97
	add	[ebp-24],1
_90
	mov	ebx,[ebp-4]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_91
_11
	mov	[ebp-24],1
	jmp	_98
_99
	sub	esp,16
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,[_adrctrs]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fupper
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	sub	ebx,1
	shl	ebx,byte 2
	add	ebx,[_adrctrs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jge	_100
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	sub	ebx,1
	shl	ebx,byte 2
	add	ebx,[_adrctrs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp-24]
	sub	eax,1
	shl	eax,byte 2
	add	eax,[_adrctrs]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	shl	ebx,byte 2
	add	ebx,[_adrctrs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,[_adrctrs]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,[ebp-24]
	sub	ebx,1
	mov	[ebp-32],ebx
	jmp	_101
_102
	sub	esp,12
	mov	eax,[ebp-32]
	shl	eax,byte 2
	add	eax,[_adrctrs]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	sub	ebx,1
	shl	ebx,byte 2
	add	ebx,[_adrctrs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jge	_103
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	sub	ebx,1
	shl	ebx,byte 2
	add	ebx,[_adrctrs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp-32]
	sub	eax,1
	shl	eax,byte 2
	add	eax,[_adrctrs]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_adrctrs]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp-32]
	shl	eax,byte 2
	add	eax,[_adrctrs]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_104
_103
	mov	[ebp-32],1
_104
	add	[ebp-32],-1
_101
	cmp	[ebp-32],1
	jge	_102
_13
_100
	add	[ebp-24],1
_98
	mov	ebx,[_vdirectories]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_99
_12
	mov	[ebp-20],0
	mov	[ebp-24],0
	jmp	_105
_106
	sub	esp,20
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,[_arealfiles]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],4
	call	_fright
	mov	[esp+4],eax
	mov	[esp],_vcheck
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	mov	[esp],_vcheck
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_vcheck
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flower
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	mov	eax,_vcheck
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_vfilter
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_107
	add	[ebp-20],1
_107
	add	[ebp-24],1
_105
	mov	ebx,[ebp-4]
	sub	ebx,[_vdirectories]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_106
_14
	mov	ebx,[ebp-20]
	mov	[_vtxtcount],ebx
	sub	esp,4
	mov	eax,_atxtfiles
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vtxtcount]
	add	ebx,21
	mov	esi,_atxtfiles
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atxtfiles
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-20],0
	mov	[ebp-24],0
	jmp	_108
_109
	sub	esp,20
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,[_arealfiles]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],4
	call	_fright
	mov	[esp+4],eax
	mov	[esp],_vcheck
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	mov	[esp],_vcheck
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_vcheck
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flower
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	mov	eax,_vcheck
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_vfilter
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_110
	sub	esp,8
	mov	eax,[ebp-20]
	shl	eax,byte 2
	add	eax,[_atxtfiles]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	shl	ebx,byte 2
	add	ebx,[_arealfiles]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	add	[ebp-20],1
_110
	add	[ebp-24],1
_108
	mov	ebx,[ebp-4]
	sub	ebx,[_vdirectories]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_109
_15
	mov	[ebp-24],1
	jmp	_111
_112
	sub	esp,16
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,[_atxtfiles]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fupper
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	sub	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxtfiles]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jge	_113
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	sub	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxtfiles]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp-24]
	sub	eax,1
	shl	eax,byte 2
	add	eax,[_atxtfiles]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	shl	ebx,byte 2
	add	ebx,[_atxtfiles]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,[_atxtfiles]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,[ebp-24]
	sub	ebx,1
	mov	[ebp-32],ebx
	jmp	_114
_115
	sub	esp,12
	mov	eax,[ebp-32]
	shl	eax,byte 2
	add	eax,[_atxtfiles]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	sub	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxtfiles]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jge	_116
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	sub	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxtfiles]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp-32]
	sub	eax,1
	shl	eax,byte 2
	add	eax,[_atxtfiles]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_atxtfiles]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp-32]
	shl	eax,byte 2
	add	eax,[_atxtfiles]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_117
_116
	mov	[ebp-32],1
_117
	add	[ebp-32],-1
_114
	cmp	[ebp-32],1
	jge	_115
_17
_113
	add	[ebp-24],1
_111
	mov	ebx,[_vtxtcount]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_112
_16
	cmp	[_vdirectories],20
	jge	_118
	mov	ebx,[_vdirectories]
	sub	ebx,1
	mov	[_vdrd2],ebx
	jmp	_119
_118
	mov	[_vdrd2],19
	mov	ebx,[_vdirectories]
	sub	ebx,20
	mov	[_vdscr],ebx
_119
	cmp	[_vtxtcount],20
	jge	_120
	mov	ebx,[_vtxtcount]
	sub	ebx,1
	mov	[_vtrd2],ebx
	jmp	_121
_120
	mov	[_vtrd2],19
	mov	ebx,[_vtxtcount]
	sub	ebx,20
	mov	[_vtscr],ebx
_121
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,[ebp-28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdisplay
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],220
	mov	[esp],70
	call	_fcolor
	mov	ebx,[_vdrd1]
	mov	[ebp-4],ebx
	jmp	_122
_123
	sub	esp,32
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_adrctrs]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],25
	call	_fleft
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	ebx,[ebp-4]
	sub	ebx,[_vdrd1]
	imul	ebx,12
	add	ebx,60
	mov	[esp+4],ebx
	mov	[esp],50
	call	_ftext
	add	[ebp-4],1
_122
	mov	ebx,[_vdrd2]
	cmp	[ebp-4],ebx
	jle	_123
_19
	sub	esp,12
	mov	[esp+4],180
	mov	[esp+8],230
	mov	[esp],180
	call	_fcolor
	mov	ebx,[_vtrd1]
	mov	[ebp-4],ebx
	jmp	_124
_125
	sub	esp,32
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_atxtfiles]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],35
	call	_fleft
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	ebx,[ebp-4]
	sub	ebx,[_vtrd1]
	imul	ebx,12
	add	ebx,60
	mov	[esp+4],ebx
	mov	[esp],205
	call	_ftext
	add	[ebp-4],1
_124
	mov	ebx,[_vtrd2]
	cmp	[ebp-4],ebx
	jle	_125
_20
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcount_drives
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[_vdrvcnt],0
	sub	esp,4
	mov	eax,_adrv
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,14
	mov	esi,_adrv
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adrv
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	mov	eax,_126
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fasc
	mov	[ebp-4],eax
	jmp	_127
_128
	sub	esp,16
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fchr
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_129
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_freaddir
	mov	[ebp-8],eax
	cmp	[ebp-8],0
	jz	_130
	sub	esp,8
	mov	eax,[_vdrvcnt]
	shl	eax,byte 2
	add	eax,[_adrv]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
	add	[_vdrvcnt],1
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fclosedir
_130
	add	[ebp-4],1
_127
	sub	esp,8
	mov	eax,_131
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fasc
	cmp	[ebp-4],eax
	jle	_128
_22
	mov	eax,0
	jmp	_21_leave
_21_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
_vfilter	.dd	0
_23	.db	".txt",0
	.align	4
_adrctrs	.dd	0
	.dd	3
	.dd	1
	.dd	0
	.align	4
_arealfiles	.dd	0
	.dd	3
	.dd	1
	.dd	0
	.align	4
_atxtfiles	.dd	0
	.dd	3
	.dd	1
	.dd	0
	.align	4
_adrv	.dd	0
	.dd	3
	.dd	1
	.dd	0
	.align	4
_vselectedfile	.dd	0
	.align	4
_vdirectories	.dd	0
	.align	4
_vdrvcnt	.dd	0
	.align	4
_vcheck	.dd	0
	.align	4
_vtxtcount	.dd	0
	.align	4
_vdrd1	.dd	0
	.align	4
_vdrd2	.dd	0
	.align	4
_vtrd1	.dd	0
	.align	4
_vtrd2	.dd	0
	.align	4
_vdscr	.dd	0
	.align	4
_vtscr	.dd	0
	.align	4
_vdrive	.dd	0
	.align	4
_vmouseinuse	.dd	0
	.align	4
_vactivepath	.dd	0
_30	.db	"\",0
_32	.db	"",0
_34	.db	"Select",0
_35	.db	"Drive",0
_36	.db	"Open file     Back",0
_37	.db	"Directories                    File:",0
_38	.db	"Path: ",0
_39	.db	":\",0
_40	.db	"|^Up|",0
_41	.db	"Filter: ",0
_48	.db	":",0
_51	.db	"",0
_52	.db	"",0
_53	.db	"",0
_73	.db	"\",0
_74	.db	"",0
_80	.db	":\",0
_83	.db	"",0
_85	.db	"..",0
_86	.db	".",0
_88	.db	":\",0
_89	.db	":\",0
_93	.db	":\",0
_95	.db	"..",0
_96	.db	".",0
_126	.db	"C",0
_129	.db	":\",0
_131	.db	"K",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

