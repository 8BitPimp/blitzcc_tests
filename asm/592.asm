
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],1
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,_atex
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_atex
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atex
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_atexfile
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_atexfile
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atexfile
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_asurf_tex
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_asurf_tex
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_asurf_tex
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_19
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],0
	call	_floadmesh
	mov	[ebp-12],eax
	sub	esp,12
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fgettextures
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcountsurfaces
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,_abrush
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-16]
	mov	esi,_abrush
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_abrush
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-20],1
	jmp	_20
_21
	sub	esp,32
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_23
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_asurf_tex]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,12
	mov	eax,[ebp-20]
	shl	eax,byte 2
	add	eax,[_asurf_tex]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_25
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_24
	sub	esp,16
	mov	[esp+8],1065353216
	mov	[esp+12],1065353216
	mov	[esp+4],1
	sub	esp,4
	mov	eax,[ebp-20]
	shl	eax,byte 2
	add	eax,[_asurf_tex]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadbrush
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_abrush]
	mov	[ebx],eax
	sub	esp,16
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[esp],eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_abrush]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fpaintsurface
_24
	add	[ebp-20],1
_20
	mov	ebx,[ebp-16]
	cmp	[ebp-20],ebx
	jle	_21
_3
	sub	esp,8
	mov	eax,_26
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	call	_fwaitkey
	sub	esp,16
	mov	[esp+8],1101004800
	mov	[esp+12],-1035468800
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fmoveentity
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpointentity
	jmp	_28
_27
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_29
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
_28
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_27
_4
	call	_fend
	ret
_2_leave
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fextract_path
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp+20]
	mov	[ebp-4],ebx
	sub	[ebp+20],4
	mov	[ebp-8],100
	jmp	_31
_30
	sub	esp,8
	mov	eax,[_vbababa]
	mov	[esp],eax
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	call	_fpeekbyte
	mov	[ebp-8],eax
	sub	[ebp+20],1
_31
	cmp	[ebp-8],0
	setnz	al
	movzx	eax,al
	mov	[ebp-20],eax
	cmp	[ebp-8],34
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	mov	[ebp-20],eax
	cmp	[ebp+20],0
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	and	eax,eax
	jnz	_30
_6
	add	[ebp+20],2
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_32
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,[ebp+20]
	mov	[ebp-16],ebx
	jmp	_33
_34
	sub	esp,28
	mov	eax,[_vbababa]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fpeekbyte
	mov	[esp],eax
	call	_fchr
	mov	[esp+4],eax
	mov	[ebp-20],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrStore
	add	[ebp-16],1
_33
	mov	ebx,[ebp-4]
	cmp	[ebp-16],ebx
	jle	_34
_7
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_5_leave
	sub	esp,4
	mov	eax,_35
	mov	[esp],eax
	call	__bbStrConst
	jmp	_5_leave
_5_leave
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fgettextures
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,112
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcopymesh
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fhideentity
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],17
	call	_fentityfx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1
	mov	[esp+4],16
	mov	[esp],16
	call	_fcreatetexture
	mov	[ebp-8],eax
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],16
	mov	[esp+16],1
	mov	[esp+8],16
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fentitytexture
	sub	esp,20
	mov	[esp+12],1148846080
	mov	[esp+16],0
	mov	[esp+8],1148846080
	mov	[esp+4],1182400512
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,4
	mov	eax,_atex
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1000
	mov	esi,_atex
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atex
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_atexfile
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1000
	mov	esi,_atexfile
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atexfile
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_ffilesize
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcreatebank
	mov	[_vbababa],eax
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fopenfile
	mov	[ebp-16],eax
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp-12]
	mov	[esp+12],esi
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[_vbababa]
	mov	[esp],eax
	call	_freadbytes
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fclosefile
	mov	[ebp-20],0
	mov	[ebp-24],0
	jmp	_36
_37
	sub	esp,32
	mov	eax,[_vbababa]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fpeekbyte
	mov	[esp],eax
	call	_fchr
	mov	[esp],eax
	call	_fupper
	mov	[esp+4],eax
	mov	[ebp-112],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	eax,4
	jle	_38
	sub	esp,20
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],4
	call	_fright
	mov	[esp+4],eax
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_38
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_41
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_40
	sub	esp,12
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_42
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_40
	sub	esp,12
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_43
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_40
	sub	esp,12
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_44
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_40
	sub	esp,12
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,_45
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_40
	jmp	_39
_40
	sub	esp,8
	mov	eax,[ebp-20]
	shl	eax,byte 2
	add	eax,[_atexfile]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fextract_path
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	add	[ebp-20],1
	jmp	_39
_39
	add	[ebp-24],1
_36
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_37
_9
	cmp	[ebp-20],0
	jle	_46
	mov	[ebp-24],0
	jmp	_47
_48
	sub	esp,16
	mov	[esp+8],1065353216
	mov	[esp+12],1065353216
	mov	[esp+4],1
	sub	esp,4
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,[_atexfile]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadbrush
	mov	ebx,[ebp-24]
	shl	ebx,byte 2
	add	ebx,[_atex]
	mov	[ebx],eax
	add	[ebp-24],1
_47
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_48
_11
_46
	call	_fgraphicswidth
	mov	[ebp-36],eax
	call	_fgraphicsheight
	mov	[ebp-40],eax
	mov	ebx,[ebp-36]
	sar	ebx,byte 1
	mov	[ebp-44],ebx
	mov	ebx,[ebp-40]
	sar	ebx,byte 1
	mov	[ebp-48],ebx
	mov	[ebp-52],100
	cmp	[ebp-36],100
	jge	_49
	mov	ebx,[ebp-36]
	mov	[ebp-52],ebx
_49
	mov	[ebp-56],100
	cmp	[ebp-40],100
	jge	_50
	mov	ebx,[ebp-40]
	mov	[ebp-56],ebx
_50
	mov	ebx,[ebp-52]
	sar	ebx,byte 1
	mov	[ebp-52],ebx
	mov	ebx,[ebp-56]
	sar	ebx,byte 1
	mov	[ebp-56],ebx
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcountsurfaces
	mov	[ebp-60],eax
	sub	esp,4
	mov	eax,_asurf_tex
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-60]
	mov	esi,_asurf_tex
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_asurf_tex
	mov	[esp],eax
	call	__bbDimArray
	cmp	[ebp-60],0
	jle	_51
	mov	[ebp-24],1
	jmp	_52
_53
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-64],eax
	sub	esp,4
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fcountvertices
	mov	[ebp-68],eax
	sub	esp,36
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	mov	ebx,1084227584
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	mov	esi,-1069547520
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	mov	ebx,-1069547520
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-72],eax
	sub	esp,36
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	mov	ebx,1084227584
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	mov	esi,-1069547520
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	mov	ebx,1077936128
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-76],eax
	sub	esp,36
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	mov	ebx,1084227584
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	mov	ebx,-1069547520
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-80],eax
	sub	esp,36
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	mov	ebx,1084227584
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	mov	ebx,1077936128
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-84],eax
	sub	esp,16
	mov	ebx,[ebp-76]
	mov	[esp+8],ebx
	mov	esi,[ebp-80]
	mov	[esp+12],esi
	mov	esi,[ebp-72]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_faddtriangle
	mov	[ebp-88],eax
	sub	esp,16
	mov	ebx,[ebp-84]
	mov	[esp+8],ebx
	mov	esi,[ebp-80]
	mov	[esp+12],esi
	mov	esi,[ebp-76]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_faddtriangle
	mov	[ebp-88],eax
	sub	esp,24
	mov	[esp+16],1065353216
	mov	[esp+20],0
	mov	[esp+12],0
	mov	[esp+8],0
	mov	esi,[ebp-72]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fvertextexcoords
	sub	esp,24
	mov	[esp+16],1065353216
	mov	[esp+20],0
	mov	[esp+12],0
	mov	[esp+8],1065353216
	mov	esi,[ebp-76]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fvertextexcoords
	sub	esp,24
	mov	[esp+16],1065353216
	mov	[esp+20],0
	mov	[esp+12],1065353216
	mov	[esp+8],0
	mov	esi,[ebp-80]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fvertextexcoords
	sub	esp,24
	mov	[esp+16],1065353216
	mov	[esp+20],0
	mov	[esp+12],1065353216
	mov	[esp+8],1065353216
	mov	esi,[ebp-84]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fvertextexcoords
	sub	esp,24
	mov	[esp+16],1132396544
	mov	[esp+20],1065353216
	mov	[esp+12],1132396544
	mov	[esp+8],1132396544
	mov	esi,[ebp-72]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fvertexcolor
	sub	esp,24
	mov	[esp+16],1132396544
	mov	[esp+20],1065353216
	mov	[esp+12],1132396544
	mov	[esp+8],1132396544
	mov	esi,[ebp-76]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fvertexcolor
	sub	esp,24
	mov	[esp+16],1132396544
	mov	[esp+20],1065353216
	mov	[esp+12],1132396544
	mov	[esp+8],1132396544
	mov	esi,[ebp-80]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fvertexcolor
	sub	esp,24
	mov	[esp+16],1132396544
	mov	[esp+20],1065353216
	mov	[esp+12],1132396544
	mov	[esp+8],1132396544
	mov	esi,[ebp-84]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fvertexcolor
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fupdatenormals
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	mov	[ebp-92],0
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	ebx,[ebp-48]
	sub	ebx,[ebp-56]
	mov	[ebp-96],ebx
	jmp	_54
_55
	mov	ebx,[ebp-44]
	sub	ebx,[ebp-52]
	mov	[ebp-100],ebx
	jmp	_56
_57
	sub	esp,12
	mov	ebx,[ebp-96]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-100]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	ebx,268435455
	and	eax,ebx
	add	[ebp-92],eax
	add	[ebp-100],1
_56
	mov	ebx,[ebp-44]
	add	ebx,[ebp-52]
	cmp	[ebp-100],ebx
	jle	_57
_14
	add	[ebp-96],1
_54
	mov	ebx,[ebp-48]
	add	ebx,[ebp-56]
	cmp	[ebp-96],ebx
	jle	_55
_13
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	[ebp-104],0
	jmp	_58
_59
	mov	ebx,[ebp-104]
	shl	ebx,byte 2
	add	ebx,[_atex]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_60
	sub	esp,8
	mov	eax,[ebp-64]
	mov	[esp],eax
	mov	ebx,[ebp-104]
	shl	ebx,byte 2
	add	ebx,[_atex]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fpaintsurface
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	mov	[ebp-108],0
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	ebx,[ebp-48]
	sub	ebx,[ebp-56]
	mov	[ebp-96],ebx
	jmp	_61
_62
	mov	ebx,[ebp-44]
	sub	ebx,[ebp-52]
	mov	[ebp-100],ebx
	jmp	_63
_64
	sub	esp,12
	mov	ebx,[ebp-96]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-100]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	ebx,268435455
	and	eax,ebx
	add	[ebp-108],eax
	add	[ebp-100],1
_63
	mov	ebx,[ebp-44]
	add	ebx,[ebp-52]
	cmp	[ebp-100],ebx
	jle	_64
_17
	add	[ebp-96],1
_61
	mov	ebx,[ebp-48]
	add	ebx,[ebp-56]
	cmp	[ebp-96],ebx
	jle	_62
_16
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	ebx,[ebp-108]
	cmp	[ebp-92],ebx
	jnz	_65
	sub	esp,8
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,[_asurf_tex]
	mov	[esp],eax
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,[ebp-104]
	shl	ebx,byte 2
	add	ebx,[_atexfile]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_15
_65
_60
	add	[ebp-104],1
_58
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-104],ebx
	jle	_59
_15
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fclearsurface
	add	[ebp-24],1
_52
	mov	ebx,[ebp-60]
	cmp	[ebp-24],ebx
	jle	_53
_12
_51
	cmp	[ebp-20],0
	jle	_66
	mov	[ebp-24],0
	jmp	_67
_68
	mov	ebx,[ebp-24]
	shl	ebx,byte 2
	add	ebx,[_atex]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_69
	sub	esp,4
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,[_atex]
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreebrush
_69
	add	[ebp-24],1
_67
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_68
_18
_66
	sub	esp,4
	mov	eax,_atexfile
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_atexfile
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atexfile
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_atex
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_atex
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atex
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,[_vbababa]
	mov	[esp],eax
	call	_ffreebank
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreetexture
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fshowentity
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[ebp-112],eax
	sub	esp,4
	mov	esi,[ebp-32]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-112]
	mov	[ebp-112],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-112]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	4
_atex	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_atexfile	.dd	0
	.dd	3
	.dd	1
	.dd	0
	.align	4
_asurf_tex	.dd	0
	.dd	3
	.dd	1
	.dd	0
	.align	4
_vbababa	.dd	0
_19	.db	"PINE01.X",0
	.align	4
_abrush	.dd	0
	.dd	1
	.dd	1
	.dd	0
_22	.db	"Surface ",0
_23	.db	" is using ",0
_25	.db	"",0
_26	.db	"Press Space to continue",0
_29	.db	"I hope it looks ok! Press ESC to exit",0
_32	.db	"",0
_35	.db	"",0
_41	.db	".JPG",0
_42	.db	".BMP",0
_43	.db	".TGA",0
_44	.db	".PNG",0
_45	.db	".PCX",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

