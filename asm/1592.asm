
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fhidepointer
	mov	[_vcontroller_port],0
	mov	[_vdebug],0
	sub	esp,8
	mov	[esp],_vinfo
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_19
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	mov	eax,_aj
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,3
	mov	esi,_aj
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aj
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-4],0
	jmp	_20
_21
	sub	esp,8
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_aj]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_tjoypad
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	add	[ebp-4],1
_20
	cmp	[ebp-4],3
	jle	_21
_3
	sub	esp,4
	mov	eax,_ajoy_label
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,8
	mov	esi,_ajoy_label
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ajoy_label
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_ajoy_label]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_22
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,1
	shl	eax,byte 2
	add	eax,[_ajoy_label]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_23
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,2
	shl	eax,byte 2
	add	eax,[_ajoy_label]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_24
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,3
	shl	eax,byte 2
	add	eax,[_ajoy_label]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_25
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	shl	eax,byte 2
	add	eax,[_ajoy_label]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_26
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,5
	shl	eax,byte 2
	add	eax,[_ajoy_label]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_27
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,6
	shl	eax,byte 2
	add	eax,[_ajoy_label]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_28
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,7
	shl	eax,byte 2
	add	eax,[_ajoy_label]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_29
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	shl	eax,byte 2
	add	eax,[_ajoy_label]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_30
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_32
_31
	call	_fcls
	call	_fdrawstuff
	call	_fcheckinput
	sub	esp,28
	mov	eax,[_vcontroller_port]
	shl	eax,byte 2
	add	eax,[_aj]
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fmapaxis
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+12],1112014848
	mov	[esp+16],1125515264
	mov	[esp+8],1065353216
	mov	[esp+4],-1082130432
	call	_ffitvaluetorange
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-8],eax
	sub	esp,28
	mov	eax,[_vcontroller_port]
	shl	eax,byte 2
	add	eax,[_aj]
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fmapaxis
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+12],1133084672
	mov	[esp+16],1136361472
	mov	[esp+8],1065353216
	mov	[esp+4],-1082130432
	call	_ffitvaluetorange
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-12],eax
	sub	esp,28
	mov	eax,[_vcontroller_port]
	shl	eax,byte 2
	add	eax,[_aj]
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fmapaxis
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+12],1132068864
	mov	[esp+16],1135542272
	mov	[esp+8],1065353216
	mov	[esp+4],-1082130432
	call	_ffitvaluetorange
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,28
	mov	eax,[_vcontroller_port]
	shl	eax,byte 2
	add	eax,[_aj]
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fmapaxis
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+12],1133084672
	mov	[esp+16],1136361472
	mov	[esp+8],1065353216
	mov	[esp+4],-1082130432
	call	_ffitvaluetorange
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],185
	call	_fcolor
	sub	esp,20
	mov	[esp+12],10
	mov	[esp+16],1
	mov	[esp+8],10
	mov	ebx,[ebp-12]
	sub	ebx,5
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	sub	eax,5
	mov	[esp],eax
	call	_foval
	sub	esp,20
	mov	[esp+12],10
	mov	[esp+16],1
	mov	[esp+8],10
	mov	ebx,[ebp-20]
	sub	ebx,5
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	sub	eax,5
	mov	[esp],eax
	call	_foval
	sub	esp,16
	call	_fmousex
	mov	[esp+8],eax
	mov	[ebp-24],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-24]
	add	ebx,5
	mov	[esp+12],ebx
	mov	[ebp-24],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-24]
	sub	ebx,5
	mov	[esp+4],ebx
	call	_fmousex
	mov	[esp],eax
	call	_fline
	sub	esp,16
	call	_fmousex
	add	eax,5
	mov	[esp+8],eax
	mov	[ebp-24],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+12],ebx
	mov	[ebp-24],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	_fmousex
	sub	eax,5
	mov	[esp],eax
	call	_fline
	sub	esp,4
	mov	[esp],1
	call	_fflip
_32
	sub	esp,4
	mov	[esp],16
	call	_fkeyhit
	cmp	eax,0
	jz	_31
_4
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_ffitvaluetorange
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_5_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_5_leave
_5_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fdrawstuff
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_35
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],10
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_36
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],25
	mov	[esp],10
	call	_ftext
	sub	esp,12
	mov	[esp+4],65
	mov	[esp+8],115
	mov	[esp],35
	call	_fcolor
	mov	ebx,[_vcontroller_port]
	mov	[ebp-4],ebx
	cmp	[ebp-4],0
	jz	_38
	cmp	[ebp-4],1
	jz	_39
	cmp	[ebp-4],2
	jz	_40
	cmp	[ebp-4],3
	jz	_41
	jmp	_37
_38
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],1
	mov	[esp+8],45
	mov	[esp+4],45
	mov	[esp],10
	call	_frect
	jmp	_37
_39
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],1
	mov	[esp+8],45
	mov	[esp+4],45
	mov	[esp],60
	call	_frect
	jmp	_37
_40
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],1
	mov	[esp+8],45
	mov	[esp+4],45
	mov	[esp],110
	call	_frect
	jmp	_37
_41
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],1
	mov	[esp+8],45
	mov	[esp+4],45
	mov	[esp],160
	call	_frect
	jmp	_37
_37
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],0
	mov	[esp+8],45
	mov	[esp+4],45
	mov	[esp],10
	call	_frect
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],0
	mov	[esp+8],45
	mov	[esp+4],45
	mov	[esp],60
	call	_frect
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],0
	mov	[esp+8],45
	mov	[esp+4],45
	mov	[esp],110
	call	_frect
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],0
	mov	[esp+8],45
	mov	[esp+4],45
	mov	[esp],160
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_42
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],53
	mov	[esp],27
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_43
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],53
	mov	[esp],77
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_44
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],53
	mov	[esp],127
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_45
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],53
	mov	[esp],177
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_46
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],45
	mov	[esp],220
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_47
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],60
	mov	[esp],220
	call	_ftext
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],185
	call	_fcolor
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],1
	mov	[esp+8],195
	mov	[esp+4],100
	mov	[esp],10
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],0
	mov	[esp+8],195
	mov	[esp+4],100
	mov	[esp],10
	call	_frect
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_48
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],105
	mov	[esp],25
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_49
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],105
	mov	[esp],220
	call	_ftext
	sub	esp,20
	mov	[esp+12],100
	mov	[esp+16],0
	mov	[esp+8],600
	mov	[esp+4],135
	mov	[esp],10
	call	_frect
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],128
	mov	[esp],128
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_50
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],140
	mov	[esp],15
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_51
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],155
	mov	[esp],15
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_52
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],180
	mov	[esp],15
	call	_ftext
	sub	esp,12
	mov	[esp+4],65
	mov	[esp+8],220
	mov	[esp],50
	call	_fcolor
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	cmp	ebx,-1
	jnz	_53
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
_53
	sub	esp,20
	mov	[esp+12],14
	mov	[esp+16],1
	mov	[esp+8],175
	mov	[esp+4],395
	mov	[esp],50
	call	_frect
	sub	esp,12
	mov	[esp+4],65
	mov	[esp+8],220
	mov	[esp],50
	call	_fcolor
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	cmp	ebx,-1
	jnz	_54
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
_54
	sub	esp,20
	mov	[esp+12],14
	mov	[esp+16],1
	mov	[esp+8],175
	mov	[esp+4],415
	mov	[esp],50
	call	_frect
	sub	esp,12
	mov	[esp+4],65
	mov	[esp+8],220
	mov	[esp],50
	call	_fcolor
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	cmp	ebx,-1
	jnz	_55
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
_55
	sub	esp,20
	mov	[esp+12],14
	mov	[esp+16],1
	mov	[esp+8],175
	mov	[esp+4],395
	mov	[esp],250
	call	_frect
	sub	esp,12
	mov	[esp+4],65
	mov	[esp+8],220
	mov	[esp],50
	call	_fcolor
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	cmp	ebx,-1
	jnz	_56
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
_56
	sub	esp,20
	mov	[esp+12],14
	mov	[esp+16],1
	mov	[esp+8],175
	mov	[esp+4],415
	mov	[esp],250
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_57
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],380
	mov	[esp],50
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_58
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],380
	mov	[esp],250
	call	_ftext
	sub	esp,32
	mov	eax,_59
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	shl	ebx,byte 2
	add	ebx,[_ajoy_label]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],396
	mov	[esp],60
	call	_ftext
	sub	esp,32
	mov	eax,_60
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	shl	ebx,byte 2
	add	ebx,[_ajoy_label]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],396
	mov	[esp],260
	call	_ftext
	sub	esp,32
	mov	eax,_61
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	shl	ebx,byte 2
	add	ebx,[_ajoy_label]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],416
	mov	[esp],60
	call	_ftext
	sub	esp,32
	mov	eax,_62
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 2
	add	ebx,[_ajoy_label]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],416
	mov	[esp],260
	call	_ftext
	sub	esp,20
	mov	[esp+12],100
	mov	[esp+16],0
	mov	[esp+8],100
	mov	[esp+4],275
	mov	[esp],50
	call	_frect
	sub	esp,20
	mov	[esp+12],100
	mov	[esp+16],0
	mov	[esp+8],100
	mov	[esp+4],275
	mov	[esp],250
	call	_frect
	sub	esp,12
	mov	[esp+4],64
	mov	[esp+8],64
	mov	[esp],64
	call	_fcolor
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],1
	mov	[esp+8],110
	mov	[esp+4],275
	mov	[esp],450
	call	_frect
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],1
	mov	[esp+8],110
	mov	[esp+4],300
	mov	[esp],450
	call	_frect
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],1
	mov	[esp+8],110
	mov	[esp+4],325
	mov	[esp],450
	call	_frect
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],1
	mov	[esp+8],110
	mov	[esp+4],350
	mov	[esp],450
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_63
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],277
	mov	[esp],453
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_64
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],302
	mov	[esp],453
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_65
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],327
	mov	[esp],453
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_66
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],352
	mov	[esp],453
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_vinfo
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	[esp+4],250
	mov	[esp],220
	call	_ftext
	cmp	[_vdebug],1
	jnz	_67
	sub	esp,12
	mov	[esp+4],16
	mov	[esp+8],16
	mov	[esp],16
	call	_fcolor
	sub	esp,20
	mov	[esp+12],217
	mov	[esp+16],1
	mov	[esp+8],640
	mov	[esp+4],25
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],48
	mov	[esp+8],48
	mov	[esp],48
	call	_fcolor
	sub	esp,20
	mov	[esp+12],200
	mov	[esp+16],1
	mov	[esp+8],300
	mov	[esp+4],30
	mov	[esp],40
	call	_frect
	sub	esp,12
	mov	[esp+4],64
	mov	[esp+8],64
	mov	[esp],64
	call	_fcolor
	mov	[ebp-8],50
	jmp	_68
_69
	sub	esp,20
	mov	[esp+12],15
	mov	[esp+16],1
	mov	[esp+8],150
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp],180
	call	_frect
	add	[ebp-8],20
_68
	cmp	[ebp-8],190
	jle	_69
_8
	sub	esp,20
	mov	[esp+12],200
	mov	[esp+16],0
	mov	[esp+8],300
	mov	[esp+4],30
	mov	[esp],40
	call	_frect
	sub	esp,20
	mov	[esp+12],202
	mov	[esp+16],0
	mov	[esp+8],302
	mov	[esp+4],29
	mov	[esp],39
	call	_frect
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],128
	mov	[esp],128
	call	_fcolor
	sub	esp,40
	mov	[esp+12],0
	mov	[esp+16],1125515264
	mov	[esp+8],1065353216
	mov	[esp+4],-1082130432
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffitvaluetorange
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+12],15
	mov	[esp+16],1
	mov	[esp+4],50
	mov	[esp],180
	call	_frect
	sub	esp,40
	mov	[esp+12],0
	mov	[esp+16],1125515264
	mov	[esp+8],1065353216
	mov	[esp+4],-1082130432
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffitvaluetorange
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+12],15
	mov	[esp+16],1
	mov	[esp+4],70
	mov	[esp],180
	call	_frect
	sub	esp,40
	mov	[esp+12],0
	mov	[esp+16],1125515264
	mov	[esp+8],1065353216
	mov	[esp+4],-1082130432
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffitvaluetorange
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+12],15
	mov	[esp+16],1
	mov	[esp+4],90
	mov	[esp],180
	call	_frect
	sub	esp,40
	mov	[esp+12],0
	mov	[esp+16],1125515264
	mov	[esp+8],1127481344
	mov	[esp+4],-1020002304
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoypitch
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffitvaluetorange
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+12],15
	mov	[esp+16],1
	mov	[esp+4],110
	mov	[esp],180
	call	_frect
	sub	esp,40
	mov	[esp+12],0
	mov	[esp+16],1125515264
	mov	[esp+8],1127481344
	mov	[esp+4],-1020002304
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyroll
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffitvaluetorange
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+12],15
	mov	[esp+16],1
	mov	[esp+4],130
	mov	[esp],180
	call	_frect
	sub	esp,40
	mov	[esp+12],0
	mov	[esp+16],1125515264
	mov	[esp+8],1127481344
	mov	[esp+4],-1020002304
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyyaw
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffitvaluetorange
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+12],15
	mov	[esp+16],1
	mov	[esp+4],150
	mov	[esp],180
	call	_frect
	sub	esp,40
	mov	[esp+12],0
	mov	[esp+16],1125515264
	mov	[esp+8],1065353216
	mov	[esp+4],-1082130432
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyu
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffitvaluetorange
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+12],15
	mov	[esp+16],1
	mov	[esp+4],170
	mov	[esp],180
	call	_frect
	sub	esp,40
	mov	[esp+12],0
	mov	[esp+16],1125515264
	mov	[esp+8],1065353216
	mov	[esp+4],-1082130432
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyv
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffitvaluetorange
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+12],15
	mov	[esp+16],1
	mov	[esp+4],190
	mov	[esp],180
	call	_frect
	sub	esp,12
	mov	[esp+4],160
	mov	[esp+8],160
	mov	[esp],160
	call	_fcolor
	sub	esp,32
	mov	eax,_70
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyx
	mov	ebx,eax
	mov	eax,[ebp-16]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],50
	mov	[esp],50
	call	_ftext
	sub	esp,32
	mov	eax,_71
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyy
	mov	ebx,eax
	mov	eax,[ebp-16]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],70
	mov	[esp],50
	call	_ftext
	sub	esp,32
	mov	eax,_72
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyz
	mov	ebx,eax
	mov	eax,[ebp-16]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],90
	mov	[esp],50
	call	_ftext
	sub	esp,32
	mov	eax,_73
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoypitch
	mov	ebx,eax
	mov	eax,[ebp-16]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],110
	mov	[esp],50
	call	_ftext
	sub	esp,32
	mov	eax,_74
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyroll
	mov	ebx,eax
	mov	eax,[ebp-16]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],130
	mov	[esp],50
	call	_ftext
	sub	esp,32
	mov	eax,_75
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyyaw
	mov	ebx,eax
	mov	eax,[ebp-16]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],150
	mov	[esp],50
	call	_ftext
	sub	esp,32
	mov	eax,_76
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyu
	mov	ebx,eax
	mov	eax,[ebp-16]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],170
	mov	[esp],50
	call	_ftext
	sub	esp,32
	mov	eax,_77
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyv
	mov	ebx,eax
	mov	eax,[ebp-16]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],190
	mov	[esp],50
	call	_ftext
_67
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcheckinput
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,32
	mov	[esp+24],175
	mov	[esp+28],14
	mov	[esp+20],395
	mov	[esp+16],50
	mov	[esp+12],4
	mov	[esp+8],4
	call	_fmousey
	sub	eax,2
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_78
	sub	esp,20
	mov	[esp+12],16
	mov	[esp+16],0
	mov	[esp+8],177
	mov	[esp+4],394
	mov	[esp],49
	call	_frect
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	call	_fmousezspeed
	add	ebx,eax
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	sub	esp,4
	mov	[esp],2
	call	_fmousehit
	and	eax,eax
	jz	_79
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	neg	ebx
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
_79
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,8
	jle	_80
	mov	ebx,0
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
_80
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,0
	jge	_81
	mov	ebx,8
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
_81
_78
	sub	esp,32
	mov	[esp+24],175
	mov	[esp+28],14
	mov	[esp+20],415
	mov	[esp+16],50
	mov	[esp+12],4
	mov	[esp+8],4
	call	_fmousey
	sub	eax,2
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_82
	sub	esp,20
	mov	[esp+12],16
	mov	[esp+16],0
	mov	[esp+8],177
	mov	[esp+4],414
	mov	[esp],49
	call	_frect
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	call	_fmousezspeed
	add	ebx,eax
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	sub	esp,4
	mov	[esp],2
	call	_fmousehit
	and	eax,eax
	jz	_83
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	neg	ebx
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
_83
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,8
	jle	_84
	mov	ebx,0
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
_84
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,0
	jge	_85
	mov	ebx,8
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
_85
_82
	sub	esp,32
	mov	[esp+24],175
	mov	[esp+28],14
	mov	[esp+20],395
	mov	[esp+16],250
	mov	[esp+12],4
	mov	[esp+8],4
	call	_fmousey
	sub	eax,2
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_86
	sub	esp,20
	mov	[esp+12],16
	mov	[esp+16],0
	mov	[esp+8],177
	mov	[esp+4],394
	mov	[esp],249
	call	_frect
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	call	_fmousezspeed
	add	ebx,eax
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	sub	esp,4
	mov	[esp],2
	call	_fmousehit
	and	eax,eax
	jz	_87
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	neg	ebx
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
_87
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	ebx,8
	jle	_88
	mov	ebx,0
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
_88
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	ebx,0
	jge	_89
	mov	ebx,8
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
_89
_86
	sub	esp,32
	mov	[esp+24],175
	mov	[esp+28],14
	mov	[esp+20],415
	mov	[esp+16],250
	mov	[esp+12],4
	mov	[esp+8],4
	call	_fmousey
	sub	eax,2
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_90
	sub	esp,20
	mov	[esp+12],16
	mov	[esp+16],0
	mov	[esp+8],177
	mov	[esp+4],414
	mov	[esp],249
	call	_frect
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	call	_fmousezspeed
	add	ebx,eax
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	[esp],2
	call	_fmousehit
	and	eax,eax
	jz	_91
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	neg	ebx
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
_91
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	cmp	ebx,8
	jle	_92
	mov	ebx,0
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
_92
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	cmp	ebx,0
	jge	_93
	mov	ebx,8
	mov	esi,[_vcontroller_port]
	shl	esi,byte 2
	add	esi,[_aj]
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
_93
_90
	sub	esp,32
	mov	[esp+24],45
	mov	[esp+28],25
	mov	[esp+20],45
	mov	[esp+16],10
	mov	[esp+12],4
	mov	[esp+8],4
	call	_fmousey
	sub	eax,2
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_94
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],0
	mov	[esp+8],45
	mov	[esp+4],45
	mov	[esp],10
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_95
	mov	[_vcontroller_port],0
_95
_94
	sub	esp,32
	mov	[esp+24],45
	mov	[esp+28],25
	mov	[esp+20],45
	mov	[esp+16],60
	mov	[esp+12],4
	mov	[esp+8],4
	call	_fmousey
	sub	eax,2
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_96
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],0
	mov	[esp+8],45
	mov	[esp+4],45
	mov	[esp],60
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_97
	mov	[_vcontroller_port],1
_97
_96
	sub	esp,32
	mov	[esp+24],45
	mov	[esp+28],25
	mov	[esp+20],45
	mov	[esp+16],110
	mov	[esp+12],4
	mov	[esp+8],4
	call	_fmousey
	sub	eax,2
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_98
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],0
	mov	[esp+8],45
	mov	[esp+4],45
	mov	[esp],110
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_99
	mov	[_vcontroller_port],2
_99
_98
	sub	esp,32
	mov	[esp+24],45
	mov	[esp+28],25
	mov	[esp+20],45
	mov	[esp+16],160
	mov	[esp+12],4
	mov	[esp+8],4
	call	_fmousey
	sub	eax,2
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_100
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],0
	mov	[esp+8],45
	mov	[esp+4],45
	mov	[esp],160
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_101
	mov	[_vcontroller_port],3
_101
_100
	sub	esp,32
	mov	[esp+24],195
	mov	[esp+28],25
	mov	[esp+20],100
	mov	[esp+16],10
	mov	[esp+12],4
	mov	[esp+8],4
	call	_fmousey
	sub	eax,2
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_102
	sub	esp,20
	mov	[esp+12],25
	mov	[esp+16],0
	mov	[esp+8],195
	mov	[esp+4],100
	mov	[esp],10
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_103
	call	_fassign_all_joy_axis
_103
_102
	sub	esp,4
	mov	[esp],59
	call	_fkeyhit
	and	eax,eax
	jz	_104
	mov	[_vcontroller_port],0
_104
	sub	esp,4
	mov	[esp],60
	call	_fkeyhit
	and	eax,eax
	jz	_105
	mov	[_vcontroller_port],1
_105
	sub	esp,4
	mov	[esp],61
	call	_fkeyhit
	and	eax,eax
	jz	_106
	mov	[_vcontroller_port],2
_106
	sub	esp,4
	mov	[esp],62
	call	_fkeyhit
	and	eax,eax
	jz	_107
	mov	[_vcontroller_port],3
_107
	sub	esp,32
	mov	[esp+24],110
	mov	[esp+28],20
	mov	[esp+20],275
	mov	[esp+16],450
	mov	[esp+12],4
	mov	[esp+8],4
	call	_fmousey
	sub	eax,2
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_108
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],0
	mov	[esp+8],110
	mov	[esp+4],275
	mov	[esp],450
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_109
	mov	ebx,1
	sub	ebx,[_vdebug]
	mov	[_vdebug],ebx
_109
_108
	sub	esp,32
	mov	[esp+24],110
	mov	[esp+28],20
	mov	[esp+20],300
	mov	[esp+16],450
	mov	[esp+12],4
	mov	[esp+8],4
	call	_fmousey
	sub	eax,2
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_110
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],0
	mov	[esp+8],110
	mov	[esp+4],300
	mov	[esp],450
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_111
	call	_fwriteconfig
_111
_110
	sub	esp,32
	mov	[esp+24],110
	mov	[esp+28],20
	mov	[esp+20],325
	mov	[esp+16],450
	mov	[esp+12],4
	mov	[esp+8],4
	call	_fmousey
	sub	eax,2
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_112
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],0
	mov	[esp+8],110
	mov	[esp+4],325
	mov	[esp],450
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_113
	call	_freadconfig
_113
_112
	sub	esp,32
	mov	[esp+24],110
	mov	[esp+28],20
	mov	[esp+20],350
	mov	[esp+16],450
	mov	[esp+12],4
	mov	[esp+8],4
	call	_fmousey
	sub	eax,2
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_114
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],0
	mov	[esp+8],110
	mov	[esp+4],350
	mov	[esp],450
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_115
	call	_fend
_115
_114
	sub	esp,4
	mov	[esp],15
	call	_fkeyhit
	and	eax,eax
	jz	_116
	mov	ebx,1
	sub	ebx,[_vdebug]
	mov	[_vdebug],ebx
_116
	sub	esp,4
	mov	[esp],31
	call	_fkeyhit
	and	eax,eax
	jz	_117
	call	_fwriteconfig
_117
	sub	esp,4
	mov	[esp],38
	call	_fkeyhit
	and	eax,eax
	jz	_118
	call	_freadconfig
_118
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fgetjoyaxis
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
_119
	sub	esp,8
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-4],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyx
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbFAbs
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,1063675494
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	and	eax,ebx
	and	eax,eax
	jz	_120
	mov	eax,1
	jmp	_10_leave
_120
	sub	esp,8
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-4],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyy
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbFAbs
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,1063675494
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	and	eax,ebx
	and	eax,eax
	jz	_121
	mov	eax,2
	jmp	_10_leave
_121
	sub	esp,8
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-4],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyz
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbFAbs
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,1063675494
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	and	eax,ebx
	and	eax,eax
	jz	_122
	mov	eax,3
	jmp	_10_leave
_122
	sub	esp,8
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoypitch
	mov	ebx,1127481344
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-4],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoypitch
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esi,1127481344
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbFAbs
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,1063675494
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	and	eax,ebx
	and	eax,eax
	jz	_123
	mov	eax,4
	jmp	_10_leave
_123
	sub	esp,8
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyroll
	mov	ebx,1127481344
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-4],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyroll
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esi,1127481344
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbFAbs
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,1063675494
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	and	eax,ebx
	and	eax,eax
	jz	_124
	mov	eax,5
	jmp	_10_leave
_124
	sub	esp,8
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyyaw
	mov	ebx,1127481344
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-4],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyyaw
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esi,1127481344
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbFAbs
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,1063675494
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	and	eax,ebx
	and	eax,eax
	jz	_125
	mov	eax,6
	jmp	_10_leave
_125
	sub	esp,8
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyu
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-4],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyu
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbFAbs
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,1063675494
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	and	eax,ebx
	and	eax,eax
	jz	_126
	mov	eax,7
	jmp	_10_leave
_126
	sub	esp,8
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyv
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-4],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fjoyv
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbFAbs
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,1063675494
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	and	eax,ebx
	and	eax,eax
	jz	_127
	mov	eax,8
	jmp	_10_leave
_127
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_128
	mov	eax,0
	jmp	_10_leave
_128
	jmp	_119
_11
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fmapaxis
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+20]
	mov	[ebp-4],ebx
	cmp	[ebp-4],1
	jz	_130
	cmp	[ebp-4],2
	jz	_131
	cmp	[ebp-4],3
	jz	_132
	cmp	[ebp-4],4
	jz	_133
	cmp	[ebp-4],5
	jz	_134
	cmp	[ebp-4],6
	jz	_135
	cmp	[ebp-4],7
	jz	_136
	cmp	[ebp-4],8
	jz	_137
	jmp	_129
_130
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	jmp	_129
_131
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	jmp	_129
_132
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	jmp	_129
_133
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoypitch
	mov	ebx,1127481344
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	jmp	_129
_134
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyroll
	mov	ebx,1127481344
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	jmp	_129
_135
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyyaw
	mov	ebx,1127481344
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	jmp	_129
_136
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyu
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	jmp	_129
_137
	sub	esp,4
	mov	eax,[_vcontroller_port]
	mov	[esp],eax
	call	_fjoyv
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	jmp	_129
_129
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	jmp	_12_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_12_leave
_12_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fassign_all_joy_axis
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	call	_ffrontbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],98
	mov	[esp+16],1
	mov	[esp+8],598
	mov	[esp+4],136
	mov	[esp],11
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_138
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],140
	mov	[esp],15
	call	_ftext
	call	_fgetjoyaxis
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,32
	mov	eax,_139
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	shl	ebx,byte 2
	add	ebx,[_ajoy_label]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],140
	mov	[esp],250
	call	_ftext
	sub	esp,4
	mov	[esp],800
	call	_fdelay
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_140
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],155
	mov	[esp],15
	call	_ftext
	call	_fgetjoyaxis
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,32
	mov	eax,_141
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	shl	ebx,byte 2
	add	ebx,[_ajoy_label]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],155
	mov	[esp],250
	call	_ftext
	sub	esp,4
	mov	[esp],800
	call	_fdelay
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_142
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],170
	mov	[esp],15
	call	_ftext
	call	_fgetjoyaxis
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,32
	mov	eax,_143
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	shl	ebx,byte 2
	add	ebx,[_ajoy_label]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],170
	mov	[esp],250
	call	_ftext
	sub	esp,4
	mov	[esp],800
	call	_fdelay
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_144
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],185
	mov	[esp],15
	call	_ftext
	call	_fgetjoyaxis
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,32
	mov	eax,_145
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vcontroller_port]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 2
	add	ebx,[_ajoy_label]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],185
	mov	[esp],250
	call	_ftext
	sub	esp,4
	mov	[esp],500
	call	_fdelay
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	eax,0
	jmp	_14_leave
_14_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fwriteconfig
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	mov	eax,_146
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fwritefile
	mov	[ebp-4],eax
	mov	[ebp-8],0
	jmp	_147
_148
	sub	esp,20
	mov	eax,_149
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	_fwriteline
	add	[ebp-8],1
_147
	cmp	[ebp-8],3
	jle	_148
_16
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fclosefile
	sub	esp,8
	mov	[esp],_vinfo
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_150
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	eax,0
	jmp	_15_leave
_15_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_freadconfig
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,8
	mov	eax,_151
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-4],eax
	cmp	[ebp-4],0
	jz	_152
	mov	[ebp-8],0
	jmp	_153
_154
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadline
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-12],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadline
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadline
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadline
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadline
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadline
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadline
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,20
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadline
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadline
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aj]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],eax
	add	[ebp-8],1
_153
	cmp	[ebp-8],3
	jle	_154
_18
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fclosefile
	sub	esp,8
	mov	[esp],_vinfo
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_155
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_156
_152
	sub	esp,8
	mov	[esp],_vinfo
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_157
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
_156
	mov	eax,0
	jmp	_17_leave
_17_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
_vcontroller_port	.dd	0
	.align	4
_vdebug	.dd	0
	.align	4
_vinfo	.dd	0
_19	.db	" ",0
	.align	4
_aj	.dd	0
	.dd	5
	.dd	1
	.dd	0
	.align	4
_ajoy_label	.dd	0
	.dd	3
	.dd	1
	.dd	0
_22	.db	"null",0
_23	.db	"JoyX()",0
_24	.db	"JoyY()",0
_25	.db	"JoyZ()",0
_26	.db	"JoyPitch()",0
_27	.db	"JoyRoll()",0
_28	.db	"JoyYaw()",0
_29	.db	"JoyU()",0
_30	.db	"JoyV()",0
	.align	4
_tjoypad	.dd	5
_33	.dd	0
	.dd	_33
	.dd	_33
	.dd	0
	.dd	-1
_34	.dd	0
	.dd	_34
	.dd	_34
	.dd	0
	.dd	-1
	.dd	8
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
_35	.db	"Dual stick configuration utility",0
_36	.db	"Directions for use:",0
_42	.db	"0",0
_43	.db	"1",0
_44	.db	"2",0
_45	.db	"3",0
_46	.db	"select controller port (0 for  single joypad)",0
_47	.db	"others are only needed for multiple joypads",0
_48	.db	"assign axis controls",0
_49	.db	"click to assign the custom controls",0
_50	.db	"After assigning the controls, test stick movement in the boxes below",0
_51	.db	"To invert an axis, right click on it's blue box",0
_52	.db	"when done, save the config file and exit, or repeat with the other ports",0
_57	.db	"Stick 1",0
_58	.db	"Stick 2",0
_59	.db	"X axis: ",0
_60	.db	"X axis: ",0
_61	.db	"Y axis: ",0
_62	.db	"Y axis: ",0
_63	.db	"(Tab) Debug",0
_64	.db	"(S)ave Config",0
_65	.db	"(L)oad Config",0
_66	.db	"(Q)uit",0
_70	.db	"1. JoyX()      : ",0
_71	.db	"2. JoyY()      : ",0
_72	.db	"3. JoyZ()      : ",0
_73	.db	"4. JoyPitch()  : ",0
_74	.db	"5. JoyRoll()   : ",0
_75	.db	"6. JoyYaw()    : ",0
_76	.db	"7. JoyU()      : ",0
_77	.db	"8. JoyV()      : ",0
_138	.db	"move stick 1 left or right",0
_139	.db	"Stick 1 X axis assigned to ",0
_140	.db	"move stick 1 up or down",0
_141	.db	"Stick 1 Y axis assigned to ",0
_142	.db	"move stick 2 left or right",0
_143	.db	"Stick 2 X axis assigned to ",0
_144	.db	"move stick 2 up or down",0
_145	.db	"Stick 2 Y axis assigned to ",0
_146	.db	"joypad.cfg",0
_149	.db	"; Joypad port ",0
_150	.db	"config file written",0
_151	.db	"joypad.cfg",0
_155	.db	"config file opened",0
_157	.db	"load failed",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

