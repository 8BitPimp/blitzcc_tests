
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	[ebp-4],0
	sub	esp,12
	mov	eax,_11
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_12
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,40
	mov	[esp+24],120
	mov	[esp+28],300
	mov	[esp+20],400
	mov	[esp+16],300
	mov	[esp+12],200
	mov	[esp+8],400
	mov	[esp+4],100
	mov	[esp],100
	call	_fcreatequad
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
_13
	call	_fcls
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fdrawquad
	sub	esp,12
	call	_fmousey
	mov	[esp+4],eax
	mov	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	[ebp-8],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fpointinquad
	mov	ebx,eax
	and	ebx,ebx
	jz	_14
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_15
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],20
	mov	[esp],20
	call	_ftext
	jmp	_16
_14
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_17
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],20
	mov	[esp],20
	call	_ftext
_16
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_13
_5
	call	_fend
	ret
_2_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fgenericpointinquad
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+24]
	sub	ebx,[ebp+32]
	mov	esi,[ebp+36]
	sub	esi,[ebp+28]
	imul	ebx,esi
	mov	esi,[ebp+20]
	sub	esi,[ebp+28]
	mov	edi,[ebp+40]
	sub	edi,[ebp+32]
	imul	esi,edi
	sub	ebx,esi
	cmp	ebx,0
	jg	_20
	mov	eax,0
	jmp	_6_leave
_20
	mov	ebx,[ebp+24]
	sub	ebx,[ebp+40]
	mov	esi,[ebp+44]
	sub	esi,[ebp+36]
	imul	ebx,esi
	mov	esi,[ebp+20]
	sub	esi,[ebp+36]
	mov	edi,[ebp+48]
	sub	edi,[ebp+40]
	imul	esi,edi
	sub	ebx,esi
	cmp	ebx,0
	jg	_21
	mov	eax,0
	jmp	_6_leave
_21
	mov	ebx,[ebp+24]
	sub	ebx,[ebp+48]
	mov	esi,[ebp+52]
	sub	esi,[ebp+44]
	imul	ebx,esi
	mov	esi,[ebp+20]
	sub	esi,[ebp+44]
	mov	edi,[ebp+56]
	sub	edi,[ebp+48]
	imul	esi,edi
	sub	ebx,esi
	cmp	ebx,0
	jg	_22
	mov	eax,0
	jmp	_6_leave
_22
	mov	ebx,[ebp+24]
	sub	ebx,[ebp+56]
	mov	esi,[ebp+28]
	sub	esi,[ebp+52]
	imul	ebx,esi
	mov	esi,[ebp+20]
	sub	esi,[ebp+52]
	mov	edi,[ebp+32]
	sub	edi,[ebp+56]
	imul	esi,edi
	sub	ebx,esi
	cmp	ebx,0
	jg	_23
	mov	eax,0
	jmp	_6_leave
_23
	mov	eax,1
	jmp	_6_leave
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 40
	.align	16
_fcreatequad
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tquad
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+40]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+44]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+48]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	eax,[ebp-4]
	jmp	_7_leave
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 32
	.align	16
_fdrawquad
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_fline
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fpointinquad
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-4],1
	mov	[ebp-8],0
	jmp	_24
_25
	cmp	[ebp-8],3
	jge	_26
	mov	ebx,[ebp-8]
	add	ebx,1
	mov	[ebp-12],ebx
	jmp	_27
_26
	mov	[ebp-12],0
_27
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	mov	esi,[ebp+28]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	shl	esi,byte 2
	mov	edi,[ebp+28]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	sub	ebx,esi
	mov	esi,[ebp-8]
	shl	esi,byte 2
	mov	edi,[ebp+28]
	mov	edi,[edi]
	add	edi,4
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	mov	edi,[ebp+24]
	sub	edi,esi
	imul	edi,ebx
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	mov	esi,[ebp+28]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	shl	esi,byte 2
	mov	edx,[ebp+28]
	mov	edx,[edx]
	add	edx,4
	mov	edx,[edx]
	add	esi,edx
	mov	esi,[esi]
	sub	ebx,esi
	mov	esi,[ebp-8]
	shl	esi,byte 2
	mov	edx,[ebp+28]
	mov	edx,[edx]
	add	edx,0
	mov	edx,[edx]
	add	esi,edx
	mov	esi,[esi]
	mov	edx,[ebp+20]
	sub	edx,esi
	imul	edx,ebx
	sub	edi,edx
	mov	[ebp-16],edi
	cmp	[ebp-16],0
	jnz	_28
	mov	[ebp-4],0
	jmp	_10
	jmp	_29
_28
	cmp	[ebp-16],0
	jge	_30
	mov	[ebp-4],0
	jmp	_10
_30
_29
	add	[ebp-8],1
_24
	cmp	[ebp-8],3
	jle	_25
_10
	mov	eax,[ebp-4]
	jmp	_9_leave
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
_11	.db	"Position mouse inside and outside quad...",0
_12	.db	"",0
_15	.db	"Inside quad!",0
_17	.db	"Outside quad!",0
	.align	4
_3	.dd	6
	.dd	4
	.dd	__bbIntType
	.align	4
_4	.dd	6
	.dd	4
	.dd	__bbIntType
	.align	4
_tquad	.dd	5
_18	.dd	0
	.dd	_18
	.dd	_18
	.dd	0
	.dd	-1
_19	.dd	0
	.dd	_19
	.dd	_19
	.dd	0
	.dd	-1
	.dd	2
	.dd	_3
	.dd	_4
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

