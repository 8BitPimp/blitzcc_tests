
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
_l_2scancodez
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],300
	mov	[esp],400
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_finitgetkey
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_10
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_11
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_12
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-16],0
	mov	[ebp-20],0
	mov	[ebp-24],0
	mov	[ebp-28],1
	jmp	_14
_13
	call	_fcls
	sub	esp,28
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+16],eax
	mov	[esp+8],300
	mov	[esp+4],0
	mov	[esp],0
	call	_fcreateinputbox
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,28
	mov	ebx,[ebp-20]
	mov	[esp+12],ebx
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+16],eax
	mov	[esp+8],300
	mov	[esp+4],30
	mov	[esp],0
	call	_fcreateinputbox
	mov	[esp+4],eax
	lea	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,28
	mov	ebx,[ebp-24]
	mov	[esp+12],ebx
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+16],eax
	mov	[esp+8],300
	mov	[esp+4],60
	mov	[esp],0
	call	_fcreateinputbox
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	ebx,[ebp-28]
	mov	[ebp-32],ebx
	cmp	[ebp-32],1
	jz	_16
	cmp	[ebp-32],2
	jz	_17
	cmp	[ebp-32],3
	jz	_18
	jmp	_15
_16
	mov	[ebp-16],1
	mov	[ebp-20],0
	mov	[ebp-24],0
	jmp	_15
_17
	mov	[ebp-20],1
	mov	[ebp-24],0
	mov	[ebp-16],0
	jmp	_15
_18
	mov	[ebp-24],1
	mov	[ebp-16],0
	mov	[ebp-20],0
	jmp	_15
_15
	sub	esp,4
	mov	[esp],200
	call	_fkeyhit
	and	eax,eax
	jz	_19
	add	[ebp-28],1
_19
	cmp	[ebp-28],3
	jle	_20
	mov	[ebp-28],1
_20
	sub	esp,32
	mov	eax,_21
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],280
	mov	[esp],0
	call	_ftext
	sub	esp,32
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],280
	mov	[esp],60
	call	_ftext
	sub	esp,32
	mov	eax,_23
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],280
	mov	[esp],120
	call	_ftext
	sub	esp,4
	mov	[esp],5
	call	_fdelay
	sub	esp,4
	mov	[esp],1
	call	_fflip
_14
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_13
_3
	call	_fend
	ret
_2_leave
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_finitgetkey
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-4],1
	sub	esp,4
	mov	eax,__DATA
	add	eax,0
	mov	[esp],eax
	call	__bbRestore
_26
	call	__bbReadInt
	mov	[ebp-8],eax
	cmp	[ebp-8],-1
	jnz	_27
	jmp	_6
_27
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_tscancode
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-8]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	sub	esp,24
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_28
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	_flower
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,40
	mov	eax,_29
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_30
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	call	_fmid
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-4],1
	jmp	_26
_6
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_figetkey
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,4
	mov	[esp],14
	call	_fkeydown
	and	eax,eax
	jz	_31
	cmp	[_voldkdown],8
	jz	_32
	mov	[_voldkdown],8
	mov	eax,8
	jmp	_7_leave
_32
	mov	[_voldkdown],8
	mov	eax,0
	jmp	_7_leave
_31
	sub	esp,4
	mov	[esp],28
	call	_fkeydown
	mov	[ebp-20],eax
	sub	esp,4
	mov	[esp],156
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-20]
	or	eax,ebx
	and	eax,eax
	jz	_33
	cmp	[_voldkdown],13
	jz	_34
	mov	[_voldkdown],13
	mov	eax,13
	jmp	_7_leave
_34
	mov	[_voldkdown],13
	mov	eax,0
	jmp	_7_leave
_33
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjStore
	mov	[ebp-8],-1
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],_tscancode
	call	__bbObjEachFirst
	and	eax,eax
	jz	_8
_35
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fkeydown
	and	eax,eax
	jz	_36
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	__bbObjStore
	jmp	_8
_36
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_35
_8
	mov	ebx,[_voldkdown]
	cmp	[ebp-8],ebx
	jnz	_37
	mov	eax,0
	jmp	_7_leave
_37
	mov	ebx,[ebp-8]
	mov	[_voldkdown],ebx
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_38
	mov	eax,0
	jmp	_7_leave
_38
	sub	esp,4
	mov	[esp],42
	call	_fkeydown
	mov	[ebp-20],eax
	sub	esp,4
	mov	[esp],54
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-20]
	or	eax,ebx
	and	eax,eax
	jz	_39
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_40
_39
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	__bbStrStore
_40
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fasc
	jmp	_7_leave
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[ebp-20],eax
	sub	esp,4
	mov	esi,[ebp-16]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-20]
	mov	[ebp-20],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-20]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreateinputbox
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	[ebp-4],0
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],0
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_frect
	cmp	[ebp+32],1
	jnz	_41
	call	_figetkey
	mov	[ebp-4],eax
	sub	esp,20
	mov	eax,[ebp+20]
	add	eax,3
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-8]
	imul	ebx,9
	add	eax,ebx
	mov	[esp],eax
	mov	[esp+12],17
	mov	[esp+16],1
	mov	[esp+8],1
	mov	ebx,[ebp+24]
	add	ebx,2
	mov	[esp+4],ebx
	call	_frect
	cmp	[ebp-4],48
	setge	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[ebp-4],57
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	mov	[ebp-8],eax
	cmp	[ebp-4],65
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	cmp	[ebp-4],90
	mov	eax,esi
	setle	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-8]
	and	ebx,esi
	or	eax,ebx
	mov	[ebp-8],eax
	cmp	[ebp-4],97
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	cmp	[ebp-4],122
	mov	eax,esi
	setle	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-8]
	and	ebx,esi
	or	eax,ebx
	and	eax,eax
	jz	_42
	mov	eax,[ebp+28]
	mov	ecx,10
	cdq
	idiv	ecx
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-8]
	cmp	ebx,eax
	jge	_43
	sub	esp,20
	lea	eax,[ebp+36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_43
_42
_41
	cmp	[ebp+32],1
	jnz	_44
	sub	esp,4
	mov	[esp],14
	call	_fkeyhit
	and	eax,eax
	jz	_45
	sub	esp,8
	lea	eax,[ebp+36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	eax,0
	jle	_46
	sub	esp,20
	lea	eax,[ebp+36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-8]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_46
_45
	sub	esp,4
	mov	[esp],57
	call	_fkeyhit
	and	eax,eax
	jz	_47
	sub	esp,20
	lea	eax,[ebp+36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_48
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_47
_44
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	lea	eax,[ebp+36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	add	eax,3
	mov	[esp],eax
	call	_ftext
	sub	esp,4
	lea	eax,[ebp+36]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_9_leave
	sub	esp,4
	mov	eax,_49
	mov	[esp],eax
	call	__bbStrConst
	jmp	_9_leave
_9_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	4
_voldkdown	.dd	0
_10	.db	"",0
_11	.db	"",0
_12	.db	"",0
_21	.db	"TF: ",0
_22	.db	"TF2: ",0
_23	.db	"TF3: ",0
	.align	4
_tscancode	.dd	5
_24	.dd	0
	.dd	_24
	.dd	_24
	.dd	0
	.dd	-1
_25	.dd	0
	.dd	_25
	.dd	_25
	.dd	0
	.dd	-1
	.dd	3
	.dd	__bbIntType
	.dd	__bbStrType
	.dd	__bbStrType
_28	.db	"1234567890-=QWERTYUIOP[]ASDFGHJKL;'\ZXCVBNM,./* 789-456+1230.,/",0
_29	.db	"!@#$%^&*()_+QWERTYUIOP{}ASDFGHJKL:",0
_30	.db	"|ZXCVBNM<>?* 789-456+1230.,/",0
_48	.db	" ",0
_49	.db	"",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	1
	.dd	2
	.dd	1
	.dd	3
	.dd	1
	.dd	4
	.dd	1
	.dd	5
	.dd	1
	.dd	6
	.dd	1
	.dd	7
	.dd	1
	.dd	8
	.dd	1
	.dd	9
	.dd	1
	.dd	10
	.dd	1
	.dd	11
	.dd	1
	.dd	12
	.dd	1
	.dd	13
	.dd	1
	.dd	16
	.dd	1
	.dd	17
	.dd	1
	.dd	18
	.dd	1
	.dd	19
	.dd	1
	.dd	20
	.dd	1
	.dd	21
	.dd	1
	.dd	22
	.dd	1
	.dd	23
	.dd	1
	.dd	24
	.dd	1
	.dd	25
	.dd	1
	.dd	26
	.dd	1
	.dd	27
	.dd	1
	.dd	30
	.dd	1
	.dd	31
	.dd	1
	.dd	32
	.dd	1
	.dd	33
	.dd	1
	.dd	34
	.dd	1
	.dd	35
	.dd	1
	.dd	36
	.dd	1
	.dd	37
	.dd	1
	.dd	38
	.dd	1
	.dd	39
	.dd	1
	.dd	40
	.dd	1
	.dd	43
	.dd	1
	.dd	44
	.dd	1
	.dd	45
	.dd	1
	.dd	46
	.dd	1
	.dd	47
	.dd	1
	.dd	48
	.dd	1
	.dd	49
	.dd	1
	.dd	50
	.dd	1
	.dd	51
	.dd	1
	.dd	52
	.dd	1
	.dd	53
	.dd	1
	.dd	55
	.dd	1
	.dd	57
	.dd	1
	.dd	71
	.dd	1
	.dd	72
	.dd	1
	.dd	73
	.dd	1
	.dd	74
	.dd	1
	.dd	75
	.dd	1
	.dd	76
	.dd	1
	.dd	77
	.dd	1
	.dd	78
	.dd	1
	.dd	79
	.dd	1
	.dd	80
	.dd	1
	.dd	81
	.dd	1
	.dd	82
	.dd	1
	.dd	83
	.dd	1
	.dd	179
	.dd	1
	.dd	181
	.dd	1
	.dd	-1
	.dd	0

