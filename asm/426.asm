
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	sub	esp,4
	mov	eax,_atxv
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,3
	mov	esi,_atxv
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atxv
	mov	[esp],eax
	call	__bbDimArray
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fremovetri
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-4],0
	jmp	_8
_9
	sub	esp,12
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	[ebx],eax
	mov	ebx,[ebp+24]
	cmp	[ebp-4],ebx
	jz	_10
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_ttris
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,20
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,40
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,44
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,48
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,52
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,56
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,60
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,64
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,68
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,72
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,76
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,80
	mov	[ebx],eax
_10
	add	[ebp-4],1
_8
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcounttriangles
	sub	eax,1
	cmp	[ebp-4],eax
	jle	_9
_4
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fclearsurface
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],_ttris
	call	__bbObjEachFirst
	and	eax,eax
	jz	_5
_11
	sub	esp,28
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-12],1
	sub	esp,28
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-12],1
	sub	esp,28
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,68
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,64
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,60
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,80
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,76
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-12],1
	sub	esp,16
	mov	ebx,[ebp-12]
	sub	ebx,2
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	sub	esi,1
	mov	[esp+12],esi
	mov	esi,[ebp-12]
	sub	esi,3
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddtriangle
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_11
_5
	sub	esp,4
	mov	eax,_ttris
	mov	[esp],eax
	call	__bbObjDeleteEach
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	4
_atxv	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ttris	.dd	5
_6	.dd	0
	.dd	_6
	.dd	_6
	.dd	0
	.dd	-1
_7	.dd	0
	.dd	_7
	.dd	_7
	.dd	0
	.dd	-1
	.dd	22
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

