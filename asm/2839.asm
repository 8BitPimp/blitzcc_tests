
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	sub	esp,12
	mov	eax,_47
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_48
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	sub	esp,8
	mov	[esp],_vmapname
	mov	[ebp-4],eax
	sub	esp,4
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_49
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	mov	eax,_vmapname
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_51
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_50
	call	_fend
_50
	sub	esp,4
	mov	eax,_atilemap
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_atilemap
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,_atilemap
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atilemap
	mov	[esp],eax
	call	__bbDimArray
	mov	[_vscaletiles],1
	mov	[_vtilewidth],32
	mov	[_vtileheight],32
	mov	[_vtilepadding],1
	mov	[_vmappadding],0
	sub	esp,4
	mov	eax,_acolortiles
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_acolortiles
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,_acolortiles
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_acolortiles
	mov	[esp],eax
	call	__bbDimArray
	mov	[_vtilesmax],0
	call	_freadinifile
	call	_fsetgfxmapinfo
	call	_fcreateblanktile
	call	_fbuildmap
	sub	esp,4
	mov	eax,[_vgfxtilestore]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[_vgfxtilecomparestore]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[_vgfxmap]
	mov	[esp],eax
	call	_ffreeimage
	call	_fendgraphics
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsetgfxmapinfo
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,16
	mov	eax,_vmapname
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_52
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_floadimage
	mov	[_vgfxmap],eax
	sub	esp,4
	mov	eax,[_vgfxmap]
	mov	[esp],eax
	call	_fimagewidth
	mov	ecx,[_vtilewidth]
	cdq
	idiv	ecx
	mov	[_vmapsizex],eax
	sub	esp,4
	mov	eax,[_vgfxmap]
	mov	[esp],eax
	call	_fimageheight
	mov	ecx,[_vtileheight]
	cdq
	idiv	ecx
	mov	[_vmapsizey],eax
	sub	esp,8
	mov	eax,[_vmapsizex]
	mov	[esp],eax
	mov	ebx,[_vmapsizey]
	mov	[esp+4],ebx
	call	_fclearmap
	sub	esp,4
	mov	eax,[_vgfxtilestore]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,12
	mov	ebx,[_vtileheight]
	mov	[esp+4],ebx
	mov	[esp+8],512
	mov	eax,[_vtilewidth]
	mov	[esp],eax
	call	_fcreateimage
	mov	[_vgfxtilestore],eax
	sub	esp,4
	mov	eax,[_vgfxtilecomparestore]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,12
	mov	ebx,[_vtileheight]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[_vtilewidth]
	imul	eax,251
	mov	[esp],eax
	call	_fcreateimage
	mov	[_vgfxtilecomparestore],eax
	mov	[_vtilesmax],0
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fclearmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,4
	mov	eax,_atilemap
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+20]
	mov	esi,_atilemap
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,_atilemap
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atilemap
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-4],0
	jmp	_53
_54
	mov	[ebp-8],0
	jmp	_55
_56
	mov	ebx,-1
	mov	esi,_atilemap
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-8]
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_atilemap]
	mov	[esi],ebx
	add	[ebp-8],1
_55
	mov	ebx,[ebp+24]
	cmp	[ebp-8],ebx
	jle	_56
_6
	add	[ebp-4],1
_53
	mov	ebx,[ebp+20]
	cmp	[ebp-4],ebx
	jle	_54
_5
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fcreateblanktile
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	call	_fcls
	sub	esp,32
	mov	ebx,[_vtileheight]
	mov	[esp+24],ebx
	mov	[esp+28],0
	mov	esi,[_vtilewidth]
	mov	[esp+20],esi
	mov	ebx,[_vtileheight]
	mov	[esp+16],ebx
	mov	esi,[_vtilewidth]
	mov	[esp+12],esi
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vgfxmap]
	mov	[esp],eax
	call	_fdrawblockrect
	mov	ebx,0
	mov	esi,_atilemap
	add	esi,12
	mov	esi,[esi]
	imul	esi,0
	add	esi,0
	shl	esi,byte 2
	add	esi,[_atilemap]
	mov	[esi],ebx
	add	[_vtilesmax],1
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreatetile
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	eax,[_vgfxtilestore]
	mov	[esp],eax
	mov	ebx,[_vtilesmax]
	mov	[esp+4],ebx
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,32
	mov	ebx,[_vtileheight]
	mov	[esp+24],ebx
	mov	[esp+28],0
	mov	esi,[_vtilewidth]
	mov	[esp+20],esi
	mov	ebx,[ebp+24]
	imul	ebx,[_vtileheight]
	mov	[esp+16],ebx
	mov	esi,[ebp+20]
	imul	esi,[_vtilewidth]
	mov	[esp+12],esi
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vgfxmap]
	mov	[esp],eax
	call	_fdrawblockrect
	mov	ebx,[_vtilesmax]
	mov	esi,_atilemap
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp+24]
	add	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_atilemap]
	mov	[esi],ebx
	add	[_vtilesmax],1
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fpreparemapcomparison
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,12
	mov	eax,[_vgfxtilecomparestore]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	call	_fcls
	sub	esp,32
	mov	ebx,[_vtileheight]
	mov	[esp+24],ebx
	mov	[esp+28],0
	mov	esi,[_vtilewidth]
	mov	[esp+20],esi
	mov	ebx,[ebp+24]
	imul	ebx,[_vtileheight]
	mov	[esp+16],ebx
	mov	esi,[ebp+20]
	imul	esi,[_vtilewidth]
	mov	[esp+12],esi
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vgfxmap]
	mov	[esp],eax
	call	_fdrawblockrect
	mov	ebx,[ebp+28]
	add	ebx,250
	mov	[ebp-8],ebx
	mov	ebx,[ebp+28]
	add	ebx,250
	cmp	ebx,[_vtilesmax]
	jle	_57
	mov	ebx,[_vtilesmax]
	mov	[ebp-8],ebx
_57
	mov	[ebp-4],1
	mov	ebx,[ebp+28]
	mov	[ebp-12],ebx
	jmp	_58
_59
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp-12]
	mov	[esp+12],esi
	mov	esi,[_vtilewidth]
	imul	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[_vgfxtilestore]
	mov	[esp],eax
	call	_fdrawblock
	add	[ebp-4],1
	add	[ebp-12],1
_58
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-12],ebx
	jle	_59
_10
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fcls
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vgfxtilecomparestore]
	mov	[esp],eax
	call	_fdrawblock
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fdisplaymap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-8],0
	jmp	_60
_61
	mov	[ebp-4],0
	jmp	_62
_63
	mov	ebx,_atilemap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_atilemap]
	mov	ebx,[ebx]
	cmp	ebx,-1
	jz	_64
	sub	esp,16
	mov	ebx,[ebp-8]
	imul	ebx,[_vtileheight]
	add	ebx,100
	mov	[esp+8],ebx
	mov	esi,_atilemap
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-8]
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_atilemap]
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	imul	esi,[_vtilewidth]
	mov	[esp+4],esi
	mov	eax,[_vgfxtilestore]
	mov	[esp],eax
	call	_fdrawblock
_64
	add	[ebp-4],1
_62
	mov	ebx,[_vmapsizex]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_63
_13
	add	[ebp-8],1
_60
	mov	ebx,[_vmapsizey]
	sub	ebx,1
	cmp	[ebp-8],ebx
	jle	_61
_12
	sub	esp,16
	mov	[esp+8],100
	mov	[esp+12],0
	mov	[esp+4],260
	mov	eax,[_vgfxmap]
	mov	[esp],eax
	call	_fdrawblock
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fbuildmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-24],0
	mov	[ebp-28],-1
	mov	ebx,[_vmapsizex]
	imul	ebx,[_vmapsizey]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	[ebp-8],0
	jmp	_65
_66
	mov	[ebp-4],0
	jmp	_67
_68
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	and	eax,eax
	jz	_69
	mov	eax,0
	jmp	_14_leave
_69
	mov	[ebp-12],0
	mov	[ebp-12],0
	jmp	_70
_71
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpreparemapcomparison
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,120
	mov	eax,_73
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	add	ebx,1
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[esp+4],3
	call	_fright
	mov	[esp+4],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_72
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_74
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,20
	mov	eax,_75
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,[ebp-8]
	add	esi,1
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrFromInt
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	[esp+4],esi
	call	__bbStrConcat
	mov	[esp],eax
	mov	[esp+4],3
	call	_fright
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_76
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,[_vmapsizex]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_77
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,[_vmapsizey]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_78
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,20
	mov	eax,[ebp-24]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1120403456
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,_79
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConcat
	mov	esi,eax
	mov	[esp],esi
	mov	[esp+4],3
	mov	eax,esi
	call	_fright
	mov	esi,eax
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_80
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,48
	mov	eax,_82
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[_vtilesmax]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[esp+4],4
	call	_fright
	mov	[esp+4],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_81
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],320
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcomparetiles
	mov	[ebp-28],eax
	cmp	[ebp-28],-1
	jz	_83
	mov	ebx,[ebp-28]
	mov	esi,_atilemap
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-8]
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_atilemap]
	mov	[esi],ebx
	jmp	_17
_83
	add	[ebp-12],250
_70
	mov	ebx,[_vtilesmax]
	sub	ebx,1
	cmp	[ebp-12],ebx
	jle	_71
_17
	cmp	[ebp-28],-1
	jnz	_84
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fcreatetile
_84
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	add	[ebp-4],1
_67
	mov	ebx,[_vmapsizex]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_68
_16
	add	[ebp-8],1
_65
	mov	ebx,[_vmapsizey]
	sub	ebx,1
	cmp	[ebp-8],ebx
	jle	_66
_15
	call	_fsavetiles
	call	_fsavetilemapdata
	call	_fsavetilemapmonkey
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_85
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],120
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitkey
	mov	eax,0
	jmp	_14_leave
_14_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcomparetiles
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,4
	mov	eax,_acolortiles
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,3
	mov	esi,_acolortiles
	add	esi,12
	mov	[esi],ebx
	mov	ebx,250
	mov	esi,_acolortiles
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_acolortiles
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,12
	mov	eax,[_vgfxtilecomparestore]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	ebx,[ebp+20]
	add	ebx,250
	mov	[ebp-16],ebx
	mov	ebx,[ebp+20]
	add	ebx,250
	cmp	ebx,[_vtilesmax]
	jle	_86
	mov	ebx,[_vtilesmax]
	mov	[ebp-16],ebx
_86
	mov	[ebp-8],0
	jmp	_87
_88
	mov	[ebp-4],0
	jmp	_89
_90
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetcolor
	call	_fcolorred
	mov	ebx,_acolortiles
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,0
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_acolortiles]
	mov	[ebx],eax
	call	_fcolorgreen
	mov	ebx,_acolortiles
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,0
	add	ebx,2
	shl	ebx,byte 2
	add	ebx,[_acolortiles]
	mov	[ebx],eax
	call	_fcolorblue
	mov	ebx,_acolortiles
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,0
	add	ebx,3
	shl	ebx,byte 2
	add	ebx,[_acolortiles]
	mov	[ebx],eax
	mov	[ebp-20],1
	mov	ebx,[ebp+20]
	mov	[ebp-24],ebx
	jmp	_91
_92
	mov	ebx,_acolortiles
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-20]
	add	ebx,0
	shl	ebx,byte 2
	add	ebx,[_acolortiles]
	mov	ebx,[ebx]
	cmp	ebx,-1
	jz	_93
	sub	esp,8
	mov	eax,[_vtilewidth]
	imul	eax,[ebp-20]
	add	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetcolor
	call	_fcolorred
	mov	ebx,_acolortiles
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-20]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_acolortiles]
	mov	[ebx],eax
	call	_fcolorgreen
	mov	ebx,_acolortiles
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-20]
	add	ebx,2
	shl	ebx,byte 2
	add	ebx,[_acolortiles]
	mov	[ebx],eax
	call	_fcolorblue
	mov	ebx,_acolortiles
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-20]
	add	ebx,3
	shl	ebx,byte 2
	add	ebx,[_acolortiles]
	mov	[ebx],eax
	mov	eax,_acolortiles
	add	eax,12
	mov	eax,[eax]
	imul	eax,0
	add	eax,1
	shl	eax,byte 2
	add	eax,[_acolortiles]
	mov	eax,[eax]
	mov	ebx,_acolortiles
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-20]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_acolortiles]
	mov	ebx,[ebx]
	cmp	eax,ebx
	setnz	al
	movzx	eax,al
	mov	[ebp-28],eax
	mov	ebx,_acolortiles
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,0
	add	ebx,2
	shl	ebx,byte 2
	add	ebx,[_acolortiles]
	mov	ebx,[ebx]
	mov	esi,_acolortiles
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-20]
	add	esi,2
	shl	esi,byte 2
	add	esi,[_acolortiles]
	mov	esi,[esi]
	cmp	ebx,esi
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	or	eax,ebx
	mov	[ebp-28],eax
	mov	ebx,_acolortiles
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,0
	add	ebx,3
	shl	ebx,byte 2
	add	ebx,[_acolortiles]
	mov	ebx,[ebx]
	mov	esi,_acolortiles
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-20]
	add	esi,3
	shl	esi,byte 2
	add	esi,[_acolortiles]
	mov	esi,[esi]
	cmp	ebx,esi
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	or	eax,ebx
	and	eax,eax
	jz	_94
	mov	ebx,-1
	mov	esi,_acolortiles
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-20]
	add	esi,0
	shl	esi,byte 2
	add	esi,[_acolortiles]
	mov	[esi],ebx
_94
_93
	add	[ebp-20],1
	add	[ebp-24],1
_91
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_92
_21
	add	[ebp-4],1
_89
	mov	ebx,[_vtilewidth]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_90
_20
	add	[ebp-8],1
_87
	mov	ebx,[_vtileheight]
	sub	ebx,1
	cmp	[ebp-8],ebx
	jle	_88
_19
	mov	[ebp-20],1
	mov	ebx,[ebp+20]
	mov	[ebp-12],ebx
	jmp	_95
_96
	mov	ebx,_acolortiles
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-20]
	add	ebx,0
	shl	ebx,byte 2
	add	ebx,[_acolortiles]
	mov	ebx,[ebx]
	cmp	ebx,-1
	jz	_97
	mov	eax,[ebp-12]
	jmp	_18_leave
_97
	add	[ebp-20],1
	add	[ebp-12],1
_95
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-12],ebx
	jle	_96
_22
	mov	eax,-1
	jmp	_18_leave
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsavetiles
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,48
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-32],320
	mov	ebx,[_vtilewidth]
	mov	[ebp-36],ebx
	mov	ebx,[_vtileheight]
	mov	[ebp-40],ebx
	mov	ebx,[_vscaletiles]
	and	ebx,ebx
	jz	_98
	mov	ebx,[ebp-36]
	shl	ebx,byte 1
	mov	[ebp-36],ebx
	mov	ebx,[ebp-40]
	shl	ebx,byte 1
	mov	[ebp-40],ebx
_98
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_ffreeimage
	mov	eax,[ebp-32]
	mov	ecx,[_vtilewidth]
	cdq
	idiv	ecx
	mov	[ebp-8],eax
	mov	eax,[_vtilesmax]
	sub	eax,1
	mov	ecx,[ebp-8]
	cdq
	idiv	ecx
	add	eax,1
	mov	[ebp-12],eax
	sub	esp,12
	mov	ebx,[_vtilepadding]
	shl	ebx,byte 1
	add	ebx,[ebp-40]
	imul	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[_vtilepadding]
	shl	eax,byte 1
	add	eax,[ebp-36]
	imul	eax,[ebp-8]
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-28],eax
	sub	esp,12
	mov	eax,[ebp-28]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	call	_fcls
	mov	[ebp-24],0
	mov	[ebp-20],0
	jmp	_99
_100
	mov	[ebp-16],0
	jmp	_101
_102
	mov	ebx,[_vtilesmax]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jg	_103
	sub	esp,12
	mov	eax,[_vgfxtilestore]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[_vtileheight]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[_vtilewidth]
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-44],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-44]
	mov	[esp],eax
	call	_fgrabimage
	mov	ebx,[_vscaletiles]
	and	ebx,ebx
	jz	_104
	sub	esp,12
	mov	[esp+4],1073741824
	mov	[esp+8],1073741824
	mov	eax,[ebp-44]
	mov	[esp],eax
	call	_fscaleimagefast
	mov	[ebp-44],eax
_104
	sub	esp,12
	mov	eax,[ebp-28]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,16
	mov	ebx,[_vtilepadding]
	shl	ebx,byte 1
	add	ebx,[ebp-40]
	imul	ebx,[ebp-20]
	add	ebx,[_vtilepadding]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[_vtilepadding]
	shl	esi,byte 1
	add	esi,[ebp-36]
	imul	esi,[ebp-16]
	add	esi,[_vtilepadding]
	mov	[esp+4],esi
	mov	eax,[ebp-44]
	mov	[esp],eax
	call	_fdrawblock
_103
	add	[ebp-24],1
	add	[ebp-16],1
_101
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_102
_25
	add	[ebp-20],1
_99
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_100
_24
	sub	esp,8
	mov	eax,_105
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcreatefolder
	sub	esp,32
	mov	eax,_106
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_vmapname
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_107
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsaveimage
	mov	ebx,eax
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_ffreeimage
	mov	eax,0
	jmp	_23_leave
_23_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsavetilemapdata
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,28
	mov	eax,_108
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_vmapname
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_109
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,_110
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcreatefolder
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fwritefile
	mov	[ebp-16],eax
	mov	ebx,[_vmapsizex]
	mov	[ebp-20],ebx
	mov	ebx,[_vmapsizey]
	mov	[ebp-24],ebx
	mov	ebx,[_vmappadding]
	and	ebx,ebx
	jz	_111
	add	[ebp-20],2
_111
	mov	ebx,[_vmappadding]
	and	ebx,ebx
	jz	_112
	add	[ebp-24],2
_112
	mov	ebx,[_vtilewidth]
	mov	[ebp-28],ebx
	mov	ebx,[_vtileheight]
	mov	[ebp-32],ebx
	mov	ebx,[_vscaletiles]
	and	ebx,ebx
	jz	_113
	mov	ebx,[ebp-28]
	shl	ebx,byte 1
	mov	[ebp-28],ebx
_113
	mov	ebx,[_vscaletiles]
	and	ebx,ebx
	jz	_114
	mov	ebx,[ebp-32]
	shl	ebx,byte 1
	mov	[ebp-32],ebx
_114
	sub	esp,20
	mov	eax,_vmapname
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_115
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritestring
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[_vtilesmax]
	mov	[esp+4],ebx
	call	_fwriteint
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fwriteint
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fwriteint
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fwriteint
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	call	_fwriteint
	mov	ebx,[_vmappadding]
	and	ebx,ebx
	jz	_116
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fwritepaddingrowdata
_116
	mov	[ebp-12],0
	jmp	_117
_118
	mov	ebx,[_vmappadding]
	and	ebx,ebx
	jz	_119
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fwriteint
_119
	mov	[ebp-8],0
	jmp	_120
_121
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,_atilemap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-12]
	add	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_atilemap]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fwriteint
	add	[ebp-8],1
_120
	mov	ebx,[_vmapsizex]
	sub	ebx,1
	cmp	[ebp-8],ebx
	jle	_121
_28
	mov	ebx,[_vmappadding]
	and	ebx,ebx
	jz	_122
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fwriteint
_122
	add	[ebp-12],1
_117
	mov	ebx,[_vmapsizey]
	sub	ebx,1
	cmp	[ebp-12],ebx
	jle	_118
_27
	mov	ebx,[_vmappadding]
	and	ebx,ebx
	jz	_123
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fwritepaddingrowdata
_123
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fclosefile
	mov	eax,0
	jmp	_26_leave
_26_leave
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsavetilemapmonkey
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,44
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	sub	esp,28
	mov	eax,_124
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_vmapname
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_125
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,_126
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcreatefolder
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fwritefile
	mov	[ebp-16],eax
	mov	ebx,[_vmapsizex]
	mov	[ebp-20],ebx
	mov	ebx,[_vmapsizey]
	mov	[ebp-24],ebx
	mov	ebx,[_vmappadding]
	and	ebx,ebx
	jz	_127
	add	[ebp-20],2
_127
	mov	ebx,[_vmappadding]
	and	ebx,ebx
	jz	_128
	add	[ebp-24],2
_128
	mov	ebx,[_vtilewidth]
	mov	[ebp-28],ebx
	mov	ebx,[_vtileheight]
	mov	[ebp-32],ebx
	mov	ebx,[_vscaletiles]
	and	ebx,ebx
	jz	_129
	mov	ebx,[ebp-28]
	shl	ebx,byte 1
	mov	[ebp-28],ebx
_129
	mov	ebx,[_vscaletiles]
	and	ebx,ebx
	jz	_130
	mov	ebx,[ebp-32]
	shl	ebx,byte 1
	mov	[ebp-32],ebx
_130
	sub	esp,36
	mov	eax,_131
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_132
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_133
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,28
	mov	eax,_134
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_vmapname
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_135
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	sub	esp,20
	mov	eax,_136
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,[_vtilesmax]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	sub	esp,20
	mov	eax,_137
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	sub	esp,20
	mov	eax,_138
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	sub	esp,20
	mov	eax,_139
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	sub	esp,20
	mov	eax,_140
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_141
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_142
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_143
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	_fwriteline
	mov	ebx,[_vmappadding]
	and	ebx,ebx
	jz	_144
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fwritepaddingrowmonkey
_144
	mov	[ebp-12],0
	jmp	_145
_146
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_147
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,[_vmappadding]
	and	ebx,ebx
	jz	_148
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_149
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrStore
_148
	mov	[ebp-8],0
	jmp	_150
_151
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	eax,0
	jle	_152
	sub	esp,20
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_153
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_152
	sub	esp,20
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_atilemap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-12]
	add	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_atilemap]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-8],1
_150
	mov	ebx,[_vmapsizex]
	sub	ebx,1
	cmp	[ebp-8],ebx
	jle	_151
_31
	mov	ebx,[_vmappadding]
	and	ebx,ebx
	jz	_154
	sub	esp,20
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_155
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_154
	mov	ebx,[_vmappadding]
	mov	[ebp-40],ebx
	cmp	[ebp-40],1
	jz	_157
	cmp	[ebp-40],0
	jz	_158
	jmp	_156
_157
	sub	esp,20
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_159
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_156
_158
	mov	ebx,[_vmapsizey]
	sub	ebx,1
	cmp	[ebp-12],ebx
	jge	_160
	sub	esp,20
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_161
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_160
	mov	ebx,[_vmapsizey]
	sub	ebx,1
	cmp	[ebp-12],ebx
	jnz	_162
	sub	esp,20
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_163
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_162
	jmp	_156
_156
	sub	esp,20
	mov	eax,_164
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	_fwriteline
	add	[ebp-12],1
_145
	mov	ebx,[_vmapsizey]
	sub	ebx,1
	cmp	[ebp-12],ebx
	jle	_146
_30
	cmp	[_vmappadding],0
	jle	_165
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fwritepaddingrowmonkey
_165
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_166
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_167
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fclosefile
	mov	eax,0
	jmp	_29_leave
_29_leave
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[ebp-44],eax
	sub	esp,4
	mov	esi,[ebp-36]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-44]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fwritepaddingrowdata
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	ebx,[_vmapsizex]
	mov	[ebp-8],ebx
	mov	ebx,[_vmappadding]
	and	ebx,ebx
	jz	_168
	add	[ebp-8],2
_168
	mov	[ebp-4],0
	jmp	_169
_170
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fwriteint
	add	[ebp-4],1
_169
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_170
_34
	mov	eax,0
	jmp	_33_leave
_33_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fwritepaddingrowmonkey
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_171
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,[_vmapsizex]
	mov	[ebp-12],ebx
	mov	ebx,[_vmappadding]
	and	ebx,ebx
	jz	_172
	add	[ebp-12],2
_172
	mov	[ebp-8],0
	jmp	_173
_174
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	eax,0
	jle	_175
	sub	esp,20
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_176
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_175
	sub	esp,20
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_177
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-8],1
_173
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-8],ebx
	jle	_174
_36
	cmp	[ebp+24],0
	jnz	_178
	sub	esp,20
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_179
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_178
	mov	ebx,[ebp+24]
	and	ebx,ebx
	jz	_180
	sub	esp,20
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_181
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_180
	sub	esp,20
	mov	eax,_182
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	_fwriteline
	mov	eax,0
	jmp	_35_leave
_35_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fcreatefolder
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,_183
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fsystemproperty
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fcreatedir
	mov	eax,0
	jmp	_37_leave
_37_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fscaleimagefast
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,56
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-16],eax
	mov	eax,[ebp-12]
	cmp	[ebp-4],eax
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	mov	ebx,[ebp-16]
	cmp	[ebp-8],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-56]
	and	eax,ebx
	and	eax,eax
	jz	_184
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcopyimage
	jmp	_38_leave
_184
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-20],eax
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-24],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-28],eax
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-32],eax
	sub	esp,8
	mov	eax,[ebp-24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-36],eax
	mov	[ebp-48],0
	jmp	_185
_186
	sub	esp,4
	mov	eax,[ebp-48]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,32
	mov	ebx,[ebp-28]
	mov	[esp+24],ebx
	mov	esi,[ebp-32]
	mov	[esp+28],esi
	mov	[esp+20],0
	mov	ebx,[ebp-48]
	mov	[esp+16],ebx
	mov	esi,[ebp-8]
	mov	[esp+12],esi
	mov	[esp+8],1
	mov	[esp+4],0
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fcopyrect
	add	[ebp-48],1
_185
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-48],ebx
	jle	_186
_39
	mov	[ebp-52],0
	jmp	_187
_188
	sub	esp,4
	mov	eax,[ebp-52]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,32
	mov	ebx,[ebp-32]
	mov	[esp+24],ebx
	mov	esi,[ebp-36]
	mov	[esp+28],esi
	mov	esi,[ebp-52]
	mov	[esp+20],esi
	mov	[esp+16],0
	mov	[esp+12],1
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	esi,[ebp-44]
	mov	[esp+4],esi
	mov	[esp],0
	call	_fcopyrect
	add	[ebp-52],1
_187
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-52],ebx
	jle	_188
_40
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ffreeimage
	mov	eax,[ebp-24]
	jmp	_38_leave
	mov	eax,0
	jmp	_38_leave
_38_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_freadinifile
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_189
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-8],eax
	cmp	[ebp-8],0
	jnz	_190
	mov	eax,0
	jmp	_41_leave
_190
	jmp	_192
_191
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadline
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fgetiniflag
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fgetinivalue
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fupper
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_195
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_194
	sub	esp,12
	lea	eax,[ebp-24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_197
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_196
	jmp	_193
_194
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_198
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_193
_196
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_199
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_193
_193
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_202
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_201
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_204
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_203
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_206
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_205
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_208
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_207
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_210
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_209
	jmp	_200
_201
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[_vscaletiles],eax
	jmp	_200
_203
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[_vtilewidth],eax
	jmp	_200
_205
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[_vtileheight],eax
	jmp	_200
_207
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[_vtilepadding],eax
	jmp	_200
_209
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[_vmappadding],eax
	jmp	_200
_200
_192
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_feof
	cmp	eax,0
	jz	_191
_42
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fclosefile
	mov	eax,0
	jmp	_41_leave
_41_leave
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[ebp-32],eax
	sub	esp,4
	mov	esi,[ebp-28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-32]
	mov	[ebp-32],eax
	sub	esp,4
	mov	esi,[ebp-20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-32]
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[ebp-32],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-32]
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fgetiniflag
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,16
	mov	eax,_211
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	mov	[ebp-4],ebx
	cmp	[ebp-4],0
	jnz	_212
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_45_leave
_212
	sub	esp,12
	mov	[esp+4],1
	mov	esi,[ebp-4]
	sub	esi,1
	mov	[esp+8],esi
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	jmp	_45_leave
	sub	esp,4
	mov	eax,_213
	mov	[esp],eax
	call	__bbStrConst
	jmp	_45_leave
_45_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fgetinivalue
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,16
	mov	eax,_214
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	mov	[ebp-4],ebx
	cmp	[ebp-4],0
	jnz	_215
	sub	esp,4
	mov	eax,_216
	mov	[esp],eax
	call	__bbStrConst
	jmp	_46_leave
_215
	sub	esp,12
	mov	ebx,[ebp-4]
	add	ebx,1
	mov	[esp+4],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	sub	eax,[ebp-4]
	mov	[esp+8],eax
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	jmp	_46_leave
	sub	esp,4
	mov	eax,_217
	mov	[esp],eax
	call	__bbStrConst
	jmp	_46_leave
_46_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
_47	.db	"Map Builder v2.0 - Matthew Smith",0
_48	.db	"",0
	.align	4
_vmapname	.dd	0
_49	.db	"Enter filename of level gfx: ",0
_51	.db	"",0
	.align	4
_atilemap	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_vmapsizex	.dd	0
	.align	4
_vmapsizey	.dd	0
	.align	4
_vscaletiles	.dd	0
	.align	4
_vtilewidth	.dd	0
	.align	4
_vtileheight	.dd	0
	.align	4
_vtilepadding	.dd	0
	.align	4
_vmappadding	.dd	0
	.align	4
_vgfxmap	.dd	0
	.align	4
_vgfxtilestore	.dd	0
	.align	4
_vgfxtilecomparestore	.dd	0
	.align	4
_acolortiles	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_vtilesmax	.dd	0
_52	.db	".png",0
_72	.db	"X",0
_73	.db	"000",0
_74	.db	" Y",0
_75	.db	"000",0
_76	.db	" (",0
_77	.db	"x",0
_78	.db	") ",0
_79	.db	"   ",0
_80	.db	"%",0
_81	.db	"Found:",0
_82	.db	"0000",0
_85	.db	"Process complete! Press any key to exit...",0
_105	.db	"map",0
_106	.db	"map\",0
_107	.db	".bmp",0
_108	.db	"map\",0
_109	.db	".tiles.map",0
_110	.db	"map",0
_115	.db	".png",0
_124	.db	"map\",0
_125	.db	".tiles.monkey.txt",0
_126	.db	"map",0
_131	.db	"'#Region ",0
_132	.db	" MapData ",0
_133	.db	"	'Map summary",0
_134	.db	"	'Map dump file: ",0
_135	.db	".png",0
_136	.db	"	Field TilesMax:Int=",0
_137	.db	"	Field MapSizeX:Int=",0
_138	.db	"	Field MapSizeY:Int=",0
_139	.db	"	Field TileWidth:Int=",0
_140	.db	"	Field TileHeight:Int=",0
_141	.db	"",0
_142	.db	"	'Map Data",0
_143	.db	"	Field TileMap:=[",0
_147	.db	"",0
_149	.db	"0",0
_153	.db	",",0
_155	.db	",0",0
_159	.db	",",0
_161	.db	",",0
_163	.db	"]",0
_164	.db	"	",0
_166	.db	"",0
_167	.db	"'#End Region",0
_171	.db	"",0
_176	.db	",",0
_177	.db	"0",0
_179	.db	",",0
_181	.db	"]",0
_182	.db	"	",0
_183	.db	"appdir",0
_189	.db	"Config.ini",0
_195	.db	"TRUE",0
_197	.db	"FALSE",0
_198	.db	"1",0
_199	.db	"0",0
_202	.db	"SCALETILES",0
_204	.db	"TILEWIDTH",0
_206	.db	"TILEHEIGHT",0
_208	.db	"TILEPADDING",0
_210	.db	"MAPPADDING",0
_211	.db	"=",0
_213	.db	"",0
_214	.db	"=",0
_216	.db	"",0
_217	.db	"",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

