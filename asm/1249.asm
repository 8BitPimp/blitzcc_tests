
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,104
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	sub	esp,4
	mov	eax,_abank_anim
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100
	mov	esi,_abank_anim
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_abank_anim
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_abank_anim_rt
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100
	mov	esi,_abank_anim_rt
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_abank_anim_rt
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_anum_bo
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100
	mov	esi,_anum_bo
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_anum_bo
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_acostante_anim
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_acostante_anim
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_acostante_anim
	mov	[esp],eax
	call	__bbDimArray
	mov	ebx,24050
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	[esi],ebx
	call	_fmillisecs
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,_aload
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_aload
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aload
	mov	[esp],eax
	call	__bbDimArray
	mov	ebx,0
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_aload]
	mov	[esi],ebx
	mov	[ebp-8],100
	sub	esp,4
	mov	eax,_aplay_blending
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-8]
	mov	esi,_aplay_blending
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aplay_blending
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aframe_iniziale
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-8]
	mov	esi,_aframe_iniziale
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aframe_iniziale
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aframe_finale
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-8]
	mov	esi,_aframe_finale
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aframe_finale
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aframe_spazio
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-8]
	mov	esi,_aframe_spazio
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aframe_spazio
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_atipo_blending
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-8]
	mov	esi,_atipo_blending
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atipo_blending
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aattivazione_blending
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-8]
	mov	esi,_aattivazione_blending
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aattivazione_blending
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aincrementale_blending
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-8]
	mov	esi,_aincrementale_blending
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aincrementale_blending
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aframe_blending
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-8]
	mov	esi,_aframe_blending
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aframe_blending
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_atransizione_blending
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-8]
	mov	esi,_atransizione_blending
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atransizione_blending
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_atipologia_blending
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100
	mov	esi,_atipologia_blending
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atipologia_blending
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_23
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[ebp-12],eax
	sub	esp,12
	mov	[esp+4],1120403456
	mov	[esp+8],1120403456
	mov	[esp],1120403456
	call	_fambientlight
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_24
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],0
	call	_floadanimmesh
	mov	[ebp-20],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpositionentity
	mov	[ebp-24],90
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],16
	call	_fentityfx
	sub	esp,4
	mov	eax,_anumero_bones
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_anumero_bones
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_anumero_bones
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_anome_bones
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,5
	mov	esi,_anome_bones
	add	esi,12
	mov	[esi],ebx
	mov	ebx,100
	mov	esi,_anome_bones
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_anome_bones
	mov	[esp],eax
	call	__bbDimArray
	mov	ebx,23
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_anumero_bones]
	mov	[esi],ebx
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_anumero_bones]
	mov	ebx,[ebx]
	mov	[ebp-28],ebx
	sub	esp,4
	mov	eax,_abones
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_abones
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_abones
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_abones
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-32],1000
	sub	esp,4
	mov	eax,_aangolo_bone_x
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_aangolo_bone_x
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-32]
	mov	esi,_aangolo_bone_x
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aangolo_bone_x
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aangolo_bone_y
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_aangolo_bone_y
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-32]
	mov	esi,_aangolo_bone_y
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aangolo_bone_y
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aangolo_bone_z
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_aangolo_bone_z
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-32]
	mov	esi,_aangolo_bone_z
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aangolo_bone_z
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_apos_bone_x
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_apos_bone_x
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-32]
	mov	esi,_apos_bone_x
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_apos_bone_x
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_apos_bone_y
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_apos_bone_y
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-32]
	mov	esi,_apos_bone_y
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_apos_bone_y
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_apos_bone_z
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_apos_bone_z
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-32]
	mov	esi,_apos_bone_z
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_apos_bone_z
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,[ebp-28]
	imul	eax,18
	shl	eax,byte 2
	add	eax,100
	mov	[esp],eax
	call	_fcreatebank
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	[ebx],eax
	sub	esp,4
	mov	eax,_ainiziale_ax
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_ainiziale_ax
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_ainiziale_ax
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ainiziale_ax
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ainiziale_ay
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_ainiziale_ay
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_ainiziale_ay
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ainiziale_ay
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ainiziale_az
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_ainiziale_az
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_ainiziale_az
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ainiziale_az
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ainiziale_pax
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_ainiziale_pax
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_ainiziale_pax
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ainiziale_pax
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ainiziale_pay
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_ainiziale_pay
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_ainiziale_pay
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ainiziale_pay
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ainiziale_paz
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_ainiziale_paz
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_ainiziale_paz
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ainiziale_paz
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aattuale_ax
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_aattuale_ax
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_aattuale_ax
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aattuale_ax
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aattuale_ay
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_aattuale_ay
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_aattuale_ay
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aattuale_ay
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aattuale_az
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_aattuale_az
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_aattuale_az
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aattuale_az
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aattuale_pax
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_aattuale_pax
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_aattuale_pax
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aattuale_pax
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aattuale_pay
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_aattuale_pay
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_aattuale_pay
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aattuale_pay
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aattuale_paz
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_aattuale_paz
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_aattuale_paz
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aattuale_paz
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adifferenza_ax
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_adifferenza_ax
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_adifferenza_ax
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adifferenza_ax
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adifferenza_ay
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_adifferenza_ay
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_adifferenza_ay
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adifferenza_ay
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adifferenza_az
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_adifferenza_az
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_adifferenza_az
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adifferenza_az
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adifferenza_pax
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_adifferenza_pax
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_adifferenza_pax
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adifferenza_pax
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adifferenza_pay
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_adifferenza_pay
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_adifferenza_pay
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adifferenza_pay
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adifferenza_paz
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-28]
	mov	esi,_adifferenza_paz
	add	esi,12
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,_adifferenza_paz
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adifferenza_paz
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fb3dhierarchy
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_aload]
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_25
	mov	[ebp-36],0
	mov	[ebp-40],0
	jmp	_26
_27
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_anome_bones
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-40]
	add	ebx,0
	shl	ebx,byte 2
	add	ebx,[_anome_bones]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	_ffindchild
	mov	ebx,_abones
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-36]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_abones]
	mov	[ebx],eax
	mov	[ebp-32],0
	jmp	_28
_29
	sub	esp,12
	mov	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fsetanimtime
	sub	esp,8
	mov	eax,_abones
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-36]
	add	eax,[ebp-40]
	shl	eax,byte 2
	add	eax,[_abones]
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentitypitch
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,_aangolo_bone_x
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_aangolo_bone_x]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,_abones
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-36]
	add	eax,[ebp-40]
	shl	eax,byte 2
	add	eax,[_abones]
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityyaw
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,_aangolo_bone_y
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_aangolo_bone_y]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,_abones
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-36]
	add	eax,[ebp-40]
	shl	eax,byte 2
	add	eax,[_abones]
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityroll
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,_aangolo_bone_z
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_aangolo_bone_z]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,_abones
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-36]
	add	eax,[ebp-40]
	shl	eax,byte 2
	add	eax,[_abones]
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,_apos_bone_x
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apos_bone_x]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,_abones
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-36]
	add	eax,[ebp-40]
	shl	eax,byte 2
	add	eax,[_abones]
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,_apos_bone_y
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apos_bone_y]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,_abones
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-36]
	add	eax,[ebp-40]
	shl	eax,byte 2
	add	eax,[_abones]
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,_apos_bone_z
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apos_bone_z]
	mov	[ebx],eax
	add	[ebp-32],1
_28
	cmp	[ebp-32],699
	jle	_29
_4
	add	[ebp-40],1
_26
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_anumero_bones]
	mov	ebx,[ebx]
	cmp	[ebp-40],ebx
	jle	_27
_3
	call	_fmillisecs
	sub	eax,[ebp-4]
	mov	[ebp-44],eax
	sub	esp,8
	mov	eax,_30
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fwritefile
	mov	[ebp-48],eax
	mov	[ebp-40],0
	jmp	_31
_32
	mov	[ebp-32],0
	jmp	_33
_34
	sub	esp,8
	mov	eax,[ebp-48]
	mov	[esp],eax
	mov	ebx,_aangolo_bone_x
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_aangolo_bone_x]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fwritefloat
	sub	esp,8
	mov	eax,[ebp-48]
	mov	[esp],eax
	mov	ebx,_aangolo_bone_y
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_aangolo_bone_y]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fwritefloat
	sub	esp,8
	mov	eax,[ebp-48]
	mov	[esp],eax
	mov	ebx,_aangolo_bone_z
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_aangolo_bone_z]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fwritefloat
	sub	esp,8
	mov	eax,[ebp-48]
	mov	[esp],eax
	mov	ebx,_apos_bone_x
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apos_bone_x]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fwritefloat
	sub	esp,8
	mov	eax,[ebp-48]
	mov	[esp],eax
	mov	ebx,_apos_bone_y
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apos_bone_y]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fwritefloat
	sub	esp,8
	mov	eax,[ebp-48]
	mov	[esp],eax
	mov	ebx,_apos_bone_z
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apos_bone_z]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fwritefloat
	add	[ebp-32],1
_33
	cmp	[ebp-32],1000
	jle	_34
_6
	add	[ebp-40],1
_31
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_anumero_bones]
	mov	ebx,[ebx]
	cmp	[ebp-40],ebx
	jle	_32
_5
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fclosefile
_25
	mov	[ebp-36],0
	sub	esp,8
	mov	eax,_35
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-48],eax
	mov	[ebp-40],0
	jmp	_36
_37
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_anome_bones
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-40]
	add	ebx,0
	shl	ebx,byte 2
	add	ebx,[_anome_bones]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	_ffindchild
	mov	ebx,_abones
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-36]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_abones]
	mov	[ebx],eax
	mov	[ebp-32],0
	jmp	_38
_39
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,_aangolo_bone_x
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_aangolo_bone_x]
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,_aangolo_bone_y
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_aangolo_bone_y]
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,_aangolo_bone_z
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_aangolo_bone_z]
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,_apos_bone_x
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apos_bone_x]
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,_apos_bone_y
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apos_bone_y]
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,_apos_bone_z
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-32]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apos_bone_z]
	mov	[ebx],eax
	add	[ebp-32],1
_38
	cmp	[ebp-32],1000
	jle	_39
_8
	add	[ebp-40],1
_36
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_anumero_bones]
	mov	ebx,[ebx]
	cmp	[ebp-40],ebx
	jle	_37
_7
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fclosefile
	sub	esp,8
	mov	eax,_40
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-48],eax
	sub	esp,4
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_acostante_anim]
	mov	eax,[eax]
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_anumero_bones]
	mov	ebx,[ebx]
	add	ebx,1
	imul	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1103154381
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcreatebank
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim]
	mov	[ebx],eax
	mov	[ebp-40],0
	jmp	_41
_42
	mov	[ebp-32],0
	jmp	_43
_44
	sub	esp,12
	mov	ebx,[ebp-32]
	imul	ebx,24
	add	ebx,0
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-40]
	add	ebx,esi
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-32]
	imul	ebx,24
	add	ebx,4
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-40]
	add	ebx,esi
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-32]
	imul	ebx,24
	add	ebx,8
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-40]
	add	ebx,esi
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-32]
	imul	ebx,24
	add	ebx,12
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-40]
	add	ebx,esi
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-32]
	imul	ebx,24
	add	ebx,16
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-40]
	add	ebx,esi
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-32]
	imul	ebx,24
	add	ebx,20
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-40]
	add	ebx,esi
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	add	[ebp-32],1
_43
	cmp	[ebp-32],1000
	jle	_44
_10
	add	[ebp-40],1
_41
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_anumero_bones]
	mov	ebx,[ebx]
	cmp	[ebp-40],ebx
	jle	_42
_9
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fclosefile
	mov	[ebp-52],0
	call	_fmillisecs
	sub	eax,[ebp-4]
	mov	[ebp-56],eax
	mov	[ebp-60],1
	sub	esp,20
	mov	[esp+12],1084227584
	mov	[esp+16],0
	mov	[esp+8],1084227584
	mov	[esp+4],1084227584
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fpointentity
	sub	esp,28
	mov	[esp+20],2
	mov	[esp+24],40
	mov	[esp+16],639
	mov	[esp+12],0
	mov	[esp+8],2
	mov	[esp+4],1
	mov	[esp],0
	call	_fset_anim_mnz
	jmp	_46
_45
	sub	esp,4
	mov	[esp],2
	call	_fkeyhit
	and	eax,eax
	jz	_47
	sub	esp,28
	mov	[esp+20],1
	mov	[esp+24],4
	mov	[esp+16],118
	mov	[esp+12],91
	mov	[esp+8],2
	mov	[esp+4],1
	mov	[esp],0
	call	_fset_anim_mnz
_47
	sub	esp,4
	mov	[esp],75
	call	_fkeydown
	and	eax,eax
	jz	_48
	mov	ebx,[ebp-64]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1008981770
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-64],ebx
_48
	sub	esp,4
	mov	[esp],77
	call	_fkeydown
	and	eax,eax
	jz	_49
	mov	ebx,[ebp-64]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1008981770
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-64],ebx
_49
	call	_fmillisecs
	mov	[ebp-68],eax
	mov	ebx,[ebp-68]
	sub	ebx,[ebp-76]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1148846080
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	mov	ebx,[ebp-68]
	mov	[ebp-76],ebx
	mov	ebx,1101004800
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-72]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-80],ebx
	sub	esp,20
	mov	[esp],205
	call	_fkeydown
	mov	[ebp-100],eax
	sub	esp,4
	mov	[esp],203
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-100]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-80]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[esp],200
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	[esp],208
	mov	eax,esi
	call	_fkeydown
	mov	esi,eax
	mov	eax,[ebp-100]
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+8],0
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fmoveentity
	mov	ebx,eax
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_50
	mov	[ebp-84],1061997773
	sub	esp,20
	call	_fmouseyspeed
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-84]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fturnentity
	mov	ebx,eax
	sub	esp,20
	call	_fmousexspeed
	push	eax
	fild	[esp]
	pop	eax
	fchs
	mov	ebx,[ebp-84]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],1
	mov	[esp+4],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fturnentity
	jmp	_51
_50
	call	_fmousexspeed
	call	_fmouseyspeed
_51
	sub	[ebp-88],1
	sub	esp,4
	mov	[esp],59
	call	_fkeydown
	and	eax,eax
	jz	_52
	sub	esp,28
	mov	[esp+20],2
	mov	[esp+24],40
	mov	[esp+16],50
	mov	[esp+12],0
	mov	[esp+8],2
	mov	[esp+4],1
	mov	[esp],0
	call	_fset_anim_mnz
_52
	sub	esp,4
	mov	[esp],60
	call	_fkeydown
	and	eax,eax
	jz	_53
	sub	esp,28
	mov	[esp+20],2
	mov	[esp+24],10
	mov	[esp+16],150
	mov	[esp+12],100
	mov	[esp+8],2
	mov	[esp+4],1
	mov	[esp],0
	call	_fset_anim_mnz
_53
	sub	esp,4
	mov	[esp],64
	call	_fkeydown
	mov	[ebp-100],eax
	cmp	[ebp-88],0
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-100]
	and	eax,ebx
	and	eax,eax
	jz	_54
	mov	[ebp-88],3
	add	[_vmu],1
	cmp	[_vmu],78
	jnz	_55
	mov	[_vmu],78
_55
	sub	esp,28
	mov	[esp+20],1
	mov	[esp+24],1
	mov	esi,[_vmu]
	mov	[esp+16],esi
	mov	ebx,[_vmu]
	mov	[esp+12],ebx
	mov	[esp+8],2
	mov	[esp+4],1
	mov	[esp],0
	call	_fset_anim_mnz
_54
	sub	esp,4
	mov	[esp],62
	call	_fkeydown
	mov	[ebp-100],eax
	cmp	[ebp-88],0
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-100]
	and	eax,ebx
	and	eax,eax
	jz	_56
	mov	[ebp-88],3
	sub	[_vmu],1
	cmp	[_vmu],0
	jge	_57
	mov	[_vmu],0
_57
	sub	esp,28
	mov	[esp+20],1
	mov	[esp+24],1
	mov	esi,[_vmu]
	mov	[esp+16],esi
	mov	ebx,[_vmu]
	mov	[esp+12],ebx
	mov	[esp+8],2
	mov	[esp+4],1
	mov	[esp],0
	call	_fset_anim_mnz
_56
	call	_fmillisecs
	mov	[ebp-92],eax
	sub	esp,4
	mov	[esp],0
	call	_fanim_mnz_poke_new
	call	_fmillisecs
	sub	eax,[ebp-92]
	mov	[ebp-96],eax
	sub	esp,4
	mov	[esp],1065353216
	call	_fupdateworld
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	mov	[ebp-36],0
	sub	esp,32
	mov	eax,_58
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,[ebp-96]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],80
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_59
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_aframe_blending]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],100
	mov	[esp],500
	call	_ftext
	sub	esp,32
	mov	eax,_60
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fanimlength
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],180
	mov	[esp],10
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
_46
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_45
_11
	call	_fend
	ret
_2_leave
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fpoint_entity
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityx
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityy
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityz
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fatan2
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fatan2
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-24],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	esi,[ebp-24]
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_frotateentity
	mov	eax,0
	jmp	_12_leave
_12_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fangledifference
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	eax,[ebp+24]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],1135869952
	call	__bbFMod
	mov	ebx,1141309440
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],1135869952
	call	__bbFMod
	mov	ebx,1127481344
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	jmp	_13_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_13_leave
_13_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fset_anim_mnz
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+28]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aattivazione_blending]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aframe_iniziale]
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aframe_finale]
	mov	[esi],ebx
	mov	ebx,[ebp+40]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aframe_spazio]
	mov	[esi],ebx
	mov	ebx,[ebp+44]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_atransizione_blending]
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_atipologia_blending]
	mov	[esi],ebx
	mov	eax,0
	jmp	_14_leave
_14_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 28
	.align	16
_fanim_mnz_poke_new
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aattivazione_blending]
	mov	ebx,[ebx]
	cmp	ebx,2
	jnz	_61
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aincrementale_blending]
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_62
	mov	[ebp-4],0
	jmp	_63
_64
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,24
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,0
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,28
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,4
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,32
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,8
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,28
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,24
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_iniziale]
	mov	ebx,[ebx]
	imul	ebx,24
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_abank_anim]
	mov	esi,[esi]
	mov	[esp],esi
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_fangledifference
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_atransizione_blending]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,48
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,28
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,28
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_iniziale]
	mov	ebx,[ebx]
	imul	ebx,24
	add	ebx,4
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_abank_anim]
	mov	esi,[esi]
	mov	[esp],esi
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_fangledifference
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_atransizione_blending]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,52
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,28
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,32
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_iniziale]
	mov	ebx,[ebx]
	imul	ebx,24
	add	ebx,8
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_abank_anim]
	mov	esi,[esi]
	mov	[esp],esi
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_fangledifference
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_atransizione_blending]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,56
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,36
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,12
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,40
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,16
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,44
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,20
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,36
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_iniziale]
	mov	ebx,[ebx]
	imul	ebx,24
	add	ebx,12
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_abank_anim]
	mov	esi,[esi]
	mov	[esp],esi
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fsubp	st(1)
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_atransizione_blending]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,60
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,40
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_iniziale]
	mov	ebx,[ebx]
	imul	ebx,24
	add	ebx,16
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_abank_anim]
	mov	esi,[esi]
	mov	[esp],esi
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fsubp	st(1)
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_atransizione_blending]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,64
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,44
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_iniziale]
	mov	ebx,[ebx]
	imul	ebx,24
	add	ebx,20
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_abank_anim]
	mov	esi,[esi]
	mov	[esp],esi
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fsubp	st(1)
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_atransizione_blending]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,68
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	add	[ebp-4],1
_63
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_anumero_bones]
	mov	ebx,[ebx]
	cmp	[ebp-4],ebx
	jle	_64
_16
_62
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aincrementale_blending]
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	[esi],ebx
	mov	[ebp-4],0
	jmp	_65
_66
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,0
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,48
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,24
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,4
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,52
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,28
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,8
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,56
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,32
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,28
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,28
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,32
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,24
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,_abones
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp+20]
	add	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_abones]
	mov	eax,[eax]
	mov	[esp],eax
	call	_frotateentity
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,12
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,60
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,36
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,16
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,64
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,40
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,20
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,68
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,44
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,28
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,40
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,44
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,36
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,_abones
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp+20]
	add	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_abones]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpositionentity
	add	[ebp-4],1
_65
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_anumero_bones]
	mov	ebx,[ebx]
	cmp	[ebp-4],ebx
	jle	_66
_17
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aincrementale_blending]
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_atransizione_blending]
	mov	esi,[esi]
	cmp	ebx,esi
	jl	_67
	mov	ebx,1
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aattivazione_blending]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_iniziale]
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aframe_blending]
	mov	[esi],ebx
_67
_61
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_aattivazione_blending]
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_atipologia_blending]
	mov	ebx,[ebx]
	cmp	ebx,1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_68
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aincrementale_blending]
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_69
	mov	[ebp-4],0
	jmp	_70
_71
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,24
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,0
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,28
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,4
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,32
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,8
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,28
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,24
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_blending]
	mov	ebx,[ebx]
	imul	ebx,24
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_abank_anim]
	mov	esi,[esi]
	mov	[esp],esi
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_fangledifference
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_spazio]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,48
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,28
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,28
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_blending]
	mov	ebx,[ebx]
	imul	ebx,24
	add	ebx,4
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_abank_anim]
	mov	esi,[esi]
	mov	[esp],esi
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_fangledifference
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_spazio]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,52
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,28
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,32
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_blending]
	mov	ebx,[ebx]
	imul	ebx,24
	add	ebx,8
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_abank_anim]
	mov	esi,[esi]
	mov	[esp],esi
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_fangledifference
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_spazio]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,56
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,36
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,12
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,40
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,16
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,44
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,20
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,36
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_blending]
	mov	ebx,[ebx]
	imul	ebx,24
	add	ebx,12
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_abank_anim]
	mov	esi,[esi]
	mov	[esp],esi
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fsubp	st(1)
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_spazio]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,60
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,40
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_blending]
	mov	ebx,[ebx]
	imul	ebx,24
	add	ebx,16
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_abank_anim]
	mov	esi,[esi]
	mov	[esp],esi
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fsubp	st(1)
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_spazio]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,64
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,44
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_blending]
	mov	ebx,[ebx]
	imul	ebx,24
	add	ebx,20
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_acostante_anim]
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_abank_anim]
	mov	esi,[esi]
	mov	[esp],esi
	mov	eax,esi
	call	_fpeekfloat
	mov	esi,eax
	mov	eax,[ebp-8]
	fsubp	st(1)
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_spazio]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,68
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	add	[ebp-4],1
_70
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_anumero_bones]
	mov	ebx,[ebx]
	cmp	[ebp-4],ebx
	jle	_71
_18
_69
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aincrementale_blending]
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	[esi],ebx
	mov	[ebp-4],0
	jmp	_72
_73
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,0
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,48
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,24
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,4
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,52
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,28
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,8
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,56
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,32
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,28
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,28
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,32
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,24
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,_abones
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp+20]
	add	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_abones]
	mov	eax,[eax]
	mov	[esp],eax
	call	_frotateentity
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,12
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,60
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,36
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,16
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,64
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,40
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,20
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,20
	mov	[esp+4],ebx
	call	_fpeekfloat
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,68
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,44
	mov	[esp+4],ebx
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,28
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_abank_anim_rt]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,72
	add	ebx,40
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,44
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_abank_anim_rt]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	imul	esi,72
	add	esi,36
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fpeekfloat
	mov	ebx,eax
	mov	eax,[ebp-8]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,_abones
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp+20]
	add	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_abones]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpositionentity
	add	[ebp-4],1
_72
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_anumero_bones]
	mov	ebx,[ebx]
	cmp	[ebp-4],ebx
	jle	_73
_19
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aincrementale_blending]
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aframe_spazio]
	mov	esi,[esi]
	cmp	ebx,esi
	jl	_74
	mov	ebx,1
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aattivazione_blending]
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_blending]
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aframe_blending]
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_aframe_blending]
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aframe_finale]
	mov	esi,[esi]
	cmp	ebx,esi
	jle	_75
	mov	ebx,2
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aattivazione_blending]
	mov	[esi],ebx
_75
	mov	ebx,0
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_aincrementale_blending]
	mov	[esi],ebx
_74
_68
	mov	eax,0
	jmp	_15_leave
_15_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fb3dhierarchy
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountchildren
	mov	[ebp-4],eax
	mov	[ebp-8],1
	jmp	_76
_77
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetchild
	mov	[ebp-12],eax
	sub	esp,8
	mov	eax,[ebp+24]
	shl	eax,byte 2
	add	eax,[_anum_bo]
	mov	eax,[eax]
	mov	ebx,_anome_bones
	add	ebx,12
	mov	ebx,[ebx]
	imul	eax,ebx
	add	eax,[ebp+24]
	shl	eax,byte 2
	add	eax,[_anome_bones]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fentityname
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,[ebp+24]
	shl	ebx,byte 2
	add	ebx,[_anum_bo]
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp+24]
	shl	esi,byte 2
	add	esi,[_anum_bo]
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fb3dhierarchy
	add	[ebp-8],1
_76
	mov	ebx,[ebp-4]
	cmp	[ebp-8],ebx
	jle	_77
_21
	mov	eax,0
	jmp	_20_leave
_20_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	4
_abank_anim	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_abank_anim_rt	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_anum_bo	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_acostante_anim	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aload	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_vmu	.dd	0
	.align	4
_aplay_blending	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aframe_iniziale	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aframe_finale	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aframe_spazio	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_atipo_blending	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aattivazione_blending	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aincrementale_blending	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aframe_blending	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_atransizione_blending	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_atipologia_blending	.dd	0
	.dd	1
	.dd	1
	.dd	0
_22	.db	"mnz compiler 001",0
_23	.db	"Sei sicuro?",0
_24	.db	"load a animfile b3d",0
	.align	4
_anumero_bones	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_anome_bones	.dd	0
	.dd	3
	.dd	2
	.dd	0
	.dd	0
	.align	4
_abones	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aangolo_bone_x	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aangolo_bone_y	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aangolo_bone_z	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_apos_bone_x	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_apos_bone_y	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_apos_bone_z	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ainiziale_ax	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ainiziale_ay	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ainiziale_az	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ainiziale_pax	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ainiziale_pay	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ainiziale_paz	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aattuale_ax	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aattuale_ay	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aattuale_az	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aattuale_pax	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aattuale_pay	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aattuale_paz	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_adifferenza_ax	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_adifferenza_ay	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_adifferenza_az	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_adifferenza_pax	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_adifferenza_pay	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_adifferenza_paz	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
_30	.db	"dati_scheletro_001.txt",0
_35	.db	"dati_scheletro_001.txt",0
_40	.db	"dati_scheletro_001.txt",0
_58	.db	"te2 ",0
_59	.db	"frame_blending(num)",0
_60	.db	"AnimLength (mesh)",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

