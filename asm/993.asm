
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics3d
	call	_fvglinit
	sub	esp,4
	mov	[esp],-39905517
	call	_fvglenable
	sub	esp,4
	mov	[esp],-1160637442
	call	_fvgldisable
	mov	[ebp-4],1
_43
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvglclear
	sub	esp,4
	mov	[esp],5
	call	_fvglbegin
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fvglvertex3f
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1065353216
	mov	[esp+4],1065353216
	mov	[esp],0
	call	_fvglcolor4f
	mov	[ebp-12],0
	jmp	_44
_45
	sub	esp,16
	mov	eax,[ebp-12]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1093926912
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1093926912
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcos
	mov	ebx,eax
	mov	eax,[ebp-20]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+8],0
	call	_fvglvertex3f
	sub	esp,20
	mov	eax,[ebp-12]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1093926912
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1090453504
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[esp+12],128
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1093926912
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsin
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esi,1132396544
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvglcolor4b
	mov	ebx,eax
	add	[ebp-12],1
_44
	cmp	[ebp-12],32
	jle	_45
_5
	call	_fvglend
	sub	esp,16
	call	_fmillisecs
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1114636288
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+8],1065353216
	mov	[esp+12],1048576000
	mov	[esp+4],1056964608
	call	_fvglrotatef
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],1082130432
	mov	[esp],0
	call	_fvgltranslatef
	sub	esp,4
	mov	[esp],57
	call	_fkeyhit
	and	eax,eax
	jz	_46
	cmp	[ebp-4],0
	setz	al
	movzx	eax,al
	mov	[ebp-4],eax
_46
	mov	ebx,[ebp-4]
	and	ebx,ebx
	jz	_47
	call	_fvglpushmatrix
_47
	sub	esp,4
	mov	[esp],1
	call	_fvglbegin
	sub	esp,12
	mov	[esp+4],-1082130432
	mov	[esp+8],0
	mov	[esp],-1082130432
	call	_fvglvertex3f
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1065353216
	mov	[esp+4],0
	mov	[esp],1065353216
	call	_fvglcolor4f
	sub	esp,12
	mov	[esp+4],1065353216
	mov	[esp+8],0
	mov	[esp],0
	call	_fvglvertex3f
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1065353216
	mov	[esp+4],1065353216
	mov	[esp],0
	call	_fvglcolor4f
	sub	esp,12
	mov	[esp+4],-1082130432
	mov	[esp+8],0
	mov	[esp],1065353216
	call	_fvglvertex3f
	sub	esp,16
	mov	[esp+8],1065353216
	mov	[esp+12],1065353216
	mov	[esp+4],0
	mov	[esp],0
	call	_fvglcolor4f
	call	_fvglend
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],1082130432
	mov	[esp],0
	call	_fvgltranslatef
	sub	esp,16
	call	_fmillisecs
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1114636288
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+8],1065353216
	mov	[esp+12],0
	mov	[esp+4],0
	call	_fvglrotatef
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],1082130432
	mov	[esp],0
	call	_fvgltranslatef
	mov	ebx,[ebp-4]
	and	ebx,ebx
	jz	_48
	call	_fvglpopmatrix
_48
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],_terror
	call	__bbObjEachFirst
	and	eax,eax
	jz	_6
_49
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	call	_fdebuglog
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_49
_6
	call	_fvglflip
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_43
_4
	call	_fvglquit
	mov	[_vvgl_draw_mode],0
	mov	[_vvglcommondata],0
	mov	[_vvgldisplaylistdata],0
	mov	[_vvglvertexarraydata],0
	mov	[_vvglbeginopen],0
	mov	[_vvglcullfaces],0
	mov	[_vvglupdatenormals],0
	mov	[_vvglvertexalpha],0
	sub	esp,4
	mov	eax,_avglstack
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_avglstack
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_avglstack
	mov	[esp],eax
	call	__bbDimArray
	mov	[_vvglstackoffset],0
	ret
_2_leave
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fvglinit
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	[esp],0
	call	_fcreatebank
	mov	[_vvglcommondata],eax
	sub	esp,4
	mov	[esp],0
	call	_fcreatebank
	mov	[_vvgldisplaylistdata],eax
	sub	esp,4
	mov	[esp],0
	call	_fcreatebank
	mov	[_vvglvertexarraydata],eax
	sub	esp,4
	mov	[esp],0
	call	_fcreatemesh
	mov	[_vvgldisplaymesh],eax
	sub	esp,8
	mov	eax,[_vvgldisplaymesh]
	mov	[esp],eax
	mov	[esp+4],3
	call	_fentityfx
	sub	esp,8
	mov	[esp],_vnulltexture
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_tsurface
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[_vvgldisplaymesh]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcreatesurface
	mov	ebx,[_vvglstackoffset]
	shl	ebx,byte 2
	mov	esi,[_vnulltexture]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	mov	[ebx],eax
	sub	esp,8
	mov	[esp],_vvglcurrenttexture
	mov	ebx,[_vnulltexture]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[_vvglviewport],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],1
	mov	eax,[_vvglviewport]
	mov	[esp],eax
	call	_fcameraclsmode
	sub	esp,4
	mov	eax,_avglstack
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,32
	mov	esi,_avglstack
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_avglstack
	mov	[esp],eax
	call	__bbDimArray
	mov	ebx,[_vvgldisplaymesh]
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_avglstack]
	mov	[esi],ebx
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fvglquit
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,4
	mov	eax,[_vvglcommondata]
	mov	[esp],eax
	call	_ffreebank
	sub	esp,4
	mov	eax,[_vvgldisplaylistdata]
	mov	[esp],eax
	call	_ffreebank
	sub	esp,4
	mov	eax,[_vvglvertexarraydata]
	mov	[esp],eax
	call	_ffreebank
	sub	esp,4
	mov	eax,[_vvgldisplaymesh]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_9
_56
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_57
	sub	esp,4
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreebrush
_57
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_56
_9
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fvglbegin
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[_vvglcommondata],0
	setnz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[_vvgldisplaylistdata],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	mov	[ebp-8],eax
	cmp	[_vvglvertexarraydata],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	mov	[ebp-8],eax
	cmp	[_vvgldisplaymesh],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	cmp	eax,0
	jnz	_58
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fvglerror
_58
	mov	[_vvglbeginopen],1
	sub	esp,4
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcountvertices
	mov	[_vvglvertexoffset],eax
	mov	ebx,[ebp+20]
	mov	[_vvgl_draw_mode],ebx
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fvglend
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	ebx,[_vvgl_draw_mode]
	mov	[ebp-4],ebx
	cmp	[ebp-4],1
	jz	_60
	cmp	[ebp-4],2
	jz	_61
	cmp	[ebp-4],3
	jz	_62
	cmp	[ebp-4],4
	jz	_63
	cmp	[ebp-4],5
	jz	_64
	cmp	[ebp-4],6
	jz	_65
	cmp	[ebp-4],7
	jz	_66
	cmp	[ebp-4],8
	jz	_67
	cmp	[ebp-4],9
	jz	_68
	cmp	[ebp-4],10
	jz	_69
	sub	esp,4
	mov	[esp],-470089983
	call	_fvglerror
	jmp	_59
_60
	mov	ebx,[_vvglvertexoffset]
	mov	[ebp-8],ebx
	jmp	_71
_70
	sub	esp,16
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	add	ebx,1
	mov	[esp+8],ebx
	mov	esi,[ebp-8]
	add	esi,2
	mov	[esp+12],esi
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	call	_faddtriangle
	add	[ebp-8],3
_71
	sub	esp,4
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,1
	mov	ebx,[ebp-8]
	add	ebx,2
	cmp	ebx,eax
	jle	_70
_13
	jmp	_59
_61
	mov	ebx,[_vvglvertexoffset]
	mov	[ebp-8],ebx
	jmp	_73
_72
	sub	esp,16
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	add	ebx,1
	mov	[esp+8],ebx
	mov	esi,[ebp-8]
	add	esi,2
	mov	[esp+12],esi
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	call	_faddtriangle
	sub	esp,16
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	add	ebx,3
	mov	[esp+8],ebx
	mov	esi,[ebp-8]
	mov	[esp+12],esi
	mov	esi,[ebp-8]
	add	esi,2
	mov	[esp+4],esi
	call	_faddtriangle
	add	[ebp-8],4
_73
	sub	esp,4
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,1
	mov	ebx,[ebp-8]
	add	ebx,3
	cmp	ebx,eax
	jle	_72
_14
	jmp	_59
_62
	jmp	_59
_63
	jmp	_59
_64
	mov	ebx,[_vvglvertexoffset]
	mov	[ebp-8],ebx
	jmp	_75
_74
	sub	esp,16
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	add	ebx,1
	mov	[esp+8],ebx
	mov	esi,[ebp-8]
	add	esi,2
	mov	[esp+12],esi
	mov	esi,[_vvglvertexoffset]
	mov	[esp+4],esi
	call	_faddtriangle
	add	[ebp-8],1
_75
	sub	esp,4
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,1
	mov	ebx,[ebp-8]
	add	ebx,2
	cmp	ebx,eax
	jle	_74
_15
	jmp	_59
_65
	jmp	_59
_66
	jmp	_59
_67
	jmp	_59
_68
	jmp	_59
_69
	jmp	_59
_59
	sub	esp,4
	mov	eax,[_vvglcommondata]
	mov	[esp],eax
	call	_ffreebank
	sub	esp,4
	mov	[esp],0
	call	_fcreatebank
	mov	[_vvglcommondata],eax
	mov	[_vvgl_draw_mode],0
	mov	[_vvglvertexoffset],0
	mov	[_vvglbeginopen],0
	sub	esp,8
	mov	[esp],_vvglcurrenttexture
	mov	ebx,[_vnulltexture]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	eax,1
	jmp	_11_leave
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fvglvertex3f
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	cmp	[_vvgl_draw_mode],0
	jnz	_76
	mov	eax,0
	jmp	_16_leave
_76
	sub	esp,28
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	ebx,[ebp+28]
	mov	[esp+12],ebx
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	call	_faddvertex
	mov	eax,0
	jmp	_16_leave
_16_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fvgltexcoord2f
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,[_vvglvertexoffset]
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-4],eax
	cmp	[_vvgl_draw_mode],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	or	ebx,eax
	and	ebx,ebx
	jz	_77
	mov	eax,0
	jmp	_17_leave
_77
	sub	esp,28
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,1
	mov	[esp+4],eax
	mov	[esp+16],0
	mov	[esp+20],0
	mov	esi,[ebp+24]
	mov	[esp+12],esi
	mov	ebx,[ebp+20]
	mov	[esp+8],ebx
	mov	ebx,[_vvglstackoffset]
	shl	ebx,byte 2
	mov	esi,[_vvglcurrenttexture]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertextexcoords
	mov	ebx,eax
	mov	eax,0
	jmp	_17_leave
_17_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fvglnormal3f
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,[_vvglvertexoffset]
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-4],eax
	cmp	[_vvgl_draw_mode],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	or	ebx,eax
	and	ebx,ebx
	jz	_78
	mov	eax,0
	jmp	_18_leave
_78
	sub	esp,24
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,1
	mov	[esp+4],eax
	mov	ebx,[ebp+24]
	mov	[esp+12],ebx
	mov	esi,[ebp+28]
	mov	[esp+16],esi
	mov	esi,[ebp+20]
	mov	[esp+8],esi
	mov	ebx,[_vvglstackoffset]
	shl	ebx,byte 2
	mov	esi,[_vvglcurrenttexture]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexnormal
	mov	ebx,eax
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fvglcolor4f
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,[_vvglvertexoffset]
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-4],eax
	cmp	[_vvgl_draw_mode],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	or	ebx,eax
	and	ebx,ebx
	jz	_79
	mov	eax,0
	jmp	_19_leave
_79
	sub	esp,24
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1132396544
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1132396544
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+16],esi
	mov	edi,[ebp+32]
	mov	[esp+20],edi
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1132396544
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	sub	esp,4
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,1
	mov	[esp+4],eax
	mov	ebx,[_vvglstackoffset]
	shl	ebx,byte 2
	mov	esi,[_vvglcurrenttexture]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexcolor
	mov	ebx,eax
	mov	eax,0
	jmp	_19_leave
_19_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fvglcolor4b
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,[_vvglvertexoffset]
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-4],eax
	cmp	[_vvgl_draw_mode],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	or	ebx,eax
	and	ebx,ebx
	jz	_80
	mov	eax,0
	jmp	_20_leave
_80
	sub	esp,28
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[_vvglcurrenttexture]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,1
	mov	[esp+4],eax
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1132396544
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+20],ebx
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+16],esi
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[_vvglstackoffset]
	shl	ebx,byte 2
	mov	esi,[_vvglcurrenttexture]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexcolor
	mov	ebx,eax
	mov	eax,0
	jmp	_20_leave
_20_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fvglflip
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	cmp	[_vvglcullfaces],0
	setz	al
	movzx	eax,al
	shl	eax,byte 4
	add	eax,3
	mov	ebx,[_vvglvertexalpha]
	shl	ebx,byte 5
	add	eax,ebx
	mov	[esp+4],eax
	mov	ebx,[_vvgldisplaymesh]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fentityfx
	mov	ebx,eax
	mov	ebx,[_vvglupdatenormals]
	and	ebx,ebx
	jz	_81
	sub	esp,4
	mov	eax,[_vvgldisplaymesh]
	mov	[esp],eax
	call	_fupdatenormals
_81
	sub	esp,4
	mov	[esp],1065353216
	call	_fupdateworld
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	sub	esp,4
	mov	[esp],0
	call	_fflip
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_22
_82
	mov	[ebp-8],0
	jmp	_83
_84
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_85
	sub	esp,12
	mov	eax,[ebp-8]
	shl	eax,byte 2
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	mov	[esp+8],1
	call	_fclearsurface
_85
	add	[ebp-8],1
_83
	cmp	[ebp-8],32
	jle	_84
_23
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_82
_22
	mov	eax,0
	jmp	_21_leave
_21_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fvglerror
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_terror
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	eax,0
	jmp	_24_leave
_24_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fvglgeterror
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_terror
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjLast
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	mov	eax,0
	jmp	_25_leave
_25_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fvglcalllist
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,0
	jmp	_26_leave
_26_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fvgladdvertex
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,8
	mov	eax,[_vvglcommondata]
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vvglcommondata]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fbanksize
	mov	ebx,eax
	mov	eax,[ebp-4]
	add	ebx,32
	add	ebx,2
	mov	[esp+4],ebx
	call	_fresizebank
	sub	esp,4
	mov	eax,[_vvglcommondata]
	mov	[esp],eax
	call	_fbanksize
	sub	eax,32
	sub	eax,2
	jmp	_27_leave
	mov	eax,0
	jmp	_27_leave
_27_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fvglloadtexture
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,16
	mov	[esp+8],1065353216
	mov	[esp+12],1065353216
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadbrush
	mov	[ebp-4],eax
	cmp	[ebp-4],0
	jz	_86
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_tsurface
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-4]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[_vvgldisplaymesh]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcreatesurface
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fpaintsurface
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjToHandle
	jmp	_28_leave
_86
	mov	eax,0
	jmp	_28_leave
	mov	eax,0
	jmp	_28_leave
_28_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[ebp-12],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fvglbindtexture
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,16
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],_tsurface
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-8],eax
	cmp	[_vvgl_draw_mode],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	ebx,eax
	and	ebx,ebx
	jz	_87
	sub	esp,8
	mov	[esp],_vvglcurrenttexture
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[_vvglstackoffset]
	shl	ebx,byte 2
	mov	esi,[_vvglcurrenttexture]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_88
	sub	esp,8
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	add	eax,[_avglstack]
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcreatesurface
	mov	ebx,[_vvglstackoffset]
	shl	ebx,byte 2
	mov	esi,[_vvglcurrenttexture]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	mov	[ebx],eax
_88
	mov	eax,1
	jmp	_29_leave
_87
	sub	esp,4
	mov	[esp],3714930
	call	_fvglerror
	mov	eax,0
	jmp	_29_leave
	mov	eax,0
	jmp	_29_leave
_29_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fvgltranslatef
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[_vvgltranslationx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vvgltranslationx],ebx
	mov	ebx,[_vvgltranslationy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vvgltranslationy],ebx
	mov	ebx,[_vvgltranslationz]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vvgltranslationz],ebx
	sub	esp,16
	mov	ebx,[ebp+24]
	mov	[esp+8],ebx
	mov	esi,[ebp+28]
	mov	[esp+12],esi
	mov	esi,[ebp+20]
	mov	[esp+4],esi
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	add	eax,[_avglstack]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpositionmesh
	mov	eax,0
	jmp	_30_leave
_30_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fvglrotatef
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vvglrotationpitch]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[_vvglrotationpitch],esi
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vvglrotationyaw]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[_vvglrotationyaw],esi
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vvglrotationroll]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[_vvglrotationroll],esi
	sub	esp,16
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	add	eax,[_avglstack]
	mov	eax,[eax]
	mov	[esp],eax
	call	_frotatemesh
	sub	esp,16
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	[esp+12],0
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	add	eax,[_avglstack]
	mov	eax,[eax]
	mov	[esp],eax
	call	_frotatemesh
	sub	esp,16
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	add	eax,[_avglstack]
	mov	eax,[eax]
	mov	[esp],eax
	call	_frotatemesh
	mov	eax,0
	jmp	_31_leave
_31_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fvglclear
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp-4]
	mov	[ebp-8],ebx
	mov	ebx,[ebp-12]
	cmp	[ebp-8],ebx
	jz	_90
	sub	esp,4
	mov	[esp],-470089983
	call	_fvglerror
	jmp	_89
_90
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fcls
	jmp	_89
_89
	mov	eax,0
	jmp	_32_leave
_32_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fvglloadidentity
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,[_vvgltranslationy]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vvgltranslationz]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[_vvgltranslationx]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	add	eax,[_avglstack]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpositionmesh
	sub	esp,16
	mov	ebx,[_vvglrotationyaw]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vvglrotationroll]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[_vvglrotationpitch]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	add	eax,[_avglstack]
	mov	eax,[eax]
	mov	[esp],eax
	call	_frotatemesh
	mov	[_vvgltranslationz],0
	mov	[_vvgltranslationy],0
	mov	[_vvgltranslationx],0
	mov	[_vvglrotationpitch],0
	mov	[_vvglrotationyaw],0
	mov	[_vvglrotationroll],0
	mov	eax,0
	jmp	_34_leave
_34_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fvglenable
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	mov	ebx,[ebp+20]
	mov	[ebp-4],ebx
	cmp	[ebp-4],-39905517
	jz	_92
	cmp	[ebp-4],1788806931
	jz	_93
	cmp	[ebp-4],-1160637442
	jz	_94
	sub	esp,4
	mov	[esp],-470089983
	call	_fvglerror
	jmp	_91
_92
	mov	[_vvglupdatenormals],1
	jmp	_91
_93
	mov	[_vvglcullfaces],1
	jmp	_91
_94
	mov	[_vvglvertexalpha],1
	jmp	_91
_91
	mov	eax,0
	jmp	_35_leave
_35_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fvgldisable
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	mov	ebx,[ebp+20]
	mov	[ebp-4],ebx
	cmp	[ebp-4],-39905517
	jz	_96
	cmp	[ebp-4],1788806931
	jz	_97
	cmp	[ebp-4],-1160637442
	jz	_98
	sub	esp,4
	mov	[esp],-470089983
	call	_fvglerror
	jmp	_95
_96
	mov	[_vvglupdatenormals],0
	jmp	_95
_97
	mov	[_vvglcullfaces],0
	jmp	_95
_98
	mov	[_vvglvertexalpha],0
	jmp	_95
_95
	mov	eax,0
	jmp	_37_leave
_37_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fvglpushmatrix
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	add	[_vvglstackoffset],1
	cmp	[_vvglstackoffset],32
	jle	_99
	call	_fvglquit
	sub	esp,8
	mov	eax,_100
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_99
	sub	esp,4
	mov	[esp],0
	call	_fcreatemesh
	mov	ebx,[_vvglstackoffset]
	shl	ebx,byte 2
	add	ebx,[_avglstack]
	mov	[ebx],eax
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_40
_101
	sub	esp,8
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	add	eax,[_avglstack]
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcreatesurface
	mov	ebx,[_vvglstackoffset]
	shl	ebx,byte 2
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[_vnulltexture]
	mov	[esp+4],ebx
	call	__bbObjCompare
	cmp	eax,0
	jz	_102
	sub	esp,8
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fpaintsurface
_102
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_101
_40
	mov	eax,0
	jmp	_39_leave
_39_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fvglpopmatrix
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	mov	ebx,[_vvglstackoffset]
	sub	ebx,1
	cmp	ebx,0
	jge	_103
	call	_fvglquit
	sub	esp,8
	mov	eax,_104
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_103
	sub	esp,8
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	add	eax,[_avglstack]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[_vvglstackoffset]
	sub	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avglstack]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_faddmesh
	sub	esp,4
	mov	eax,[_vvglstackoffset]
	shl	eax,byte 2
	add	eax,[_avglstack]
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_42
_105
	mov	ebx,[_vvglstackoffset]
	shl	ebx,byte 2
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,0
	mov	[ebx],esi
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_105
_42
	sub	[_vvglstackoffset],1
	mov	eax,0
	jmp	_41_leave
_41_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
_vvgl_draw_mode	.dd	0
	.align	4
_vvglcommondata	.dd	0
	.align	4
_vvgldisplaylistdata	.dd	0
	.align	4
_vvglvertexarraydata	.dd	0
	.align	4
_vvgldisplaymesh	.dd	0
	.align	4
_vnulltexture	.dd	0
	.align	4
_vvglcurrenttexture	.dd	0
	.align	4
_vvglbeginopen	.dd	0
	.align	4
_vvglvertexoffset	.dd	0
	.align	4
_vvglviewport	.dd	0
	.align	4
_vvglrotationyaw	.dd	0
	.align	4
_vvglrotationpitch	.dd	0
	.align	4
_vvglrotationroll	.dd	0
	.align	4
_vvgltranslationx	.dd	0
	.align	4
_vvgltranslationy	.dd	0
	.align	4
_vvgltranslationz	.dd	0
	.align	4
_vvglcullfaces	.dd	0
	.align	4
_vvglupdatenormals	.dd	0
	.align	4
_vvglvertexalpha	.dd	0
	.align	4
_avglstack	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_vvglstackoffset	.dd	0
	.align	4
_3	.dd	6
	.dd	33
	.dd	__bbIntType
	.align	4
_tsurface	.dd	5
_50	.dd	0
	.dd	_50
	.dd	_50
	.dd	0
	.dd	-1
_51	.dd	0
	.dd	_51
	.dd	_51
	.dd	0
	.dd	-1
	.dd	2
	.dd	__bbIntType
	.dd	_3
	.align	4
_terror	.dd	5
_52	.dd	0
	.dd	_52
	.dd	_52
	.dd	0
	.dd	-1
_53	.dd	0
	.dd	_53
	.dd	_53
	.dd	0
	.dd	-1
	.dd	1
	.dd	__bbIntType
	.align	4
_tdisplaylist	.dd	5
_54	.dd	0
	.dd	_54
	.dd	_54
	.dd	0
	.dd	-1
_55	.dd	0
	.dd	_55
	.dd	_55
	.dd	0
	.dd	-1
	.dd	2
	.dd	__bbIntType
	.dd	__bbIntType
_100	.db	"ERROR: vglStackOffset+1 > 32",0
_104	.db	"ERROR: vglStackOffset-1 < 0",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

