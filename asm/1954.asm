
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,56
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	sub	esp,4
	mov	eax,_aptc
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,12
	mov	esi,_aptc
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,_aptc
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aptc
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aa
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_aa
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aa
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ab
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_ab
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ab
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ac
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_ac
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ac
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ad
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_ad
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ad
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_atim
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,12
	mov	esi,_atim
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atim
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aoc
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_aoc
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aoc
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,24
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],16
	sub	esp,4
	mov	eax,_8
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[esp],eax
	call	_fsetfont
	mov	[ebp-4],0
	mov	[ebp-8],1133903872
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	mov	[ebp-12],1
	jmp	_9
_10
	sub	esp,8
	mov	[esp],1112014848
	mov	[esp+4],1144750080
	call	_frnd
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,8
	mov	[esp],1112014848
	mov	[esp+4],1141473280
	call	_frnd
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	mov	ebx,[ebp-4]
	mov	esi,_aptc
	add	esi,12
	mov	esi,[esi]
	imul	esi,0
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_aptc]
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	esi,_aptc
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 0
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_aptc]
	mov	[esi],ebx
	mov	ebx,[ebp-16]
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_atim]
	mov	[esi],ebx
	sub	esp,20
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],9
	mov	[esp+16],1
	mov	[esp+8],9
	mov	eax,[ebp-4]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
	sub	esp,32
	mov	eax,981668463
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_11
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],1
	mov	[esp+16],0
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftext
	sub	esp,8
	mov	[esp],1000
	mov	[esp+4],3000
	call	_frand
	add	[ebp-16],eax
	add	[ebp-12],1
_9
	cmp	[ebp-12],10
	jle	_10
_3
	mov	[ebp-20],0
	jmp	_12
_13
	mov	ebx,_aptc
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-20]
	add	ebx,10
	shl	ebx,byte 2
	add	ebx,[_aptc]
	mov	ebx,[ebx]
	mov	esi,_aptc
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-20]
	add	esi,0
	shl	esi,byte 2
	add	esi,[_aptc]
	mov	[esi],ebx
	mov	ebx,_aptc
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-20]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_aptc]
	mov	ebx,[ebx]
	mov	esi,_aptc
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-20]
	add	esi,11
	shl	esi,byte 2
	add	esi,[_aptc]
	mov	[esi],ebx
	mov	ebx,_aptc
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-20]
	add	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aptc]
	mov	ebx,[ebx]
	mov	esi,_aptc
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-20]
	add	esi,12
	shl	esi,byte 2
	add	esi,[_aptc]
	mov	[esi],ebx
	add	[ebp-20],1
_12
	cmp	[ebp-20],1
	jle	_13
_4
	mov	ebx,[ebp-16]
	mov	esi,11
	shl	esi,byte 2
	add	esi,[_atim]
	mov	[esi],ebx
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atim]
	mov	ebx,[ebx]
	add	ebx,[ebp-16]
	mov	esi,12
	shl	esi,byte 2
	add	esi,[_atim]
	mov	[esi],ebx
	mov	ebx,10
	shl	ebx,byte 2
	add	ebx,[_atim]
	mov	ebx,[ebx]
	sub	ebx,[ebp-16]
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_atim]
	mov	[esi],ebx
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,12
	mov	[esp+4],600
	mov	[esp+8],1
	mov	[esp],800
	call	_fcreateimage
	mov	[ebp-24],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fgrabimage
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	add	[ebp-16],1
	mov	[ebp-12],11
_14
	mov	ebx,[ebp-12]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atim]
	mov	ebx,[ebx]
	cmp	[ebp-16],ebx
	jle	_15
	add	[ebp-12],1
	cmp	[ebp-12],10
	jle	_16
	mov	[ebp-12],1
	mov	[ebp-28],0
	call	_fmillisecs
	mov	[ebp-32],eax
_16
	mov	[ebp-20],0
	jmp	_17
_18
	mov	ebx,_aptc
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-20]
	add	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_aptc]
	mov	ebx,[ebx]
	mov	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_ad]
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	add	ebx,1
	mov	esi,_aptc
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-20]
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aptc]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	sub	esi,1
	mov	edi,_aptc
	add	edi,12
	mov	edi,[edi]
	imul	edi,[ebp-20]
	add	esi,edi
	shl	esi,byte 2
	add	esi,[_aptc]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-12]
	add	esi,1
	shl	esi,byte 2
	add	esi,[_atim]
	mov	esi,[esi]
	mov	edi,[ebp-12]
	sub	edi,1
	shl	edi,byte 2
	add	edi,[_atim]
	mov	edi,[edi]
	sub	esi,edi
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_ac]
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	add	ebx,2
	mov	esi,_aptc
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-20]
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aptc]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,_aptc
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-20]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_aptc]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-12]
	add	esi,2
	shl	esi,byte 2
	add	esi,[_atim]
	mov	esi,[esi]
	mov	edi,[ebp-12]
	shl	edi,byte 2
	add	edi,[_atim]
	mov	edi,[edi]
	sub	esi,edi
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	mov	ebx,[ebp-12]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atim]
	mov	ebx,[ebx]
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_atim]
	mov	esi,[esi]
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	mov	ebx,[ebp-12]
	add	ebx,1
	mov	esi,_aptc
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-20]
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aptc]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-40]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-20]
	shl	edi,byte 2
	add	edi,[_ac]
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-40]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	mov	ebx,1077936128
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-20]
	shl	edi,byte 2
	add	edi,[_ad]
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_ab]
	mov	[ebx],esi
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_ab]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_ac]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	mov	ebx,1077936128
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-44]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fdivp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_aa]
	mov	[ebx],esi
	add	[ebp-20],1
_17
	cmp	[ebp-20],1
	jle	_18
_6
_15
	mov	[ebp-20],0
	jmp	_19
_20
	mov	ebx,[ebp-16]
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_atim]
	mov	esi,[esi]
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-52],ebx
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_aa]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_ab]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-52]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_ac]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-48]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_ad]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_aoc]
	mov	[esi],ebx
	add	[ebp-20],1
_19
	cmp	[ebp-20],1
	jle	_20
_7
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fdrawblock
	sub	esp,20
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_aoc]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1091567616
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],19
	mov	[esp+16],1
	mov	[esp+8],19
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_aoc]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1091567616
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
	sub	esp,40
	mov	eax,981668463
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_21
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fmillisecs
	sub	eax,[ebp-32]
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_14
_5
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
_aptc	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aa	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ab	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ac	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ad	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_atim	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aoc	.dd	0
	.dd	2
	.dd	1
	.dd	0
_8	.db	"Arial",0
_11	.db	"s",0
_21	.db	" Time: ",0
_22	.db	"s",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

