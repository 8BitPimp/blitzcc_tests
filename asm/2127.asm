
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	sub	esp,24
	mov	[esp+16],255
	mov	[esp+20],255
	mov	[esp+12],255
	sub	esp,4
	mov	eax,_19
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_18
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_17
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcompimage_mask
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_20
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_22
_21
	sub	esp,4
	mov	[esp],2
	call	_fkeyhit
	and	eax,eax
	jz	_23
	sub	esp,24
	mov	[esp+16],255
	mov	[esp+20],255
	mov	[esp+12],255
	sub	esp,4
	mov	eax,_26
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_25
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_24
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcompimage_mask
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_27
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
_23
	sub	esp,4
	mov	[esp],3
	call	_fkeyhit
	and	eax,eax
	jz	_28
	sub	esp,32
	mov	[esp],1132396544
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+16],eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],1132396544
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+20],ebx
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],1132396544
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	sub	esp,4
	mov	eax,_31
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_30
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_29
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcompimage_mask
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_32
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
_28
	sub	esp,4
	mov	[esp],4
	call	_fkeyhit
	and	eax,eax
	jz	_33
	sub	esp,24
	mov	[esp+16],255
	mov	[esp+20],255
	mov	[esp+12],255
	sub	esp,4
	mov	eax,_36
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_35
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_34
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcompimage_mask
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_37
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
_33
	sub	esp,4
	mov	[esp],5
	call	_fkeyhit
	and	eax,eax
	jz	_38
	sub	esp,32
	mov	[esp],1132396544
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+16],eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],1132396544
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+20],ebx
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],1132396544
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	sub	esp,4
	mov	eax,_41
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_40
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_39
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcompimage_mask
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_42
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
_38
	sub	esp,4
	mov	[esp],6
	call	_fkeyhit
	and	eax,eax
	jz	_43
	sub	esp,24
	mov	[esp+16],255
	mov	[esp+20],255
	mov	[esp+12],255
	sub	esp,4
	mov	eax,_46
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_45
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_44
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcompimage_add
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_47
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
_43
	sub	esp,4
	mov	[esp],7
	call	_fkeyhit
	and	eax,eax
	jz	_48
	sub	esp,32
	mov	[esp],1132396544
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+16],eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],1132396544
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+20],ebx
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],1132396544
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	sub	esp,4
	mov	eax,_51
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_50
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_49
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcompimage_add
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_52
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
_48
	sub	esp,4
	mov	[esp],8
	call	_fkeyhit
	and	eax,eax
	jz	_53
	sub	esp,24
	mov	[esp+16],255
	mov	[esp+20],255
	mov	[esp+12],255
	sub	esp,4
	mov	eax,_56
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_55
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_54
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcompimage_multiply
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_57
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
_53
	sub	esp,4
	mov	[esp],9
	call	_fkeyhit
	and	eax,eax
	jz	_58
	sub	esp,32
	mov	[esp],1132396544
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+16],eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],1132396544
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+20],ebx
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],1132396544
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	sub	esp,4
	mov	eax,_61
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_60
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_59
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcompimage_multiply
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_62
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
_58
	sub	esp,4
	mov	[esp],10
	call	_fkeyhit
	and	eax,eax
	jz	_63
	sub	esp,24
	mov	[esp+16],255
	mov	[esp+20],255
	mov	[esp+12],255
	sub	esp,4
	mov	eax,_66
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_65
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_64
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcompimage_overlay
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_67
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
_63
	sub	esp,4
	mov	[esp],11
	call	_fkeyhit
	and	eax,eax
	jz	_68
	sub	esp,32
	mov	[esp],1132396544
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+16],eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],1132396544
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+20],ebx
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],1132396544
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-12]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	sub	esp,4
	mov	eax,_71
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_70
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_69
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fcompimage_overlay
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_72
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
_68
	sub	esp,16
	mov	[esp+8],30
	mov	[esp+12],0
	mov	[esp+4],50
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_73
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],15
	mov	[esp],325
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_74
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],35
	mov	[esp],325
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_75
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],50
	mov	[esp],325
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_76
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],65
	mov	[esp],325
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_77
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],80
	mov	[esp],325
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_78
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],95
	mov	[esp],325
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_79
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],110
	mov	[esp],325
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_80
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],125
	mov	[esp],325
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_81
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],140
	mov	[esp],325
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_82
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],155
	mov	[esp],325
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_83
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],170
	mov	[esp],325
	call	_ftext
	sub	esp,32
	mov	eax,_84
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],350
	mov	[esp],40
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fcls
_22
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_21
_3
	call	_fend
	ret
_2_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fminmax
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_85
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_4_leave
_85
	mov	eax,[ebp+20]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_86
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_4_leave
_86
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_4_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_4_leave
_4_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fcompimage_mask
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,76
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-4],eax
	cmp	[ebp-4],0
	jnz	_87
	sub	esp,24
	mov	eax,_88
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_89
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_87
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-8],eax
	cmp	[ebp-8],0
	jnz	_90
	sub	esp,24
	mov	eax,_91
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_92
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_90
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_94
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_93
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-12],eax
	cmp	[ebp-12],0
	jnz	_95
	sub	esp,24
	mov	eax,_96
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_97
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_95
_93
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_99
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_98
	sub	esp,12
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
_98
	mov	[ebp-60],0
	jmp	_100
_101
	mov	[ebp-64],0
	jmp	_102
_103
	sub	esp,20
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-68],eax
	mov	ebx,[ebp-68]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-16],ebx
	mov	ebx,[ebp-68]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-20],ebx
	mov	ebx,[ebp-68]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-24],ebx
	sub	esp,20
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-72],eax
	mov	ebx,[ebp-72]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-28],ebx
	mov	ebx,[ebp-72]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-32],ebx
	mov	ebx,[ebp-72]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-36],ebx
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_105
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_104
	mov	ebx,[ebp-16]
	add	ebx,[ebp-20]
	add	ebx,[ebp-24]
	cmp	ebx,0
	jle	_106
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+32]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-16]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+36]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-20]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+40]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-24]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-24],eax
	mov	ebx,[ebp-24]
	mov	esi,[ebp-20]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-16]
	shl	esi,byte 16
	or	ebx,esi
	mov	esi,-16777216
	or	ebx,esi
	mov	[ebp-68],ebx
	sub	esp,24
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+12],eax
	mov	ebx,[ebp-68]
	mov	[esp+8],ebx
	mov	esi,[ebp-60]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fwritepixelfast
_106
	jmp	_107
_104
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+32]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-16]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+36]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-20]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+40]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-24]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-24],eax
	sub	esp,20
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-52],eax
	mov	eax,[ebp-52]
	shr	eax,byte 16
	mov	ebx,255
	and	eax,ebx
	mov	ebx,[ebp-52]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	add	eax,ebx
	mov	ebx,[ebp-52]
	mov	esi,255
	and	ebx,esi
	add	eax,ebx
	mov	ecx,3
	cdq
	idiv	ecx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-56],eax
	mov	ebx,[ebp-56]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1132462080
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-56],ebx
	sub	esp,12
	mov	ebx,[ebp-16]
	sub	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp-28]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	sub	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp-32]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,12
	mov	ebx,[ebp-24]
	sub	ebx,[ebp-36]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp-36]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-48],eax
	mov	ebx,[ebp-48]
	mov	esi,[ebp-44]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-40]
	shl	esi,byte 16
	or	ebx,esi
	mov	esi,-16777216
	or	ebx,esi
	mov	[ebp-68],ebx
	sub	esp,24
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+12],eax
	mov	ebx,[ebp-68]
	mov	[esp+8],ebx
	mov	esi,[ebp-60]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fwritepixelfast
_107
	add	[ebp-64],1
_102
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fimagewidth
	sub	eax,1
	cmp	[ebp-64],eax
	jle	_103
_7
	add	[ebp-60],1
_100
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fimageheight
	sub	eax,1
	cmp	[ebp-60],eax
	jle	_101
_6
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_109
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_108
	sub	esp,12
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
_108
	mov	eax,[ebp-8]
	jmp	_5_leave
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[ebp-76],eax
	sub	esp,4
	mov	esi,[ebp+28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-76]
	mov	[ebp-76],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-76]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	16
_fcompimage_add
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,76
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-4],eax
	cmp	[ebp-4],0
	jnz	_110
	sub	esp,24
	mov	eax,_111
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_112
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_110
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-8],eax
	cmp	[ebp-8],0
	jnz	_113
	sub	esp,24
	mov	eax,_114
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_115
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_113
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_117
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_116
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-12],eax
	cmp	[ebp-12],0
	jnz	_118
	sub	esp,24
	mov	eax,_119
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_120
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_118
_116
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_122
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_121
	sub	esp,12
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
_121
	mov	[ebp-60],0
	jmp	_123
_124
	mov	[ebp-64],0
	jmp	_125
_126
	sub	esp,20
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-68],eax
	mov	ebx,[ebp-68]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-16],ebx
	mov	ebx,[ebp-68]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-20],ebx
	mov	ebx,[ebp-68]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-24],ebx
	sub	esp,20
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-72],eax
	mov	ebx,[ebp-72]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-28],ebx
	mov	ebx,[ebp-72]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-32],ebx
	mov	ebx,[ebp-72]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-36],ebx
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_128
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_127
	mov	ebx,[ebp-16]
	add	ebx,[ebp-20]
	add	ebx,[ebp-24]
	cmp	ebx,0
	jle	_129
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+32]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-16]
	add	eax,[ebp-28]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+36]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-20]
	add	eax,[ebp-32]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+40]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-24]
	add	eax,[ebp-36]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-24],eax
	mov	ebx,[ebp-24]
	mov	esi,[ebp-20]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-16]
	shl	esi,byte 16
	or	ebx,esi
	mov	esi,-16777216
	or	ebx,esi
	mov	[ebp-68],ebx
	sub	esp,24
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+12],eax
	mov	ebx,[ebp-68]
	mov	[esp+8],ebx
	mov	esi,[ebp-60]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fwritepixelfast
_129
	jmp	_130
_127
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+32]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-16]
	add	eax,[ebp-28]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+36]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-20]
	add	eax,[ebp-32]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+40]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-24]
	add	eax,[ebp-36]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-24],eax
	sub	esp,20
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-52],eax
	mov	eax,[ebp-52]
	shr	eax,byte 16
	mov	ebx,255
	and	eax,ebx
	mov	ebx,[ebp-52]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	add	eax,ebx
	mov	ebx,[ebp-52]
	mov	esi,255
	and	ebx,esi
	add	eax,ebx
	mov	ecx,3
	cdq
	idiv	ecx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-56],eax
	mov	ebx,[ebp-56]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1132462080
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-56],ebx
	sub	esp,12
	mov	ebx,[ebp-16]
	sub	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp-28]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	sub	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp-32]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,12
	mov	ebx,[ebp-24]
	sub	ebx,[ebp-36]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp-36]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-48],eax
	mov	ebx,[ebp-48]
	mov	esi,[ebp-44]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-40]
	shl	esi,byte 16
	or	ebx,esi
	mov	esi,-16777216
	or	ebx,esi
	mov	[ebp-68],ebx
	sub	esp,24
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+12],eax
	mov	ebx,[ebp-68]
	mov	[esp+8],ebx
	mov	esi,[ebp-60]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fwritepixelfast
_130
	add	[ebp-64],1
_125
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fimagewidth
	sub	eax,1
	cmp	[ebp-64],eax
	jle	_126
_10
	add	[ebp-60],1
_123
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fimageheight
	sub	eax,1
	cmp	[ebp-60],eax
	jle	_124
_9
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_132
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_131
	sub	esp,12
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
_131
	mov	eax,[ebp-8]
	jmp	_8_leave
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[ebp-76],eax
	sub	esp,4
	mov	esi,[ebp+28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-76]
	mov	[ebp-76],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-76]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	16
_fcompimage_multiply
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,76
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-4],eax
	cmp	[ebp-4],0
	jnz	_133
	sub	esp,24
	mov	eax,_134
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_135
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_133
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-8],eax
	cmp	[ebp-8],0
	jnz	_136
	sub	esp,24
	mov	eax,_137
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_138
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_136
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_140
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_139
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-12],eax
	cmp	[ebp-12],0
	jnz	_141
	sub	esp,24
	mov	eax,_142
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_143
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_141
_139
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_145
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_144
	sub	esp,12
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
_144
	mov	[ebp-60],0
	jmp	_146
_147
	mov	[ebp-64],0
	jmp	_148
_149
	sub	esp,20
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-68],eax
	mov	ebx,[ebp-68]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-16],ebx
	mov	ebx,[ebp-68]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-20],ebx
	mov	ebx,[ebp-68]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-24],ebx
	sub	esp,20
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-72],eax
	mov	ebx,[ebp-72]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-28],ebx
	mov	ebx,[ebp-72]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-32],ebx
	mov	ebx,[ebp-72]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-36],ebx
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_151
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_150
	mov	ebx,[ebp-16]
	add	ebx,[ebp-20]
	add	ebx,[ebp-24]
	cmp	ebx,0
	jle	_152
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+32]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-16]
	imul	eax,[ebp-28]
	shr	eax,byte 8
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+36]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-20]
	imul	eax,[ebp-32]
	shr	eax,byte 8
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+40]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-24]
	imul	eax,[ebp-36]
	shr	eax,byte 8
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-24],eax
	mov	ebx,[ebp-24]
	mov	esi,[ebp-20]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-16]
	shl	esi,byte 16
	or	ebx,esi
	mov	esi,-16777216
	or	ebx,esi
	mov	[ebp-68],ebx
	sub	esp,24
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+12],eax
	mov	ebx,[ebp-68]
	mov	[esp+8],ebx
	mov	esi,[ebp-60]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fwritepixelfast
_152
	jmp	_153
_150
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+32]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-16]
	imul	eax,[ebp-28]
	shr	eax,byte 8
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+36]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-20]
	imul	eax,[ebp-32]
	shr	eax,byte 8
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,12
	mov	ebx,128
	mov	esi,[ebp+40]
	shr	esi,byte 1
	sub	ebx,esi
	mov	eax,[ebp-24]
	imul	eax,[ebp-36]
	shr	eax,byte 8
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-24],eax
	sub	esp,20
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-52],eax
	mov	eax,[ebp-52]
	shr	eax,byte 16
	mov	ebx,255
	and	eax,ebx
	mov	ebx,[ebp-52]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	add	eax,ebx
	mov	ebx,[ebp-52]
	mov	esi,255
	and	ebx,esi
	add	eax,ebx
	mov	ecx,3
	cdq
	idiv	ecx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-56],eax
	mov	ebx,[ebp-56]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1132462080
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-56],ebx
	sub	esp,12
	mov	ebx,[ebp-16]
	sub	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp-28]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	sub	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp-32]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,12
	mov	ebx,[ebp-24]
	sub	ebx,[ebp-36]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp-36]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-48],eax
	mov	ebx,[ebp-48]
	mov	esi,[ebp-44]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-40]
	shl	esi,byte 16
	or	ebx,esi
	mov	esi,-16777216
	or	ebx,esi
	mov	[ebp-68],ebx
	sub	esp,24
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+12],eax
	mov	ebx,[ebp-68]
	mov	[esp+8],ebx
	mov	esi,[ebp-60]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fwritepixelfast
_153
	add	[ebp-64],1
_148
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fimagewidth
	sub	eax,1
	cmp	[ebp-64],eax
	jle	_149
_13
	add	[ebp-60],1
_146
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fimageheight
	sub	eax,1
	cmp	[ebp-60],eax
	jle	_147
_12
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,_155
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_154
	sub	esp,12
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
_154
	mov	eax,[ebp-8]
	jmp	_11_leave
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	[ebp-76],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-76]
	mov	[ebp-76],eax
	sub	esp,4
	mov	esi,[ebp+28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-76]
	mov	[ebp-76],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-76]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	16
_fcompimage_overlay
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,80
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-8],eax
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_157
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_156
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-56],eax
_156
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_159
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_158
	sub	esp,12
	mov	eax,[ebp-56]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
_158
	mov	[ebp-60],0
	jmp	_160
_161
	mov	[ebp-64],0
	jmp	_162
_163
	sub	esp,20
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-68],eax
	sub	esp,12
	mov	eax,[ebp-68]
	shr	eax,byte 16
	mov	ebx,255
	and	eax,ebx
	mov	ebx,255
	sub	ebx,[ebp+32]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-12],eax
	sub	esp,12
	mov	eax,[ebp-68]
	shr	eax,byte 8
	mov	ebx,255
	and	eax,ebx
	mov	ebx,255
	sub	ebx,[ebp+36]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,12
	mov	eax,[ebp-68]
	mov	ebx,255
	and	eax,ebx
	mov	ebx,255
	sub	ebx,[ebp+40]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,20
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-72],eax
	mov	ebx,[ebp-72]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-24],ebx
	mov	ebx,[ebp-72]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-28],ebx
	mov	ebx,[ebp-72]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-32],ebx
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_165
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_164
	mov	ebx,[ebp-12]
	add	ebx,[ebp-16]
	add	ebx,[ebp-20]
	cmp	ebx,0
	jle	_166
	sub	esp,12
	mov	ebx,255
	sub	ebx,[ebp-12]
	mov	esi,255
	sub	esi,[ebp-24]
	imul	ebx,esi
	shr	ebx,byte 7
	mov	eax,255
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,12
	mov	ebx,255
	sub	ebx,[ebp-16]
	mov	esi,255
	sub	esi,[ebp-28]
	imul	ebx,esi
	shr	ebx,byte 7
	mov	eax,255
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,12
	mov	ebx,255
	sub	ebx,[ebp-20]
	mov	esi,255
	sub	esi,[ebp-32]
	imul	ebx,esi
	shr	ebx,byte 7
	mov	eax,255
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-44],eax
	mov	ebx,[ebp-44]
	mov	esi,[ebp-40]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-36]
	shl	esi,byte 16
	or	ebx,esi
	mov	esi,-16777216
	or	ebx,esi
	mov	[ebp-68],ebx
	sub	esp,24
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+12],eax
	mov	ebx,[ebp-68]
	mov	[esp+8],ebx
	mov	esi,[ebp-60]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fwritepixelfast
_166
	jmp	_167
_164
	sub	esp,12
	mov	ebx,255
	sub	ebx,[ebp-12]
	mov	esi,255
	sub	esi,[ebp-24]
	imul	ebx,esi
	shr	ebx,byte 7
	mov	eax,255
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,12
	mov	ebx,255
	sub	ebx,[ebp-16]
	mov	esi,255
	sub	esi,[ebp-28]
	imul	ebx,esi
	shr	ebx,byte 7
	mov	eax,255
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,12
	mov	ebx,255
	sub	ebx,[ebp-20]
	mov	esi,255
	sub	esi,[ebp-32]
	imul	ebx,esi
	shr	ebx,byte 7
	mov	eax,255
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,20
	mov	eax,[ebp-56]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-76],eax
	mov	eax,[ebp-76]
	shr	eax,byte 16
	mov	ebx,255
	and	eax,ebx
	mov	ebx,[ebp-76]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	add	eax,ebx
	mov	ebx,[ebp-76]
	mov	esi,255
	and	ebx,esi
	add	eax,ebx
	mov	ecx,3
	cdq
	idiv	ecx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-52],eax
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1132462080
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-52],ebx
	sub	esp,12
	mov	ebx,[ebp-36]
	sub	ebx,[ebp-24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp-24]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-12],eax
	sub	esp,12
	mov	ebx,[ebp-40]
	sub	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp-28]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,12
	mov	ebx,[ebp-44]
	sub	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp-32]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],0
	mov	[esp+8],1132396544
	call	_fminmax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	mov	ebx,[ebp-20]
	mov	esi,[ebp-16]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-12]
	shl	esi,byte 16
	or	ebx,esi
	mov	esi,-16777216
	or	ebx,esi
	mov	[ebp-68],ebx
	sub	esp,24
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+12],eax
	mov	ebx,[ebp-68]
	mov	[esp+8],ebx
	mov	esi,[ebp-60]
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fwritepixelfast
_167
	add	[ebp-64],1
_162
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fimagewidth
	sub	eax,1
	cmp	[ebp-64],eax
	jle	_163
_16
	add	[ebp-60],1
_160
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fimageheight
	sub	eax,1
	cmp	[ebp-60],eax
	jle	_161
_15
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_169
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_168
	sub	esp,12
	mov	eax,[ebp-56]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
_168
	mov	eax,[ebp-8]
	jmp	_14_leave
	mov	eax,0
	jmp	_14_leave
_14_leave
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	esi,[ebp+28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
_17	.db	"image1.png",0
_18	.db	"image2.png",0
_19	.db	"mask.png",0
_20	.db	"3) mask mode",0
_24	.db	"image1.png",0
_25	.db	"image2.png",0
_26	.db	"0",0
_27	.db	"1) clip mode",0
_29	.db	"image1.png",0
_30	.db	"image2.png",0
_31	.db	"0",0
_32	.db	"2) clip mode tinted with random color",0
_34	.db	"image1.png",0
_35	.db	"image2.png",0
_36	.db	"mask.png",0
_37	.db	"3) mask mode",0
_39	.db	"image1.png",0
_40	.db	"image2.png",0
_41	.db	"mask.png",0
_42	.db	"4) mask mode tinted with random color",0
_44	.db	"image1.png",0
_45	.db	"image2.png",0
_46	.db	"mask.png",0
_47	.db	"5) add mode",0
_49	.db	"image1.png",0
_50	.db	"image2.png",0
_51	.db	"mask.png",0
_52	.db	"6) add mode tinted with random color",0
_54	.db	"image1.png",0
_55	.db	"image2.png",0
_56	.db	"mask.png",0
_57	.db	"7) multiply mode",0
_59	.db	"image1.png",0
_60	.db	"image2.png",0
_61	.db	"mask.png",0
_62	.db	"8) multiply mode tinted with random color",0
_64	.db	"image1.png",0
_65	.db	"image2.png",0
_66	.db	"mask.png",0
_67	.db	"9) overlay mode",0
_69	.db	"image1.png",0
_70	.db	"image2.png",0
_71	.db	"mask.png",0
_72	.db	"0) overlay mode tinted with random color",0
_73	.db	"Press 1-0 to change blend modes",0
_74	.db	"1) Clip Mode",0
_75	.db	"2) Clip Mode Tinted",0
_76	.db	"3) Mask Mode",0
_77	.db	"4) Mask Mode Tinted",0
_78	.db	"5) Add Mode",0
_79	.db	"6) Add Mode Tinted",0
_80	.db	"7) Multiply Mode",0
_81	.db	"8) Multiply Mode Tinted",0
_82	.db	"9) Overlay Mode",0
_83	.db	"0) Overlay Mode Tinted",0
_84	.db	"current mode: ",0
_88	.db	"Image ",0
_89	.db	" not found.",0
_91	.db	"Image ",0
_92	.db	" not found.",0
_94	.db	"0",0
_96	.db	"Image ",0
_97	.db	" not found.",0
_99	.db	"0",0
_105	.db	"0",0
_109	.db	"0",0
_111	.db	"Image ",0
_112	.db	" not found.",0
_114	.db	"Image ",0
_115	.db	" not found.",0
_117	.db	"0",0
_119	.db	"Image ",0
_120	.db	" not found.",0
_122	.db	"0",0
_128	.db	"0",0
_132	.db	"0",0
_134	.db	"Image ",0
_135	.db	" not found.",0
_137	.db	"Image ",0
_138	.db	" not found.",0
_140	.db	"0",0
_142	.db	"Image ",0
_143	.db	" not found.",0
_145	.db	"0",0
_151	.db	"0",0
_155	.db	"0",0
_157	.db	"0",0
_159	.db	"0",0
_165	.db	"0",0
_169	.db	"0",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

