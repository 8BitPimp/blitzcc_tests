
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	sub	esp,12
	call	_fgraphicsheight
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcreateimage
	mov	ebx,eax
	mov	[_vtrans_img],ebx
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_ftransition
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	call	_fgraphicsbuffer
	mov	[ebp-4],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vtrans_img]
	mov	[esp],eax
	call	_fgrabimage
	sub	esp,4
	call	_ffrontbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	ebx,[ebp+20]
	mov	[ebp-8],ebx
	cmp	[ebp-8],3
	jz	_15
	cmp	[ebp-8],2
	jz	_15
	cmp	[ebp-8],0
	jz	_16
	cmp	[ebp-8],1
	jz	_16
	cmp	[ebp-8],4
	jz	_17
	cmp	[ebp-8],5
	jz	_18
	jmp	_14
_15
	mov	[ebp-12],0
	jmp	_19
_20
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_ttrans_slide
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	call	_fgraphicswidth
	mov	[esp],eax
	call	_fcreateimage
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fgrabimage
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	and	ebx,ebx
	jz	_21
	mov	ebx,6
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	jmp	_22
_21
	sub	esp,8
	mov	[esp],4
	mov	[esp+4],8
	call	_frand
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
_22
	mov	ebx,[ebp+20]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	add	[ebp-12],1
_19
	call	_fgraphicsheight
	cmp	[ebp-12],eax
	jle	_20
_5
	jmp	_14
_16
	mov	[ebp-20],0
	jmp	_23
_24
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_ttrans_slide
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,12
	call	_fgraphicsheight
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[esp],1
	mov	eax,ebx
	call	_fcreateimage
	mov	ebx,eax
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	esi,[ebp-20]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fgrabimage
	mov	ebx,[ebp-20]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	and	ebx,ebx
	jz	_25
	mov	ebx,6
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	jmp	_26
_25
	sub	esp,8
	mov	[esp],4
	mov	[esp+4],8
	call	_frand
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
_26
	mov	ebx,[ebp+20]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	add	[ebp-20],1
_23
	call	_fgraphicswidth
	cmp	[ebp-20],eax
	jle	_24
_6
	jmp	_14
_17
	mov	[ebp-24],0
	mov	[ebp-12],0
	jmp	_27
_28
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_ttrans_slide
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	call	_fgraphicswidth
	mov	[esp],eax
	call	_fcreateimage
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fgrabimage
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	and	ebx,ebx
	jz	_29
	mov	ebx,6
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	jmp	_30
_29
	sub	esp,8
	mov	[esp],4
	mov	[esp+4],8
	call	_frand
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
_30
	mov	ebx,[ebp-24]
	and	ebx,ebx
	jz	_31
	mov	ebx,3
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	jmp	_32
_31
	mov	ebx,2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
_32
	cmp	[ebp-24],0
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	add	[ebp-12],1
_27
	call	_fgraphicsheight
	cmp	[ebp-12],eax
	jle	_28
_7
	jmp	_14
_18
	mov	[ebp-24],0
	mov	[ebp-20],0
	jmp	_33
_34
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_ttrans_slide
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,12
	call	_fgraphicsheight
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[esp],1
	mov	eax,ebx
	call	_fcreateimage
	mov	ebx,eax
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	esi,[ebp-20]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fgrabimage
	mov	ebx,[ebp-20]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	and	ebx,ebx
	jz	_35
	mov	ebx,6
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	jmp	_36
_35
	sub	esp,8
	mov	[esp],4
	mov	[esp+4],8
	call	_frand
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
_36
	mov	ebx,[ebp-24]
	and	ebx,ebx
	jz	_37
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	jmp	_38
_37
	mov	ebx,1
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
_38
	cmp	[ebp-24],0
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	add	[ebp-20],1
_33
	call	_fgraphicswidth
	cmp	[ebp-20],eax
	jle	_34
_8
	jmp	_14
_14
	call	_fgraphicsbuffer
	mov	[ebp-4],eax
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fupdatetransition
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vtrans_img]
	mov	[esp],eax
	call	_fdrawblock
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],_ttrans_slide
	call	__bbObjEachFirst
	and	eax,eax
	jz	_10
_39
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[ebp-12],ebx
	cmp	[ebp-12],0
	jz	_41
	cmp	[ebp-12],1
	jz	_42
	cmp	[ebp-12],2
	jz	_43
	cmp	[ebp-12],3
	jz	_44
	jmp	_40
_41
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	sub	ebx,esi
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	call	_fgraphicsheight
	neg	eax
	cmp	ebx,eax
	jge	_45
	sub	esp,4
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjDelete
	jmp	_46
_45
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawblock
	add	[ebp-4],1
_46
	jmp	_40
_42
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	call	_fgraphicsheight
	cmp	ebx,eax
	jle	_47
	sub	esp,4
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjDelete
	jmp	_48
_47
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawblock
	add	[ebp-4],1
_48
	jmp	_40
_43
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	call	_fgraphicswidth
	cmp	ebx,eax
	jle	_49
	sub	esp,4
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjDelete
	jmp	_50
_49
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawblock
	add	[ebp-4],1
_50
	jmp	_40
_44
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	sub	ebx,esi
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	call	_fgraphicswidth
	neg	eax
	cmp	ebx,eax
	jge	_51
	sub	esp,4
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjDelete
	jmp	_52
_51
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawblock
	add	[ebp-4],1
_52
	jmp	_40
_40
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_39
_10
	cmp	[ebp-4],0
	jnz	_53
	mov	eax,1
	jmp	_9_leave
_53
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
_vtrans_img	.dd	0
	.align	4
_ttrans_slide	.dd	5
_12	.dd	0
	.dd	_12
	.dd	_12
	.dd	0
	.dd	-1
_13	.dd	0
	.dd	_13
	.dd	_13
	.dd	0
	.dd	-1
	.dd	5
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

