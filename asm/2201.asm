
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	call	_fgraphicsheight
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-24],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcreateimage
	mov	ebx,eax
	mov	[_vbbuffer],ebx
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	mov	[_vuy],245
	mov	[_vly],245
	mov	[_vn2],1127481344
	mov	[_vn3],1133379584
	call	_fgraphicswidth
	mov	[_vax],eax
	sub	esp,4
	mov	eax,_aclock360
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,5000
	mov	esi,_aclock360
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aclock360
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-4],0
	jmp	_25
_26
	sub	esp,8
	mov	[esp],360
	mov	[esp+4],1
	call	_frand
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_aclock360]
	mov	[ebx],eax
	add	[ebp-4],1
_25
	cmp	[ebp-4],5000
	jle	_26
_3
	sub	esp,4
	mov	eax,_asy
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,600
	mov	esi,_asy
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,_asy
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_asy
	mov	[esp],eax
	call	__bbDimArray
	call	_fsetscanline
	jmp	_28
_27
	call	_fcls
	call	_fmillisecs
	mov	[ebp-8],eax
	mov	[ebp-4],0
	jmp	_29
_30
	mov	ebx,255
	mov	esi,[ebp-4]
	imul	esi,5
	sub	ebx,esi
	mov	[ebp-12],ebx
	mov	ebx,255
	mov	esi,[ebp-4]
	imul	esi,9
	sub	ebx,esi
	mov	[ebp-16],ebx
	mov	ebx,255
	mov	esi,[ebp-4]
	imul	esi,12
	sub	ebx,esi
	mov	[ebp-20],ebx
	sub	esp,28
	mov	ebx,300
	mov	esi,[ebp-4]
	imul	esi,10
	sub	ebx,esi
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	neg	eax
	imul	eax,15
	mov	[esp],eax
	call	_frand
	mov	[esp+4],eax
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	esi,[ebp-20]
	mov	[esp+16],esi
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	[ebp-24],eax
	sub	esp,8
	mov	[esp],-100
	mov	[esp+4],100
	mov	eax,ebx
	call	_frand
	mov	ebx,eax
	mov	eax,[ebp-24]
	imul	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftex
	mov	ebx,eax
	add	[ebp-4],1
_29
	cmp	[ebp-4],10
	jle	_30
_5
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	call	_fmillisecs
	sub	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+8],eax
	mov	[esp+4],0
	call	_fgraphicswidth
	sub	eax,120
	mov	[esp],eax
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitkey
	sub	esp,4
	mov	[esp],1
	call	_fflip
_28
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_27
_4
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_ftex
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,12
	mov	eax,[_vbbuffer]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fcls
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_fmakeredsurface
	sub	esp,12
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+36]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp+28]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fconnectscanline
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_tbmap
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,12
	mov	[esp+4],256
	mov	[esp+8],1
	mov	[esp],256
	call	_fcreateimage
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fgrabimage
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-8],0
	jmp	_33
_34
	sub	esp,24
	mov	[esp],400
	mov	[esp+4],1
	call	_frand
	add	eax,[ebp+20]
	mov	[esp+4],eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],200
	mov	[esp+4],1
	mov	eax,ebx
	call	_frand
	mov	ebx,eax
	mov	eax,[ebp-12]
	add	ebx,[ebp+24]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fdrawimage
	mov	ebx,eax
	add	[ebp-8],1
_33
	cmp	[ebp-8],4
	jle	_34
_7
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fmakeredsurface
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	call	_fsetscanline
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	mov	[_vuy],245
	mov	[_vly],245
	mov	[_vn2],1127481344
	mov	[_vn3],1133379584
	call	_fgraphicswidth
	mov	[_vax],eax
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],350
	call	_frand
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[_vn],eax
	jmp	_36
_35
	mov	eax,[_vn]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1135837184
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_37
	mov	ebx,[_vn]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vn],ebx
	mov	ebx,[_vn2]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1082340147
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vn2],ebx
	mov	eax,[_vn3]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1135837184
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_38
	mov	ebx,[_vn3]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vn3],ebx
	jmp	_39
_38
	mov	ebx,[ebp-4]
	add	ebx,100
	shl	ebx,byte 2
	add	ebx,[_aclock360]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vn3],ebx
_39
	mov	eax,[_vn2]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1135869952
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_40
	mov	ebx,[ebp-4]
	add	ebx,400
	shl	ebx,byte 2
	add	ebx,[_aclock360]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vn2],ebx
_40
	mov	ebx,[_vnn]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1036831949
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vnn],ebx
	jmp	_41
_37
	mov	eax,0
	jmp	_8_leave
_41
	sub	esp,4
	mov	eax,[_vn]
	mov	[esp],eax
	call	_fcos
	mov	ebx,1119092736
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vax],eax
	sub	esp,4
	mov	eax,[_vn3]
	mov	[esp],eax
	call	_fsin
	mov	ebx,1112014848
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-8],eax
	mov	ebx,[_vax]
	mov	[ebp-12],ebx
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],12
	call	_frand
	push	eax
	fild	[esp]
	pop	eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[_vn2]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcos
	mov	ebx,eax
	mov	eax,[ebp-24]
	fmulp	st(1)
	mov	esi,[ebp-8]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-16],esi
	mov	ebx,[_vuy]
	cmp	[ebp-16],ebx
	jge	_42
	mov	[ebp-20],1
	mov	ebx,[ebp-16]
	mov	[_vuy],ebx
	sub	esp,20
	mov	ebx,[_vly]
	sub	ebx,[_vuy]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[esp+8],2
	mov	ebx,[_vuy]
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fmrect
	mov	[_vuy],96
	mov	[_vly],96
_42
	mov	ebx,[_vly]
	cmp	[ebp-16],ebx
	jle	_43
	mov	[ebp-20],-1
	mov	ebx,[ebp-16]
	mov	[_vly],ebx
	sub	esp,20
	mov	ebx,[_vly]
	sub	ebx,[_vuy]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	[esp+8],2
	mov	ebx,[_vly]
	sub	ebx,[_vuy]
	add	ebx,20
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fmrect
	mov	[_vuy],96
	mov	[_vly],96
_43
	add	[ebp-4],1
_36
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_35
_9
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fmrect
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	add	[ebp+24],100
	add	[ebp+20],100
	mov	ebx,[ebp+20]
	imul	ebx,3
	sar	ebx,byte 1
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp+24]
	shl	ebx,byte 1
	sar	ebx,byte 1
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	sub	esp,8
	mov	[esp],2
	mov	[esp+4],36
	call	_frand
	imul	eax,[ebp+28]
	sar	eax,byte 1
	shl	eax,byte 1
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	mov	[ebp-8],1073741824
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1075419546
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,1107296256
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_asy
	add	esi,12
	mov	esi,[esi]
	imul	esi,0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_asy]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	eax,[ebp-12]
	push	eax
	fld	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_44
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_asy
	add	esi,12
	mov	esi,[esi]
	imul	esi,0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_asy]
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebx],esi
_44
	mov	eax,[ebp-12]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	mov	ebx,1105199104
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_asy
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_asy]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_45
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	edi,_asy
	add	edi,12
	mov	edi,[edi]
	shl	edi,byte 0
	add	esi,edi
	shl	esi,byte 2
	add	esi,[_asy]
	mov	[esi],ebx
_45
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fconnectscanline
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	sub	esp,4
	mov	eax,_12
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-4],eax
	mov	[ebp-12],0
	jmp	_46
_47
	mov	ebx,1132396544
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[ebp-4]
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1015040358
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	add	[ebp-12],1
_46
	cmp	[ebp-12],16200
	jle	_47
_13
	mov	[ebp-8],0
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	sub	esp,12
	mov	eax,[_vbbuffer]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-24],-4
	jmp	_48
_49
	mov	[ebp-28],-4
	jmp	_50
_51
	mov	[ebp-12],1
	jmp	_52
_53
	sub	esp,12
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	shl	esi,byte 2
	add	esi,[ebp-4]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-8]
	push	edi
	fld	[esp]
	pop	edi
	push	edi
	fistp	[esp]
	pop	edi
	shl	edi,byte 2
	add	edi,[ebp-4]
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	shl	esi,byte 2
	add	esi,[ebp-4]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	mov	ebx,_asy
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,0
	add	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_asy]
	mov	ebx,[ebx]
	cmp	ebx,250
	jge	_54
	sub	esp,24
	mov	[esp],10
	mov	[esp+4],1
	call	_frand
	imul	eax,[ebp-28]
	add	eax,[ebp-12]
	mov	[esp+4],eax
	mov	[ebp-32],eax
	sub	esp,12
	mov	[ebp-36],eax
	mov	eax,ebx
	call	_fcolorgreen
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	mov	[ebp-36],eax
	mov	eax,esi
	call	_fcolorblue
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	[esp+8],esi
	mov	[ebp-36],eax
	mov	eax,esi
	call	_fcolorred
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	[esp],esi
	mov	eax,esi
	call	_fgetrgb
	mov	esi,eax
	mov	eax,[ebp-32]
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	[ebp-32],eax
	sub	esp,8
	mov	[esp],10
	mov	[esp+4],1
	mov	eax,ebx
	call	_frand
	mov	ebx,eax
	mov	eax,[ebp-32]
	imul	ebx,[ebp-24]
	mov	esi,_asy
	add	esi,12
	mov	esi,[esi]
	imul	esi,0
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_asy]
	mov	esi,[esi]
	add	esi,ebx
	add	esi,32
	mov	[esp],esi
	mov	eax,esi
	call	_fwritepixelfast
	mov	esi,eax
	sub	esp,24
	mov	[esp],10
	mov	[esp+4],1
	call	_frand
	imul	eax,[ebp-28]
	add	eax,[ebp-12]
	mov	[esp+4],eax
	mov	[ebp-32],eax
	sub	esp,12
	mov	[ebp-36],eax
	mov	eax,ebx
	call	_fcolorgreen
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	mov	[ebp-36],eax
	mov	eax,esi
	call	_fcolorblue
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	[esp+8],esi
	mov	[ebp-36],eax
	mov	eax,esi
	call	_fcolorred
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	[esp],esi
	mov	eax,esi
	call	_fgetrgb
	mov	esi,eax
	mov	eax,[ebp-32]
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	[ebp-32],eax
	sub	esp,8
	mov	[esp],10
	mov	[esp+4],1
	mov	eax,ebx
	call	_frand
	mov	ebx,eax
	mov	eax,[ebp-32]
	imul	ebx,[ebp-24]
	mov	esi,_asy
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 0
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_asy]
	mov	esi,[esi]
	add	esi,ebx
	add	esi,32
	mov	[esp],esi
	mov	eax,esi
	call	_fwritepixelfast
	mov	esi,eax
_54
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	add	[ebp-12],1
_52
	cmp	[ebp-12],200
	jle	_53
_16
	add	[ebp-28],1
_50
	cmp	[ebp-28],4
	jle	_51
_15
	add	[ebp-24],1
_48
	cmp	[ebp-24],4
	jle	_49
_14
	sub	esp,12
	mov	eax,[_vbbuffer]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	[ebp-32],eax
	sub	esp,8
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	[esp+4],_12
	mov	eax,ebx
	call	__bbVecFree
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fsetscanline
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	mov	[ebp-4],0
	jmp	_55
_56
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	ebx,_asy
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,0
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_asy]
	mov	[ebx],eax
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	ebx,_asy
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 0
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_asy]
	mov	[ebx],eax
	add	[ebp-4],1
_55
	call	_fgraphicsheight
	cmp	[ebp-4],eax
	jle	_56
_18
	mov	eax,0
	jmp	_17_leave
_17_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fmakescanline
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],100
	call	_fcolor
	mov	[ebp-4],1
	jmp	_57
_58
	mov	ebx,[ebp-4]
	add	ebx,1
	mov	esi,_asy
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_asy]
	mov	ebx,[ebx]
	mov	esi,_asy
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 0
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_asy]
	mov	esi,[esi]
	cmp	esi,ebx
	jz	_59
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	mov	esi,_asy
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 0
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_asy]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	eax,_asy
	add	eax,12
	mov	eax,[eax]
	imul	eax,0
	add	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_asy]
	mov	eax,[eax]
	mov	[esp],eax
	call	_frect
_59
	add	[ebp-4],1
_57
	call	_fgraphicsheight
	cmp	[ebp-4],eax
	jle	_58
_20
	mov	eax,0
	jmp	_19_leave
_19_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fgetrgb
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+28]
	mov	ebx,[ebp+24]
	shl	ebx,byte 8
	or	eax,ebx
	mov	ebx,[ebp+20]
	shl	ebx,byte 16
	or	eax,ebx
	jmp	_21_leave
	mov	eax,0
	jmp	_21_leave
_21_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fgetr
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	shr	eax,byte 16
	mov	ebx,255
	and	eax,ebx
	jmp	_22_leave
	mov	eax,0
	jmp	_22_leave
_22_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fgetg
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	shr	eax,byte 8
	mov	ebx,255
	and	eax,ebx
	jmp	_23_leave
	mov	eax,0
	jmp	_23_leave
_23_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fgetb
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	mov	ebx,255
	and	eax,ebx
	jmp	_24_leave
	mov	eax,0
	jmp	_24_leave
_24_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	4
_vbbuffer	.dd	0
	.align	4
_vn	.dd	0
	.align	4
_vnn	.dd	0
	.align	4
_vuy	.dd	0
	.align	4
_vly	.dd	0
	.align	4
_vn2	.dd	0
	.align	4
_vn3	.dd	0
	.align	4
_vax	.dd	0
	.align	4
_aclock360	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_asy	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_tbmap	.dd	5
_31	.dd	0
	.dd	_31
	.dd	_31
	.dd	0
	.dd	-1
_32	.dd	0
	.dd	_32
	.dd	_32
	.dd	0
	.dd	-1
	.dd	1
	.dd	__bbIntType
	.align	4
_12	.dd	6
	.dd	16202
	.dd	__bbFltType
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

