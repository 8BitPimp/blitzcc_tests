
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,4
	mov	eax,_aoctave
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-4]
	mov	esi,_aoctave
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	esi,_aoctave
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	esi,_aoctave
	add	esi,20
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aoctave
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aperlin
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-4]
	mov	esi,_aperlin
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	esi,_aperlin
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aperlin
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	mov	[ebp-16],256
	jmp	_15
_14
	call	_fcls
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],0
	mov	[esp+12],1056964608
	mov	[esp+8],1082130432
	mov	[esp+4],1090519040
	mov	eax,[ebp-16]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fperlin_generate
	mov	[ebp-20],eax
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	[ebp-4],0
	jmp	_16
_17
	mov	[ebp-8],0
	jmp	_18
_19
	mov	ebx,_aperlin
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_aperlin]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_aperlin
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-8]
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aperlin]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,_aperlin
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-8]
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aperlin]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	shl	esi,byte 16
	or	ebx,esi
	mov	[ebp-24],ebx
	sub	esp,16
	mov	ebx,[ebp-24]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-8],1
_18
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-8],ebx
	jle	_19
_5
	add	[ebp-4],1
_16
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_17
_4
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	sub	esp,32
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_20
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],50
	mov	[esp],650
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitkey
_15
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_14
_3
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fperlin_generate
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,56
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	call	_fmillisecs
	mov	[ebp-4],eax
	mov	[ebp-8],0
	mov	[ebp-12],1325400064
	sub	esp,4
	mov	eax,_aoctave
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_aoctave
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_aoctave
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_aoctave
	add	esi,20
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aoctave
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aperlin
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_aperlin
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_aperlin
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aperlin
	mov	[esp],eax
	call	__bbDimArray
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	cmp	[ebp+40],0
	jz	_21
	sub	esp,4
	mov	eax,[ebp+40]
	mov	[esp],eax
	call	_fseedrnd
_21
	mov	[ebp-20],0
	jmp	_22
_23
	mov	[ebp-24],0
	jmp	_24
_25
	sub	esp,8
	mov	[esp],255
	mov	[esp+4],1
	call	_frand
	mov	ebx,_aoctave
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-20]
	mov	esi,_aoctave
	add	esi,16
	mov	esi,[esi]
	imul	esi,0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aoctave]
	mov	[ebx],eax
	cmp	[ebp+36],1
	jnz	_26
	mov	eax,[ebp-20]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	and	eax,eax
	jz	_27
	mov	ebx,_aoctave
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,0
	mov	esi,_aoctave
	add	esi,16
	mov	esi,[esi]
	imul	esi,0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aoctave]
	mov	ebx,[ebx]
	mov	esi,_aoctave
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-24]
	add	esi,[ebp-20]
	mov	edi,_aoctave
	add	edi,16
	mov	edi,[edi]
	imul	edi,0
	add	esi,edi
	shl	esi,byte 2
	add	esi,[_aoctave]
	mov	[esi],ebx
_27
	mov	eax,[ebp-24]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	and	eax,eax
	jz	_28
	mov	ebx,_aoctave
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,0
	add	ebx,[ebp-20]
	mov	esi,_aoctave
	add	esi,16
	mov	esi,[esi]
	imul	esi,0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aoctave]
	mov	ebx,[ebx]
	mov	esi,_aoctave
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-24]
	add	esi,[ebp-20]
	mov	edi,_aoctave
	add	edi,16
	mov	edi,[edi]
	imul	edi,0
	add	esi,edi
	shl	esi,byte 2
	add	esi,[_aoctave]
	mov	[esi],ebx
_28
_26
	add	[ebp-24],1
_24
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	cmp	[ebp-24],ebx
	jle	_25
_8
	add	[ebp-20],1
_22
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	cmp	[ebp-20],ebx
	jle	_23
_7
	mov	[ebp-28],1
	jmp	_29
_30
	mov	[ebp-32],0
	mov	ebx,[ebp-16]
	mov	[ebp-36],ebx
	mov	[ebp-20],0
	jmp	_31
_32
	mov	eax,[ebp-20]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	and	eax,eax
	jz	_33
	mov	ebx,[ebp-36]
	mov	[ebp-32],ebx
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	eax,[ebp-36]
	push	eax
	fld	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_34
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
_34
_33
	mov	[ebp-40],0
	mov	ebx,[ebp-16]
	mov	[ebp-44],ebx
	mov	[ebp-24],0
	jmp	_35
_36
	mov	eax,[ebp-24]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	and	eax,eax
	jz	_37
	mov	ebx,[ebp-44]
	mov	[ebp-40],ebx
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	eax,[ebp-44]
	push	eax
	fld	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_38
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
_38
_37
	mov	ebx,[ebp-24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-44]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-40]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,1097859072
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,[ebp-48]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	esi,1092616192
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_aoctave
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	add	esi,ebx
	mov	ebx,_aoctave
	add	ebx,16
	mov	ebx,[ebx]
	imul	ebx,0
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_aoctave]
	mov	esi,[esi]
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	edi,_aoctave
	add	edi,12
	mov	edi,[edi]
	imul	ebx,edi
	mov	edi,[ebp-32]
	push	edi
	fld	[esp]
	pop	edi
	push	edi
	fistp	[esp]
	pop	edi
	add	edi,ebx
	mov	ebx,_aoctave
	add	ebx,16
	mov	ebx,[ebx]
	imul	ebx,0
	add	edi,ebx
	shl	edi,byte 2
	add	edi,[_aoctave]
	mov	edi,[edi]
	sub	esi,edi
	push	esi
	fild	[esp]
	pop	esi
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	edi,_aoctave
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	mov	edi,[ebp-32]
	push	edi
	fld	[esp]
	pop	edi
	push	edi
	fistp	[esp]
	pop	edi
	add	edi,esi
	mov	esi,_aoctave
	add	esi,16
	mov	esi,[esi]
	imul	esi,0
	add	edi,esi
	shl	edi,byte 2
	add	edi,[_aoctave]
	mov	edi,[edi]
	push	edi
	fild	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[ebp-52],edi
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_aoctave
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	add	esi,ebx
	mov	ebx,_aoctave
	add	ebx,16
	mov	ebx,[ebx]
	imul	ebx,0
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_aoctave]
	mov	esi,[esi]
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	edi,_aoctave
	add	edi,12
	mov	edi,[edi]
	imul	ebx,edi
	mov	edi,[ebp-36]
	push	edi
	fld	[esp]
	pop	edi
	push	edi
	fistp	[esp]
	pop	edi
	add	edi,ebx
	mov	ebx,_aoctave
	add	ebx,16
	mov	ebx,[ebx]
	imul	ebx,0
	add	edi,ebx
	shl	edi,byte 2
	add	edi,[_aoctave]
	mov	edi,[edi]
	sub	esi,edi
	push	esi
	fild	[esp]
	pop	esi
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	edi,_aoctave
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	mov	edi,[ebp-36]
	push	edi
	fld	[esp]
	pop	edi
	push	edi
	fistp	[esp]
	pop	edi
	add	edi,esi
	mov	esi,_aoctave
	add	esi,16
	mov	esi,[esi]
	imul	esi,0
	add	edi,esi
	shl	edi,byte 2
	add	edi,[_aoctave]
	mov	edi,[edi]
	push	edi
	fild	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[ebp-56],edi
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-32]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,1097859072
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,[ebp-48]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	esi,1092616192
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	mov	ebx,[ebp-56]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_aoctave
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-24]
	add	esi,[ebp-20]
	mov	edi,_aoctave
	add	edi,16
	mov	edi,[edi]
	imul	edi,[ebp-28]
	add	esi,edi
	shl	esi,byte 2
	add	esi,[_aoctave]
	mov	[esi],ebx
	mov	ebx,_aoctave
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-20]
	mov	esi,_aoctave
	add	esi,16
	mov	esi,[esi]
	imul	esi,[ebp-28]
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_aoctave]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	sub	esp,8
	mov	eax,[ebp+32]
	mov	[esp],eax
	mov	esi,[ebp-28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	__bbFPow
	fmulp	st(1)
	mov	esi,_aperlin
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-24]
	add	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_aperlin]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,_aperlin
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_aperlin]
	mov	[ebx],esi
	mov	eax,_aperlin
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-24]
	add	eax,[ebp-20]
	shl	eax,byte 2
	add	eax,[_aperlin]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_39
	mov	ebx,_aperlin
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_aperlin]
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
_39
	mov	eax,_aperlin
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-24]
	add	eax,[ebp-20]
	shl	eax,byte 2
	add	eax,[_aperlin]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_40
	mov	ebx,_aperlin
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_aperlin]
	mov	ebx,[ebx]
	mov	[ebp-12],ebx
_40
	add	[ebp-24],1
_35
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	cmp	[ebp-24],ebx
	jle	_36
_11
	add	[ebp-20],1
_31
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	cmp	[ebp-20],ebx
	jle	_32
_10
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+28],ebx
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	add	[ebp-28],1
_29
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	cmp	[ebp-28],ebx
	jle	_30
_9
	mov	[ebp-20],0
	jmp	_41
_42
	mov	[ebp-24],0
	jmp	_43
_44
	mov	ebx,_aperlin
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_aperlin]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-12]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	fdivp	st(1)
	mov	esi,1132396544
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,_aperlin
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-24]
	add	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_aperlin]
	mov	[esi],ebx
	add	[ebp-24],1
_43
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	cmp	[ebp-24],ebx
	jle	_44
_13
	add	[ebp-20],1
_41
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	cmp	[ebp-20],ebx
	jle	_42
_12
	call	_fmillisecs
	sub	eax,[ebp-4]
	jmp	_6_leave
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	4
_aoctave	.dd	0
	.dd	1
	.dd	3
	.dd	0
	.dd	0
	.dd	0
	.align	4
_aperlin	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
_20	.db	"ms",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

