
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	sub	esp,12
	mov	eax,_19
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_20
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[_vmw],20
	mov	[_vmh],15
	mov	[_vtw],32
	mov	[_vth],32
	mov	[_vpx],0
	mov	[_vpy],0
	mov	ebx,[_vtw]
	mov	[_vpw],ebx
	mov	ebx,[_vth]
	mov	[_vph],ebx
	sub	esp,4
	mov	eax,_amap
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmw]
	mov	esi,_amap
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vmh]
	mov	esi,_amap
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amap
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	[esp],1
	call	_freadlevel
	jmp	_22
_21
	call	_fcls
	call	_fmoveplayer
	call	_fplayeritemcollision
	call	_fdrawlevel
	call	_fdrawplayer
	sub	esp,4
	mov	[esp],1
	call	_fflip
_22
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_21
_3
	call	_fend
_l_2level1
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fmoveplayer
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-4],0
	mov	[ebp-8],0
	sub	esp,4
	mov	[esp],200
	call	_fkeydown
	and	eax,eax
	jz	_23
	mov	[ebp-8],-1
_23
	sub	esp,4
	mov	[esp],205
	call	_fkeydown
	and	eax,eax
	jz	_24
	mov	[ebp-4],1
_24
	sub	esp,4
	mov	[esp],208
	call	_fkeydown
	and	eax,eax
	jz	_25
	mov	[ebp-8],1
_25
	sub	esp,4
	mov	[esp],203
	call	_fkeydown
	and	eax,eax
	jz	_26
	mov	[ebp-4],-1
_26
	mov	ebx,[_vpx]
	add	ebx,[ebp-4]
	cmp	ebx,0
	jge	_27
	mov	[ebp-4],0
_27
	mov	ebx,[_vpx]
	add	ebx,[ebp-4]
	mov	esi,[_vmw]
	imul	esi,[_vtw]
	cmp	ebx,esi
	jle	_28
	mov	[ebp-4],0
_28
	mov	ebx,[_vpy]
	add	ebx,[ebp-8]
	cmp	ebx,0
	jge	_29
	mov	[ebp-8],0
_29
	mov	ebx,[_vpy]
	add	ebx,[ebp-8]
	mov	esi,[_vmh]
	imul	esi,[_vth]
	cmp	ebx,esi
	jle	_30
	mov	[ebp-8],0
_30
	sub	esp,8
	mov	eax,[_vpx]
	add	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[_vpy]
	mov	[esp+4],ebx
	call	_fplayermapcollision
	cmp	eax,0
	jnz	_31
	mov	ebx,[ebp-4]
	add	[_vpx],ebx
_31
	sub	esp,8
	mov	eax,[_vpx]
	mov	[esp],eax
	mov	ebx,[_vpy]
	add	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fplayermapcollision
	cmp	eax,0
	jnz	_32
	mov	ebx,[ebp-8]
	add	[_vpy],ebx
_32
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fplayermapcollision
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	eax,[ebp+20]
	mov	ecx,[_vtw]
	cdq
	idiv	ecx
	mov	[ebp-4],eax
	mov	eax,[ebp+24]
	mov	ecx,[_vth]
	cdq
	idiv	ecx
	mov	[ebp-8],eax
	mov	ebx,[ebp-8]
	sub	ebx,1
	mov	[ebp-12],ebx
	jmp	_33
_34
	mov	ebx,[ebp-4]
	sub	ebx,1
	mov	[ebp-16],ebx
	jmp	_35
_36
	cmp	[ebp-16],0
	setge	al
	movzx	eax,al
	mov	[ebp-20],eax
	mov	ebx,[_vmw]
	cmp	[ebp-16],ebx
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	mov	[ebp-20],eax
	cmp	[ebp-12],0
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	mov	[ebp-20],eax
	mov	ebx,[_vmh]
	cmp	[ebp-12],ebx
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	and	eax,eax
	jz	_37
	mov	ebx,_amap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-12]
	add	ebx,[ebp-16]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	cmp	ebx,1
	jnz	_38
	sub	esp,32
	mov	ebx,[_vpw]
	mov	[esp+24],ebx
	mov	esi,[_vph]
	mov	[esp+28],esi
	mov	esi,[ebp+24]
	mov	[esp+20],esi
	mov	ebx,[ebp+20]
	mov	[esp+16],ebx
	mov	esi,[_vth]
	mov	[esp+12],esi
	mov	ebx,[_vtw]
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	imul	esi,[_vth]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	imul	eax,[_vtw]
	mov	[esp],eax
	call	_frectsoverlap
	and	eax,eax
	jz	_39
	mov	eax,1
	jmp	_5_leave
_39
_38
_37
	add	[ebp-16],1
_35
	mov	ebx,[ebp-4]
	add	ebx,1
	cmp	[ebp-16],ebx
	jle	_36
_7
	add	[ebp-12],1
_33
	mov	ebx,[ebp-8]
	add	ebx,1
	cmp	[ebp-12],ebx
	jle	_34
_6
	mov	eax,0
	jmp	_5_leave
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fplayeritemcollision
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	eax,[_vpx]
	mov	ecx,[_vtw]
	cdq
	idiv	ecx
	mov	[ebp-4],eax
	mov	eax,[_vpy]
	mov	ecx,[_vth]
	cdq
	idiv	ecx
	mov	[ebp-8],eax
	mov	ebx,[ebp-8]
	sub	ebx,1
	mov	[ebp-12],ebx
	jmp	_40
_41
	mov	ebx,[ebp-4]
	sub	ebx,1
	mov	[ebp-16],ebx
	jmp	_42
_43
	cmp	[ebp-16],0
	setge	al
	movzx	eax,al
	mov	[ebp-20],eax
	mov	ebx,[_vmw]
	cmp	[ebp-16],ebx
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	mov	[ebp-20],eax
	cmp	[ebp-12],0
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	mov	[ebp-20],eax
	mov	ebx,[_vmh]
	cmp	[ebp-12],ebx
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	and	eax,eax
	jz	_44
	mov	ebx,_amap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-12]
	add	ebx,[ebp-16]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	cmp	ebx,3
	jnz	_45
	sub	esp,32
	mov	ebx,[_vpw]
	mov	[esp+24],ebx
	mov	esi,[_vph]
	mov	[esp+28],esi
	mov	esi,[_vpy]
	mov	[esp+20],esi
	mov	ebx,[_vpx]
	mov	[esp+16],ebx
	mov	esi,[_vth]
	sub	esi,16
	mov	[esp+12],esi
	mov	ebx,[_vtw]
	sub	ebx,16
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	imul	esi,[_vth]
	add	esi,8
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	imul	eax,[_vtw]
	add	eax,8
	mov	[esp],eax
	call	_frectsoverlap
	and	eax,eax
	jz	_46
	mov	ebx,0
	mov	esi,_amap
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-12]
	add	esi,[ebp-16]
	shl	esi,byte 2
	add	esi,[_amap]
	mov	[esi],ebx
_46
_45
_44
	add	[ebp-16],1
_42
	mov	ebx,[ebp-4]
	add	ebx,1
	cmp	[ebp-16],ebx
	jle	_43
_10
	add	[ebp-12],1
_40
	mov	ebx,[ebp-8]
	add	ebx,1
	cmp	[ebp-12],ebx
	jle	_41
_9
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawplayer
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	ebx,[_vph]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vpw]
	mov	[esp+8],esi
	mov	ebx,[_vpy]
	mov	[esp+4],ebx
	mov	eax,[_vpx]
	mov	[esp],eax
	call	_foval
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawlevel
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-4],0
	jmp	_47
_48
	mov	[ebp-8],0
	jmp	_49
_50
	mov	ebx,_amap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-4]
	add	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	cmp	ebx,1
	jnz	_51
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	ebx,[_vth]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vtw]
	mov	[esp+8],esi
	mov	ebx,[ebp-4]
	imul	ebx,[_vth]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	imul	eax,[_vtw]
	mov	[esp],eax
	call	_frect
_51
	mov	ebx,_amap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-4]
	add	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	cmp	ebx,2
	jnz	_52
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	mov	ebx,[ebp-8]
	imul	ebx,[_vtw]
	mov	[ebp-12],ebx
	mov	ebx,[ebp-4]
	imul	ebx,[_vth]
	mov	[ebp-16],ebx
	sub	esp,16
	mov	ebx,[ebp-12]
	add	ebx,[_vtw]
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	add	esi,[_vth]
	mov	[esp+12],esi
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[_vtw]
	sar	eax,byte 1
	add	eax,[ebp-12]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	add	esi,[_vth]
	mov	[esp+12],esi
	mov	esi,[ebp-16]
	add	esi,[_vth]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	add	eax,[_vtw]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[_vtw]
	sar	ebx,byte 1
	add	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	esi,[ebp-16]
	add	esi,[_vth]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fline
_52
	mov	ebx,_amap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-4]
	add	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	cmp	ebx,3
	jnz	_53
	sub	esp,12
	mov	[esp+4],180
	mov	[esp+8],10
	mov	[esp],200
	call	_fcolor
	sub	esp,20
	mov	ebx,[_vth]
	sub	ebx,8
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vtw]
	sub	esi,8
	mov	[esp+8],esi
	mov	ebx,[ebp-4]
	imul	ebx,[_vth]
	add	ebx,4
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	imul	eax,[_vtw]
	add	eax,4
	mov	[esp],eax
	call	_foval
_53
	add	[ebp-8],1
_49
	mov	ebx,[_vmw]
	sub	ebx,1
	cmp	[ebp-8],ebx
	jle	_50
_14
	add	[ebp-4],1
_47
	mov	ebx,[_vmh]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_48
_13
	mov	eax,0
	jmp	_12_leave
_12_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_freadlevel
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp+20]
	mov	[ebp-4],ebx
	cmp	[ebp-4],1
	jz	_55
	jmp	_54
_55
	sub	esp,4
	mov	eax,__DATA
	add	eax,0
	mov	[esp],eax
	call	__bbRestore
	jmp	_54
_54
	mov	[ebp-8],0
	jmp	_56
_57
	mov	[ebp-12],0
	jmp	_58
_59
	call	__bbReadInt
	mov	[ebp-16],eax
	mov	ebx,[ebp-16]
	mov	esi,_amap
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-8]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_amap]
	mov	[esi],ebx
	add	[ebp-12],1
_58
	mov	ebx,[_vmw]
	sub	ebx,1
	cmp	[ebp-12],ebx
	jle	_59
_18
	add	[ebp-8],1
_56
	mov	ebx,[_vmh]
	sub	ebx,1
	cmp	[ebp-8],ebx
	jle	_57
_17
	mov	eax,0
	jmp	_15_leave
_15_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
_19	.db	"Topdown RPG player map collision - cursor keys to move.",0
_20	.db	"",0
	.align	4
_vmw	.dd	0
	.align	4
_vmh	.dd	0
	.align	4
_vtw	.dd	0
	.align	4
_vth	.dd	0
	.align	4
_vpx	.dd	0
	.align	4
_vpy	.dd	0
	.align	4
_vpw	.dd	0
	.align	4
_vph	.dd	0
	.align	4
_amap	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	3
	.dd	1
	.dd	3
	.dd	1
	.dd	3
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	3
	.dd	1
	.dd	3
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	3
	.dd	1
	.dd	0
	.dd	1
	.dd	2
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	3
	.dd	1
	.dd	3
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	2
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	3
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	2
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	2
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	0

