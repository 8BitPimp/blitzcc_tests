
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,168
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	mov	[ebp-128],ebx
	mov	[ebp-132],ebx
	mov	[ebp-136],ebx
	mov	[ebp-140],ebx
	mov	[ebp-144],ebx
	mov	[ebp-148],ebx
	mov	[ebp-152],ebx
	mov	[ebp-156],ebx
	mov	[ebp-160],ebx
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics3d
	sub	esp,4
	mov	eax,_agradientr
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_agradientr
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_agradientr
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_agradientg
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_agradientg
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_agradientg
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_agradientb
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_agradientb
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_agradientb
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aprozent
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_aprozent
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aprozent
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_arot
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_arot
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_arot
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_agruen
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_agruen
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_agruen
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ablau
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_ablau
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ablau
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aimages
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,9
	mov	esi,_aimages
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aimages
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aarray
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_aarray
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aarray
	mov	[esp],eax
	call	__bbDimArray
	mov	[_vmaxx],512
	mov	[_vmaxy],256
	mov	ebx,[_vmaxx]
	imul	ebx,[_vmaxy]
	mov	[_vmax],ebx
	mov	[_vpixelstep],16384
	mov	[_vmovespeed],1036831949
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	sub	esp,4
	mov	eax,__DATA
	add	eax,0
	mov	[esp],eax
	call	__bbRestore
	sub	esp,8
	mov	[esp],9
	mov	[esp+4],255
	call	_fcreategradient
	mov	[ebp-4],0
	jmp	_28
_29
	sub	esp,32
	mov	eax,_30
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-164],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-164],eax
	sub	esp,4
	mov	ebx,_31
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	ebx,[_vmaxx]
	mov	[esp+4],ebx
	mov	esi,[_vmaxy]
	mov	[esp+8],esi
	call	_floadbankimage
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_aimages]
	mov	[ebx],eax
	add	[ebp-4],1
_28
	cmp	[ebp-4],9
	jle	_29
_3
	sub	esp,4
	mov	eax,[_vmax]
	mov	[esp],eax
	call	_fcreaterandomarray
	sub	esp,16
	mov	[esp+8],48
	mov	[esp+12],1
	mov	esi,[_vmaxy]
	mov	[esp+4],esi
	mov	eax,[_vmaxx]
	mov	[esp],eax
	call	_fcreatetexture
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],82
	mov	[esp+8],112
	mov	[esp],17
	call	_fcolor
	sub	esp,20
	mov	ebx,[_vmaxy]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vmaxx]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	mov	[esp],32
	mov	[esp+4],0
	call	_fcreatesphere
	mov	[ebp-16],eax
	sub	esp,20
	mov	[esp+12],1092616192
	mov	[esp+16],0
	mov	[esp+8],1092616192
	mov	[esp+4],1092616192
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fscaleentity
	sub	esp,20
	mov	[esp+12],1092616192
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],2
	call	_fentityfx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fentitytexture
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],2
	call	_ftextureblend
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],1048576000
	call	_fentityshininess
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],0
	call	_fcreatelight
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],1090519040
	mov	[esp+8],1090519040
	mov	[esp],1090519040
	call	_fambientlight
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[ebp-24],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],1101004800
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,12
	mov	[esp+4],1036831949
	mov	[esp+8],1148846080
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fcamerarange
	sub	esp,8
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	[esp],eax
	mov	[ebp-164],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-164]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	call	_fmovemouse
	call	_fhidepointer
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fpointentity
	mov	[ebp-28],1
	call	_fmillisecs
	mov	[ebp-32],eax
	jmp	_33
_32
	add	[ebp-36],1
	call	_fmillisecs
	cmp	[ebp-40],eax
	jge	_34
	call	_fmillisecs
	add	eax,1000
	mov	[ebp-40],eax
	mov	ebx,[ebp-36]
	mov	[ebp-44],ebx
	mov	[ebp-36],0
_34
	call	_fmillisecs
	sub	eax,[ebp-52]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1092616192
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-48],eax
	call	_fmillisecs
	mov	[ebp-52],eax
	call	_fmousexspeed
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-56],eax
	call	_fmouseyspeed
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-60],eax
	sub	esp,28
	mov	eax,[ebp-24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentitypitch
	mov	ebx,[ebp-60]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1084227584
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-164],eax
	sub	esp,8
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fentityyaw
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1084227584
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_frotateentity
	mov	ebx,eax
	sub	esp,4
	mov	[esp],200
	call	_fkeydown
	and	eax,eax
	jz	_35
	sub	esp,16
	mov	ebx,[_vmovespeed]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fmoveentity
_35
	sub	esp,4
	mov	[esp],208
	call	_fkeydown
	and	eax,eax
	jz	_36
	sub	esp,16
	mov	ebx,[_vmovespeed]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fmoveentity
_36
	sub	esp,8
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	[esp],eax
	mov	[ebp-164],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-164]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	call	_fmovemouse
	call	_fmillisecs
	mov	[ebp-64],eax
	sub	esp,4
	mov	[esp],57
	call	_fkeyhit
	and	eax,eax
	jz	_37
	mov	ebx,[ebp-64]
	mov	[ebp-68],ebx
	mov	[ebp-4],0
	mov	[ebp-72],0
	mov	[ebp-76],0
	sub	esp,24
	mov	[esp],0
	mov	[esp+4],9999
	call	_frand
	mov	[esp],eax
	mov	[esp+4],4
	call	_fzero
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,16
	lea	eax,[ebp-80]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fleft
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-84],eax
	sub	esp,16
	mov	[esp+4],1
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp-80]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-88],eax
	sub	esp,16
	mov	[esp+4],2
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp-80]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-88],eax
	sub	esp,16
	lea	eax,[ebp-80]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-92],eax
	mov	[ebp-28],1
_37
	sub	esp,20
	mov	ebx,-1110651699
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fturnentity
	mov	eax,[ebp-32]
	cmp	[ebp-64],eax
	setg	al
	movzx	eax,al
	mov	ebx,[ebp-28]
	and	eax,ebx
	and	eax,eax
	jz	_38
	mov	ebx,[ebp-64]
	mov	[ebp-96],ebx
	mov	ebx,[ebp-64]
	add	ebx,30
	mov	[ebp-32],ebx
	mov	ebx,[_vpixelstep]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-100],ebx
	mov	ebx,[ebp-4]
	mov	[ebp-104],ebx
	mov	ebx,[ebp-4]
	add	ebx,[ebp-100]
	mov	[ebp-108],ebx
	mov	ebx,[_vmax]
	sub	ebx,1
	cmp	[ebp-108],ebx
	jle	_39
	mov	ebx,[_vmax]
	sub	ebx,1
	mov	[ebp-108],ebx
_39
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_flockbuffer
	mov	ebx,[ebp-104]
	mov	[ebp-112],ebx
	jmp	_40
_41
	add	[ebp-4],1
	mov	ebx,[_vmax]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_42
	mov	[ebp-28],0
	jmp	_l_2skip
_42
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_aarray]
	mov	eax,[eax]
	mov	ecx,[_vmaxx]
	cdq
	idiv	ecx
	mov	[ebp-116],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_aarray]
	mov	ebx,[ebx]
	mov	esi,[ebp-116]
	imul	esi,[_vmaxx]
	sub	ebx,esi
	mov	[ebp-120],ebx
	mov	ebx,[ebp-116]
	imul	ebx,[_vmaxx]
	add	ebx,[ebp-120]
	mov	[ebp-124],ebx
	sub	esp,8
	mov	eax,[ebp-84]
	shl	eax,byte 2
	add	eax,[_aimages]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-124]
	mov	[esp+4],ebx
	call	_fpeekbyte
	mov	[ebp-128],eax
	sub	esp,8
	mov	eax,[ebp-88]
	shl	eax,byte 2
	add	eax,[_aimages]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-124]
	mov	[esp+4],ebx
	call	_fpeekbyte
	mov	[ebp-132],eax
	sub	esp,8
	mov	eax,[ebp-140]
	shl	eax,byte 2
	add	eax,[_aimages]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-124]
	mov	[esp+4],ebx
	call	_fpeekbyte
	mov	[ebp-136],eax
	sub	esp,8
	mov	eax,[ebp-92]
	shl	eax,byte 2
	add	eax,[_aimages]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-124]
	mov	[esp+4],ebx
	call	_fpeekbyte
	mov	[ebp-144],eax
	sub	esp,8
	mov	eax,[ebp-128]
	mov	[esp],eax
	mov	ebx,[ebp-132]
	mov	[esp+4],ebx
	call	_faverage
	mov	[ebp-148],eax
	sub	esp,8
	mov	eax,[ebp-148]
	mov	[esp],eax
	mov	ebx,[ebp-136]
	mov	[esp+4],ebx
	call	_flighten
	mov	[ebp-148],eax
	sub	esp,8
	mov	eax,[ebp-148]
	mov	[esp],eax
	mov	ebx,[ebp-144]
	mov	[esp+4],ebx
	call	_fhardlight
	mov	[ebp-148],eax
	cmp	[ebp-148],128
	jl	_43
	add	[ebp-72],1
	jmp	_44
_43
	add	[ebp-76],1
_44
	mov	ebx,[ebp-148]
	shl	ebx,byte 2
	add	ebx,[_agradientr]
	mov	ebx,[ebx]
	shl	ebx,byte 16
	mov	esi,[ebp-148]
	shl	esi,byte 2
	add	esi,[_agradientg]
	mov	esi,[esi]
	shl	esi,byte 8
	add	ebx,esi
	mov	esi,[ebp-148]
	shl	esi,byte 2
	add	esi,[_agradientb]
	mov	esi,[esi]
	add	ebx,esi
	mov	[ebp-152],ebx
	sub	esp,16
	mov	ebx,[ebp-152]
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	mov	[esp+12],esi
	mov	esi,[ebp-116]
	mov	[esp+4],esi
	mov	eax,[ebp-120]
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-112],1
_40
	mov	ebx,[ebp-108]
	cmp	[ebp-112],ebx
	jle	_41
_5
_l_2skip
	call	_fmillisecs
	mov	[ebp-156],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_funlockbuffer
	mov	ebx,[ebp-156]
	sub	ebx,[ebp-96]
	add	ebx,[ebp-160]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-160],ebx
_38
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	sub	esp,32
	mov	eax,_45
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-164],eax
	sub	esp,4
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,40
	mov	eax,[ebp-4]
	imul	eax,100
	mov	ecx,[_vmax]
	cdq
	idiv	ecx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	mov	[ebp-164],eax
	sub	esp,4
	mov	ebx,_46
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_47
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],15
	mov	[esp],0
	call	_ftext
	sub	esp,40
	mov	eax,_48
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-164],eax
	sub	esp,4
	mov	ebx,[ebp-156]
	sub	ebx,[ebp-68]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-164],eax
	sub	esp,4
	mov	ebx,_49
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],30
	mov	[esp],0
	call	_ftext
	sub	esp,40
	mov	eax,_50
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-164],eax
	sub	esp,4
	mov	ebx,[ebp-160]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-164],eax
	sub	esp,4
	mov	ebx,_51
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],45
	mov	[esp],0
	call	_ftext
	sub	esp,32
	mov	eax,_52
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-164],eax
	sub	esp,4
	mov	ebx,[ebp-100]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],60
	mov	[esp],0
	call	_ftext
	sub	esp,40
	mov	eax,[ebp-72]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1120403456
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[_vmax]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	mov	[ebp-164],eax
	sub	esp,4
	mov	ebx,_53
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_54
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],75
	mov	[esp],0
	call	_ftext
	sub	esp,40
	mov	eax,[ebp-76]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1120403456
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[_vmax]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	mov	[ebp-164],eax
	sub	esp,4
	mov	ebx,_55
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_56
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],90
	mov	[esp],0
	call	_ftext
	sub	esp,32
	mov	eax,_57
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-164],eax
	sub	esp,4
	mov	ebx,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],105
	mov	[esp],0
	call	_ftext
	sub	esp,32
	mov	eax,_58
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-164],eax
	sub	esp,4
	mov	[ebp-168],eax
	mov	eax,ebx
	call	_ftrisrendered
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],120
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	[esp],0
	call	_fflip
_33
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_32
_4
	call	_fend
_l_2classmt
	ret
_2_leave
	mov	[ebp-164],eax
	sub	esp,4
	mov	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-164]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsoftlight
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	mov	ebx,[ebp+20]
	imul	ebx,[ebp+24]
	shr	ebx,byte 8
	mov	[ebp-4],ebx
	mov	ebx,255
	sub	ebx,[ebp+20]
	mov	esi,255
	sub	esi,[ebp+24]
	imul	ebx,esi
	shr	ebx,byte 8
	mov	eax,255
	sub	eax,ebx
	sub	eax,[ebp-4]
	imul	eax,[ebp+20]
	shr	eax,byte 8
	add	eax,[ebp-4]
	jmp	_6_leave
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fhardlight
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	cmp	[ebp+24],128
	jge	_59
	mov	eax,[ebp+20]
	imul	eax,[ebp+24]
	shr	eax,byte 7
	jmp	_7_leave
	jmp	_60
_59
	mov	ebx,255
	sub	ebx,[ebp+24]
	mov	esi,255
	sub	esi,[ebp+20]
	imul	ebx,esi
	shr	ebx,byte 7
	mov	eax,255
	sub	eax,ebx
	jmp	_7_leave
_60
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdifference
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,[ebp+20]
	sub	eax,[ebp+24]
	mov	[esp],eax
	call	__bbAbs
	jmp	_8_leave
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fmultiply
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	imul	eax,[ebp+24]
	shr	eax,byte 8
	jmp	_9_leave
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_faverage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	add	eax,[ebp+24]
	shr	eax,byte 1
	jmp	_10_leave
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fscreen
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,255
	sub	ebx,[ebp+20]
	mov	esi,255
	sub	esi,[ebp+24]
	imul	ebx,esi
	shr	ebx,byte 8
	mov	eax,255
	sub	eax,ebx
	jmp	_11_leave
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_flighten
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+24]
	cmp	[ebp+20],ebx
	jle	_61
	mov	eax,[ebp+20]
	jmp	_12_leave
	jmp	_62
_61
	mov	eax,[ebp+24]
	jmp	_12_leave
_62
	mov	eax,0
	jmp	_12_leave
_12_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdarken
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+24]
	cmp	[ebp+20],ebx
	jge	_63
	mov	eax,[ebp+20]
	jmp	_13_leave
	jmp	_64
_63
	mov	eax,[ebp+24]
	jmp	_13_leave
_64
	mov	eax,0
	jmp	_13_leave
_13_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fnegation
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,255
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,255
	sub	ebx,[ebp+20]
	sub	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbAbs
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	eax,ebx
	jmp	_14_leave
	mov	eax,0
	jmp	_14_leave
_14_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fexclusion
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	add	eax,[ebp+24]
	mov	ebx,[ebp+20]
	imul	ebx,[ebp+24]
	shr	ebx,byte 7
	sub	eax,ebx
	jmp	_15_leave
	mov	eax,0
	jmp	_15_leave
_15_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_foverlay
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	cmp	[ebp+20],128
	jge	_65
	mov	eax,[ebp+20]
	imul	eax,[ebp+24]
	shr	eax,byte 7
	jmp	_16_leave
	jmp	_66
_65
	mov	ebx,255
	sub	ebx,[ebp+20]
	mov	esi,255
	sub	esi,[ebp+24]
	imul	ebx,esi
	shr	ebx,byte 7
	mov	eax,255
	sub	eax,ebx
	jmp	_16_leave
_66
	mov	eax,0
	jmp	_16_leave
_16_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fcolordodge
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	cmp	[ebp+24],255
	jnz	_67
	mov	eax,255
	jmp	_17_leave
	jmp	_68
_67
	sub	esp,4
	mov	eax,[ebp+20]
	shl	eax,byte 8
	mov	ecx,255
	sub	ecx,[ebp+24]
	cdq
	idiv	ecx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-4],eax
	cmp	[ebp-4],255
	jle	_69
	mov	eax,255
	jmp	_17_leave
	jmp	_70
_69
	mov	eax,[ebp-4]
	jmp	_17_leave
_70
_68
	mov	eax,0
	jmp	_17_leave
_17_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fcreategradient
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,44
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	sub	esp,4
	mov	eax,_agradientr
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+24]
	mov	esi,_agradientr
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_agradientr
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_agradientg
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+24]
	mov	esi,_agradientg
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_agradientg
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_agradientb
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+24]
	mov	esi,_agradientb
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_agradientb
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aprozent
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+20]
	mov	esi,_aprozent
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aprozent
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_arot
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+20]
	mov	esi,_arot
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_arot
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_agruen
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+20]
	mov	esi,_agruen
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_agruen
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ablau
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+20]
	mov	esi,_ablau
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ablau
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-44],1
	mov	[ebp-4],1
	jmp	_71
_72
	call	__bbReadInt
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_aprozent]
	mov	[ebx],eax
	call	__bbReadInt
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_arot]
	mov	[ebx],eax
	call	__bbReadInt
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_agruen]
	mov	[ebx],eax
	call	__bbReadInt
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ablau]
	mov	[ebx],eax
	add	[ebp-4],1
_71
	mov	ebx,[ebp+20]
	cmp	[ebp-4],ebx
	jle	_72
_19
	jmp	_74
_73
	mov	eax,[ebp-44]
	shl	eax,byte 2
	add	eax,[_aprozent]
	mov	eax,[eax]
	imul	eax,[ebp+24]
	mov	ecx,100
	cdq
	idiv	ecx
	mov	[ebp-8],eax
	mov	eax,[ebp-44]
	add	eax,1
	shl	eax,byte 2
	add	eax,[_aprozent]
	mov	eax,[eax]
	imul	eax,[ebp+24]
	mov	ecx,100
	cdq
	idiv	ecx
	mov	[ebp-12],eax
	mov	ebx,[ebp-12]
	sub	ebx,[ebp-8]
	mov	[ebp-16],ebx
	mov	ebx,[ebp-44]
	shl	ebx,byte 2
	add	ebx,[_arot]
	mov	ebx,[ebx]
	mov	esi,[ebp-44]
	add	esi,1
	shl	esi,byte 2
	add	esi,[_arot]
	mov	esi,[esi]
	sub	ebx,esi
	mov	[ebp-20],ebx
	mov	ebx,[ebp-44]
	shl	ebx,byte 2
	add	ebx,[_agruen]
	mov	ebx,[ebx]
	mov	esi,[ebp-44]
	add	esi,1
	shl	esi,byte 2
	add	esi,[_agruen]
	mov	esi,[esi]
	sub	ebx,esi
	mov	[ebp-24],ebx
	mov	ebx,[ebp-44]
	shl	ebx,byte 2
	add	ebx,[_ablau]
	mov	ebx,[ebx]
	mov	esi,[ebp-44]
	add	esi,1
	shl	esi,byte 2
	add	esi,[_ablau]
	mov	esi,[esi]
	sub	ebx,esi
	mov	[ebp-28],ebx
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp-24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	[ebp-4],0
	jmp	_75
_76
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-44]
	shl	esi,byte 2
	add	esi,[_arot]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	ebx,[ebp-8]
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_agradientr]
	mov	[ebx],esi
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-44]
	shl	esi,byte 2
	add	esi,[_agruen]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	ebx,[ebp-8]
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_agradientg]
	mov	[ebx],esi
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-44]
	shl	esi,byte 2
	add	esi,[_ablau]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	ebx,[ebp-8]
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_agradientb]
	mov	[ebx],esi
	add	[ebp-4],1
_75
	mov	ebx,[ebp-16]
	cmp	[ebp-4],ebx
	jle	_76
_21
	add	[ebp-44],1
_74
	mov	ebx,[ebp+20]
	cmp	[ebp-44],ebx
	jl	_73
_20
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fcreaterandomarray
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,4
	mov	eax,_aarray
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+20]
	mov	esi,_aarray
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aarray
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-4],0
	jmp	_77
_78
	mov	ebx,[ebp-4]
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aarray]
	mov	[esi],ebx
	add	[ebp-4],1
_77
	mov	ebx,[ebp+20]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_78
_23
	mov	[ebp-8],0
	jmp	_79
_80
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp+20]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_frand
	mov	[ebp-12],eax
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aarray]
	mov	ebx,[ebx]
	mov	[ebp-16],ebx
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_aarray]
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_aarray]
	mov	[esi],ebx
	mov	ebx,[ebp-16]
	mov	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_aarray]
	mov	[esi],ebx
	add	[ebp-8],1
_79
	mov	ebx,[ebp+20]
	sub	ebx,2
	cmp	[ebp-8],ebx
	jle	_80
_24
	mov	eax,0
	jmp	_22_leave
_22_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fzero
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_81
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-8],1
	jmp	_82
_83
	sub	esp,20
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_84
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-8],1
_82
	mov	ebx,[ebp+24]
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	call	_flen
	sub	ebx,eax
	cmp	[ebp-8],ebx
	jle	_83
_26
	sub	esp,12
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	jmp	_25_leave
	sub	esp,4
	mov	eax,_85
	mov	[esp],eax
	call	__bbStrConst
	jmp	_25_leave
_25_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_floadbankimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fopenfile
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+24]
	imul	eax,[ebp+28]
	mov	[esp],eax
	call	_fcreatebank
	mov	[ebp-8],eax
	sub	esp,16
	mov	[esp+8],0
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fbanksize
	mov	[esp+12],eax
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_freadbytes
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fclosefile
	mov	eax,[ebp-8]
	jmp	_27_leave
	mov	eax,0
	jmp	_27_leave
_27_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	4
_agradientr	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_agradientg	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_agradientb	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aprozent	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_arot	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_agruen	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ablau	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aimages	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aarray	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_vmaxx	.dd	0
	.align	4
_vmaxy	.dd	0
	.align	4
_vmax	.dd	0
	.align	4
_vpixelstep	.dd	0
	.align	4
_vmovespeed	.dd	0
_30	.db	"planet",0
_31	.db	".img",0
_45	.db	"Planet Source Maps: ",0
_46	.db	"Pixels blended....: ",0
_47	.db	"%",0
_48	.db	"Transition Time...: ",0
_49	.db	"ms",0
_50	.db	"Used ms per cycle.: ",0
_51	.db	"ms",0
_52	.db	"Pixels per cycle..: ",0
_53	.db	"Water coverage....: ",0
_54	.db	"%",0
_55	.db	"Land coverage.....: ",0
_56	.db	"%",0
_57	.db	"FPS...............: ",0
_58	.db	"Tris rendered.....: ",0
_81	.db	"",0
_84	.db	"0",0
_85	.db	"",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	1
	.dd	0
	.dd	1
	.dd	255
	.dd	1
	.dd	255
	.dd	1
	.dd	255
	.dd	1
	.dd	5
	.dd	1
	.dd	179
	.dd	1
	.dd	179
	.dd	1
	.dd	179
	.dd	1
	.dd	10
	.dd	1
	.dd	153
	.dd	1
	.dd	143
	.dd	1
	.dd	92
	.dd	1
	.dd	25
	.dd	1
	.dd	115
	.dd	1
	.dd	128
	.dd	1
	.dd	77
	.dd	1
	.dd	48
	.dd	1
	.dd	42
	.dd	1
	.dd	102
	.dd	1
	.dd	41
	.dd	1
	.dd	50
	.dd	1
	.dd	69
	.dd	1
	.dd	108
	.dd	1
	.dd	118
	.dd	1
	.dd	52
	.dd	1
	.dd	17
	.dd	1
	.dd	82
	.dd	1
	.dd	112
	.dd	1
	.dd	75
	.dd	1
	.dd	9
	.dd	1
	.dd	62
	.dd	1
	.dd	92
	.dd	1
	.dd	100
	.dd	1
	.dd	2
	.dd	1
	.dd	43
	.dd	1
	.dd	68
	.dd	0

