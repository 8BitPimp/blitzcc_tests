
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,108
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],1
	mov	[esp+4],768
	mov	[esp],1024
	call	_fgraphics
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],20
	sub	esp,4
	mov	eax,_15
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-108],eax
	sub	esp,4
	mov	ebx,_16
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-108]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-12],eax
	mov	[ebp-16],256
	mov	ebx,[ebp-16]
	sar	ebx,byte 1
	mov	[ebp-20],ebx
	mov	ebx,[ebp-16]
	sar	ebx,byte 2
	mov	[ebp-24],ebx
	mov	[ebp-28],1045220557
	mov	[_vgotr],0
	mov	[_vgotg],0
	mov	[_vgotb],0
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
_17
	call	_fmousex
	mov	[ebp-32],eax
	call	_fmousey
	mov	[ebp-36],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-20]
	cmp	ebx,0
	jge	_18
	mov	ebx,[ebp-20]
	mov	[ebp-32],ebx
_18
	mov	ebx,[ebp-32]
	add	ebx,[ebp-20]
	add	ebx,[ebp-24]
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fimagewidth
	cmp	ebx,eax
	jle	_19
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fimagewidth
	sub	eax,[ebp-20]
	sub	eax,[ebp-24]
	mov	[ebp-32],eax
_19
	mov	ebx,[ebp-36]
	sub	ebx,[ebp-20]
	cmp	ebx,0
	jge	_20
	mov	ebx,[ebp-20]
	mov	[ebp-36],ebx
_20
	mov	ebx,[ebp-36]
	add	ebx,[ebp-20]
	add	ebx,[ebp-24]
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fimageheight
	cmp	ebx,eax
	jle	_21
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fimageheight
	sub	eax,[ebp-20]
	sub	eax,[ebp-24]
	mov	[ebp-36],eax
_21
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fcolor
	sub	esp,8
	mov	eax,[ebp-40]
	add	eax,10
	mov	[esp],eax
	mov	[esp+4],256
	call	__bbMod
	mov	[ebp-40],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fdrawblock
	sub	esp,20
	mov	ebx,[ebp-16]
	add	ebx,[ebp-24]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-16]
	add	esi,[ebp-24]
	mov	[esp+8],esi
	mov	ebx,[ebp-36]
	sub	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	eax,[ebp-32]
	sub	eax,[ebp-20]
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	ebx,[ebp-40]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	ebx,[ebp-36]
	sub	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	eax,[ebp-32]
	sub	eax,[ebp-20]
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-108],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-108]
	mov	[esp+4],ebx
	call	_fmousex
	mov	[esp],eax
	call	_fotext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_23
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],10
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	[esp],eax
	call	_fotext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_17
_3
	mov	ebx,[ebp-20]
	sub	[ebp-32],ebx
	mov	ebx,[ebp-20]
	sub	[ebp-36],ebx
	sub	esp,12
	mov	ebx,[ebp-16]
	add	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-16]
	add	eax,[ebp-24]
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-44],eax
	sub	esp,40
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+24],eax
	mov	[ebp-108],eax
	sub	esp,8
	mov	ebx,[ebp-44]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fimagebuffer
	mov	ebx,eax
	mov	eax,[ebp-108]
	mov	[esp+28],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	mov	ebx,[ebp-16]
	add	ebx,[ebp-24]
	mov	[esp+12],ebx
	mov	esi,[ebp-16]
	add	esi,[ebp-24]
	mov	[esp+8],esi
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fcopyrect
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-48],eax
	sub	esp,12
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,12
	mov	eax,[ebp-44]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-52],0
	jmp	_24
_25
	mov	[ebp-56],0
	jmp	_26
_27
	sub	esp,8
	mov	eax,[ebp-28]
	push	eax
	fld	[esp]
	pop	eax
	fchs
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_frnd
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-60],eax
	mov	ebx,[ebp-56]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-60]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-64],ebx
	mov	eax,[ebp-64]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_28
	mov	[ebp-64],1065353216
_28
	mov	eax,[ebp-64]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_29
	mov	[ebp-64],0
_29
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-68],ebx
	sub	esp,12
	mov	ebx,[ebp-32]
	add	ebx,[ebp-16]
	add	ebx,[ebp-56]
	mov	[esp+4],ebx
	mov	esi,[ebp-36]
	add	esi,[ebp-52]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fgetrgb
	mov	ebx,[_vgotr]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	mov	ebx,[_vgotg]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	mov	ebx,[_vgotb]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-80],ebx
	sub	esp,12
	mov	ebx,[ebp-56]
	mov	[esp+4],ebx
	mov	esi,[ebp-52]
	mov	[esp+8],esi
	mov	eax,[ebp-44]
	mov	[esp],eax
	call	_fgetrgb
	mov	ebx,[_vgotr]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-84],ebx
	mov	ebx,[_vgotg]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-88],ebx
	mov	ebx,[_vgotb]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-92],ebx
	mov	ebx,[ebp-72]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-84]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-96],ebx
	mov	ebx,[ebp-76]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-88]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-100],ebx
	mov	ebx,[ebp-80]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-92]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-104],ebx
	sub	esp,24
	mov	ebx,[ebp-100]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	esi,[ebp-104]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+20],esi
	mov	esi,[ebp-96]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-52]
	mov	[esp+8],ebx
	mov	esi,[ebp-56]
	mov	[esp+4],esi
	mov	eax,[ebp-44]
	mov	[esp],eax
	call	_fwritergb
	add	[ebp-56],1
_26
	mov	ebx,[ebp-24]
	cmp	[ebp-56],ebx
	jle	_27
_5
	add	[ebp-52],1
_24
	mov	ebx,[ebp-16]
	add	ebx,[ebp-24]
	cmp	[ebp-52],ebx
	jle	_25
_4
	sub	esp,12
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	mov	eax,[ebp-44]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,40
	mov	eax,[ebp-44]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+24],eax
	mov	[ebp-108],eax
	sub	esp,8
	mov	ebx,[ebp-48]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fimagebuffer
	mov	ebx,eax
	mov	eax,[ebp-108]
	mov	[esp+28],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	sub	esp,12
	mov	eax,[ebp-44]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,12
	mov	eax,[ebp-48]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-56],0
	jmp	_30
_31
	mov	[ebp-52],0
	jmp	_32
_33
	sub	esp,8
	mov	eax,[ebp-28]
	push	eax
	fld	[esp]
	pop	eax
	fchs
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_frnd
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-60],eax
	mov	ebx,[ebp-52]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-60]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-64],ebx
	mov	eax,[ebp-64]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_34
	mov	[ebp-64],1065353216
_34
	mov	eax,[ebp-64]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_35
	mov	[ebp-64],0
_35
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-68],ebx
	sub	esp,12
	mov	ebx,[ebp-56]
	mov	[esp+4],ebx
	mov	esi,[ebp-52]
	add	esi,[ebp-16]
	mov	[esp+8],esi
	mov	eax,[ebp-44]
	mov	[esp],eax
	call	_fgetrgb
	mov	ebx,[_vgotr]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	mov	ebx,[_vgotg]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	mov	ebx,[_vgotb]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-80],ebx
	sub	esp,12
	mov	ebx,[ebp-56]
	mov	[esp+4],ebx
	mov	esi,[ebp-52]
	mov	[esp+8],esi
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fgetrgb
	mov	ebx,[_vgotr]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-84],ebx
	mov	ebx,[_vgotg]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-88],ebx
	mov	ebx,[_vgotb]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-92],ebx
	mov	ebx,[ebp-72]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-84]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-96],ebx
	mov	ebx,[ebp-76]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-88]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-100],ebx
	mov	ebx,[ebp-80]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-92]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-104],ebx
	sub	esp,24
	mov	ebx,[ebp-100]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	esi,[ebp-104]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+20],esi
	mov	esi,[ebp-96]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-52]
	mov	[esp+8],ebx
	mov	esi,[ebp-56]
	mov	[esp+4],esi
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fwritergb
	add	[ebp-52],1
_32
	mov	ebx,[ebp-24]
	cmp	[ebp-52],ebx
	jle	_33
_7
	add	[ebp-56],1
_30
	mov	ebx,[ebp-16]
	cmp	[ebp-56],ebx
	jle	_31
_6
	sub	esp,12
	mov	eax,[ebp-44]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	mov	eax,[ebp-48]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,52
	mov	eax,_37
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-108],eax
	sub	esp,4
	lea	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-108]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	mov	[esp+4],ebx
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fleft
	mov	[esp+4],eax
	mov	[ebp-108],eax
	sub	esp,4
	mov	ebx,_36
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-108]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_38
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fsaveimage
	call	_fcls
	mov	[ebp-32],0
	jmp	_39
_40
	mov	[ebp-36],0
	jmp	_41
_42
	sub	esp,16
	mov	ebx,[ebp-36]
	imul	ebx,[ebp-16]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-32]
	imul	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fdrawblock
	add	[ebp-36],1
_41
	call	_fgraphicsheight
	mov	ecx,[ebp-16]
	cdq
	idiv	ecx
	add	eax,1
	cmp	[ebp-36],eax
	jle	_42
_9
	add	[ebp-32],1
_39
	call	_fgraphicswidth
	mov	ecx,[ebp-16]
	cdq
	idiv	ecx
	add	eax,1
	cmp	[ebp-32],eax
	jle	_40
_8
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_43
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-108],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-108]
	sar	ebx,byte 1
	add	ebx,[ebp-36]
	mov	[esp+4],ebx
	call	_fgraphicswidth
	sar	eax,byte 1
	add	eax,[ebp-32]
	mov	[esp],eax
	call	_fotext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitkey
	ret
_2_leave
	mov	[ebp-108],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-108]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fotext
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	mov	[ebp-4],-2
	jmp	_44
_45
	mov	[ebp-8],-2
	jmp	_46
_47
	sub	esp,20
	mov	ebx,[ebp+32]
	mov	[esp+12],ebx
	mov	esi,[ebp+36]
	mov	[esp+16],esi
	sub	esp,4
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	ebx,[ebp+24]
	add	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	add	eax,[ebp-4]
	mov	[esp],eax
	call	_ftext
	add	[ebp-8],1
_46
	cmp	[ebp-8],2
	jle	_47
_12
	add	[ebp-4],1
_44
	cmp	[ebp-4],2
	jle	_45
_11
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp+32]
	mov	[esp+12],ebx
	mov	esi,[ebp+36]
	mov	[esp+16],esi
	sub	esp,4
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ftext
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fwritergb
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	mov	ebx,[ebp+40]
	mov	esi,[ebp+36]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp+32]
	shl	esi,byte 16
	or	ebx,esi
	mov	esi,-16777216
	or	ebx,esi
	mov	[ebp-4],ebx
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+12],eax
	mov	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	esi,[ebp+28]
	mov	[esp+4],esi
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fwritepixelfast
	mov	eax,0
	jmp	_13_leave
_13_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	16
_fgetrgb
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-4],eax
	mov	ebx,[ebp-4]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vgotr],ebx
	mov	ebx,[ebp-4]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vgotg],ebx
	mov	ebx,[ebp-4]
	mov	esi,255
	and	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vgotb],ebx
	mov	eax,0
	jmp	_14_leave
_14_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
_15	.db	"Arial.ttf",0
_16	.db	"[your image.jpg]",0
	.align	4
_vgotr	.dd	0
	.align	4
_vgotg	.dd	0
	.align	4
_vgotb	.dd	0
_22	.db	"X",0
_23	.db	"Select area for tile",0
_36	.db	"tile_",0
_37	.db	".",0
_38	.db	"bmp",0
_43	.db	"Tile saved, Press any Key",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

