
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	[ebp-4],0
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],30
	mov	[esp+8],30
	mov	[esp],30
	call	_fclscolor
	call	_fcls
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tgame
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	call	_fresetlevel
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],16
	sub	esp,4
	mov	eax,_30
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[_vmyfont],eax
	sub	esp,4
	mov	eax,[_vmyfont]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,4
	mov	[esp],60
	call	_fcreatetimer
	mov	[_vtimer],eax
	sub	esp,4
	mov	eax,_ablocks
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,40
	mov	esi,_ablocks
	add	esi,12
	mov	[esi],ebx
	mov	ebx,40
	mov	esi,_ablocks
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ablocks
	mov	[esp],eax
	call	__bbDimArray
	call	_fsetupblocks
	jmp	_32
_31
	sub	esp,4
	mov	eax,[_vtimer]
	mov	[esp],eax
	call	_fwaittimer
	call	_fcls
	call	_fmoveship
	sub	esp,4
	mov	[esp],0
	call	_fdrawbeam
	call	_fdrawblocks
	call	_fdrawship
	call	_fgrabblock
	call	_freleaseblock
	call	_fdrawplayingscreen
	sub	esp,4
	mov	[esp],59
	call	_fkeyhit
	and	eax,eax
	jz	_33
	call	_fresetlevel
	call	_fsetupblocks
_33
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_34
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],15
	mov	[esp],52
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_35
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],32
	mov	[esp],52
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
_32
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_31
_3
	call	_fend
	ret
_2_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fresetlevel
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tgame
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjFirst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,-256
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,96
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	mov	ebx,64
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	call	_fgraphicsheight
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	sub	eax,ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	mov	ebx,48
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,40
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawplayingscreen
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	call	_fgraphicsheight
	mov	[esp+12],eax
	mov	[esp+16],1
	mov	[esp+8],96
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],70
	mov	[esp+8],40
	mov	[esp],50
	call	_fcolor
	sub	esp,20
	call	_fgraphicsheight
	mov	[esp+12],eax
	mov	[esp+16],1
	mov	[esp+8],94
	mov	[esp+4],2
	mov	[esp],2
	call	_frect
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdropmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_tgame
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjFirst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	[ebp-8],38
	jmp	_38
_39
	mov	[ebp-12],0
	jmp	_40
_41
	cmp	[ebp-16],0
	jnz	_42
	mov	ebx,_ablocks
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_ablocks]
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_43
	mov	ebx,[ebp-8]
	mov	[ebp-20],ebx
	mov	[ebp-16],1
_43
_42
	add	[ebp-12],1
_40
	cmp	[ebp-12],40
	jle	_41
_8
	add	[ebp-8],-1
_38
	cmp	[ebp-8],1
	jge	_39
_7
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	sub	ebx,[ebp-20]
	mov	[ebp-24],ebx
	cmp	[ebp-24],10
	jle	_44
	mov	ebx,[ebp-20]
	add	ebx,10
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
_44
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcheckcombo
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_tgame
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjFirst
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+24]
	mov	[ebp-8],ebx
	jmp	_45
_46
	cmp	[ebp-12],0
	jnz	_47
	mov	ebx,_ablocks
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ablocks]
	mov	ebx,[ebx]
	cmp	ebx,[ebp+28]
	jnz	_48
	add	[ebp-16],1
	jmp	_49
_48
	mov	[ebp-12],1
_49
_47
	add	[ebp-8],-1
_45
	cmp	[ebp-8],0
	jge	_46
_10
	sub	[ebp-16],1
	mov	ebx,[ebp+32]
	cmp	[ebp-16],ebx
	jle	_50
	mov	ebx,[ebp+24]
	mov	[ebp-8],ebx
	jmp	_51
_52
	mov	ebx,0
	mov	esi,_ablocks
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-8]
	add	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ablocks]
	mov	[esi],ebx
	add	[ebp-8],-1
_51
	mov	ebx,[ebp+24]
	sub	ebx,[ebp-16]
	cmp	[ebp-8],ebx
	jge	_52
_11
	call	_fdropmap
_50
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_freleaseblock
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_tgame
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjFirst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	cmp	[ebp-8],0
	jnz	_53
	mov	eax,0
	jmp	_12_leave
_53
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebp-12],ebx
	mov	eax,[ebp-12]
	mov	ecx,48
	cdq
	idiv	ecx
	sub	eax,2
	mov	[ebp-12],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	[esp],2
	call	_fmousehit
	cmp	eax,1
	jnz	_54
	mov	[ebp-16],40
	jmp	_55
_56
	mov	eax,_ablocks
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-16]
	add	eax,[ebp-12]
	shl	eax,byte 2
	add	eax,[_ablocks]
	mov	eax,[eax]
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-24],eax
	cmp	[ebp-20],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_57
	mov	ebx,[ebp-16]
	mov	[ebp-20],ebx
_57
	add	[ebp-16],-1
_55
	cmp	[ebp-16],0
	jge	_56
_13
	add	[ebp-20],1
	mov	ebx,[ebp-20]
	mov	[ebp-16],ebx
	jmp	_58
_59
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	esi,_ablocks
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_ablocks]
	mov	[esi],ebx
	add	[ebp-16],1
_58
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	add	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_59
_14
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	add	esi,[ebp-20]
	sub	esi,1
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcheckcombo
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
_54
	mov	eax,0
	jmp	_12_leave
_12_leave
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fgrabblock
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_tgame
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjFirst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebp-8],ebx
	mov	eax,[ebp-8]
	mov	ecx,48
	cdq
	idiv	ecx
	sub	eax,2
	mov	[ebp-8],eax
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-40],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	cmp	ebx,5
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-40]
	and	eax,ebx
	and	eax,eax
	jz	_60
	mov	[ebp-12],0
	mov	[ebp-16],40
	mov	[ebp-20],0
	mov	[ebp-24],40
	jmp	_61
_62
	mov	[ebp-28],0
	mov	ebx,_ablocks
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_ablocks]
	mov	ebx,[ebx]
	mov	[ebp-32],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_63
	cmp	[ebp-32],0
	jle	_64
	mov	ebx,[ebp-32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
_64
_63
	cmp	[ebp-12],0
	setz	al
	movzx	eax,al
	mov	[ebp-40],eax
	cmp	[ebp-32],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-40]
	and	eax,ebx
	mov	[ebp-40],eax
	cmp	[ebp-20],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-40]
	and	eax,ebx
	and	eax,eax
	jz	_65
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	cmp	ebx,[ebp-32]
	jnz	_66
	mov	ebx,[ebp-32]
	mov	[ebp-12],ebx
	mov	ebx,[ebp-24]
	mov	[ebp-16],ebx
	mov	[ebp-20],1
	mov	[ebp-28],1
	jmp	_67
_66
	mov	eax,0
	jmp	_15_leave
_67
_65
	cmp	[ebp-28],0
	setz	al
	movzx	eax,al
	mov	[ebp-40],eax
	cmp	[ebp-20],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-40]
	and	eax,ebx
	and	eax,eax
	jz	_68
	mov	ebx,[ebp-32]
	cmp	[ebp-12],ebx
	jnz	_69
	mov	ebx,[ebp-24]
	add	ebx,1
	cmp	ebx,[ebp-16]
	jnz	_70
	mov	ebx,[ebp-24]
	mov	[ebp-16],ebx
	add	[ebp-36],1
_70
_69
_68
	add	[ebp-24],-1
_61
	cmp	[ebp-24],0
	jge	_62
_16
	cmp	[ebp-12],0
	jz	_71
	mov	ebx,[ebp-12]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp-36]
	add	ebx,1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,[ebp-16]
	mov	[ebp-24],ebx
	jmp	_72
_73
	mov	ebx,0
	mov	esi,_ablocks
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-24]
	add	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_ablocks]
	mov	[esi],ebx
	add	[ebp-24],1
_72
	cmp	[ebp-24],40
	jle	_73
_17
_71
_60
	mov	eax,0
	jmp	_15_leave
_15_leave
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawbeam
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_tgame
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjFirst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	mov	[ebp-12],0
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[ebp-16],ebx
	call	_fgraphicsheight
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],40
	mov	[esp+8],200
	mov	[esp],40
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_frect
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsetupblocks
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-4],0
	jmp	_74
_75
	mov	[ebp-8],0
	jmp	_76
_77
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],4
	call	_frand
	mov	ebx,_ablocks
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ablocks]
	mov	[ebx],eax
	add	[ebp-8],1
_76
	cmp	[ebp-8],30
	jle	_77
_21
	add	[ebp-4],1
_74
	cmp	[ebp-4],10
	jle	_75
_20
	mov	eax,0
	jmp	_19_leave
_19_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fmoveship
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tgame
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjFirst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,32
	call	_fgraphicswidth
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,96
	sub	eax,ebx
	mov	[esp+24],eax
	mov	[ebp-8],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+28],ebx
	mov	[esp+20],0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	sar	esi,byte 1
	add	esi,96
	mov	[esp+16],esi
	mov	[esp+12],1
	mov	[esp+8],1
	call	_fmousey
	mov	[esp+4],eax
	mov	[ebp-8],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	and	ebx,ebx
	jz	_78
	call	_fmousex
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	sar	ebx,byte 1
	sub	eax,ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	jmp	_79
_78
	call	_fmousex
	cmp	eax,96
	jge	_80
	mov	ebx,96
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
_80
_79
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	ebx,576
	jle	_81
	mov	ebx,576
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
_81
	mov	eax,0
	jmp	_22_leave
_22_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawship
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_tgame
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjFirst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[ebp-12],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[ebp-16],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[ebp-20],ebx
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	[esp+4],170
	mov	[esp+8],170
	mov	[esp],160
	call	_fcolor
	add	[ebp-8],1
	sub	[ebp-16],2
	add	[ebp-12],1
	sub	[ebp-20],2
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_frect
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_82
	mov	ebx,[ebp-12]
	mov	[ebp-24],ebx
	jmp	_83
_84
	sub	esp,12
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fdraw1block
	add	[ebp-24],-16
_83
	mov	ebx,[ebp-12]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	sub	esi,1
	shl	esi,byte 4
	sub	ebx,esi
	cmp	[ebp-24],ebx
	jge	_84
_24
_82
	mov	eax,0
	jmp	_23_leave
_23_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawblocks
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_tgame
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjFirst
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,640
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	shl	esi,byte 4
	sub	ebx,esi
	mov	[ebp-8],ebx
	mov	[ebp-12],0
	jmp	_85
_86
	mov	[ebp-16],0
	jmp	_87
_88
	sub	esp,12
	mov	eax,[ebp-12]
	imul	eax,48
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	eax,ebx
	mov	[esp],eax
	mov	ebx,[ebp-16]
	shl	ebx,byte 4
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	add	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	esi,_ablocks
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_ablocks]
	mov	esi,[esi]
	mov	[esp+8],esi
	call	_fdraw1block
	add	[ebp-16],1
_87
	cmp	[ebp-16],40
	jle	_88
_27
	add	[ebp-12],1
_85
	cmp	[ebp-12],40
	jle	_86
_26
	mov	eax,0
	jmp	_25_leave
_25_leave
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdraw1block
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	cmp	[ebp+28],0
	jnz	_89
	mov	eax,0
	jmp	_28_leave
_89
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],16
	mov	[esp+16],0
	mov	[esp+8],48
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_frect
	mov	ebx,[ebp+28]
	mov	[ebp-4],ebx
	cmp	[ebp-4],1
	jz	_91
	cmp	[ebp-4],2
	jz	_92
	cmp	[ebp-4],3
	jz	_93
	cmp	[ebp-4],4
	jz	_94
	jmp	_90
_91
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	jmp	_90
_92
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	jmp	_90
_93
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	jmp	_90
_94
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	jmp	_90
_90
	sub	esp,20
	mov	[esp+12],14
	mov	[esp+16],1
	mov	[esp+8],46
	mov	ebx,[ebp+24]
	add	ebx,1
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	add	eax,1
	mov	[esp],eax
	call	_frect
	mov	eax,0
	jmp	_28_leave
_28_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	4
_vmyfont	.dd	0
_30	.db	"verdana",0
	.align	4
_vtimer	.dd	0
	.align	4
_ablocks	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
_34	.db	"F1 to ",0
_35	.db	"reset level ",0
	.align	4
_tgame	.dd	5
_36	.dd	0
	.dd	_36
	.dd	_36
	.dd	0
	.dd	-1
_37	.dd	0
	.dd	_37
	.dd	_37
	.dd	0
	.dd	-1
	.dd	9
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

