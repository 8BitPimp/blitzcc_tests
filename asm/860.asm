
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,44
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_5
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_6
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[_vcamera],eax
	sub	esp,16
	mov	[esp+8],1112014848
	mov	[esp+12],1112014848
	mov	[esp+4],1112014848
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fcameraclscolor
	sub	esp,20
	mov	[esp+12],-1041235968
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_ftranslateentity
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],0
	call	_fcreatelight
	mov	[ebp-12],eax
	sub	esp,12
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],0
	call	_floadmesh
	mov	[_vmesh],eax
	sub	esp,12
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_floadtexture
	mov	[_vtex],eax
	sub	esp,4
	mov	eax,[_vtex]
	mov	[esp],eax
	call	_ftexturewidth
	mov	[_vtexsize],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	esi,[_vtex]
	mov	[esp+4],esi
	mov	eax,[_vmesh]
	mov	[esp],eax
	call	_fentitytexture
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	eax,[_vmesh]
	mov	[esp],eax
	call	_fentitypickmode
	mov	[ebp-16],0
	mov	[ebp-20],0
	jmp	_8
_7
	sub	esp,4
	mov	[esp],54
	call	_fkeydown
	and	eax,eax
	jz	_9
	sub	esp,4
	mov	[esp],208
	call	_fkeydown
	and	eax,eax
	jz	_10
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1036831949
	mov	[esp+4],0
	mov	eax,[_vmesh]
	mov	[esp],eax
	call	_ftranslateentity
_10
	sub	esp,4
	mov	[esp],200
	call	_fkeydown
	and	eax,eax
	jz	_11
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],-1110651699
	mov	[esp+4],0
	mov	eax,[_vmesh]
	mov	[esp],eax
	call	_ftranslateentity
_11
	jmp	_12
_9
	sub	esp,4
	mov	[esp],208
	call	_fkeydown
	and	eax,eax
	jz	_13
	sub	esp,20
	mov	[esp+12],1036831949
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vmesh]
	mov	[esp],eax
	call	_ftranslateentity
_13
	sub	esp,4
	mov	[esp],200
	call	_fkeydown
	and	eax,eax
	jz	_14
	sub	esp,20
	mov	[esp+12],-1110651699
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vmesh]
	mov	[esp],eax
	call	_ftranslateentity
_14
_12
	sub	esp,4
	mov	[esp],54
	call	_fkeydown
	and	eax,eax
	jz	_15
	sub	esp,4
	mov	[esp],203
	call	_fkeydown
	and	eax,eax
	jz	_16
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1048576000
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
_16
	sub	esp,4
	mov	[esp],205
	call	_fkeydown
	and	eax,eax
	jz	_17
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1048576000
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
_17
	jmp	_18
_15
	sub	esp,4
	mov	[esp],203
	call	_fkeydown
	and	eax,eax
	jz	_19
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1048576000
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
_19
	sub	esp,4
	mov	[esp],205
	call	_fkeydown
	and	eax,eax
	jz	_20
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1048576000
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
_20
_18
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	eax,[_vmesh]
	mov	[esp],eax
	call	_frotateentity
	call	_fmousex
	mov	[ebp-24],eax
	call	_fmousey
	mov	[ebp-28],eax
	sub	esp,8
	mov	eax,[ebp-24]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fdrawuv
	mov	[ebp-32],eax
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	cmp	[ebp-32],0
	jz	_21
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	ebx,[_vttx1]
	mov	[esp+8],ebx
	mov	esi,[_vtty1]
	mov	[esp+12],esi
	mov	esi,[_vtty0]
	mov	[esp+4],esi
	mov	eax,[_vttx0]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[_vttx2]
	mov	[esp+8],ebx
	mov	esi,[_vtty2]
	mov	[esp+12],esi
	mov	esi,[_vtty1]
	mov	[esp+4],esi
	mov	eax,[_vttx1]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[_vttx0]
	mov	[esp+8],ebx
	mov	esi,[_vtty0]
	mov	[esp+12],esi
	mov	esi,[_vtty2]
	mov	[esp+4],esi
	mov	eax,[_vttx2]
	mov	[esp],eax
	call	_fline
_21
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_23
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],16
	mov	[esp],0
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_24
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],32
	mov	[esp],0
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+8],eax
	mov	[esp+4],48
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
_8
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_7
_3
	call	_fcls
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_25
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,16
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fupper
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_27
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_26
	sub	esp,16
	mov	eax,[_vtex]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_28
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	_fsavebuffer
_26
	call	_fend
	ret
_2_leave
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	esi,[ebp-36]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-40]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawuv
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,132
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	mov	[ebp-128],ebx
	mov	[ebp-132],ebx
	sub	esp,12
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fcamerapick
	mov	[ebp-4],eax
	cmp	[ebp-4],0
	jz	_29
	call	_fpickedx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	call	_fpickedy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-12],eax
	call	_fpickedz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	call	_fpickedsurface
	mov	[ebp-20],eax
	call	_fpickedtriangle
	mov	[ebp-24],eax
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexx
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexx
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexx
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexy
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexy
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexy
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexz
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-52],ebx
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexz
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-56],ebx
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexz
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-60],ebx
	sub	esp,24
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexu
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-64],ebx
	sub	esp,24
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexu
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-68],ebx
	sub	esp,24
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexu
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	sub	esp,24
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexv
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	sub	esp,24
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexv
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-80],ebx
	sub	esp,24
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexv
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-84],ebx
	sub	esp,24
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexw
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-88],ebx
	sub	esp,24
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexw
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-92],ebx
	sub	esp,24
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexw
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-96],ebx
	sub	esp,20
	mov	ebx,[_vmesh]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-52]
	mov	[esp+8],esi
	mov	ebx,[ebp-40]
	mov	[esp+4],ebx
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_ftformpoint
	call	_ftformedx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-100],eax
	call	_ftformedy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-104],eax
	call	_ftformedz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-108],eax
	sub	esp,20
	mov	ebx,[_vmesh]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-56]
	mov	[esp+8],esi
	mov	ebx,[ebp-44]
	mov	[esp+4],ebx
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_ftformpoint
	call	_ftformedx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-112],eax
	call	_ftformedy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-116],eax
	call	_ftformedz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-120],eax
	sub	esp,20
	mov	ebx,[_vmesh]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-60]
	mov	[esp+8],esi
	mov	ebx,[ebp-48]
	mov	[esp+4],ebx
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_ftformpoint
	call	_ftformedx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-124],eax
	call	_ftformedy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-128],eax
	call	_ftformedz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-132],eax
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_30
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,12
	mov	eax,[_vtex]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,16
	mov	ebx,[ebp-68]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vtexsize]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[_vtexsize]
	push	edi
	fild	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-76]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[_vtexsize]
	push	edi
	fild	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[_vtexsize]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-68]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vtexsize]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[_vtexsize]
	push	edi
	fild	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-84]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[_vtexsize]
	push	edi
	fild	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-72]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[_vtexsize]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-72]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vtexsize]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-84]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[_vtexsize]
	push	edi
	fild	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-76]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[_vtexsize]
	push	edi
	fild	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-64]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[_vtexsize]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
_30
	cmp	[ebp-4],0
	jz	_31
	sub	esp,16
	mov	ebx,[ebp-104]
	mov	[esp+8],ebx
	mov	esi,[ebp-108]
	mov	[esp+12],esi
	mov	esi,[ebp-100]
	mov	[esp+4],esi
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fcameraproject
	call	_fprojectedx
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vttx0],eax
	call	_fprojectedy
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vtty0],eax
	sub	esp,16
	mov	ebx,[ebp-116]
	mov	[esp+8],ebx
	mov	esi,[ebp-120]
	mov	[esp+12],esi
	mov	esi,[ebp-112]
	mov	[esp+4],esi
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fcameraproject
	call	_fprojectedx
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vttx1],eax
	call	_fprojectedy
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vtty1],eax
	sub	esp,16
	mov	ebx,[ebp-128]
	mov	[esp+8],ebx
	mov	esi,[ebp-132]
	mov	[esp+12],esi
	mov	esi,[ebp-124]
	mov	[esp+4],esi
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fcameraproject
	call	_fprojectedx
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vttx2],eax
	call	_fprojectedy
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vtty2],eax
_31
_29
	mov	eax,[ebp-4]
	jmp	_4_leave
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
_5	.db	"fighter.3ds",0
_6	.db	"fighter_tex.bmp",0
	.align	4
_vcamera	.dd	0
	.align	4
_vttx0	.dd	0
	.align	4
_vtty0	.dd	0
	.align	4
_vttx1	.dd	0
	.align	4
_vtty1	.dd	0
	.align	4
_vttx2	.dd	0
	.align	4
_vtty2	.dd	0
	.align	4
_vmesh	.dd	0
	.align	4
_vtex	.dd	0
	.align	4
_vtexsize	.dd	0
_22	.db	"up/down=zoom, (up/down)+rightShift=move-Y",0
_23	.db	"left/right=turn-Y, (left/right)+rightShift=turn-Z",0
_24	.db	"Esc=End, LMB=permanently draw Triangle",0
_25	.db	"save UV_spy.bmp ? (Y/N)",0
_27	.db	"Y",0
_28	.db	"UV_spy.bmp",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

