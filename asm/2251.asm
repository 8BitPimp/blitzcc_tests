
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_floadtgaimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,104
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-4],eax
	cmp	[ebp-4],0
	jnz	_16
	sub	esp,8
	mov	eax,_17
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_16
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadbyte
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadbyte
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadbyte
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadshort
	mov	[ebp-20],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadshort
	mov	[ebp-24],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadbyte
	mov	[ebp-28],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadshort
	mov	[ebp-32],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadshort
	mov	[ebp-36],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadshort
	mov	[ebp-40],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadshort
	mov	[ebp-44],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadbyte
	mov	[ebp-48],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadbyte
	mov	[ebp-52],eax
	sub	esp,8
	lea	eax,[ebp-56]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_18
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	cmp	[ebp-8],0
	jz	_19
	mov	[ebp-60],1
	jmp	_20
_21
	sub	esp,20
	lea	eax,[ebp-56]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadbyte
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-60],1
_20
	mov	ebx,[ebp-8]
	cmp	[ebp-60],ebx
	jle	_21
_4
_19
	sub	esp,8
	lea	eax,[ebp-64]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_22
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	cmp	[ebp-12],0
	jz	_23
	mov	[ebp-60],1
	jmp	_24
_25
	sub	esp,20
	lea	eax,[ebp-64]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadbyte
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-60],1
_24
	mov	ebx,[ebp-28]
	imul	ebx,[ebp-24]
	cmp	[ebp-60],ebx
	jle	_25
_5
_23
	sub	esp,8
	mov	[esp],_vtga
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_ttgaimage
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,4
	mov	eax,[ebp-40]
	shl	eax,byte 2
	mov	ebx,[ebp-44]
	shl	ebx,byte 2
	imul	eax,ebx
	mov	[esp],eax
	call	_fcreatebank
	mov	ebx,[_vtga]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-44]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fcreateimage
	mov	ebx,[_vtga]
	mov	ebx,[ebx]
	add	ebx,20
	mov	[ebx],eax
	mov	ebx,[ebp-40]
	mov	esi,[_vtga]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp-44]
	mov	esi,[_vtga]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp-48]
	mov	esi,[_vtga]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[_vtga]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	[ebp-68],0
	sub	esp,12
	mov	eax,[_vtga]
	mov	eax,[eax]
	add	eax,20
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	ebx,[ebp-44]
	sub	ebx,1
	mov	[ebp-72],ebx
	jmp	_26
_27
	mov	[ebp-76],0
	jmp	_28
_29
	cmp	[ebp-48],32
	jnz	_30
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadint
	mov	[ebp-80],eax
	sub	esp,12
	mov	ebx,[ebp-68]
	mov	[esp+4],ebx
	mov	esi,[ebp-80]
	mov	[esp+8],esi
	mov	eax,[_vtga]
	mov	eax,[eax]
	add	eax,16
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpokeint
	mov	ebx,[ebp-80]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-84],ebx
	mov	ebx,[ebp-80]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-88],ebx
	mov	ebx,[ebp-80]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-92],ebx
	mov	ebx,[ebp-92]
	mov	esi,[ebp-88]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-84]
	shl	esi,byte 16
	or	ebx,esi
	mov	[ebp-96],ebx
	add	[ebp-68],4
	sub	esp,16
	mov	ebx,[ebp-96]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-72]
	mov	[esp+4],esi
	mov	eax,[ebp-76]
	mov	[esp],eax
	call	_fwritepixelfast
	jmp	_31
_30
_31
	add	[ebp-76],1
_28
	mov	ebx,[ebp-40]
	sub	ebx,1
	cmp	[ebp-76],ebx
	jle	_29
_7
	add	[ebp-72],-1
_26
	cmp	[ebp-72],0
	jge	_27
_6
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	eax,[_vtga]
	jmp	_3_leave
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	esi,[ebp-64]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-100]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdrawtgastatic
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,[ebp+28]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,20
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fdrawtgaimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,60
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-4],0
	mov	[ebp-8],0
	mov	eax,[ebp+36]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	[ebp-60],eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	cmp	ebx,32
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-60]
	or	eax,ebx
	and	eax,eax
	jz	_32
	sub	esp,16
	mov	ebx,[ebp+28]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,20
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
	jmp	_33
_32
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	sub	ebx,1
	mov	[ebp-12],ebx
	jmp	_34
_35
	mov	[ebp-16],0
	jmp	_36
_37
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,16
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fpeekint
	mov	[ebp-20],eax
	sub	esp,12
	mov	ebx,[ebp+28]
	add	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+24]
	add	eax,[ebp-16]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-24],eax
	mov	ebx,[ebp-20]
	shr	ebx,byte 24
	mov	esi,255
	and	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1132396544
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-28],ebx
	cmp	[ebp-28],1
	jz	_39
	cmp	[ebp-28],0
	jz	_40
	cmp	[ebp-28],-1
	jz	_41
	jmp	_38
_39
	mov	ebx,[ebp-20]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-8]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp-20]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-8]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	mov	ebx,[ebp-20]
	mov	esi,255
	and	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-8]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp-24]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	add	ebx,[ebp-32]
	mov	[ebp-44],ebx
	mov	ebx,[ebp-24]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	add	ebx,[ebp-36]
	mov	[ebp-48],ebx
	mov	ebx,[ebp-24]
	mov	esi,255
	and	ebx,esi
	add	ebx,[ebp-40]
	mov	[ebp-52],ebx
	jmp	_38
_40
	mov	ebx,[ebp-20]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-32],ebx
	mov	ebx,[ebp-20]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-36],ebx
	mov	ebx,[ebp-20]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-40],ebx
	mov	ebx,[ebp-24]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-44],ebx
	mov	ebx,[ebp-24]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-48],ebx
	mov	ebx,[ebp-24]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-52],ebx
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-44]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-44]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-44],esi
	mov	ebx,[ebp-36]
	sub	ebx,[ebp-48]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-48]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-48],esi
	mov	ebx,[ebp-40]
	sub	ebx,[ebp-52]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-52]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-52],esi
	jmp	_38
_41
	mov	ebx,[ebp-20]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-8]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp-20]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-8]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	mov	ebx,[ebp-20]
	mov	esi,255
	and	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-8]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp-24]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	sub	ebx,[ebp-32]
	mov	[ebp-44],ebx
	mov	ebx,[ebp-24]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	sub	ebx,[ebp-36]
	mov	[ebp-48],ebx
	mov	ebx,[ebp-24]
	mov	esi,255
	and	ebx,esi
	sub	ebx,[ebp-40]
	mov	[ebp-52],ebx
	jmp	_38
_38
	mov	ebx,[ebp-44]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-44],ebx
	mov	ebx,[ebp-48]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-48],ebx
	mov	ebx,[ebp-52]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-52],ebx
	mov	ebx,[ebp-52]
	mov	esi,[ebp-48]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-44]
	shl	esi,byte 16
	or	ebx,esi
	mov	[ebp-56],ebx
	sub	esp,16
	mov	ebx,[ebp-56]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+28]
	add	esi,[ebp-12]
	mov	[esp+4],esi
	mov	eax,[ebp+24]
	add	eax,[ebp-16]
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-4],4
	add	[ebp-16],1
_36
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_37
_11
	add	[ebp-12],-1
_34
	cmp	[ebp-12],0
	jge	_35
_10
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
_33
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_ffreetgaimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,20
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,16
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreebank
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	__bbObjDelete
	mov	eax,0
	jmp	_13_leave
_13_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	4
_vtga	.dd	0
	.align	4
_ttgaimage	.dd	5
_14	.dd	0
	.dd	_14
	.dd	_14
	.dd	0
	.dd	-1
_15	.dd	0
	.dd	_15
	.dd	_15
	.dd	0
	.dd	-1
	.dd	7
	.dd	__bbStrType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
_17	.db	"Could not load specified image!",0
_18	.db	"",0
_22	.db	"",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

