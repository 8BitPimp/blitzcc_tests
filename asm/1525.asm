
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[_vcountid],0
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],0
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	eax,_aicon
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100
	mov	esi,_aicon
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aicon
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	mov	eax,_17
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[_vmark],eax
	sub	esp,8
	mov	eax,_18
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[_vmark2],eax
	sub	esp,8
	mov	eax,_19
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[_vempty],eax
	sub	esp,8
	mov	eax,_20
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_aicon]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,_21
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aicon]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	ebx,3
	shl	ebx,byte 2
	add	ebx,[_aicon]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,_23
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	ebx,4
	shl	ebx,byte 2
	add	ebx,[_aicon]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,_24
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	ebx,5
	shl	ebx,byte 2
	add	ebx,[_aicon]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,_25
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	ebx,6
	shl	ebx,byte 2
	add	ebx,[_aicon]
	mov	[ebx],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],10
	mov	[esp+8],32
	mov	[esp+4],32
	sub	esp,4
	mov	eax,_26
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadanimimage
	mov	ebx,7
	shl	ebx,byte 2
	add	ebx,[_aicon]
	mov	[ebx],eax
	mov	[ebp-4],1
	jmp	_27
_28
	add	[_vcountid],1
	sub	esp,8
	mov	[esp],1143930880
	mov	[esp+4],0
	call	_frnd
	mov	ebx,1112014848
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	[esp],1140457472
	mov	[esp+4],0
	call	_frnd
	mov	ebx,1112014848
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-12],eax
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_titem
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	[esp],1086324736
	mov	[esp+4],0
	call	_frnd
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	mov	ebx,[ebp-20]
	mov	[ebp-24],ebx
	cmp	[ebp-24],1
	jz	_30
	cmp	[ebp-24],2
	jz	_31
	cmp	[ebp-24],3
	jz	_32
	cmp	[ebp-24],4
	jz	_33
	cmp	[ebp-24],5
	jz	_34
	cmp	[ebp-24],6
	jz	_35
	cmp	[ebp-24],7
	jz	_36
	jmp	_29
_30
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_37
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[_vcountid]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_29
_31
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_38
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,9
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[_vcountid]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_29
_32
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_39
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[_vcountid]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,3
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_29
_33
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_40
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[_vcountid]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,4
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_29
_34
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_41
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[_vcountid]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,5
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_29
_35
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_42
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[_vcountid]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,6
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_29
_36
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_43
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[_vcountid]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,7
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	sub	esp,8
	mov	[esp],1091567616
	mov	[esp+4],0
	call	_frnd
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	mov	ebx,10
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	jmp	_29
_29
	mov	ebx,[ebp-8]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	add	[ebp-4],1
_27
	cmp	[ebp-4],12
	jle	_28
_4
	jmp	_45
_44
	call	_fcls
	call	_fhandle_input
	call	_fdrawall
	sub	esp,4
	mov	[esp],1
	call	_fflip
_45
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_44
_6
	ret
_2_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fhandle_input
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	call	_fmousex
	mov	[ebp-4],eax
	call	_fmousey
	mov	[ebp-8],eax
	mov	ebx,[_vselectmode]
	mov	[ebp-12],ebx
	cmp	[ebp-12],0
	jz	_49
	cmp	[ebp-12],1
	jz	_50
	cmp	[ebp-12],2
	jz	_51
	jmp	_48
_49
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_52
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],_titem
	call	__bbObjEachFirst
	and	eax,eax
	jz	_9
_53
	sub	esp,32
	mov	[esp+24],32
	mov	[esp+28],32
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	mov	[esp+20],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[esp+16],ebx
	mov	[esp+12],1
	mov	[esp+8],1
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_frectsoverlap
	mov	[ebp-28],eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	__bbObjCompare
	mov	ebx,eax
	mov	eax,[ebp-32]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	and	eax,ebx
	and	eax,eax
	jz	_54
	sub	esp,8
	mov	[esp],_vselected_stuff
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	[_vselectmode],1
	jmp	_9
_54
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_53
_9
_52
	jmp	_48
_50
	mov	ebx,[ebp-4]
	sub	ebx,16
	mov	esi,[_vselected_stuff]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	sub	ebx,16
	mov	esi,[_vselected_stuff]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	sub	esp,36
	mov	eax,_55
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[_vselected_stuff]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_56
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[_vselected_stuff]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp],_vlmsg
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	cmp	eax,0
	jnz	_57
	mov	[_vselectmode],2
_57
	jmp	_48
_51
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],_titem
	call	__bbObjEachFirst
	and	eax,eax
	jz	_10
_58
	sub	esp,32
	mov	[esp+24],32
	mov	[esp+28],32
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	mov	[esp+20],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[esp+16],ebx
	mov	[esp+12],1
	mov	[esp+8],1
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_frectsoverlap
	and	eax,eax
	jz	_59
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[_vselected_stuff]
	mov	[esp+4],ebx
	call	__bbObjCompare
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-28],eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	and	ebx,eax
	and	ebx,ebx
	jz	_60
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_61
	mov	[ebp-20],1
	jmp	_62
_63
	sub	esp,8
	mov	eax,[ebp-20]
	shl	eax,byte 2
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_64
	sub	esp,8
	mov	eax,[ebp-20]
	shl	eax,byte 2
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	[esp],eax
	mov	ebx,[_vselected_stuff]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[_vselected_stuff]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	__bbObjStore
	jmp	_11
_64
	add	[ebp-20],1
_62
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	[ebp-20],ebx
	jle	_63
_11
_61
	jmp	_65
_60
	sub	esp,12
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_67
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-28],eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[_vselected_stuff]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp],ebx
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,_68
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrCompare
	mov	ebx,eax
	mov	eax,[ebp-32]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	and	eax,ebx
	mov	[ebp-28],eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	esi,[_vselected_stuff]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbObjCompare
	mov	ebx,eax
	mov	eax,[ebp-32]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	and	eax,ebx
	mov	[ebp-28],eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	__bbObjCompare
	mov	ebx,eax
	mov	eax,[ebp-32]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	and	eax,ebx
	and	eax,eax
	jz	_66
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	esi,[_vselected_stuff]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	sub	esp,4
	mov	eax,[_vselected_stuff]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,36
	mov	eax,_69
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_70
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp],_vlmsg
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_66
_65
_59
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_58
_10
	mov	[_vselectmode],0
	jmp	_48
_48
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	and	eax,eax
	jz	_71
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],_titem
	call	__bbObjEachFirst
	and	eax,eax
	jz	_12
_72
	sub	esp,32
	mov	[esp+24],32
	mov	[esp+28],32
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	mov	[esp+20],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[esp+16],ebx
	mov	[esp+12],1
	mov	[esp+8],1
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_frectsoverlap
	mov	[ebp-28],eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	__bbObjCompare
	mov	ebx,eax
	mov	eax,[ebp-32]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	and	eax,ebx
	and	eax,eax
	jz	_73
	sub	esp,12
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_75
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_74
	sub	esp,12
	mov	eax,_76
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_finput
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-24],eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	cmp	[ebp-24],ebx
	jle	_77
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	[ebp-24],ebx
_77
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	sub	ebx,[ebp-24]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebp-4],ebx
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebp-8],ebx
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	cmp	ebx,1
	jge	_78
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjDelete
_78
	add	[_vcountid],1
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_titem
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_79
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[_vcountid]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,7
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp-24]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	ebx,10
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	jmp	_12
_74
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_80
	mov	[ebp-20],1
	jmp	_81
_82
	sub	esp,8
	mov	eax,[ebp-20]
	shl	eax,byte 2
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_83
	sub	esp,8
	mov	[esp],1112014848
	mov	[esp+4],0
	call	_frnd
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	mov	esi,1103626240
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	sub	esp,8
	mov	[esp],1112014848
	mov	[esp+4],0
	call	_frnd
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	mov	esi,1103626240
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,24
	mov	esi,[ebp-4]
	mov	[ebx],esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,28
	mov	esi,[ebp-8]
	mov	[ebx],esi
	sub	esp,8
	mov	eax,[ebp-20]
	shl	eax,byte 2
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-20]
	shl	eax,byte 2
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjStore
_83
	add	[ebp-20],1
_81
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	[ebp-20],ebx
	jle	_82
_13
	jmp	_12
_80
_73
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_72
_12
_71
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawall
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_titem
	call	__bbObjEachFirst
	and	eax,eax
	jz	_15
_84
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_85
	sub	esp,12
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_87
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_86
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	cmp	ebx,10
	jge	_88
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	sub	esi,1
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,20
	mov	eax,[eax]
	shl	eax,byte 2
	add	eax,[_aicon]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
	jmp	_89
_88
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],9
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,20
	mov	eax,[eax]
	shl	eax,byte 2
	add	eax,[_aicon]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
_89
	jmp	_90
_86
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,20
	mov	eax,[eax]
	shl	eax,byte 2
	add	eax,[_aicon]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_91
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	sub	ebx,20
	mov	[ebp-12],ebx
	mov	[ebp-16],0
	mov	[ebp-20],0
	mov	[ebp-24],1
	jmp	_92
_93
	sub	esp,8
	mov	eax,[ebp-24]
	shl	eax,byte 2
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_94
	mov	ebx,[ebp-24]
	shl	ebx,byte 2
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_95
	sub	esp,16
	mov	ebx,[ebp-12]
	add	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-8]
	add	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[_vmark2]
	mov	[esp],eax
	call	_fdrawimage
	jmp	_96
_95
	sub	esp,16
	mov	ebx,[ebp-12]
	add	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-8]
	add	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[_vmark]
	mov	[esp],eax
	call	_fdrawimage
_96
	add	[ebp-16],5
	cmp	[ebp-16],25
	jle	_97
	mov	[ebp-16],0
	add	[ebp-20],5
_97
_94
	add	[ebp-24],1
_92
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	[ebp-24],ebx
	jle	_93
_16
_91
_90
_85
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_84
_15
	sub	esp,8
	mov	eax,[_vselected_stuff]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-28],eax
	cmp	[_vselectmode],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	and	eax,ebx
	and	eax,eax
	jz	_98
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[_vselected_stuff]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,12
	mov	eax,[_vselected_stuff]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_100
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_99
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	cmp	ebx,10
	jge	_101
	sub	esp,16
	mov	ebx,[_vselected_stuff]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[_vselected_stuff]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	sub	esi,1
	mov	[esp+12],esi
	mov	esi,[_vselected_stuff]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[_vselected_stuff]
	mov	eax,[eax]
	add	eax,20
	mov	eax,[eax]
	shl	eax,byte 2
	add	eax,[_aicon]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
	jmp	_102
_101
	sub	esp,16
	mov	ebx,[_vselected_stuff]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],9
	mov	esi,[_vselected_stuff]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[_vselected_stuff]
	mov	eax,[eax]
	add	eax,20
	mov	eax,[eax]
	shl	eax,byte 2
	add	eax,[_aicon]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
_102
	jmp	_103
_99
	sub	esp,16
	mov	ebx,[_vselected_stuff]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[_vselected_stuff]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[_vselected_stuff]
	mov	eax,[eax]
	add	eax,20
	mov	eax,[eax]
	shl	eax,byte 2
	add	eax,[_aicon]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
_103
_98
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_vlmsg
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	mov	eax,0
	jmp	_14_leave
_14_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
_vcountid	.dd	0
	.align	4
_vselectmode	.dd	0
	.align	4
_vselected_stuff	.dd	0
	.align	4
_aicon	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_vmark	.dd	0
	.align	4
_vmark2	.dd	0
	.align	4
_vempty	.dd	0
	.align	4
_vlmsg	.dd	0
_17	.db	"mark.bmp",0
_18	.db	"markb.bmp",0
_19	.db	"empty.bmp",0
_20	.db	"sword.bmp",0
_21	.db	"bag.bmp",0
_22	.db	"healment.bmp",0
_23	.db	"sheld.bmp",0
_24	.db	"ring.bmp",0
_25	.db	"flower.bmp",0
_26	.db	"coins.bmp",0
_37	.db	"Sword",0
_38	.db	"Bag",0
_39	.db	"Healment",0
_40	.db	"Sheld",0
_41	.db	"Ring",0
_42	.db	"Flower",0
_43	.db	"Gold",0
	.align	4
_3	.dd	6
	.dd	31
	.dd	_titem
	.align	4
_titem	.dd	5
_46	.dd	0
	.dd	_46
	.dd	_46
	.dd	0
	.dd	-1
_47	.dd	0
	.dd	_47
	.dd	_47
	.dd	0
	.dd	-1
	.dd	10
	.dd	_3
	.dd	_titem
	.dd	__bbIntType
	.dd	__bbStrType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
_55	.db	"Picked ",0
_56	.db	" of ",0
_67	.db	"Gold",0
_68	.db	"Gold",0
_69	.db	"Stacked ",0
_70	.db	" of ",0
_75	.db	"Gold",0
_76	.db	"Enter nr to splitt",0
_79	.db	"Gold",0
_87	.db	"Gold",0
_100	.db	"Gold",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

