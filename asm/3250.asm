
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	sub	esp,4
	mov	eax,_ac64pal
	mov	[esp],eax
	call	__bbUndimArray
	sub	esp,8
	mov	eax,_20
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_flen
	add	eax,1
	mov	ebx,_ac64pal
	add	ebx,12
	mov	[ebx],eax
	mov	ebx,2
	mov	esi,_ac64pal
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ac64pal
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	mov	[esp],_vc64i
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_tc64data
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	[esp],_vc64_image
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_tc64sprmap
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,3
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,24
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,21
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,50
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,48
	mov	[esi],ebx
	mov	ebx,50
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,52
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,-1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,72
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,56
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,64
	mov	[esi],ebx
	sub	esp,12
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,20
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcreateimage
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],eax
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fc64drawsprite
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	ecx,[_vc64i]
	mov	ecx,[ecx]
	add	ecx,48
	mov	ecx,[ecx]
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,52
	mov	ebx,[ebx]
	imul	ecx,ebx
	mov	eax,[ebp+20]
	cdq
	idiv	ecx
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	__bbMod
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	imul	eax,ebx
	mov	[ebp-8],eax
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	imul	ebx,esi
	imul	ebx,[ebp-4]
	mov	eax,[ebp+20]
	sub	eax,ebx
	mov	ecx,[_vc64i]
	mov	ecx,[ecx]
	add	ecx,52
	mov	ecx,[ecx]
	cdq
	idiv	ecx
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	imul	eax,ebx
	mov	[ebp-12],eax
	mov	[ebp-16],0
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],_tc64sprmap
	call	__bbObjEachFirst
	and	eax,eax
	jz	_5
_25
	mov	ebx,[ebp-4]
	cmp	[ebp-16],ebx
	jnz	_26
	sub	esp,32
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[esp+24],ebx
	mov	[esp+28],0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	mov	[esp+20],esi
	mov	ebx,[ebp-12]
	mov	[esp+16],ebx
	mov	esi,[ebp-8]
	mov	[esp+12],esi
	mov	ebx,[ebp+28]
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp-20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimagerect
_26
	add	[ebp-16],1
	sub	esp,4
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_25
_5
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fc64datspr
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,12
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	cmp	[ebp+24],1
	jnz	_27
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_28
	sub	esp,4
	mov	[esp],0
	call	_fc64storeimg
	sub	esp,12
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
_28
	sub	esp,12
	mov	ebx,_ac64pal
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 0
	add	ebx,0
	shl	ebx,byte 2
	add	ebx,[_ac64pal]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,_ac64pal
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 1
	add	esi,0
	shl	esi,byte 2
	add	esi,[_ac64pal]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,_ac64pal
	add	eax,12
	mov	eax,[eax]
	imul	eax,0
	add	eax,0
	shl	eax,byte 2
	add	eax,[_ac64pal]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fclscolor
	call	_fcls
	jmp	_29
_27
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[ebp-20],eax
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	or	ebx,eax
	and	ebx,ebx
	jz	_30
	sub	esp,4
	mov	[esp],0
	call	_fc64storeimg
	sub	esp,12
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,_ac64pal
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 0
	add	ebx,0
	shl	ebx,byte 2
	add	ebx,[_ac64pal]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,_ac64pal
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 1
	add	esi,0
	shl	esi,byte 2
	add	esi,[_ac64pal]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,_ac64pal
	add	eax,12
	mov	eax,[eax]
	imul	eax,0
	add	eax,0
	shl	eax,byte 2
	add	eax,[_ac64pal]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fclscolor
	call	_fcls
_30
_29
	cmp	[ebp+32],0
	jge	_31
	mov	[ebp-4],1
	jmp	_32
_33
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fbitstate
	mov	[ebp-8],eax
	cmp	[ebp-8],0
	jz	_35
	cmp	[ebp-8],1
	jz	_36
	jmp	_34
_35
	sub	esp,4
	mov	[esp],0
	call	_fc64color
	jmp	_34
_36
	sub	esp,4
	mov	eax,[ebp+28]
	mov	[esp],eax
	call	_fc64color
	jmp	_34
_34
	sub	esp,8
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	shl	eax,byte 3
	sub	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fplot
	add	[ebp-4],1
_32
	cmp	[ebp-4],8
	jle	_33
_7
	jmp	_37
_31
	mov	[ebp-4],1
	jmp	_38
_39
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	add	ebx,1
	mov	[esp+4],ebx
	call	_fbitstate
	shl	eax,byte 1
	mov	[ebp-20],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fbitstate
	mov	ebx,eax
	mov	eax,[ebp-20]
	add	eax,ebx
	mov	[ebp-12],eax
	mov	ebx,[ebp-12]
	mov	[ebp-16],ebx
	cmp	[ebp-16],0
	jz	_41
	cmp	[ebp-16],1
	jz	_42
	cmp	[ebp-16],2
	jz	_43
	cmp	[ebp-16],3
	jz	_44
	jmp	_40
_41
	sub	esp,4
	mov	[esp],0
	call	_fc64color
	jmp	_40
_42
	sub	esp,4
	mov	eax,[ebp+28]
	mov	[esp],eax
	call	_fc64color
	jmp	_40
_43
	sub	esp,4
	mov	eax,[ebp+32]
	mov	[esp],eax
	call	_fc64color
	jmp	_40
_44
	sub	esp,4
	mov	eax,[ebp+36]
	mov	[esp],eax
	call	_fc64color
	jmp	_40
_40
	sub	esp,8
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	shl	eax,byte 3
	sub	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fplot
	sub	esp,8
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	shl	eax,byte 3
	sub	eax,[ebp-4]
	sub	eax,1
	mov	[esp],eax
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fplot
	add	[ebp-4],2
_38
	cmp	[ebp-4],8
	jle	_39
_9
_37
	mov	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,72
	mov	[esi],ebx
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	cmp	ebx,esi
	jle	_45
	mov	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
_45
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fc64ds
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,12
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	cmp	[ebp+24],1
	jnz	_46
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_47
	sub	esp,4
	mov	[esp],0
	call	_fc64storeimg
	sub	esp,12
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
_47
	sub	esp,12
	mov	ebx,_ac64pal
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 0
	add	ebx,0
	shl	ebx,byte 2
	add	ebx,[_ac64pal]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,_ac64pal
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 1
	add	esi,0
	shl	esi,byte 2
	add	esi,[_ac64pal]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,_ac64pal
	add	eax,12
	mov	eax,[eax]
	imul	eax,0
	add	eax,0
	shl	eax,byte 2
	add	eax,[_ac64pal]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fclscolor
	call	_fcls
	jmp	_48
_46
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	eax,ebx
	setl	al
	movzx	eax,al
	mov	[ebp-12],eax
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	and	eax,eax
	jz	_49
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	jmp	_50
_49
	sub	esp,4
	mov	[esp],0
	call	_fc64storeimg
	sub	esp,12
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,_ac64pal
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 0
	add	ebx,0
	shl	ebx,byte 2
	add	ebx,[_ac64pal]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,_ac64pal
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 1
	add	esi,0
	shl	esi,byte 2
	add	esi,[_ac64pal]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,_ac64pal
	add	eax,12
	mov	eax,[eax]
	imul	eax,0
	add	eax,0
	shl	eax,byte 2
	add	eax,[_ac64pal]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fclscolor
	call	_fcls
_50
_48
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	cmp	eax,ebx
	jle	_51
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[ebp-4],ebx
	jmp	_52
_51
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	mov	[ebp-4],eax
_52
	mov	[ebp-8],0
	jmp	_53
_54
	sub	esp,28
	mov	ebx,[ebp-8]
	add	ebx,1
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_55
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	sub	ebx,1
	mov	[esp],ebx
	mov	eax,ebx
	call	_fc64color
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fplot
	add	[ebp-8],1
_53
	mov	ebx,[ebp-4]
	cmp	[ebp-8],ebx
	jle	_54
_12
	mov	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,72
	mov	[esi],ebx
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_faddpal
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	cmp	[ebp+20],0
	setge	al
	movzx	eax,al
	mov	[ebp-4],eax
	cmp	[ebp+20],255
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	and	eax,ebx
	mov	[ebp-4],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[ebp-4],eax
	cmp	[ebp+24],255
	mov	eax,esi
	setle	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-4]
	and	ebx,esi
	and	eax,ebx
	mov	[ebp-4],eax
	cmp	[ebp+28],0
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[ebp-4],eax
	cmp	[ebp+28],255
	mov	eax,esi
	setle	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-4]
	and	ebx,esi
	and	eax,ebx
	and	eax,eax
	jz	_56
	jmp	_57
_56
	mov	[ebp+20],0
	mov	[ebp+24],0
	mov	[ebp+28],0
_57
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	sub	esp,8
	mov	eax,_59
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_flen
	sub	eax,1
	cmp	ebx,eax
	jg	_58
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,_ac64pal
	add	esi,12
	mov	esi,[esi]
	imul	esi,0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_ac64pal]
	mov	esi,[ebp+20]
	mov	[ebx],esi
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,_ac64pal
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 0
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_ac64pal]
	mov	esi,[ebp+24]
	mov	[ebx],esi
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,_ac64pal
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 1
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_ac64pal]
	mov	esi,[ebp+28]
	mov	[ebx],esi
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
_58
	mov	eax,0
	jmp	_13_leave
_13_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fc64color
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,_ac64pal
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 0
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ac64pal]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,_ac64pal
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 1
	add	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ac64pal]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,_ac64pal
	add	eax,12
	mov	eax,[eax]
	imul	eax,0
	add	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ac64pal]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	mov	eax,0
	jmp	_14_leave
_14_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fc64storeimg
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	[ebp-4],0
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,48
	mov	esi,[esi]
	cmp	ebx,esi
	jle	_60
	mov	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
_60
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,48
	mov	esi,[esi]
	sub	esi,1
	cmp	ebx,esi
	jle	_61
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	imul	ebx,50
	mov	[ebp-4],ebx
	jmp	_62
_61
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	imul	ebx,esi
	mov	[ebp-4],ebx
_62
	sub	esp,12
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	imul	ebx,esi
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcreateimage
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	shl	ebx,byte 2
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,60
	mov	esi,[esi]
	add	ebx,esi
	mov	[ebx],eax
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_63
	sub	esp,48
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,56
	mov	eax,[eax]
	add	eax,1
	mov	[esp],eax
	mov	[esp+4],2
	call	__bbMod
	shl	eax,byte 2
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+24],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	shl	ebx,byte 2
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,60
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fimagebuffer
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+28],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	sub	esp,12
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,56
	mov	eax,[eax]
	add	eax,1
	mov	[esp],eax
	mov	[esp+4],2
	call	__bbMod
	shl	eax,byte 2
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimageheight
	mov	[esp+12],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,8
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	add	ebx,1
	mov	[esp],ebx
	mov	[esp+4],2
	mov	eax,ebx
	call	__bbMod
	mov	ebx,eax
	mov	eax,[ebp-12]
	shl	ebx,byte 2
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,60
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fimagewidth
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+8],ebx
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	sub	esp,12
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,56
	mov	eax,[eax]
	add	eax,1
	mov	[esp],eax
	mov	[esp+4],2
	call	__bbMod
	shl	eax,byte 2
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeimage
_63
	sub	esp,12
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,56
	mov	eax,[eax]
	shl	eax,byte 2
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,16
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	sub	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	imul	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,44
	mov	esi,[esi]
	sub	esi,1
	mov	edi,[_vc64i]
	mov	edi,[edi]
	add	edi,24
	mov	edi,[edi]
	imul	esi,edi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawblock
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,44
	mov	eax,[eax]
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,52
	mov	ebx,[ebx]
	cmp	eax,ebx
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,48
	mov	esi,[esi]
	cmp	ebx,esi
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_64
	sub	esp,4
	mov	[esp],1
	call	_fc64_finalize
	jmp	_65
_64
	cmp	[ebp+20],0
	jnz	_66
	sub	esp,8
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,56
	mov	eax,[eax]
	add	eax,1
	mov	[esp],eax
	mov	[esp+4],2
	call	__bbMod
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,56
	mov	[ebx],eax
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	jmp	_67
_66
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,68
	mov	[esi],ebx
_67
_65
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,72
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	mov	eax,0
	jmp	_15_leave
_15_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fc64_finalize
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+20],0
	jnz	_68
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	cmp	eax,0
	setg	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_69
	sub	esp,4
	mov	[esp],1
	call	_fc64storeimg
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,68
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_70
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,68
	mov	[esi],ebx
	jmp	_l_16getout
	jmp	_71
_70
	sub	esp,4
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,56
	mov	eax,[eax]
	shl	eax,byte 2
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcopyimage
	mov	ebx,[_vc64_image]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,16
	mov	ebx,_ac64pal
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 0
	add	ebx,0
	shl	ebx,byte 2
	add	ebx,[_ac64pal]
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,_ac64pal
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 1
	add	esi,0
	shl	esi,byte 2
	add	esi,[_ac64pal]
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	esi,_ac64pal
	add	esi,12
	mov	esi,[esi]
	imul	esi,0
	add	esi,0
	shl	esi,byte 2
	add	esi,[_ac64pal]
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[_vc64_image]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fmaskimage
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,64
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,64
	mov	[esi],ebx
	sub	esp,4
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,56
	mov	eax,[eax]
	shl	eax,byte 2
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeimage
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,56
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
_71
_69
	jmp	_72
_68
	sub	esp,4
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,56
	mov	eax,[eax]
	shl	eax,byte 2
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcopyimage
	mov	ebx,[_vc64_image]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,16
	mov	ebx,_ac64pal
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 0
	add	ebx,0
	shl	ebx,byte 2
	add	ebx,[_ac64pal]
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,_ac64pal
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 1
	add	esi,0
	shl	esi,byte 2
	add	esi,[_ac64pal]
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	esi,_ac64pal
	add	esi,12
	mov	esi,[esi]
	imul	esi,0
	add	esi,0
	shl	esi,byte 2
	add	esi,[_ac64pal]
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[_vc64_image]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fmaskimage
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,64
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,64
	mov	[esi],ebx
	sub	esp,8
	mov	[esp],_vc64_image
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tc64sprmap
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,4
	mov	eax,[_vc64i]
	mov	eax,[eax]
	add	eax,56
	mov	eax,[eax]
	shl	eax,byte 2
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeimage
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,56
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	mov	ebx,[_vc64i]
	mov	ebx,[ebx]
	add	ebx,68
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[_vc64i]
	mov	esi,[esi]
	add	esi,68
	mov	[esi],ebx
	mov	eax,0
	jmp	_16_leave
_72
_l_16getout
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tc64sprmap
	call	__bbObjEachFirst
	and	eax,eax
	jz	_17
_73
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_74
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
_74
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_73
_17
	mov	eax,0
	jmp	_16_leave
_16_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fbitstate
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fbin
	mov	[esp],eax
	call	_flen
	mov	ebx,[ebp+24]
	sub	ebx,1
	sub	eax,ebx
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fbin
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fmid
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	[ebp+20],ebx
	mov	ebx,[ebp+20]
	mov	[ebp-4],ebx
	cmp	[ebp-4],0
	jz	_76
	cmp	[ebp-4],1
	jz	_77
	jmp	_75
_76
	mov	eax,0
	jmp	_18_leave
	jmp	_75
_77
	mov	eax,1
	jmp	_18_leave
	jmp	_75
_75
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
_20	.db	" 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",0
	.align	4
_ac64pal	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_vc64i	.dd	0
	.align	4
_vc64_image	.dd	0
	.align	4
_tc64sprmap	.dd	5
_21	.dd	0
	.dd	_21
	.dd	_21
	.dd	0
	.dd	-1
_22	.dd	0
	.dd	_22
	.dd	_22
	.dd	0
	.dd	-1
	.dd	1
	.dd	__bbIntType
	.align	4
_3	.dd	6
	.dd	2
	.dd	__bbIntType
	.align	4
_tc64data	.dd	5
_23	.dd	0
	.dd	_23
	.dd	_23
	.dd	0
	.dd	-1
_24	.dd	0
	.dd	_24
	.dd	_24
	.dd	0
	.dd	-1
	.dd	19
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	_3
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
_55	.db	" 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",0
_59	.db	" 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

