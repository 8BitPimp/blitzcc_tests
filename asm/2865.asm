
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,12
	mov	eax,_7
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_8
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	_fapptitle
	mov	[_vsw],800
	mov	[_vsh],600
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	esi,[_vsh]
	mov	[esp+4],esi
	mov	eax,[_vsw]
	mov	[esp],eax
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],160
	mov	[esp+8],255
	mov	[esp],32
	call	_fclscolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],12
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-4],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],18
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-12],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],60
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-16],eax
	jmp	_10
_9
	call	_fcls
	sub	esp,32
	mov	[esp+24],8421504
	mov	[esp+28],13684944
	mov	[esp+20],2
	mov	[esp+16],4
	mov	[esp+12],50
	mov	[esp+8],100
	mov	esi,[_vsh]
	sar	esi,byte 1
	mov	[esp+4],esi
	mov	[esp],60
	call	_ftbubble
	sub	esp,32
	mov	[esp+24],0
	mov	[esp+28],16777168
	mov	[esp+20],6
	mov	[esp+16],8
	mov	[esp+12],130
	mov	[esp+8],200
	mov	esi,[_vsh]
	sar	esi,byte 1
	mov	[esp+4],esi
	mov	[esp],240
	call	_ftbubble
	sub	esp,32
	mov	[esp+24],0
	mov	[esp+28],16777215
	mov	[esp+20],20
	mov	[esp+16],24
	mov	[esp+12],480
	mov	[esp+8],280
	mov	esi,[_vsh]
	sar	esi,byte 1
	mov	[esp+4],esi
	mov	[esp],580
	call	_ftbubble
	call	_fmillisecs
	sub	eax,[ebp-24]
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_11
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[_vsh]
	sar	ebx,byte 1
	sub	ebx,15
	mov	[esp+4],ebx
	mov	[esp],60
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_12
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[_vsh]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	mov	[esp],60
	call	_ftext
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_13
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[_vsh]
	sar	ebx,byte 1
	sub	ebx,18
	mov	[esp+4],ebx
	mov	[esp],240
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_14
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[_vsh]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	mov	[esp],240
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_15
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[_vsh]
	sub	ebx,18
	mov	[esp+4],ebx
	mov	[esp],400
	call	_ftext
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_16
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[_vsh]
	sar	ebx,byte 1
	sub	ebx,96
	mov	[esp+4],ebx
	mov	[esp],580
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_17
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[_vsh]
	sar	ebx,byte 1
	sub	ebx,32
	mov	[esp+4],ebx
	mov	[esp],580
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_18
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[_vsh]
	sar	ebx,byte 1
	add	ebx,32
	mov	[esp+4],ebx
	mov	[esp],580
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitmouse
_10
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	cmp	eax,0
	jz	_9
_3
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreefont
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_ffreefont
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_ffreefont
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsetcolor
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,[ebp+20]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp+20]
	mov	edi,255
	and	esi,edi
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	shr	eax,byte 16
	mov	esi,255
	and	eax,esi
	mov	[esp],eax
	call	_fcolor
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_ftbubble
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,72
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	cmp	[ebp+40],2
	jge	_19
	mov	[ebp+40],2
_19
	mov	ebx,[ebp+40]
	shr	ebx,byte 1
	mov	[ebp-64],ebx
	mov	ebx,[ebp+28]
	shr	ebx,byte 1
	mov	[ebp-4],ebx
	mov	ebx,[ebp+32]
	shr	ebx,byte 1
	mov	[ebp-8],ebx
	mov	eax,[ebp+28]
	mov	ecx,[ebp+36]
	cdq
	idiv	ecx
	mov	[ebp-12],eax
	mov	eax,[ebp+32]
	mov	ecx,[ebp+36]
	cdq
	idiv	ecx
	mov	[ebp-16],eax
	mov	ebx,[ebp-12]
	cmp	[ebp-16],ebx
	jge	_20
	mov	ebx,[ebp-12]
	mov	[ebp-68],ebx
	mov	ebx,[ebp-16]
	mov	[ebp-12],ebx
	mov	ebx,[ebp-68]
	mov	[ebp-16],ebx
_20
	sub	esp,4
	mov	eax,[ebp-12]
	sub	eax,[ebp-16]
	mov	[esp],eax
	call	__bbAbs
	cmp	eax,5
	jge	_21
	mov	ebx,[ebp-12]
	sar	ebx,byte 1
	mov	[ebp-12],ebx
_21
	mov	[ebp-20],0
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],179
	call	_frand
	shl	eax,byte 1
	mov	[ebp-24],eax
	sub	esp,4
	mov	eax,[ebp-24]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-4]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	eax,[ebp-24]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-8]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-44],eax
	mov	ebx,[ebp-40]
	mov	[ebp-56],ebx
	mov	ebx,[ebp-44]
	mov	[ebp-60],ebx
	jmp	_23
_22
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_frand
	shl	eax,byte 1
	mov	[ebp-72],eax
	mov	ebx,[ebp-72]
	add	[ebp-20],ebx
	mov	ebx,[ebp-72]
	add	[ebp-24],ebx
	sub	esp,4
	mov	eax,[ebp-24]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-4]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	eax,[ebp-24]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-8]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-52],eax
	sub	esp,8
	mov	eax,[ebp-48]
	sub	eax,[ebp-40]
	mov	ebx,[ebp-48]
	sub	ebx,[ebp-40]
	imul	eax,ebx
	mov	ebx,[ebp-52]
	sub	ebx,[ebp-44]
	mov	esi,[ebp-52]
	sub	esi,[ebp-44]
	imul	ebx,esi
	add	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-28],eax
	mov	ebx,[ebp-40]
	add	ebx,[ebp-48]
	sar	ebx,byte 1
	mov	[ebp-32],ebx
	mov	ebx,[ebp-44]
	add	ebx,[ebp-52]
	sar	ebx,byte 1
	mov	[ebp-36],ebx
	sub	esp,4
	mov	eax,[ebp+44]
	mov	[esp],eax
	call	_fsetcolor
	sub	esp,20
	mov	ebx,[ebp-36]
	mov	esi,[ebp-28]
	sar	esi,byte 1
	sub	ebx,esi
	sub	ebx,[ebp-64]
	mov	[esp+4],ebx
	mov	esi,[ebp-28]
	add	esi,[ebp+40]
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	edi,[ebp-28]
	add	edi,[ebp+40]
	mov	[esp+8],edi
	mov	eax,[ebp-32]
	mov	esi,[ebp-28]
	sar	esi,byte 1
	sub	eax,esi
	sub	eax,[ebp-64]
	mov	[esp],eax
	call	_foval
	sub	esp,4
	mov	eax,[ebp+48]
	mov	[esp],eax
	call	_fsetcolor
	sub	esp,20
	mov	ebx,[ebp-36]
	mov	esi,[ebp-28]
	sar	esi,byte 1
	sub	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-28]
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	edi,[ebp-28]
	mov	[esp+8],edi
	mov	eax,[ebp-32]
	mov	esi,[ebp-28]
	sar	esi,byte 1
	sub	eax,esi
	mov	[esp],eax
	call	_foval
	mov	ebx,[ebp-48]
	mov	[ebp-40],ebx
	mov	ebx,[ebp-52]
	mov	[ebp-44],ebx
_23
	mov	ebx,360
	mov	esi,[ebp-16]
	shl	esi,byte 1
	sub	ebx,esi
	cmp	[ebp-20],ebx
	jle	_22
_6
	mov	ebx,[ebp-56]
	mov	[ebp-48],ebx
	mov	ebx,[ebp-60]
	mov	[ebp-52],ebx
	sub	esp,4
	mov	eax,[ebp-48]
	sub	eax,[ebp-40]
	mov	ebx,[ebp-48]
	sub	ebx,[ebp-40]
	imul	eax,ebx
	mov	ebx,[ebp-52]
	sub	ebx,[ebp-44]
	mov	esi,[ebp-52]
	sub	esi,[ebp-44]
	imul	ebx,esi
	add	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	add	eax,1
	mov	[ebp-28],eax
	mov	ebx,[ebp-40]
	add	ebx,[ebp-48]
	sar	ebx,byte 1
	mov	[ebp-32],ebx
	mov	ebx,[ebp-44]
	add	ebx,[ebp-52]
	sar	ebx,byte 1
	mov	[ebp-36],ebx
	sub	esp,4
	mov	eax,[ebp+44]
	mov	[esp],eax
	call	_fsetcolor
	sub	esp,20
	mov	ebx,[ebp-36]
	mov	esi,[ebp-28]
	sar	esi,byte 1
	sub	ebx,esi
	sub	ebx,[ebp-64]
	mov	[esp+4],ebx
	mov	esi,[ebp-28]
	add	esi,[ebp+40]
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	edi,[ebp-28]
	add	edi,[ebp+40]
	mov	[esp+8],edi
	mov	eax,[ebp-32]
	mov	esi,[ebp-28]
	sar	esi,byte 1
	sub	eax,esi
	sub	eax,[ebp-64]
	mov	[esp],eax
	call	_foval
	sub	esp,4
	mov	eax,[ebp+48]
	mov	[esp],eax
	call	_fsetcolor
	sub	esp,20
	mov	ebx,[ebp-36]
	mov	esi,[ebp-28]
	sar	esi,byte 1
	sub	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-28]
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	edi,[ebp-28]
	mov	[esp+8],edi
	mov	eax,[ebp-32]
	mov	esi,[ebp-28]
	sar	esi,byte 1
	sub	eax,esi
	mov	[esp],eax
	call	_foval
	sub	esp,20
	mov	ebx,[ebp+32]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	sub	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	sub	eax,[ebp-4]
	mov	[esp],eax
	call	_foval
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 32
_7	.db	"Cartoon Thought Bubbles",0
_8	.db	"",0
	.align	4
_vsw	.dd	0
	.align	4
_vsh	.dd	0
_11	.db	"Small",0
_12	.db	"Thought",0
_13	.db	"Medium",0
_14	.db	"Thought",0
_15	.db	"R-click for more random bubbles.........L-click to exit",0
_16	.db	"Hey!",0
_17	.db	"Whaddaya",0
_18	.db	"Know?",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

