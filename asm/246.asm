
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	sub	esp,8
	mov	[esp],_vt
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_18
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,_vt
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	neg	eax
	mov	[_vts],eax
	mov	[_vtx],0
	mov	[_vbc],0
	mov	[_vwc],0
	mov	[_vpc],0
	mov	[_vsp],3
	sub	esp,8
	mov	eax,_19
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadsound
	mov	[_voik],eax
	sub	esp,4
	mov	[esp],30
	call	_fcreatetimer
	mov	[_vwait],eax
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	mov	[ebp-4],1
	jmp	_20
_21
	sub	esp,20
	mov	[esp],128
	mov	[esp+4],255
	call	_frand
	mov	[esp+4],eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	[esp],128
	mov	[esp+4],255
	mov	eax,ebx
	call	_frand
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+8],ebx
	mov	[esp],64
	mov	eax,ebx
	call	_fcreateball
	mov	ebx,eax
	add	[ebp-4],1
_20
	cmp	[ebp-4],5
	jle	_21
_3
	sub	esp,4
	mov	eax,__DATA
	add	eax,0
	mov	[esp],eax
	call	__bbRestore
	mov	[ebp-4],1
	jmp	_22
_23
	call	__bbReadInt
	mov	[ebp-8],eax
	call	__bbReadInt
	mov	[ebp-12],eax
	sub	esp,20
	mov	[esp+12],255
	mov	[esp+16],0
	mov	[esp+8],255
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcreatepoint
	add	[ebp-4],1
_22
	cmp	[ebp-4],5
	jle	_23
_4
_l_2bollarddata
	sub	esp,4
	mov	eax,__DATA
	add	eax,80
	mov	[esp],eax
	call	__bbRestore
	mov	[ebp-4],1
	jmp	_24
_25
	call	__bbReadInt
	mov	[ebp-16],eax
	call	__bbReadInt
	mov	[ebp-20],eax
	call	__bbReadInt
	mov	[ebp-24],eax
	call	__bbReadInt
	mov	[ebp-28],eax
	sub	esp,36
	mov	[esp],128
	mov	[esp+4],255
	call	_frand
	mov	[esp+16],eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	[esp],128
	mov	[esp+4],255
	mov	eax,ebx
	call	_frand
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+20],ebx
	mov	[esp+24],192
	mov	ebx,[ebp-28]
	mov	[esp+12],ebx
	mov	esi,[ebp-24]
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fcreatewall
	add	[ebp-4],1
_24
	cmp	[ebp-4],9
	jle	_25
_5
_l_2walldata
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	jmp	_27
_26
	call	_fmoveballs
	jmp	_29
_28
_29
	sub	esp,4
	mov	[esp],57
	call	_fkeydown
	and	eax,eax
	jnz	_28
_7
_27
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_26
_6
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fmoveballs
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,4
	mov	eax,[_vwait]
	mov	[esp],eax
	call	_fwaittimer
	mov	[ebp-4],eax
	call	_fcls
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],_tobs
	call	__bbObjEachFirst
	and	eax,eax
	jz	_9
_36
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,20
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	sar	esi,byte 1
	add	ebx,esi
	mov	[esp+4],ebx
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+8],eax
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	sar	esi,byte 1
	add	eax,esi
	mov	[esp],eax
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,_37
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	mov	[esp],eax
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,_38
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	call	_ftext
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_36
_9
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],_tpnt
	call	__bbObjEachFirst
	and	eax,eax
	jz	_10
_39
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+8],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_ftext
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_39
_10
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],_timg
	call	__bbObjEachFirst
	and	eax,eax
	jz	_11
_40
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	sub	esp,16
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,24
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fatan2
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1098907648
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1098907648
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	sub	esp,16
	mov	ebx,1097859072
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-20]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	fmulp	st(1)
	mov	esi,[ebp-24]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,1097859072
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-20]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	fmulp	st(1)
	mov	edi,[ebp-28]
	push	edi
	fild	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fistp	[esp]
	pop	edi
	mov	[esp+12],edi
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fline
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+8],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_ftext
	mov	[ebp-32],0
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	mov	[esp+4],_timg
	call	__bbObjEachFirst
	and	eax,eax
	jz	_12
_41
	sub	esp,8
	mov	eax,[ebp-36]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	__bbObjCompare
	cmp	eax,0
	jz	_42
	sub	esp,32
	mov	ebx,[ebp-36]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+24],ebx
	mov	[esp+28],0
	mov	esi,[ebp-36]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+20],esi
	mov	ebx,[ebp-36]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+16],ebx
	mov	[esp+12],0
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimagescollide
	and	eax,eax
	jz	_43
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,16
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-36]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fatan2
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	mov	[ebp-32],1
_43
_42
	sub	esp,4
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_41
_12
	cmp	[ebp-32],0
	jnz	_44
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],_tpnt
	call	__bbObjEachFirst
	and	eax,eax
	jz	_13
_45
	sub	esp,32
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+24],ebx
	mov	[esp+28],0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+20],esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+16],ebx
	mov	[esp+12],0
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimagescollide
	and	eax,eax
	jz	_46
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,16
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fatan2
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	mov	[ebp-32],1
_46
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_45
_13
_44
	cmp	[ebp-32],0
	jnz	_47
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],_tobs
	call	__bbObjEachFirst
	and	eax,eax
	jz	_14
_48
	sub	esp,32
	mov	[esp+24],1
	mov	[esp+28],1
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	mov	[esp+20],esi
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp+16],ebx
	mov	[esp+12],0
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimagerectcollide
	and	eax,eax
	jz	_49
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,32
	mov	eax,[eax]
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,36
	mov	esi,[esi]
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fatan2
	mov	ebx,[ebp-20]
	sar	ebx,byte 1
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	add	[_vrepcount],1
	mov	[ebp-32],1
	jmp	_50
_49
	sub	esp,32
	mov	[esp+24],1
	mov	[esp+28],1
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	mov	[esp+20],esi
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[esp+16],ebx
	mov	[esp+12],0
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimagerectcollide
	and	eax,eax
	jz	_51
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,40
	mov	eax,[eax]
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fatan2
	mov	ebx,[ebp-20]
	sar	ebx,byte 1
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	mov	[ebp-32],1
	jmp	_52
_51
	sub	esp,32
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+24],ebx
	mov	[esp+28],0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+20],esi
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+16],ebx
	mov	[esp+12],0
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimagescollide
	and	eax,eax
	jz	_53
	mov	ebx,[ebp-20]
	neg	ebx
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	shl	esi,byte 1
	add	ebx,esi
	mov	[ebp-20],ebx
	mov	[ebp-32],1
_53
_52
_50
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_48
_14
_47
	mov	ebx,[ebp-32]
	and	ebx,ebx
	jz	_54
	mov	ebx,[_vsp]
	push	ebx
	fild	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-20]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[_vsp]
	push	ebx
	fild	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-20]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
_54
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_40
_11
	add	[_vtx],2
	cmp	[_vtx],640
	jnz	_55
	mov	ebx,[_vts]
	mov	[_vtx],ebx
_55
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_vt
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	[esp+4],12
	mov	eax,[_vtx]
	mov	[esp],eax
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	esi,[ebp-36]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreateball
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	add	[_vbc],1
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_timg
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,1112014848
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1112014848
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],360
	call	_frand
	mov	[ebp-8],eax
	mov	ebx,[_vsp]
	push	ebx
	fild	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[_vsp]
	push	ebx
	fild	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	sub	esp,12
	mov	[esp+4],32
	mov	[esp+8],1
	mov	[esp],32
	call	_fcreateimage
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,12
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],96
	mov	[esp+8],96
	mov	[esp],96
	call	_fcolor
	sub	esp,20
	mov	[esp+12],32
	mov	[esp+16],1
	mov	[esp+8],32
	mov	[esp+4],0
	mov	[esp],0
	call	_foval
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	[esp+12],30
	mov	[esp+16],1
	mov	[esp+8],30
	mov	[esp+4],1
	mov	[esp],1
	call	_foval
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	mov	eax,0
	jmp	_15_leave
_15_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fcreatewall
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_tobs
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	__bbObjStore
	add	[_vwc],1
	mov	ebx,[_vwc]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	sub	eax,[ebp+28]
	mov	[esp],eax
	call	__bbAbs
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+24]
	sub	eax,[ebp+32]
	mov	[esp],eax
	call	__bbAbs
	mov	[ebp-12],eax
	mov	ebx,[ebp-8]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	cmp	[ebp+20],ebx
	jle	_56
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	[ebp+20],ebx
	mov	[ebp+28],0
	jmp	_57
_56
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	[ebp+28],ebx
	mov	[ebp+20],0
_57
	mov	ebx,[ebp+32]
	cmp	[ebp+24],ebx
	jle	_58
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	[ebp+24],ebx
	mov	[ebp+32],0
	jmp	_59
_58
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	[ebp+32],ebx
	mov	[ebp+24],0
_59
	sub	esp,8
	mov	eax,[ebp+32]
	sub	eax,[ebp+24]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp+28]
	sub	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fatan2
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-16],eax
	mov	ebx,[ebp-16]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	cmp	[ebp-16],0
	setg	al
	movzx	eax,al
	mov	[ebp-20],eax
	cmp	[ebp-16],90
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	and	eax,eax
	jz	_60
	mov	ebx,[ebp-16]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
_60
	cmp	[ebp-16],90
	setg	al
	movzx	eax,al
	mov	[ebp-20],eax
	cmp	[ebp-16],180
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	and	eax,eax
	jz	_61
	mov	ebx,[ebp-16]
	sub	ebx,180
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
_61
	sub	esp,12
	mov	ebx,[ebp-12]
	add	ebx,1
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-8]
	add	eax,1
	mov	[esp],eax
	call	_fcreateimage
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,12
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[ebp+40]
	mov	[esp+4],ebx
	mov	esi,[ebp+44]
	mov	[esp+8],esi
	mov	eax,[ebp+36]
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp+28]
	mov	[esp+8],ebx
	mov	esi,[ebp+32]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fline
	mov	eax,0
	jmp	_16_leave
_16_leave
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 28
	.align	16
_fcreatepoint
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tpnt
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	add	[_vpc],1
	mov	ebx,[_vpc]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	[esp],1
	call	_fcreateimage
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,12
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[ebp+32]
	mov	[esp+4],ebx
	mov	esi,[ebp+36]
	mov	[esp+8],esi
	mov	eax,[ebp+28]
	mov	[esp],eax
	call	_fcolor
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_fplot
	mov	eax,0
	jmp	_17_leave
_17_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	4
_vt	.dd	0
_18	.db	"Angles, balls and walls",0
	.align	4
_vts	.dd	0
	.align	4
_vtx	.dd	0
	.align	4
_vbc	.dd	0
	.align	4
_vwc	.dd	0
	.align	4
_vpc	.dd	0
	.align	4
_vsp	.dd	0
	.align	4
_vrepcount	.dd	0
	.align	4
_voik	.dd	0
_19	.db	"oik.wav",0
	.align	4
_vwait	.dd	0
	.align	4
_timg	.dd	5
_30	.dd	0
	.dd	_30
	.dd	_30
	.dd	0
	.dd	-1
_31	.dd	0
	.dd	_31
	.dd	_31
	.dd	0
	.dd	-1
	.dd	7
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.align	4
_tpnt	.dd	5
_32	.dd	0
	.dd	_32
	.dd	_32
	.dd	0
	.dd	-1
_33	.dd	0
	.dd	_33
	.dd	_33
	.dd	0
	.dd	-1
	.dd	4
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
_tobs	.dd	5
_34	.dd	0
	.dd	_34
	.dd	_34
	.dd	0
	.dd	-1
_35	.dd	0
	.dd	_35
	.dd	_35
	.dd	0
	.dd	-1
	.dd	11
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
_37	.db	"*",0
_38	.db	"*",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	1
	.dd	200
	.dd	1
	.dd	150
	.dd	1
	.dd	250
	.dd	1
	.dd	300
	.dd	1
	.dd	400
	.dd	1
	.dd	350
	.dd	1
	.dd	100
	.dd	1
	.dd	400
	.dd	1
	.dd	550
	.dd	1
	.dd	70
	.dd	1
	.dd	10
	.dd	1
	.dd	10
	.dd	1
	.dd	629
	.dd	1
	.dd	10
	.dd	1
	.dd	629
	.dd	1
	.dd	10
	.dd	1
	.dd	629
	.dd	1
	.dd	469
	.dd	1
	.dd	629
	.dd	1
	.dd	469
	.dd	1
	.dd	10
	.dd	1
	.dd	469
	.dd	1
	.dd	10
	.dd	1
	.dd	469
	.dd	1
	.dd	10
	.dd	1
	.dd	10
	.dd	1
	.dd	150
	.dd	1
	.dd	70
	.dd	1
	.dd	550
	.dd	1
	.dd	150
	.dd	1
	.dd	580
	.dd	1
	.dd	220
	.dd	1
	.dd	520
	.dd	1
	.dd	400
	.dd	1
	.dd	200
	.dd	1
	.dd	220
	.dd	1
	.dd	500
	.dd	1
	.dd	220
	.dd	1
	.dd	200
	.dd	1
	.dd	420
	.dd	1
	.dd	450
	.dd	1
	.dd	400
	.dd	1
	.dd	170
	.dd	1
	.dd	350
	.dd	1
	.dd	70
	.dd	1
	.dd	150
	.dd	0

