
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,12
	call	_fgraphicsheight
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-28],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcreateimage
	mov	ebx,eax
	mov	[_vdd_screengfx],ebx
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],15
	sub	esp,4
	mov	eax,_33
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-4],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],14
	sub	esp,4
	mov	eax,_34
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-8],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],24
	sub	esp,4
	mov	eax,_35
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-12],eax
	sub	esp,12
	mov	[esp+4],224
	mov	[esp+8],224
	mov	[esp],224
	call	_fclscolor
	jmp	_37
_36
	call	_fcls
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_38
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],50
	mov	[esp],65
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_39
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],50
	mov	[esp],465
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_40
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],100
	mov	[esp],65
	call	_ftext
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],12
	mov	[esp+16],1
	mov	[esp+8],12
	mov	[esp+4],50
	mov	[esp],50
	call	_frect
	sub	esp,20
	mov	[esp+12],12
	mov	[esp+16],1
	mov	[esp+8],12
	mov	[esp+4],50
	mov	[esp],450
	call	_frect
	sub	esp,20
	mov	[esp+12],12
	mov	[esp+16],1
	mov	[esp+8],12
	mov	[esp+4],100
	mov	[esp],50
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_41
	sub	esp,32
	mov	[esp+24],1
	mov	[esp+28],1
	call	_fmousey
	mov	[esp+20],eax
	mov	[ebp-28],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+16],ebx
	mov	[esp+12],12
	mov	[esp+8],12
	mov	[esp+4],50
	mov	[esp],50
	call	_frectsoverlap
	and	eax,eax
	jz	_42
	sub	esp,20
	mov	eax,_44
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_43
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp],1
	call	_fdd_addtolist
	sub	esp,20
	mov	eax,_46
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_45
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp],1
	call	_fdd_addtolist
	sub	esp,20
	mov	eax,_48
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_47
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp],1
	call	_fdd_addtolist
	sub	esp,20
	mov	eax,_50
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_49
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp],1
	call	_fdd_addtolist
	sub	esp,20
	mov	eax,_52
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_51
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp],1
	call	_fdd_addtolist
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,20
	mov	[esp+4],1
	mov	[esp+8],5
	mov	[esp],1
	call	_fdd_createdropdown
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	[ebp-20],1
_42
	sub	esp,32
	mov	[esp+24],1
	mov	[esp+28],1
	call	_fmousey
	mov	[esp+20],eax
	mov	[ebp-28],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+16],ebx
	mov	[esp+12],12
	mov	[esp+8],12
	mov	[esp+4],50
	mov	[esp],450
	call	_frectsoverlap
	and	eax,eax
	jz	_53
	mov	[ebp-24],1
	jmp	_54
_55
	sub	esp,28
	mov	eax,_56
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp],2
	call	_fdd_addtolist
	add	[ebp-24],1
_54
	cmp	[ebp-24],100
	jle	_55
_4
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,20
	mov	[esp+4],0
	mov	[esp+8],8
	mov	[esp],2
	call	_fdd_createdropdown
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	[ebp-20],2
_53
	sub	esp,32
	mov	[esp+24],1
	mov	[esp+28],1
	call	_fmousey
	mov	[esp+20],eax
	mov	[ebp-28],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+16],ebx
	mov	[esp+12],12
	mov	[esp+8],12
	mov	[esp+4],100
	mov	[esp],50
	call	_frectsoverlap
	and	eax,eax
	jz	_57
	sub	esp,20
	mov	eax,_59
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+12],1
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_58
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp],3
	call	_fdd_addtolist
	sub	esp,20
	mov	eax,_61
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+12],1
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_60
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp],3
	call	_fdd_addtolist
	sub	esp,20
	mov	eax,_63
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+12],1
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_62
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp],3
	call	_fdd_addtolist
	sub	esp,20
	mov	eax,_65
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+12],1
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_64
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp],3
	call	_fdd_addtolist
	sub	esp,20
	mov	eax,_67
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+12],1
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_66
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp],3
	call	_fdd_addtolist
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,20
	mov	[esp+4],0
	mov	[esp+8],14
	mov	[esp],3
	call	_fdd_createdropdown
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	[ebp-20],3
_57
_41
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_69
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_68
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,48
	mov	eax,_70
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_71
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],1
	mov	[esp+16],1
	mov	[esp+4],300
	mov	[esp],400
	call	_ftext
_68
	sub	esp,4
	mov	[esp],1
	call	_fflip
_37
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_36
_3
	ret
_2_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdd_createdropdown
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	jmp	_77
_76
_77
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jnz	_76
_6
	call	_ffontheight
	add	eax,4
	mov	[_vdd_fontheight],eax
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_tdd_dropdown
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	[ebp-8],0
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],_tdd_list
	call	__bbObjEachFirst
	and	eax,eax
	jz	_7
_78
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,[ebp+20]
	jnz	_79
	add	[ebp-8],1
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	cmp	ebx,eax
	jge	_80
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
_80
_79
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_78
_7
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,22
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	[ebp-16],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,16
	mov	eax,[eax]
	cmp	eax,[ebp-8]
	setl	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	cmp	[ebp-16],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	mov	[ebp-24],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	cmp	ebx,[ebp-8]
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	or	ebx,eax
	and	ebx,ebx
	jz	_81
	mov	ebx,[ebp-8]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
_81
	call	_fmousex
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	call	_fmousey
	sub	eax,[_vdd_fontheight]
	add	eax,2
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	add	ebx,esi
	call	_fgraphicswidth
	cmp	ebx,eax
	jle	_82
	call	_fgraphicswidth
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	sub	eax,ebx
	sub	eax,1
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
_82
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	add	esi,1
	imul	esi,[_vdd_fontheight]
	add	ebx,esi
	call	_fgraphicsheight
	cmp	ebx,eax
	jle	_83
	call	_fmousey
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,1
	imul	ebx,[_vdd_fontheight]
	sub	eax,ebx
	sub	eax,1
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],eax
_83
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	add	ebx,[_vdd_fontheight]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_84
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_85
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-24],eax
	mov	eax,ebx
	call	_fdd_drawdropdowns
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_5_leave
	sub	esp,4
	mov	eax,_86
	mov	[esp],eax
	call	__bbStrConst
	jmp	_5_leave
_5_leave
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[ebp-24],eax
	sub	esp,4
	mov	esi,[ebp-20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-24]
	mov	[ebp-24],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-24]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fdd_drawdropdown
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,148
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	mov	[ebp-128],ebx
	mov	[ebp-132],ebx
	mov	[ebp-136],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-4],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[ebp-12],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	[ebp-16],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-20],ebx
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[ebp-32],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[ebp-36],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[ebp-40],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[ebp-44],ebx
	mov	[ebp-48],0
	mov	[ebp-52],0
	mov	[ebp-56],0
	mov	[ebp-60],15
	mov	[ebp-64],0
	cmp	[ebp+24],0
	jnz	_87
	mov	[_vdd_mousehold],0
_87
	mov	ebx,[ebp-32]
	mov	[ebp-68],ebx
	cmp	[ebp-68],0
	jz	_89
	cmp	[ebp-68],1
	jz	_90
	jmp	_88
_89
	mov	[ebp-72],255
	mov	[ebp-76],128
	jmp	_88
_90
	mov	[ebp-72],224
	mov	[ebp-76],64
	jmp	_88
_88
	sub	esp,12
	mov	ebx,[ebp-72]
	mov	[esp+4],ebx
	mov	esi,[ebp-72]
	mov	[esp+8],esi
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-40]
	imul	ebx,[_vdd_fontheight]
	add	ebx,3
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-36]
	sub	esi,[ebp-60]
	add	esi,2
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	add	ebx,[_vdd_fontheight]
	sub	ebx,2
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	sub	eax,1
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	ebx,[ebp-76]
	mov	[esp+4],ebx
	mov	esi,[ebp-76]
	mov	[esp+8],esi
	mov	eax,[ebp-76]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-40]
	imul	ebx,[_vdd_fontheight]
	add	ebx,3
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-36]
	sub	esi,[ebp-60]
	add	esi,2
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	add	ebx,[_vdd_fontheight]
	sub	ebx,2
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	sub	eax,1
	mov	[esp],eax
	call	_frect
	sub	esp,16
	mov	ebx,[ebp-16]
	add	ebx,[ebp-36]
	sub	ebx,[ebp-60]
	mov	[esp+8],ebx
	mov	esi,[ebp-40]
	add	esi,1
	imul	esi,[_vdd_fontheight]
	add	esi,[ebp-20]
	add	esi,1
	mov	[esp+12],esi
	mov	esi,[ebp-40]
	add	esi,1
	imul	esi,[_vdd_fontheight]
	add	esi,[ebp-20]
	add	esi,1
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-16]
	add	ebx,[ebp-36]
	sub	ebx,[ebp-60]
	add	ebx,1
	mov	[esp+8],ebx
	mov	esi,[ebp-40]
	add	esi,1
	imul	esi,[_vdd_fontheight]
	add	esi,[ebp-20]
	add	esi,1
	mov	[esp+12],esi
	mov	esi,[ebp-20]
	add	esi,[_vdd_fontheight]
	sub	esi,1
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	add	eax,[ebp-36]
	sub	eax,[ebp-60]
	add	eax,1
	mov	[esp],eax
	call	_fline
	mov	[ebp-80],-1
	sub	esp,8
	lea	eax,[ebp-84]
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	mov	[ebp-144],eax
	sub	esp,4
	mov	[ebp-148],eax
	mov	eax,ebx
	call	_fgetkey
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-144]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flower
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	mov	ebx,_92
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setge	al
	movzx	eax,al
	mov	[ebp-140],eax
	mov	[ebp-144],eax
	sub	esp,8
	mov	[ebp-148],eax
	sub	esp,4
	lea	ebx,[ebp-84]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp],ebx
	mov	[ebp-148],eax
	sub	esp,4
	mov	esi,_93
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-148]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrCompare
	mov	ebx,eax
	mov	eax,[ebp-144]
	cmp	ebx,0
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-140]
	and	eax,ebx
	and	eax,eax
	jz	_91
	mov	[ebp-88],0
	sub	esp,8
	lea	eax,[ebp-92]
	mov	[esp],eax
	mov	[esp+4],_tdd_list
	call	__bbObjEachFirst
	and	eax,eax
	jz	_10
_94
	mov	ebx,[ebp-92]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,[ebp-4]
	jnz	_95
	mov	[ebp-96],1
_96
	sub	esp,24
	mov	ebx,[ebp-96]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	mov	eax,[ebp-92]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	_flower
	mov	[esp+4],eax
	lea	ebx,[ebp-100]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-96],1
	sub	esp,12
	lea	eax,[ebp-100]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	mov	ebx,_97
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setge	al
	movzx	eax,al
	mov	[ebp-140],eax
	mov	[ebp-144],eax
	sub	esp,8
	mov	[ebp-148],eax
	sub	esp,4
	lea	ebx,[ebp-100]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp],ebx
	mov	[ebp-148],eax
	sub	esp,4
	mov	esi,_98
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-148]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrCompare
	mov	ebx,eax
	mov	eax,[ebp-144]
	cmp	ebx,0
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-140]
	and	eax,ebx
	mov	[ebp-140],eax
	mov	[ebp-144],eax
	sub	esp,4
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,[ebp-92]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-144]
	cmp	[ebp-96],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-140]
	or	ebx,eax
	and	ebx,ebx
	jz	_96
_11
	sub	esp,12
	lea	eax,[ebp-100]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	lea	ebx,[ebp-84]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_99
	mov	ebx,[ebp-88]
	imul	ebx,[_vdd_fontheight]
	mov	[ebp-80],ebx
	jmp	_10
	jmp	_100
_99
	sub	esp,12
	lea	eax,[ebp-100]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	lea	ebx,[ebp-84]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jge	_101
	mov	ebx,[ebp-88]
	imul	ebx,[_vdd_fontheight]
	mov	[ebp-80],ebx
_101
_100
	add	[ebp-88],1
_95
	sub	esp,4
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_94
_10
_91
	sub	esp,16
	mov	ebx,[ebp-36]
	sub	ebx,[ebp-60]
	mov	[esp+8],ebx
	mov	esi,[ebp-40]
	imul	esi,[_vdd_fontheight]
	sub	esi,1
	mov	[esp+12],esi
	mov	esi,[ebp-20]
	add	esi,[_vdd_fontheight]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fviewport
	mov	[ebp-88],0
	sub	esp,8
	lea	eax,[ebp-92]
	mov	[esp],eax
	mov	[esp+4],_tdd_list
	call	__bbObjEachFirst
	and	eax,eax
	jz	_12
_102
	mov	ebx,[ebp-92]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,[ebp-4]
	jnz	_103
	add	[ebp-88],1
	sub	esp,32
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-88]
	imul	esi,[_vdd_fontheight]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+24],1
	mov	[esp+28],1
	mov	edi,[_vdd_cursory]
	mov	[esp+20],edi
	mov	esi,[_vdd_cursorx]
	mov	[esp+16],esi
	mov	edi,[_vdd_fontheight]
	mov	[esp+12],edi
	mov	esi,[ebp-36]
	sub	esi,[ebp-60]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_frectsoverlap
	and	eax,eax
	jz	_104
	sub	esp,12
	mov	eax,[ebp-92]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	mov	ebx,_106
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_105
	sub	esp,32
	mov	[esp+24],1
	mov	[esp+28],1
	mov	esi,[_vdd_cursory]
	mov	[esp+20],esi
	mov	ebx,[_vdd_cursorx]
	mov	[esp+16],ebx
	mov	esi,[ebp-40]
	imul	esi,[_vdd_fontheight]
	sub	esi,1
	mov	[esp+12],esi
	mov	ebx,[ebp-36]
	sub	ebx,[ebp-60]
	mov	[esp+8],ebx
	mov	esi,[ebp-20]
	add	esi,[_vdd_fontheight]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_frectsoverlap
	and	eax,eax
	jz	_107
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],128
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-88]
	imul	esi,[_vdd_fontheight]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[_vdd_fontheight]
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	edi,[ebp-36]
	sub	edi,[ebp-60]
	sub	edi,2
	mov	[esp+8],edi
	mov	eax,[ebp-16]
	add	eax,1
	mov	[esp],eax
	call	_frect
	cmp	[_vdd_mousehold],0
	jnz	_108
	mov	ebx,[ebp+24]
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	cmp	eax,0
	setz	al
	movzx	eax,al
	and	ebx,eax
	and	ebx,ebx
	jz	_109
	jmp	_111
_110
_111
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jnz	_110
_13
	mov	[ebp+24],0
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	mov	ebx,[ebp-92]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	mov	ebx,[ebp-92]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp-20]
	add	ebx,[_vdd_fontheight]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	jmp	_12
_109
_108
	sub	esp,12
	mov	ebx,[ebp-72]
	mov	[esp+4],ebx
	mov	esi,[ebp-72]
	mov	[esp+8],esi
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fcolor
_107
_105
	jmp	_112
_104
	sub	esp,12
	mov	ebx,[ebp-52]
	mov	[esp+4],ebx
	mov	esi,[ebp-56]
	mov	[esp+8],esi
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fcolor
_112
	sub	esp,12
	mov	eax,[ebp-92]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	mov	ebx,_114
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_113
	sub	esp,12
	mov	[esp+4],192
	mov	[esp+8],192
	mov	[esp],192
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-88]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1056964608
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[_vdd_fontheight]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	ebx,[ebp-88]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	edi,1056964608
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	mov	edi,[_vdd_fontheight]
	push	edi
	fild	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-12]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fistp	[esp]
	pop	edi
	mov	[esp+12],edi
	mov	ebx,[ebp-16]
	add	ebx,[ebp-36]
	sub	ebx,[ebp-60]
	sub	ebx,5
	mov	[esp+8],ebx
	mov	eax,[ebp-16]
	add	eax,4
	mov	[esp],eax
	call	_fline
	jmp	_115
_113
	sub	esp,16
	mov	eax,_116
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-140],eax
	sub	esp,4
	mov	ebx,[ebp-92]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	mov	[ebp-104],ebx
	cmp	[ebp-104],0
	jle	_117
	sub	esp,20
	mov	[esp+4],1
	mov	esi,[ebp-104]
	sub	esi,1
	mov	[esp+8],esi
	sub	esp,4
	mov	eax,[ebp-92]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-108]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,20
	mov	ebx,[ebp-104]
	add	ebx,2
	mov	[esp+4],ebx
	mov	[esp+8],-1
	sub	esp,4
	mov	eax,[ebp-92]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_118
_117
	sub	esp,8
	lea	eax,[ebp-108]
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	mov	ebx,[ebp-92]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrStore
_118
	sub	esp,20
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-88]
	imul	esi,[_vdd_fontheight]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	lea	eax,[ebp-108]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	eax,[ebp-16]
	add	eax,4
	mov	[esp],eax
	call	_ftext
	cmp	[ebp-104],0
	jle	_119
	sub	esp,20
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-88]
	imul	esi,[_vdd_fontheight]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	lea	eax,[ebp-112]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	eax,[ebp-16]
	add	eax,[ebp-36]
	sub	eax,[ebp-60]
	mov	[ebp-140],eax
	sub	esp,4
	mov	[ebp-144],eax
	sub	esp,4
	lea	esi,[ebp-112]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-144]
	mov	[esp],esi
	mov	eax,esi
	call	_fstringwidth
	mov	esi,eax
	mov	eax,[ebp-140]
	sub	eax,esi
	sub	eax,4
	mov	[esp],eax
	call	_ftext
_119
_115
_103
	sub	esp,4
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_102
_12
	sub	esp,16
	call	_fgraphicswidth
	mov	[esp+8],eax
	mov	[ebp-140],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+12],ebx
	mov	[esp+4],0
	mov	[esp],0
	call	_fviewport
	mov	ebx,[ebp-40]
	cmp	[ebp-88],ebx
	jle	_120
	call	_fmousezspeed
	mov	[ebp-116],eax
	call	_fmousez
	mov	[ebp-120],eax
	cmp	[ebp-116],-1
	setl	al
	movzx	eax,al
	mov	[ebp-140],eax
	cmp	[ebp-116],1
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-140]
	or	eax,ebx
	mov	[ebp-140],eax
	cmp	[ebp-120],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-140]
	and	ebx,eax
	and	ebx,ebx
	jz	_121
	mov	[ebp-116],0
_121
	sub	esp,12
	mov	ebx,[ebp-72]
	mov	[esp+4],ebx
	mov	esi,[ebp-72]
	mov	[esp+8],esi
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-40]
	imul	ebx,[_vdd_fontheight]
	add	ebx,3
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-60]
	add	esi,1
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	add	ebx,[_vdd_fontheight]
	sub	ebx,2
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	add	eax,[ebp-36]
	sub	eax,[ebp-60]
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	ebx,[ebp-76]
	mov	[esp+4],ebx
	mov	esi,[ebp-76]
	mov	[esp+8],esi
	mov	eax,[ebp-76]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-40]
	imul	ebx,[_vdd_fontheight]
	add	ebx,3
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-60]
	add	esi,1
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	add	ebx,[_vdd_fontheight]
	sub	ebx,2
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	add	eax,[ebp-36]
	sub	eax,[ebp-60]
	mov	[esp],eax
	call	_frect
	sub	esp,16
	mov	ebx,[ebp-16]
	add	ebx,[ebp-36]
	mov	[esp+8],ebx
	mov	esi,[ebp-40]
	add	esi,1
	imul	esi,[_vdd_fontheight]
	add	esi,[ebp-20]
	add	esi,1
	mov	[esp+12],esi
	mov	esi,[ebp-40]
	add	esi,1
	imul	esi,[_vdd_fontheight]
	add	esi,[ebp-20]
	add	esi,1
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	add	eax,[ebp-36]
	sub	eax,[ebp-60]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-16]
	add	ebx,[ebp-36]
	add	ebx,1
	mov	[esp+8],ebx
	mov	esi,[ebp-40]
	add	esi,1
	imul	esi,[_vdd_fontheight]
	add	esi,[ebp-20]
	add	esi,1
	mov	[esp+12],esi
	mov	esi,[ebp-20]
	add	esi,[_vdd_fontheight]
	sub	esi,1
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	add	eax,[ebp-36]
	add	eax,1
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	[esp+4],192
	mov	[esp+8],192
	mov	[esp],192
	call	_fcolor
	sub	esp,20
	mov	ebx,[_vdd_fontheight]
	sub	ebx,1
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-60]
	sub	esi,3
	mov	[esp+8],esi
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	add	eax,[ebp-36]
	sub	eax,[ebp-60]
	add	eax,2
	mov	[esp],eax
	call	_frect
	mov	ebx,[ebp+24]
	and	ebx,ebx
	jz	_122
	sub	esp,32
	mov	[esp+24],1
	mov	[esp+28],1
	mov	esi,[_vdd_cursory]
	mov	[esp+20],esi
	mov	ebx,[_vdd_cursorx]
	mov	[esp+16],ebx
	mov	esi,[ebp-40]
	imul	esi,[_vdd_fontheight]
	mov	[esp+12],esi
	mov	ebx,[ebp-60]
	mov	[esp+8],ebx
	mov	esi,[ebp-20]
	add	esi,[_vdd_fontheight]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	add	eax,[ebp-36]
	sub	eax,[ebp-60]
	mov	[esp],eax
	call	_frectsoverlap
	and	eax,eax
	jz	_123
	mov	[_vdd_mousehold],1
_123
_122
	cmp	[_vdd_mousehold],1
	jnz	_124
	call	_fmousey
	sub	eax,[ebp-124]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
_124
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-116]
	shl	esi,byte 3
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp-40]
	imul	ebx,[_vdd_fontheight]
	add	ebx,[ebp-20]
	sub	ebx,[ebp-20]
	sub	ebx,[_vdd_fontheight]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-128],ebx
	mov	ebx,[ebp-88]
	sub	ebx,[ebp-40]
	imul	ebx,[_vdd_fontheight]
	mov	[ebp-132],ebx
	cmp	[ebp-80],-1
	jz	_125
	mov	ebx,[ebp-20]
	sub	ebx,[ebp-80]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-128]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-132]
	push	edi
	fild	[esp]
	pop	edi
	fdivp	st(1)
	fmulp	st(1)
	mov	esi,[_vdd_fontheight]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-136],ebx
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-136]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
_125
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-20]
	add	ebx,[_vdd_fontheight]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_126
	mov	ebx,[ebp-20]
	add	ebx,[_vdd_fontheight]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
_126
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-40]
	imul	ebx,[_vdd_fontheight]
	add	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_127
	mov	ebx,[ebp-40]
	imul	ebx,[_vdd_fontheight]
	add	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
_127
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[_vdd_fontheight]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-136],ebx
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-136]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-132]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-128]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-12],esi
_120
	mov	ebx,[ebp-8]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	mov	[ebp-140],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	[ebp-140],eax
	sub	esp,4
	mov	ebx,[ebp-108]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[ebp-140],eax
	sub	esp,4
	mov	esi,[ebp-112]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-140]
	mov	[ebp-140],eax
	sub	esp,4
	mov	esi,[ebp-100]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-140]
	mov	[ebp-140],eax
	sub	esp,4
	mov	ebx,[ebp-92]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[ebp-140],eax
	sub	esp,4
	mov	esi,[ebp-84]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-140]
	mov	[ebp-140],eax
	sub	esp,4
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-140]
	mov	[ebp-140],eax
	sub	esp,4
	mov	esi,[ebp-24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-140]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdd_drawdropdowns
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	jmp	_129
_128
_129
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],2
	mov	eax,ebx
	call	_fmousedown
	mov	ebx,eax
	mov	eax,[ebp-16]
	or	eax,ebx
	and	eax,eax
	jnz	_128
_15
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vdd_screengfx]
	mov	[esp],eax
	call	_fgrabimage
_130
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vdd_screengfx]
	mov	[esp],eax
	call	_fdrawblock
	call	_fmousex
	mov	[_vdd_cursorx],eax
	call	_fmousey
	mov	[_vdd_cursory],eax
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],2
	mov	eax,ebx
	call	_fmousedown
	mov	ebx,eax
	mov	eax,[ebp-16]
	or	eax,ebx
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_131
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],_tdd_dropdown
	call	__bbObjEachFirst
	and	eax,eax
	jz	_17
_132
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fdd_drawdropdown
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_132
_17
	sub	esp,12
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_134
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-16],eax
	mov	[ebp-20],eax
	sub	esp,8
	mov	[ebp-24],eax
	sub	esp,4
	lea	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp],ebx
	mov	[ebp-24],eax
	sub	esp,4
	mov	esi,_135
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-24]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrCompare
	mov	ebx,eax
	mov	eax,[ebp-20]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	and	eax,ebx
	mov	ebx,[ebp-4]
	mov	[ebp-16],eax
	cmp	[_vdd_mousehold],0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-16]
	and	ebx,esi
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],1
	mov	eax,esi
	call	_fkeydown
	mov	esi,eax
	mov	eax,[ebp-16]
	or	ebx,esi
	or	ebx,eax
	and	ebx,ebx
	jz	_133
	jmp	_137
_136
_137
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],2
	mov	eax,ebx
	call	_fmousedown
	mov	ebx,eax
	mov	eax,[ebp-16]
	or	eax,ebx
	and	eax,eax
	jnz	_136
_18
	call	_fflushmouse
	call	_fflushkeys
	call	_fdd_deletedropdowns
_133
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	[esp],5
	call	_fdelay
	sub	esp,12
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_138
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_130
_16
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vdd_screengfx]
	mov	[esp],eax
	call	_fdrawblock
	sub	esp,12
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_140
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_139
	sub	esp,4
	mov	eax,_141
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
	jmp	_142
_139
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_14_leave
_142
	sub	esp,4
	mov	eax,_143
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
_14_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdd_deletedropdowns
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tdd_dropdown
	call	__bbObjEachFirst
	and	eax,eax
	jz	_20
_144
	sub	esp,4
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdd_deletelist
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	mov	eax,1
	jmp	_19_leave
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_144
_20
	mov	eax,0
	jmp	_19_leave
	mov	eax,0
	jmp	_19_leave
_19_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdd_getdropdownname
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tdd_dropdown
	call	__bbObjEachFirst
	and	eax,eax
	jz	_22
_145
	sub	esp,4
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_21_leave
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_145
_22
	sub	esp,4
	mov	eax,_146
	mov	[esp],eax
	call	__bbStrConst
	jmp	_21_leave
	sub	esp,4
	mov	eax,_147
	mov	[esp],eax
	call	__bbStrConst
	jmp	_21_leave
_21_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdd_getdropdownvalue
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tdd_dropdown
	call	__bbObjEachFirst
	and	eax,eax
	jz	_24
_148
	sub	esp,4
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_23_leave
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_148
_24
	sub	esp,4
	mov	eax,_149
	mov	[esp],eax
	call	__bbStrConst
	jmp	_23_leave
	sub	esp,4
	mov	eax,_150
	mov	[esp],eax
	call	__bbStrConst
	jmp	_23_leave
_23_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdd_addtolist
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tdd_list
	call	__bbObjEachFirst
	and	eax,eax
	jz	_26
_151
	sub	esp,12
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-16],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,[ebp+20]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	and	ebx,eax
	and	ebx,ebx
	jz	_152
	mov	eax,0
	jmp	_25_leave
_152
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_151
_26
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_tdd_list
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fdd_filterstring
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tdd_list
	call	__bbObjEachFirst
	and	eax,eax
	jz	_27
_153
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[ebp-12],ebx
	cmp	[ebp-12],1
	jz	_155
	cmp	[ebp-12],2
	jz	_156
	jmp	_154
_155
	sub	esp,16
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flower
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flower
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jge	_157
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	__bbObjInsBefore
	jmp	_27
_157
	jmp	_154
_156
	sub	esp,16
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flower
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flower
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jge	_158
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	__bbObjInsBefore
	jmp	_27
_158
	jmp	_154
_154
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_153
_27
	mov	eax,[ebp-8]
	jmp	_25_leave
	mov	eax,0
	jmp	_25_leave
_25_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	sub	esp,4
	mov	esi,[ebp+28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fdd_deletelist
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tdd_list
	call	__bbObjEachFirst
	and	eax,eax
	jz	_30
_159
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,[ebp+20]
	jnz	_160
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
_160
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_159
_30
	mov	eax,0
	jmp	_29_leave
_29_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fdd_filterstring
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	mov	[ebp-4],1
	jmp	_162
_161
	add	[ebp-4],1
_162
	sub	esp,20
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_163
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_161
_32
	sub	esp,12
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],-1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	jmp	_31_leave
	sub	esp,4
	mov	eax,_164
	mov	[esp],eax
	call	__bbStrConst
	jmp	_31_leave
_31_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	4
_vdd_cursorx	.dd	0
	.align	4
_vdd_cursory	.dd	0
	.align	4
_vdd_listlast	.dd	0
	.align	4
_vdd_fontheight	.dd	0
	.align	4
_vdd_mousehold	.dd	0
	.align	4
_vdd_screengfx	.dd	0
_33	.db	"Courier New",0
_34	.db	"Arial",0
_35	.db	"Arial",0
_38	.db	"Click box to open dropdown #1",0
_39	.db	"Click box to open dropdown #2",0
_40	.db	"Click box to open dropdown #3",0
_43	.db	"cut",0
_44	.db	"Cut\t(Ctrl+X)",0
_45	.db	"copy",0
_46	.db	"Copy\t(Ctrl+C)",0
_47	.db	"paste",0
_48	.db	"Paste\t(Ctrl+V)",0
_49	.db	"",0
_50	.db	"\s",0
_51	.db	"edit",0
_52	.db	"Edit\t(Ctrl+E)",0
_56	.db	"Item #",0
_58	.db	"D",0
_59	.db	"1 Daisy",0
_60	.db	"B",0
_61	.db	"2 Bert",0
_62	.db	"C",0
_63	.db	"3 Charlotte",0
_64	.db	"A",0
_65	.db	"4 Artie",0
_66	.db	"E",0
_67	.db	"5 Edward",0
_69	.db	"",0
_70	.db	"The selected ID is '",0
_71	.db	"' from dropdown #",0
	.align	4
_tdd_list	.dd	5
_72	.dd	0
	.dd	_72
	.dd	_72
	.dd	0
	.dd	-1
_73	.dd	0
	.dd	_73
	.dd	_73
	.dd	0
	.dd	-1
	.dd	5
	.dd	__bbIntType
	.dd	__bbStrType
	.dd	__bbStrType
	.dd	__bbStrType
	.dd	__bbIntType
	.align	4
_tdd_dropdown	.dd	5
_74	.dd	0
	.dd	_74
	.dd	_74
	.dd	0
	.dd	-1
_75	.dd	0
	.dd	_75
	.dd	_75
	.dd	0
	.dd	-1
	.dd	10
	.dd	__bbIntType
	.dd	__bbStrType
	.dd	__bbStrType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	__bbIntType
_84	.db	"",0
_85	.db	"",0
_86	.db	"",0
_92	.db	"a",0
_93	.db	"z",0
_97	.db	"a",0
_98	.db	"z",0
_106	.db	"\s",0
_114	.db	"\s",0
_116	.db	"\t",0
_131	.db	"~",0
_134	.db	"",0
_135	.db	"~",0
_138	.db	"",0
_140	.db	"~",0
_141	.db	"",0
_143	.db	"",0
_146	.db	"",0
_147	.db	"",0
_149	.db	"",0
_150	.db	"",0
_163	.db	"!",0
_164	.db	"",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

