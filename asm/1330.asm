
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,80
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],200
	mov	[esp],300
	call	_fgraphics
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	call	_fhidepointer
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],2
	mov	[esp+8],15
	mov	[esp+4],22
	sub	esp,4
	mov	eax,_4
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadanimimage
	mov	[ebp-4],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],2
	mov	[esp+8],15
	mov	[esp+4],22
	sub	esp,4
	mov	eax,_5
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadanimimage
	mov	[ebp-8],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],2
	mov	[esp+8],15
	mov	[esp+4],22
	sub	esp,4
	mov	eax,_6
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadanimimage
	mov	[ebp-12],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],2
	mov	[esp+8],15
	mov	[esp+4],22
	sub	esp,4
	mov	eax,_7
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadanimimage
	mov	[ebp-16],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],2
	mov	[esp+8],15
	mov	[esp+4],22
	sub	esp,4
	mov	eax,_8
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadanimimage
	mov	[ebp-20],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],2
	mov	[esp+8],15
	mov	[esp+4],22
	sub	esp,4
	mov	eax,_9
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadanimimage
	mov	[ebp-24],eax
	sub	esp,8
	mov	eax,_10
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-28],eax
	sub	esp,8
	mov	eax,_11
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-32],eax
	sub	esp,8
	mov	eax,_12
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-36],eax
	sub	esp,12
	mov	[esp+4],10
	mov	[esp+8],1
	mov	[esp],10
	call	_fcreateimage
	mov	[ebp-40],eax
	sub	esp,12
	mov	eax,[ebp-40]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],100
	mov	[esp+8],100
	mov	[esp],100
	call	_fcolor
	sub	esp,20
	mov	[esp+12],10
	mov	[esp+16],1
	mov	[esp+8],10
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],10
	mov	[esp+16],0
	mov	[esp+8],10
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],255
	call	_frand
	mov	[ebp-44],eax
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],255
	call	_frand
	mov	[ebp-48],eax
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],255
	call	_frand
	mov	[ebp-52],eax
	jmp	_14
_13
	sub	esp,4
	mov	[esp],19
	call	_fkeyhit
	and	eax,eax
	jz	_15
	mov	[ebp-44],0
	mov	[ebp-48],0
	mov	[ebp-52],0
_15
	cmp	[ebp-44],0
	jge	_16
	mov	[ebp-44],0
_16
	cmp	[ebp-44],255
	jle	_17
	mov	[ebp-44],255
_17
	cmp	[ebp-48],0
	jge	_18
	mov	[ebp-48],0
_18
	cmp	[ebp-48],255
	jle	_19
	mov	[ebp-48],255
_19
	cmp	[ebp-52],0
	jge	_20
	mov	[ebp-52],0
_20
	cmp	[ebp-52],255
	jle	_21
	mov	[ebp-52],255
_21
	call	_fcls
	sub	esp,12
	mov	ebx,[ebp-48]
	mov	[esp+4],ebx
	mov	esi,[ebp-52]
	mov	[esp+8],esi
	mov	eax,[ebp-44]
	mov	[esp],eax
	call	_fclscolor
	sub	esp,12
	mov	ebx,255
	sub	ebx,[ebp-48]
	mov	[esp+4],ebx
	mov	esi,255
	sub	esi,[ebp-52]
	mov	[esp+8],esi
	mov	eax,255
	sub	eax,[ebp-44]
	mov	[esp],eax
	call	_fcolor
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_flocate
	sub	esp,8
	mov	eax,[ebp-44]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,[ebp-52]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	call	_fprint
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_22
	sub	esp,32
	mov	[esp+24],0
	mov	esi,[ebp-56]
	mov	[esp+28],esi
	mov	[esp+20],25
	mov	ebx,[ebp-4]
	mov	[esp+16],ebx
	mov	[esp+12],0
	call	_fmousey
	mov	[esp+8],eax
	mov	[ebp-80],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fimagescollide
	and	eax,eax
	jz	_23
	mov	[ebp-56],1
	add	[ebp-44],1
	mov	[ebp-60],0
	mov	[ebp-64],0
	mov	[ebp-68],0
	mov	[ebp-72],0
	mov	[ebp-76],0
	jmp	_24
_23
	sub	esp,32
	mov	[esp+24],30
	mov	esi,[ebp-60]
	mov	[esp+28],esi
	mov	[esp+20],25
	mov	ebx,[ebp-16]
	mov	[esp+16],ebx
	mov	[esp+12],0
	call	_fmousey
	mov	[esp+8],eax
	mov	[ebp-80],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fimagescollide
	and	eax,eax
	jz	_25
	mov	[ebp-60],1
	sub	[ebp-44],1
	mov	[ebp-56],0
	mov	[ebp-64],0
	mov	[ebp-68],0
	mov	[ebp-72],0
	mov	[ebp-76],0
	jmp	_26
_25
	sub	esp,32
	mov	[esp+24],0
	mov	esi,[ebp-64]
	mov	[esp+28],esi
	mov	[esp+20],48
	mov	ebx,[ebp-8]
	mov	[esp+16],ebx
	mov	[esp+12],0
	call	_fmousey
	mov	[esp+8],eax
	mov	[ebp-80],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fimagescollide
	and	eax,eax
	jz	_27
	mov	[ebp-64],1
	add	[ebp-48],1
	mov	[ebp-56],0
	mov	[ebp-60],0
	mov	[ebp-68],0
	mov	[ebp-72],0
	mov	[ebp-76],0
	jmp	_28
_27
	sub	esp,32
	mov	[esp+24],30
	mov	esi,[ebp-68]
	mov	[esp+28],esi
	mov	[esp+20],48
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	[esp+12],0
	call	_fmousey
	mov	[esp+8],eax
	mov	[ebp-80],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fimagescollide
	and	eax,eax
	jz	_29
	mov	[ebp-68],1
	sub	[ebp-48],1
	mov	[ebp-56],0
	mov	[ebp-60],0
	mov	[ebp-64],0
	mov	[ebp-72],0
	mov	[ebp-76],0
	jmp	_30
_29
	sub	esp,32
	mov	[esp+24],0
	mov	esi,[ebp-72]
	mov	[esp+28],esi
	mov	[esp+20],71
	mov	ebx,[ebp-12]
	mov	[esp+16],ebx
	mov	[esp+12],0
	call	_fmousey
	mov	[esp+8],eax
	mov	[ebp-80],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fimagescollide
	and	eax,eax
	jz	_31
	mov	[ebp-72],1
	add	[ebp-52],1
	mov	[ebp-56],0
	mov	[ebp-60],0
	mov	[ebp-64],0
	mov	[ebp-68],0
	mov	[ebp-76],0
	jmp	_32
_31
	sub	esp,32
	mov	[esp+24],30
	mov	esi,[ebp-76]
	mov	[esp+28],esi
	mov	[esp+20],71
	mov	ebx,[ebp-24]
	mov	[esp+16],ebx
	mov	[esp+12],0
	call	_fmousey
	mov	[esp+8],eax
	mov	[ebp-80],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fimagescollide
	and	eax,eax
	jz	_33
	mov	[ebp-76],1
	sub	[ebp-52],1
	mov	[ebp-56],0
	mov	[ebp-60],0
	mov	[ebp-64],0
	mov	[ebp-68],0
	mov	[ebp-72],0
_33
_32
_30
_28
_26
_24
	jmp	_34
_22
	mov	[ebp-56],0
	mov	[ebp-60],0
	mov	[ebp-64],0
	mov	[ebp-68],0
	mov	[ebp-72],0
	mov	[ebp-76],0
_34
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp-56]
	mov	[esp+12],esi
	mov	[esp+4],25
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,16
	mov	[esp+8],15
	mov	[esp+12],0
	mov	[esp+4],25
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,16
	mov	[esp+8],30
	mov	esi,[ebp-60]
	mov	[esp+12],esi
	mov	[esp+4],25
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp-64]
	mov	[esp+12],esi
	mov	[esp+4],48
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,16
	mov	[esp+8],15
	mov	[esp+12],0
	mov	[esp+4],48
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,16
	mov	[esp+8],30
	mov	esi,[ebp-68]
	mov	[esp+12],esi
	mov	[esp+4],48
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp-72]
	mov	[esp+12],esi
	mov	[esp+4],71
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,16
	mov	[esp+8],15
	mov	[esp+12],0
	mov	[esp+4],71
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,16
	mov	[esp+8],30
	mov	esi,[ebp-76]
	mov	[esp+12],esi
	mov	[esp+4],71
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,16
	call	_fmousey
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-80],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,4
	mov	[esp],1
	call	_fflip
_14
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_13
_3
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
_4	.db	"up.bmp",0
_5	.db	"up.bmp",0
_6	.db	"up.bmp",0
_7	.db	"Down.bmp",0
_8	.db	"Down.bmp",0
_9	.db	"Down.bmp",0
_10	.db	"red.bmp",0
_11	.db	"green.bmp",0
_12	.db	"blue.bmp",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

