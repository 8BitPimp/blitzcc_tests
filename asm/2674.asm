
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[_vmaxvars],2000
	mov	[_vmaxstringvars],2000
	mov	[_vmaxfloatvars],2000
	sub	esp,4
	mov	eax,_avarname
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxvars]
	mov	esi,_avarname
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_avarname
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_avarvalue
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxvars]
	mov	esi,_avarvalue
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_avarvalue
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_astringvarname
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxvars]
	mov	esi,_astringvarname
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_astringvarname
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_astringvarvalue
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxvars]
	mov	esi,_astringvarvalue
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_astringvarvalue
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_afloatvarname
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxvars]
	mov	esi,_afloatvarname
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_afloatvarname
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_afloatvarvalue
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxvars]
	mov	esi,_afloatvarvalue
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_afloatvarvalue
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aop
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,15
	mov	esi,_aop
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aop
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	mov	eax,1
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_47
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,2
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_48
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,3
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_49
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_50
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,5
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_51
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,6
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_52
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,7
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_53
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_54
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,9
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_55
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,10
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_56
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,11
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_57
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_58
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,13
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_59
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,14
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_60
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,15
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_61
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-4],1
	jmp	_62
_63
	sub	esp,20
	mov	eax,_vparseseps
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp],_vparseseps
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-4],1
_62
	cmp	[ebp-4],15
	jle	_63
_3
	sub	esp,4
	mov	eax,_ares
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,11
	mov	esi,_ares
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ares
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	mov	eax,1
	shl	eax,byte 2
	add	eax,[_ares]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_64
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,2
	shl	eax,byte 2
	add	eax,[_ares]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_65
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,3
	shl	eax,byte 2
	add	eax,[_ares]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_66
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	shl	eax,byte 2
	add	eax,[_ares]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_67
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,5
	shl	eax,byte 2
	add	eax,[_ares]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_68
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,6
	shl	eax,byte 2
	add	eax,[_ares]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_69
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,7
	shl	eax,byte 2
	add	eax,[_ares]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_70
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	shl	eax,byte 2
	add	eax,[_ares]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_71
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,9
	shl	eax,byte 2
	add	eax,[_ares]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_72
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,10
	shl	eax,byte 2
	add	eax,[_ares]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_73
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,11
	shl	eax,byte 2
	add	eax,[_ares]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_74
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	[esp],_vspec_quote
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	mov	eax,_aers
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,8
	mov	esi,_aers
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aers
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	mov	eax,1
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_75
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,2
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_76
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,3
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_77
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_78
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,5
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_79
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,28
	mov	eax,_80
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_81
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,6
	shl	ebx,byte 2
	add	ebx,[_aers]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,7
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_82
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_83
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	mov	eax,_84
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_85
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	_fsetvar
	sub	esp,12
	mov	eax,_86
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_87
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	_fsetvar
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	[esp+4],300
	mov	[esp],800
	call	_fgraphics
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,8
	mov	eax,_88
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,48
	mov	eax,_89
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_90
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fgetvar
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_91
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_92
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fgetvar
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_93
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_94
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
_l_2restart
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_95
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finput
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_97
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_96
	call	_fend
_96
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	lea	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalculate
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	mov	eax,_vcalcerror
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_99
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_98
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,8
	mov	eax,_vcalcerror
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fprint
	jmp	_100
_98
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],100
	call	_fcolor
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fprint
_100
	sub	esp,8
	mov	eax,_101
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	jmp	_l_2restart
	ret
_2_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fgetvar
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flower
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_103
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_102
	mov	[ebp-4],1
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-12]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_102
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_105
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_104
	mov	[ebp-4],2
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-12]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_104
	cmp	[ebp-4],0
	jnz	_106
	mov	[ebp-8],1
	jmp	_107
_108
	sub	esp,12
	mov	eax,[ebp-8]
	shl	eax,byte 2
	add	eax,[_avarname]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_109
	sub	esp,4
	mov	eax,[ebp-8]
	shl	eax,byte 2
	add	eax,[_avarvalue]
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbStrFromInt
	jmp	_4_leave
_109
	add	[ebp-8],1
_107
	mov	ebx,[_vvars]
	cmp	[ebp-8],ebx
	jle	_108
_5
_106
	cmp	[ebp-4],0
	setz	al
	movzx	eax,al
	mov	[ebp-12],eax
	cmp	[ebp-4],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	or	eax,ebx
	and	eax,eax
	jz	_110
	mov	[ebp-8],1
	jmp	_111
_112
	sub	esp,12
	mov	eax,[ebp-8]
	shl	eax,byte 2
	add	eax,[_afloatvarname]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_113
	sub	esp,4
	mov	eax,[ebp-8]
	shl	eax,byte 2
	add	eax,[_afloatvarvalue]
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbStrFromFloat
	jmp	_4_leave
_113
	add	[ebp-8],1
_111
	mov	ebx,[_vfloatvars]
	cmp	[ebp-8],ebx
	jle	_112
_6
_110
	cmp	[ebp-4],0
	setz	al
	movzx	eax,al
	mov	[ebp-12],eax
	cmp	[ebp-4],2
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	or	eax,ebx
	and	eax,eax
	jz	_114
	mov	[ebp-8],1
	jmp	_115
_116
	sub	esp,12
	mov	eax,[ebp-8]
	shl	eax,byte 2
	add	eax,[_astringvarname]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_117
	sub	esp,4
	mov	eax,[ebp-8]
	shl	eax,byte 2
	add	eax,[_astringvarvalue]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_4_leave
_117
	add	[ebp-8],1
_115
	mov	ebx,[_vstringvars]
	cmp	[ebp-8],ebx
	jle	_116
_7
_114
	cmp	[ebp-4],0
	jnz	_118
	sub	esp,4
	mov	eax,_119
	mov	[esp],eax
	call	__bbStrConst
	jmp	_4_leave
_118
	cmp	[ebp-4],1
	jnz	_120
	sub	esp,4
	mov	eax,_121
	mov	[esp],eax
	call	__bbStrConst
	jmp	_4_leave
_120
	cmp	[ebp-4],2
	jnz	_122
	sub	esp,4
	mov	eax,_123
	mov	[esp],eax
	call	__bbStrConst
	jmp	_4_leave
_122
	sub	esp,4
	mov	eax,_124
	mov	[esp],eax
	call	__bbStrConst
	jmp	_4_leave
_4_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsetvar
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flower
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_126
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_125
	mov	[ebp-4],1
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-16]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_125
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_128
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_127
	mov	[ebp-4],2
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-16]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_127
	cmp	[ebp-4],0
	jnz	_129
	mov	[ebp-8],1
	jmp	_130
_131
	sub	esp,12
	mov	eax,[ebp-8]
	shl	eax,byte 2
	add	eax,[_avarname]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_132
	sub	esp,12
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fcalculate
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_avarvalue]
	mov	[ebx],eax
	mov	eax,0
	jmp	_8_leave
_132
	add	[ebp-8],1
_130
	mov	ebx,[_vvars]
	cmp	[ebp-8],ebx
	jle	_131
_9
_129
	cmp	[ebp-4],0
	setz	al
	movzx	eax,al
	mov	[ebp-16],eax
	cmp	[ebp-4],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	or	eax,ebx
	and	eax,eax
	jz	_133
	mov	[ebp-8],1
	jmp	_134
_135
	sub	esp,12
	mov	eax,[ebp-8]
	shl	eax,byte 2
	add	eax,[_afloatvarname]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_136
	sub	esp,12
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fcalculate
	mov	[esp],eax
	call	__bbStrToFloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_afloatvarvalue]
	mov	[ebx],eax
	mov	eax,0
	jmp	_8_leave
_136
	add	[ebp-8],1
_134
	mov	ebx,[_vfloatvars]
	cmp	[ebp-8],ebx
	jle	_135
_10
_133
	cmp	[ebp-4],0
	setz	al
	movzx	eax,al
	mov	[ebp-16],eax
	cmp	[ebp-4],2
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	or	eax,ebx
	and	eax,eax
	jz	_137
	mov	[ebp-8],1
	jmp	_138
_139
	sub	esp,12
	mov	eax,[ebp-8]
	shl	eax,byte 2
	add	eax,[_astringvarname]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_140
	sub	esp,8
	mov	eax,[ebp-8]
	shl	eax,byte 2
	add	eax,[_astringvarvalue]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	eax,0
	jmp	_8_leave
_140
	add	[ebp-8],1
_138
	mov	ebx,[_vstringvars]
	cmp	[ebp-8],ebx
	jle	_139
_11
_137
	cmp	[ebp-4],0
	jnz	_141
	mov	ebx,[_vmaxvars]
	cmp	[_vvars],ebx
	jnz	_142
	sub	esp,8
	mov	eax,_143
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_142
	add	[_vvars],1
	sub	esp,8
	mov	eax,[_vvars]
	shl	eax,byte 2
	add	eax,[_avarname]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fcalculate
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[_vvars]
	shl	ebx,byte 2
	add	ebx,[_avarvalue]
	mov	[ebx],eax
	mov	eax,0
	jmp	_8_leave
_141
	cmp	[ebp-4],1
	jnz	_144
	mov	ebx,[_vmaxfloatvars]
	cmp	[_vfloatvars],ebx
	jnz	_145
	sub	esp,8
	mov	eax,_146
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_145
	add	[_vfloatvars],1
	sub	esp,8
	mov	eax,[_vfloatvars]
	shl	eax,byte 2
	add	eax,[_afloatvarname]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fcalculate
	mov	[esp],eax
	call	__bbStrToFloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[_vfloatvars]
	shl	ebx,byte 2
	add	ebx,[_afloatvarvalue]
	mov	[ebx],eax
	mov	eax,0
	jmp	_8_leave
_144
	cmp	[ebp-4],2
	jnz	_147
	mov	ebx,[_vmaxstringvars]
	cmp	[_vstringvars],ebx
	jnz	_148
	sub	esp,8
	mov	eax,_149
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_148
	sub	esp,16
	mov	[esp],34
	call	_fchr
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	mov	[ebp-12],ebx
	add	[_vstringvars],1
	sub	esp,8
	mov	eax,[_vstringvars]
	shl	eax,byte 2
	add	eax,[_astringvarname]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,[ebp-12]
	and	ebx,ebx
	jz	_150
	sub	esp,8
	mov	eax,[_vstringvars]
	shl	eax,byte 2
	add	eax,[_astringvarvalue]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalculate
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
_150
	cmp	[ebp-12],0
	jnz	_151
	sub	esp,32
	mov	[esp],34
	call	_fchr
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fcalculate
	mov	[esp+4],eax
	mov	ebx,[_vstringvars]
	shl	ebx,byte 2
	add	ebx,[_astringvarvalue]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_151
	mov	eax,0
	jmp	_8_leave
_147
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	sub	esp,4
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fcalculate
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,16
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_ftrim
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_153
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_152
	sub	esp,4
	mov	eax,_154
	mov	[esp],eax
	call	__bbStrConst
	jmp	_12_leave
_152
	sub	esp,8
	mov	[esp],_vcalcerror
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_155
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_ffiltersum
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-4],1
	mov	[ebp-8],0
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_156
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-16],0
	mov	[ebp-20],1
_157
	sub	esp,20
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	cmp	[ebp-16],0
	jnz	_158
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_159
	mov	[ebp-16],1
	add	[ebp-4],1
	jmp	_160
_159
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_162
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_161
	add	[ebp-8],1
	mov	ebx,[ebp-4]
	mov	[ebp-20],ebx
	add	[ebp-4],1
	jmp	_163
_161
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_165
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_164
	cmp	[ebp-8],0
	jnz	_166
	sub	esp,8
	mov	eax,1
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_167
	mov	[esp],eax
	call	__bbStrConst
	jmp	_12_leave
	jmp	_168
_166
	mov	ebx,[ebp-20]
	add	ebx,1
	cmp	[ebp-4],ebx
	jnz	_169
	sub	esp,8
	mov	eax,2
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_170
	mov	[esp],eax
	call	__bbStrConst
	jmp	_12_leave
	jmp	_171
_169
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	ebx,[ebp-20]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,20
	mov	ebx,[ebp-20]
	add	ebx,1
	mov	[esp+4],ebx
	mov	esi,[ebp-4]
	sub	esi,[ebp-20]
	sub	esi,1
	mov	[esp+8],esi
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-36]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fright
	mov	[esp+4],eax
	lea	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,28
	lea	eax,[ebp-24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalculatesub
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	[ebp-4],1
	sub	[ebp-8],2
	mov	[ebp-20],1
_171
_168
	jmp	_172
_164
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jle	_173
	cmp	[ebp-8],0
	jle	_174
	sub	esp,8
	mov	eax,5
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_175
	mov	[esp],eax
	call	__bbStrConst
	jmp	_12_leave
	jmp	_176
_174
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	eax,2
	jle	_177
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalculatesub
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
_177
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_12_leave
_176
	jmp	_178
_173
	add	[ebp-4],1
_178
_172
_163
_160
	jmp	_179
_158
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_180
	add	[ebp-4],1
	mov	[ebp-16],0
	jmp	_181
_180
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jl	_182
	sub	esp,8
	mov	eax,6
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_183
	mov	[esp],eax
	call	__bbStrConst
	jmp	_12_leave
	jmp	_184
_182
	add	[ebp-4],1
_184
_181
_179
	jmp	_157
_13
	sub	esp,4
	mov	eax,_185
	mov	[esp],eax
	call	__bbStrConst
	jmp	_12_leave
_12_leave
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,[ebp-32]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,[ebp-24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fcalculatesub
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,108
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-4],1
	mov	[ebp-8],1
	mov	[ebp-12],0
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_186
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_187
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-24],1
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_188
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_189
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_190
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-40]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_191
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-44]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_192
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-48]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_193
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-52],1
	jmp	_194
_195
_196
	sub	esp,20
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	cmp	[ebp-8],1
	jnz	_197
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jle	_198
	mov	[ebp-4],1
	mov	[ebp-12],0
	jmp	_16
_198
	cmp	[ebp-12],0
	jnz	_199
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_201
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_200
	add	[ebp-4],1
	jmp	_202
_200
	mov	ebx,[ebp-4]
	mov	[ebp-24],ebx
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_203
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_204
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-12],1
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_205
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	add	[ebp-4],1
	jmp	_206
_203
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_207
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-12],1
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_208
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
_206
_202
	jmp	_209
_199
	sub	esp,12
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_211
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_210
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_212
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jnz	_213
	mov	[ebp-4],1
	mov	[ebp-12],0
	jmp	_16
	jmp	_214
_213
	sub	esp,8
	lea	eax,[ebp-56]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_215
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
_216
	add	[ebp-4],1
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jnz	_217
	mov	[ebp-4],1
	mov	[ebp-12],0
	jmp	_17
_217
	sub	esp,20
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-56]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_218
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_216
_17
	sub	esp,12
	mov	eax,[ebp-52]
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_219
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jnz	_220
	sub	esp,8
	mov	eax,2
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_221
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
	jmp	_222
_220
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,4
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-8],2
	add	[ebp-4],1
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_223
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-12],0
_222
	jmp	_224
_219
	mov	[ebp-60],0
	mov	[ebp-64],1
	jmp	_225
_226
	sub	esp,12
	mov	eax,[ebp-64]
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_227
	mov	[ebp-60],1
	jmp	_18
_227
	add	[ebp-64],1
_225
	cmp	[ebp-64],15
	jle	_226
_18
	cmp	[ebp-60],1
	jnz	_228
	mov	[ebp-12],0
	add	[ebp-4],1
	jmp	_229
_228
	sub	esp,8
	mov	eax,4
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_230
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
_229
_224
_214
	jmp	_231
_212
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jnz	_232
	sub	esp,8
	mov	eax,6
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_233
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
	jmp	_234
_232
	sub	esp,20
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-4],1
_234
_231
	jmp	_235
_210
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_237
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-100],eax
	mov	[ebp-104],eax
	sub	esp,4
	mov	[ebp-108],eax
	sub	esp,4
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-108]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-104]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-100]
	and	eax,ebx
	and	eax,eax
	jz	_236
	sub	esp,20
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jnz	_238
	sub	esp,8
	mov	eax,2
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_239
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
	jmp	_240
_238
	add	[ebp-4],1
_240
	jmp	_241
_236
	mov	[ebp-68],0
	mov	[ebp-64],1
	jmp	_242
_243
	sub	esp,12
	mov	eax,[ebp-64]
	shl	eax,byte 2
	add	eax,[_ares]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_244
	cmp	[ebp-64],11
	jnz	_245
	sub	esp,12
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_247
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_246
	sub	esp,8
	mov	eax,4
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_248
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
	jmp	_249
_246
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_250
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
_249
_245
	mov	[ebp-68],1
	jmp	_19
_244
	add	[ebp-64],1
_242
	cmp	[ebp-64],11
	jle	_243
_19
	cmp	[ebp-68],1
	jnz	_251
	sub	esp,20
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-4],1
	jmp	_252
_251
	sub	esp,12
	mov	eax,[ebp-52]
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_253
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	eax,0
	jnz	_254
	sub	esp,8
	mov	eax,4
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_255
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
	jmp	_256
_254
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jnz	_257
	sub	esp,8
	mov	eax,2
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_258
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
	jmp	_259
_257
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-8],2
	mov	[ebp-12],0
	add	[ebp-4],1
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_260
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
_259
_256
	jmp	_261
_253
	mov	[ebp-68],0
	mov	[ebp-64],1
	jmp	_262
_263
	sub	esp,12
	mov	eax,[ebp-64]
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_264
	mov	[ebp-68],1
	jmp	_20
_264
	add	[ebp-64],1
_262
	cmp	[ebp-64],15
	jle	_263
_20
	cmp	[ebp-68],1
	jnz	_265
	mov	[ebp-12],0
	add	[ebp-4],1
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_266
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_267
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_268
_265
	sub	esp,8
	mov	eax,4
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_269
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
_268
_261
_252
_241
_235
_209
	jmp	_270
_197
	cmp	[ebp-8],2
	jnz	_271
	cmp	[ebp-12],0
	jnz	_272
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_274
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_273
	add	[ebp-4],1
	jmp	_275
_273
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_276
	sub	esp,8
	lea	eax,[ebp-44]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_277
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	add	[ebp-4],1
	mov	[ebp-12],1
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_278
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_279
_276
	sub	esp,8
	lea	eax,[ebp-44]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_280
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-12],1
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_281
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
_279
_275
	jmp	_282
_272
	sub	esp,12
	lea	eax,[ebp-44]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_284
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_283
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_285
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	ebx,[ebp-24]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp-72]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-100]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fright
	mov	[esp+4],eax
	lea	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,44
	lea	eax,[ebp-72]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	[ebp-4],1
	mov	[ebp-8],1
	mov	[ebp-12],0
	sub	esp,8
	lea	eax,[ebp-48]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_286
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_287
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-40]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_288
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_289
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_290
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-44]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_291
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_292
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-24],1
	jmp	_293
_285
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jnz	_294
	mov	[ebp-4],1
	mov	[ebp-12],0
_294
	sub	esp,20
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-4],1
_293
	jmp	_295
_283
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_297
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-100],eax
	mov	[ebp-104],eax
	sub	esp,4
	mov	[ebp-108],eax
	sub	esp,4
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-108]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-104]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-100]
	and	eax,ebx
	and	eax,eax
	jz	_296
	sub	esp,20
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jnz	_298
	sub	esp,8
	mov	eax,2
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_299
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
	jmp	_300
_298
	add	[ebp-4],1
_300
	jmp	_301
_296
	mov	[ebp-68],0
	mov	[ebp-64],1
	jmp	_302
_303
	sub	esp,12
	mov	eax,[ebp-64]
	shl	eax,byte 2
	add	eax,[_ares]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_304
	mov	[ebp-68],1
	cmp	[ebp-64],11
	jnz	_305
	sub	esp,8
	lea	eax,[ebp-44]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_306
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
_305
	jmp	_21
_304
	add	[ebp-64],1
_302
	cmp	[ebp-64],11
	jle	_303
_21
	cmp	[ebp-68],1
	jnz	_307
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jnz	_308
	sub	esp,20
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	ebx,[ebp-24]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp-72]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-100]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fright
	mov	[esp+4],eax
	lea	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-40]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_310
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_309
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,44
	lea	eax,[ebp-72]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_311
_309
	sub	esp,12
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_313
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_312
	sub	esp,8
	lea	eax,[ebp-84]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_315
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_316
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,3
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_317
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,4
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_318
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,5
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_319
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,6
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_320
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,7
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_321
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,8
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_322
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,9
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_323
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,10
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_324
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,11
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_325
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,12
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_326
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,13
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_327
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,14
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_328
	sub	esp,12
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,15
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_329
	jmp	_314
_315
	sub	esp,28
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	__bbFPow
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_316
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	imul	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_317
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	ecx,ebx
	cdq
	idiv	ecx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_318
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	add	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_319
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	sub	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_320
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	or	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_321
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	and	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_322
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	xor	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_323
	sub	esp,28
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbMod
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_324
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	cmp	eax,ebx
	setz	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_325
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	cmp	eax,ebx
	setl	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_326
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_327
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	cmp	eax,ebx
	setle	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_328
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	cmp	eax,ebx
	setge	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_329
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	cmp	eax,ebx
	setnz	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_314
_314
	jmp	_330
_312
	sub	esp,8
	lea	eax,[ebp-88]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_332
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_333
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,3
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_334
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,4
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_335
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,5
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_336
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,6
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_337
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,7
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_338
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,8
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_339
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,9
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_340
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,10
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_341
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,11
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_342
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,12
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_343
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,13
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_344
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,14
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_345
	sub	esp,12
	lea	eax,[ebp-88]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,15
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_346
	jmp	_331
_332
	sub	esp,28
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	__bbFPow
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_333
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_334
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_335
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_336
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_337
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	push	ebx
	fistp	[esp]
	pop	ebx
	or	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_338
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	push	ebx
	fistp	[esp]
	pop	ebx
	and	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_339
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	push	ebx
	fistp	[esp]
	pop	ebx
	xor	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_340
	sub	esp,28
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	__bbFMod
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_341
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_342
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_343
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_344
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_345
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_346
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_331
_331
_330
	sub	esp,12
	lea	eax,[ebp-80]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_348
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_347
	sub	esp,8
	mov	eax,8
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_349
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
	jmp	_350
_347
	sub	esp,28
	lea	eax,[ebp-72]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_350
_311
	mov	[ebp-4],1
	mov	[ebp-8],1
	mov	[ebp-12],0
	sub	esp,8
	lea	eax,[ebp-48]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_351
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_352
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-40]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_353
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_354
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_355
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-44]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_356
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_357
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-24],1
	jmp	_358
_308
	sub	esp,20
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-4],1
_358
	jmp	_359
_307
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jle	_360
	sub	esp,8
	mov	eax,2
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_361
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
	jmp	_362
_360
	mov	[ebp-68],0
	mov	[ebp-64],1
	jmp	_363
_364
	sub	esp,12
	mov	eax,[ebp-64]
	shl	eax,byte 2
	add	eax,[_aop]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_365
	mov	[ebp-68],1
	jmp	_24
_365
	add	[ebp-64],1
_363
	cmp	[ebp-64],15
	jle	_364
_24
	cmp	[ebp-68],1
	jnz	_366
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	ebx,[ebp-24]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp-72]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-100]
	sub	ebx,[ebp-4]
	add	ebx,1
	mov	[esp+4],ebx
	call	_fright
	mov	[esp+4],eax
	lea	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-40]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_368
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_367
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,44
	lea	eax,[ebp-72]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_369
_367
	sub	esp,12
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_371
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_370
	sub	esp,8
	lea	eax,[ebp-92]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_373
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_374
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,3
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_375
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,4
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_376
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,5
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_377
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,6
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_378
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,7
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_379
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,8
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_380
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,9
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_381
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,10
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_382
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,11
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_383
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,12
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_384
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,13
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_385
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,14
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_386
	sub	esp,12
	lea	eax,[ebp-92]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,15
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_387
	jmp	_372
_373
	sub	esp,28
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	__bbFPow
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_374
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	imul	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_375
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	ecx,ebx
	cdq
	idiv	ecx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_376
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	add	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_377
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	sub	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_378
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	or	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_379
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	and	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_380
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	xor	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_381
	sub	esp,28
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbMod
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_382
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	cmp	eax,ebx
	setz	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_383
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	cmp	eax,ebx
	setl	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_384
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_385
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	cmp	eax,ebx
	setle	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_386
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	cmp	eax,ebx
	setge	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_387
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	eax,[ebp-100]
	cmp	eax,ebx
	setnz	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_372
_372
	jmp	_388
_370
	sub	esp,8
	lea	eax,[ebp-96]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_390
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_391
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,3
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_392
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,4
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_393
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,5
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_394
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,6
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_395
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,7
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_396
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,8
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_397
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,9
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_398
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,10
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_399
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,11
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_400
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,12
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_401
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,13
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_402
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,14
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_403
	sub	esp,12
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,15
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_404
	jmp	_389
_390
	sub	esp,28
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	__bbFPow
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_391
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_392
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_393
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_394
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_395
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	push	ebx
	fistp	[esp]
	pop	ebx
	or	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_396
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	push	ebx
	fistp	[esp]
	pop	ebx
	and	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_397
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	push	ebx
	fistp	[esp]
	pop	ebx
	xor	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_398
	sub	esp,28
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	__bbFMod
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_399
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_400
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_401
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_402
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_403
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_404
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToFloat
	mov	[ebp-100],eax
	sub	esp,4
	mov	[ebp-104],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-104]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-100]
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_389
_389
_388
	sub	esp,12
	lea	eax,[ebp-80]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_406
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_405
	sub	esp,8
	mov	eax,8
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_407
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
	jmp	_408
_405
	sub	esp,28
	lea	eax,[ebp-72]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-80]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	lea	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_408
_369
	mov	[ebp-4],1
	mov	[ebp-8],1
	mov	[ebp-12],0
	sub	esp,8
	lea	eax,[ebp-48]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_409
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_410
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-40]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_411
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_412
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_413
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-44]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_414
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_415
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-24],1
	jmp	_416
_366
	sub	esp,8
	mov	eax,4
	shl	eax,byte 2
	add	eax,[_aers]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_feval_error
	sub	esp,4
	mov	eax,_417
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
_416
_362
_359
_301
_295
_282
_271
_270
	jmp	_196
_16
	add	[ebp-52],1
_194
	cmp	[ebp-52],15
	jle	_195
_15
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fleft
	mov	[esp],eax
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,_vspec_quote
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_418
	sub	esp,12
	mov	[esp+4],2
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	sub	eax,2
	mov	[esp+8],eax
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	jmp	_14_leave
	jmp	_419
_418
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_14_leave
_419
	sub	esp,4
	mov	eax,_420
	mov	[esp],eax
	call	__bbStrConst
	jmp	_14_leave
_14_leave
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,[ebp-92]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	esi,[ebp-96]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	esi,[ebp-88]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,[ebp-84]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	esi,[ebp-80]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	esi,[ebp-72]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	esi,[ebp-48]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	esi,[ebp-40]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	esi,[ebp-32]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	esi,[ebp-20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-100]
	mov	[ebp-100],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-100]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fparseargument
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	sub	esp,12
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_422
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_421
	sub	esp,4
	mov	eax,_423
	mov	[esp],eax
	call	__bbStrConst
	jmp	_27_leave
_421
	mov	[ebp-4],1
	mov	[ebp-8],1
	jmp	_424
_425
	sub	esp,20
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_427
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_426
	mov	ebx,[ebp-8]
	mov	[ebp-4],ebx
	jmp	_28
_426
	add	[ebp-8],1
_424
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-8],eax
	jle	_425
_28
	mov	ebx,[ebp-4]
	mov	[ebp-8],ebx
	jmp	_428
_429
	mov	ebx,[ebp+24]
	sub	ebx,1
	cmp	ebx,[ebp-16]
	jnz	_430
	mov	ebx,[ebp-8]
	mov	[ebp-20],ebx
	jmp	_29
_430
	sub	esp,20
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,16
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-32],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	and	ebx,ebx
	jz	_431
	add	[ebp-16],1
_431
	add	[ebp-8],1
_428
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-8],eax
	jle	_429
_29
	cmp	[ebp-20],0
	jnz	_432
	sub	esp,4
	mov	eax,_433
	mov	[esp],eax
	call	__bbStrConst
	jmp	_27_leave
_432
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-20],eax
	jnz	_434
	sub	esp,12
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	jmp	_27_leave
_434
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_435
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,[ebp-20]
	mov	[ebp-8],ebx
	jmp	_436
_437
	sub	esp,20
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,16
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-32],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	cmp	ebx,0
	jnz	_438
	sub	esp,20
	lea	eax,[ebp-24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_439
_438
	sub	esp,4
	lea	eax,[ebp-24]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_27_leave
_439
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-8],eax
	jnz	_440
	sub	esp,4
	lea	eax,[ebp-24]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_27_leave
_440
	add	[ebp-8],1
_436
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-8],eax
	jle	_437
_30
	sub	esp,4
	mov	eax,_441
	mov	[esp],eax
	call	__bbStrConst
	jmp	_27_leave
_27_leave
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[ebp-32],eax
	sub	esp,4
	mov	esi,[ebp-28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-32]
	mov	[ebp-32],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-32]
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[ebp-32],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-32]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fparsearguments
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-4],0
	mov	[ebp-8],1
	mov	[ebp-12],1
	jmp	_442
_443
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	cmp	[ebp-8],1
	jnz	_444
	add	[ebp-4],1
	mov	[ebp-8],0
_444
	mov	[ebp-20],1
	jmp	_445
_446
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_447
	mov	[ebp-8],1
	jmp	_33
_447
	add	[ebp-20],1
_445
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-20],eax
	jle	_446
_33
	add	[ebp-12],1
_442
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-12],eax
	jle	_443
_32
	mov	eax,[ebp-4]
	jmp	_31_leave
	mov	eax,0
	jmp	_31_leave
_31_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fparseargumentseperator
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,12
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_449
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_448
	sub	esp,4
	mov	eax,_450
	mov	[esp],eax
	call	__bbStrConst
	jmp	_34_leave
_448
	mov	[ebp-4],1
	mov	[ebp-8],1
	jmp	_451
_452
	sub	esp,20
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_454
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_453
	mov	ebx,[ebp-8]
	mov	[ebp-4],ebx
	jmp	_35
_453
	add	[ebp-8],1
_451
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-8],eax
	jle	_452
_35
	mov	ebx,[ebp-4]
	mov	[ebp-8],ebx
	jmp	_455
_456
	mov	ebx,[ebp+24]
	sub	ebx,1
	cmp	ebx,[ebp-16]
	jnz	_457
	mov	ebx,[ebp-8]
	mov	[ebp-20],ebx
	jmp	_36
_457
	sub	esp,20
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,16
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	and	ebx,ebx
	jz	_458
	add	[ebp-16],1
_458
	add	[ebp-8],1
_455
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-8],eax
	jle	_456
_36
	cmp	[ebp-20],0
	jnz	_459
	sub	esp,4
	mov	eax,_460
	mov	[esp],eax
	call	__bbStrConst
	jmp	_34_leave
_459
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-20],eax
	jnz	_461
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_l_34retty
_461
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_462
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,[ebp-20]
	mov	[ebp-8],ebx
	jmp	_463
_464
	sub	esp,20
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,16
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	cmp	ebx,0
	jnz	_465
	sub	esp,20
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_466
_465
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_l_34retty
_466
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-8],eax
	jnz	_467
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_l_34retty
_467
	add	[ebp-8],1
_463
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-8],eax
	jle	_464
_37
	sub	esp,4
	mov	eax,_468
	mov	[esp],eax
	call	__bbStrConst
	jmp	_34_leave
_l_34retty
	sub	esp,16
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	and	ebx,ebx
	jz	_469
	sub	esp,4
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_34_leave
_469
	sub	esp,4
	mov	eax,_470
	mov	[esp],eax
	call	__bbStrConst
	jmp	_34_leave
_34_leave
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	esi,[ebp-36]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	esi,[ebp-28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-40]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_ffiltersum
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	eax,1
	jnz	_471
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_ffiltersegment
	jmp	_38_leave
_471
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_472
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-8],1
_473
	add	[ebp-12],1
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_474
	add	[ebp-20],1
	cmp	[ebp-20],1
	jnz	_475
	sub	esp,20
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	sub	esi,[ebp-8]
	mov	[esp+8],esi
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	[ebp-32],eax
	sub	esp,4
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_ffiltersegment
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,36
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_476
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_477
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	ebx,[ebp-12]
	add	ebx,1
	mov	[ebp-8],ebx
	jmp	_478
_475
	sub	esp,20
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	sub	esi,[ebp-8]
	mov	[esp+8],esi
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,52
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_479
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_480
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	[ebp-20],0
	mov	ebx,[ebp-12]
	add	ebx,1
	mov	[ebp-8],ebx
_478
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_481
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
_474
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-12],eax
	jnz	_473
_39
	mov	ebx,[ebp-12]
	cmp	[ebp-8],ebx
	jge	_482
	sub	esp,20
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	sub	esi,[ebp-8]
	add	esi,1
	mov	[esp+8],esi
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	[ebp-32],eax
	sub	esp,4
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_ffiltersegment
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,36
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_483
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_484
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	ebx,[ebp-12]
	add	ebx,1
	mov	[ebp-8],ebx
_482
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_38_leave
	sub	esp,4
	mov	eax,_485
	mov	[esp],eax
	call	__bbStrConst
	jmp	_38_leave
_38_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_ffiltersegment
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,68
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flower
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,24
	mov	eax,_486
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_487
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+8],ebx
	mov	[ebp-52],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freplace
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,24
	mov	eax,_488
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_489
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+8],ebx
	mov	[ebp-52],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freplace
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,24
	mov	eax,_490
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_491
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+8],ebx
	mov	[ebp-52],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freplace
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,24
	mov	eax,_492
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_493
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+8],ebx
	mov	[ebp-52],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freplace
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,24
	mov	eax,_494
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_495
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+8],ebx
	mov	[ebp-52],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freplace
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,24
	mov	eax,_496
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_497
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+8],ebx
	mov	[ebp-52],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freplace
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,20
	mov	eax,_vparseseps
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_498
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[ebp-52],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fparsearguments
	mov	ebx,eax
	mov	[ebp-4],ebx
	mov	[ebp-8],1
	jmp	_499
_500
	sub	esp,32
	mov	eax,_vparseseps
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_501
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fparseargument
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,32
	mov	eax,_vparseseps
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_502
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fparseargumentseperator
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_504
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_503
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_505
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrStore
_503
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_507
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_506
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_508
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrStore
_506
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_510
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_509
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_511
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrStore
_509
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_513
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_512
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_514
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrStore
_512
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	eax,1
	jle	_515
	sub	esp,20
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_517
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_516
	mov	[ebp-24],1
	sub	esp,20
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-52]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_516
	sub	esp,12
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_519
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_518
	mov	[ebp-24],2
	sub	esp,20
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-52]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_518
_515
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	eax,2
	jle	_520
	sub	esp,20
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_522
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_521
	sub	esp,20
	mov	[esp+4],1
	sub	esp,4
	mov	eax,_523
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fparseargument
	mov	[esp+4],eax
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,20
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_525
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_524
	sub	esp,20
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-52]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_524
	sub	esp,20
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_527
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_526
	sub	esp,20
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-52]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_526
	sub	esp,20
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_529
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_528
	sub	esp,20
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-52]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_528
	sub	esp,28
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-52]
	sub	eax,ebx
	sub	eax,2
	mov	[esp+8],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-52]
	add	ebx,2
	mov	[esp+4],ebx
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_531
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_530
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	mov	[ebp-60],eax
	sub	esp,4
	mov	[ebp-64],eax
	sub	esp,4
	mov	[ebp-68],eax
	sub	esp,4
	lea	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalculate
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-60]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsin
	mov	ebx,eax
	mov	eax,[ebp-56]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrStore
_530
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_533
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_532
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	mov	[ebp-60],eax
	sub	esp,4
	mov	[ebp-64],eax
	sub	esp,4
	mov	[ebp-68],eax
	sub	esp,4
	lea	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalculate
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-60]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcos
	mov	ebx,eax
	mov	eax,[ebp-56]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrStore
_532
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_535
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_534
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	mov	[ebp-60],eax
	sub	esp,4
	mov	[ebp-64],eax
	sub	esp,4
	mov	[ebp-68],eax
	sub	esp,4
	lea	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalculate
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-60]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftan
	mov	ebx,eax
	mov	eax,[ebp-56]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrStore
_534
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_537
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_536
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	mov	[ebp-60],eax
	sub	esp,4
	mov	[ebp-64],eax
	sub	esp,4
	mov	[ebp-68],eax
	sub	esp,4
	lea	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-68]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcalculate
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToFloat
	mov	ebx,eax
	mov	eax,[ebp-60]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_fatan
	mov	ebx,eax
	mov	eax,[ebp-56]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrStore
_536
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_539
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_538
	sub	esp,40
	mov	[esp+4],1
	sub	esp,4
	mov	eax,_540
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	sub	esp,4
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fparseargument
	mov	[esp],eax
	call	_fcalculate
	mov	[esp],eax
	call	__bbStrToFloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	mov	[ebp-60],eax
	sub	esp,12
	mov	[esp+4],2
	mov	[ebp-64],eax
	sub	esp,4
	mov	esi,_541
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp+8],esi
	mov	[ebp-64],eax
	sub	esp,4
	lea	esi,[ebp-32]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	eax,esi
	call	_fparseargument
	mov	esi,eax
	mov	eax,[ebp-60]
	mov	[esp],esi
	mov	eax,esi
	call	_fcalculate
	mov	esi,eax
	mov	eax,[ebp-56]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrToFloat
	mov	esi,eax
	mov	eax,[ebp-52]
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_frnd
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_538
	sub	esp,12
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_543
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_542
	sub	esp,40
	mov	[esp+4],1
	sub	esp,4
	mov	eax,_544
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	sub	esp,4
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fparseargument
	mov	[esp],eax
	call	_fcalculate
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	mov	[ebp-60],eax
	sub	esp,12
	mov	[esp+4],2
	mov	[ebp-64],eax
	sub	esp,4
	mov	esi,_545
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp+8],esi
	mov	[ebp-64],eax
	sub	esp,4
	lea	esi,[ebp-32]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-64]
	mov	[esp],esi
	mov	eax,esi
	call	_fparseargument
	mov	esi,eax
	mov	eax,[ebp-60]
	mov	[esp],esi
	mov	eax,esi
	call	_fcalculate
	mov	esi,eax
	mov	eax,[ebp-56]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrToInt
	mov	esi,eax
	mov	eax,[ebp-52]
	mov	[esp+4],esi
	call	_frand
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_542
_521
_520
	cmp	[ebp-36],0
	jnz	_546
	mov	[ebp-40],1
	jmp	_547
_548
	sub	esp,12
	mov	eax,[ebp-40]
	shl	eax,byte 2
	add	eax,[_avarname]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_549
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_avarvalue]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_l_40gotvar
_549
	add	[ebp-40],1
_547
	mov	ebx,[_vvars]
	cmp	[ebp-40],ebx
	jle	_548
_42
_546
	cmp	[ebp-36],0
	setz	al
	movzx	eax,al
	mov	[ebp-52],eax
	cmp	[ebp-36],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	and	eax,eax
	jz	_550
	mov	[ebp-40],1
	jmp	_551
_552
	sub	esp,12
	mov	eax,[ebp-40]
	shl	eax,byte 2
	add	eax,[_astringvarname]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_553
	sub	esp,28
	mov	[esp],34
	call	_fchr
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_astringvarvalue]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_l_40gotvar
_553
	add	[ebp-40],1
_551
	mov	ebx,[_vstringvars]
	cmp	[ebp-40],ebx
	jle	_552
_43
_550
	cmp	[ebp-36],0
	setz	al
	movzx	eax,al
	mov	[ebp-52],eax
	cmp	[ebp-36],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	and	eax,eax
	jz	_554
	mov	[ebp-40],1
	jmp	_555
_556
	sub	esp,12
	mov	eax,[ebp-40]
	shl	eax,byte 2
	add	eax,[_afloatvarname]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_557
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_afloatvarvalue]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_l_40gotvar
_557
	add	[ebp-40],1
_555
	mov	ebx,[_vfloatvars]
	cmp	[ebp-40],ebx
	jle	_556
_44
_554
_l_40gotvar
	sub	esp,28
	lea	eax,[ebp-44]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-8],1
_499
	mov	ebx,[ebp-4]
	cmp	[ebp-8],ebx
	jle	_500
_41
	sub	esp,24
	mov	eax,_558
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_559
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+8],ebx
	mov	[ebp-52],eax
	sub	esp,4
	lea	ebx,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freplace
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-44]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-44]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	eax,0
	jle	_560
	sub	esp,20
	lea	eax,[ebp-44]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	mov	[esp+4],eax
	lea	ebx,[ebp-48]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	[ebp-40],1
	jmp	_561
_562
	sub	esp,12
	lea	eax,[ebp-48]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_aop]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_563
	sub	esp,20
	lea	eax,[ebp-44]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	[ebp-56],eax
	sub	esp,4
	lea	ebx,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-52]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	lea	ebx,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_45
_563
	add	[ebp-40],1
_561
	cmp	[ebp-40],15
	jle	_562
_45
_560
	sub	esp,4
	lea	eax,[ebp-44]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_40_leave
	sub	esp,4
	mov	eax,_564
	mov	[esp],eax
	call	__bbStrConst
	jmp	_40_leave
_40_leave
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[ebp-52],eax
	sub	esp,4
	mov	esi,[ebp-48]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-52]
	mov	[ebp-52],eax
	sub	esp,4
	mov	esi,[ebp-32]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-52]
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[ebp-52],eax
	sub	esp,4
	mov	esi,[ebp-20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-52]
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[ebp-52],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-52]
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_feval_error
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,8
	mov	[esp],_vcalcerror
	mov	[ebp-4],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	eax,0
	jmp	_46_leave
_46_leave
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	4
_vmaxvars	.dd	0
	.align	4
_vmaxstringvars	.dd	0
	.align	4
_vmaxfloatvars	.dd	0
	.align	4
_vvars	.dd	0
	.align	4
_vstringvars	.dd	0
	.align	4
_vfloatvars	.dd	0
	.align	4
_avarname	.dd	0
	.dd	3
	.dd	1
	.dd	0
	.align	4
_avarvalue	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_astringvarname	.dd	0
	.dd	3
	.dd	1
	.dd	0
	.align	4
_astringvarvalue	.dd	0
	.dd	3
	.dd	1
	.dd	0
	.align	4
_afloatvarname	.dd	0
	.dd	3
	.dd	1
	.dd	0
	.align	4
_afloatvarvalue	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_aop	.dd	0
	.dd	3
	.dd	1
	.dd	0
_47	.db	"^",0
_48	.db	"*",0
_49	.db	"/",0
_50	.db	"+",0
_51	.db	"-",0
_52	.db	"|",0
_53	.db	"&",0
_54	.db	"~",0
_55	.db	"%",0
_56	.db	"=",0
_57	.db	"<",0
_58	.db	">",0
_59	.db	"{",0
_60	.db	"}",0
_61	.db	"@",0
	.align	4
_vparseseps	.dd	0
	.align	4
_ares	.dd	0
	.dd	3
	.dd	1
	.dd	0
_64	.db	"0",0
_65	.db	"1",0
_66	.db	"2",0
_67	.db	"3",0
_68	.db	"4",0
_69	.db	"5",0
_70	.db	"6",0
_71	.db	"7",0
_72	.db	"8",0
_73	.db	"9",0
_74	.db	".",0
	.align	4
_vspec_quote	.dd	0
	.align	4
_aers	.dd	0
	.dd	3
	.dd	1
	.dd	0
_75	.db	"Unexpected ')'",0
_76	.db	"Expecting expression",0
_77	.db	"Expecting operator",0
_78	.db	"Ilegal character",0
_79	.db	"Missing ')'",0
_80	.db	"Missing ",0
_81	.db	" end quote",0
_82	.db	"Value types incorrect",0
_83	.db	"Result of expression out of range",0
	.align	4
_vcalcerror	.dd	0
_84	.db	"st$",0
_85	.db	"teststring",0
_86	.db	"t",0
_87	.db	"51+12",0
_88	.db	"Type an expression:",0
_89	.db	"The following variables are set: st$=",0
_90	.db	"st$",0
_91	.db	", t=",0
_92	.db	"t",0
_93	.db	"The following functions are available: Sin(), Cos(), Tan(), ATan(), Rnd(), Rand()",0
_94	.db	"",0
_95	.db	">",0
_97	.db	"",0
_99	.db	"",0
_101	.db	"",0
_103	.db	"#",0
_105	.db	"$",0
_119	.db	"0",0
_121	.db	"0.0",0
_123	.db	"",0
_124	.db	"",0
_126	.db	"#",0
_128	.db	"$",0
_143	.db	"Out of integer variable space.",0
_146	.db	"Out of float variable space.",0
_149	.db	"Out of string variable space.",0
_153	.db	"",0
_154	.db	"0",0
_155	.db	"",0
_156	.db	"",0
_162	.db	"(",0
_165	.db	")",0
_167	.db	"",0
_170	.db	"",0
_175	.db	"",0
_183	.db	"",0
_185	.db	"",0
_186	.db	"",0
_187	.db	"",0
_188	.db	"",0
_189	.db	"",0
_190	.db	"",0
_191	.db	"",0
_192	.db	"",0
_193	.db	"",0
_201	.db	" ",0
_204	.db	"string",0
_205	.db	"",0
_207	.db	"value",0
_208	.db	"",0
_211	.db	"string",0
_215	.db	"",0
_218	.db	" ",0
_221	.db	"",0
_223	.db	"",0
_230	.db	"",0
_233	.db	"",0
_237	.db	"-",0
_239	.db	"",0
_247	.db	"float",0
_248	.db	"",0
_250	.db	"float",0
_255	.db	"",0
_258	.db	"",0
_260	.db	"",0
_266	.db	"",0
_267	.db	"",0
_269	.db	"",0
_274	.db	" ",0
_277	.db	"string",0
_278	.db	"",0
_280	.db	"value",0
_281	.db	"",0
_284	.db	"string",0
_286	.db	"",0
_287	.db	"",0
_288	.db	"",0
_289	.db	"",0
_290	.db	"",0
_291	.db	"",0
_292	.db	"",0
_297	.db	"-",0
_299	.db	"",0
_306	.db	"float",0
_310	.db	"string",0
_313	.db	"value",0
_348	.db	"Infinity",0
_349	.db	"",0
_351	.db	"",0
_352	.db	"",0
_353	.db	"",0
_354	.db	"",0
_355	.db	"",0
_356	.db	"",0
_357	.db	"",0
_361	.db	"",0
_368	.db	"string",0
_371	.db	"value",0
_406	.db	"Infinity",0
_407	.db	"",0
_409	.db	"",0
_410	.db	"",0
_411	.db	"",0
_412	.db	"",0
_413	.db	"",0
_414	.db	"",0
_415	.db	"",0
_417	.db	"",0
_420	.db	"",0
_422	.db	"",0
_423	.db	"",0
_427	.db	" ",0
_433	.db	"",0
_435	.db	"",0
_441	.db	"",0
_449	.db	"",0
_450	.db	"",0
_454	.db	" ",0
_460	.db	"",0
_462	.db	"",0
_468	.db	"",0
_470	.db	"",0
_472	.db	"",0
_476	.db	"",0
_477	.db	"",0
_479	.db	"",0
_480	.db	"",0
_481	.db	"0",0
_483	.db	"",0
_484	.db	"",0
_485	.db	"",0
_486	.db	"=<",0
_487	.db	"{",0
_488	.db	"<=",0
_489	.db	"{",0
_490	.db	"=>",0
_491	.db	"}",0
_492	.db	">=",0
_493	.db	"}",0
_494	.db	"><",0
_495	.db	"@",0
_496	.db	"<>",0
_497	.db	"@",0
_498	.db	" ",0
_501	.db	" ",0
_502	.db	" ",0
_504	.db	"and",0
_505	.db	"&",0
_507	.db	"or",0
_508	.db	"|",0
_510	.db	"mod",0
_511	.db	"%",0
_513	.db	"xor",0
_514	.db	"~",0
_517	.db	"#",0
_519	.db	"$",0
_522	.db	")",0
_523	.db	"(",0
_525	.db	"%",0
_527	.db	"$",0
_529	.db	"#",0
_531	.db	"sin",0
_533	.db	"cos",0
_535	.db	"tan",0
_537	.db	"atan",0
_539	.db	"rnd",0
_540	.db	",)",0
_541	.db	",)",0
_543	.db	"rand",0
_544	.db	",)",0
_545	.db	",)",0
_558	.db	" ",0
_559	.db	"",0
_564	.db	"",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

