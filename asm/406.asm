
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	sub	esp,4
	mov	eax,_aipsdata
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,5
	mov	esi,_aipsdata
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aipsdata
	mov	[esp],eax
	call	__bbDimArray
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fapplyipspatch
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,48
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,4
	mov	eax,_aipsdata
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,5
	mov	esi,_aipsdata
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aipsdata
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_13
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-12],1
	jmp	_14
_15
	sub	esp,20
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadbyte
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-12],1
_14
	cmp	[ebp-12],5
	jle	_15
_4
	sub	esp,16
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fupper
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_17
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_16
	sub	esp,8
	mov	eax,_18
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_16
	sub	esp,12
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	_fcopyfile
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fopenfile
	mov	[ebp-16],eax
	mov	[ebp-12],0
	jmp	_19
_20
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadbyte
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_aipsdata]
	mov	[ebx],eax
	add	[ebp-12],1
_19
	cmp	[ebp-12],4
	jle	_20
_5
_21
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aipsdata]
	mov	ebx,[ebx]
	mov	esi,1
	shl	esi,byte 2
	add	esi,[_aipsdata]
	mov	esi,[esi]
	shl	esi,byte 8
	add	ebx,esi
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_aipsdata]
	mov	esi,[esi]
	shl	esi,byte 16
	add	ebx,esi
	mov	[ebp-20],ebx
	mov	ebx,4
	shl	ebx,byte 2
	add	ebx,[_aipsdata]
	mov	ebx,[ebx]
	mov	esi,3
	shl	esi,byte 2
	add	esi,[_aipsdata]
	mov	esi,[esi]
	shl	esi,byte 8
	add	ebx,esi
	mov	[ebp-24],ebx
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fseekfile
	cmp	[ebp-24],0
	jnz	_22
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadbyte
	shl	eax,byte 8
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadbyte
	mov	ebx,eax
	mov	eax,[ebp-40]
	add	eax,ebx
	mov	[ebp-28],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadbyte
	mov	[ebp-32],eax
	mov	[ebp-12],1
	jmp	_23
_24
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	call	_fwritebyte
	add	[ebp-12],1
_23
	mov	ebx,[ebp-28]
	cmp	[ebp-12],ebx
	jle	_24
_7
	jmp	_25
_22
	mov	[ebp-12],1
	jmp	_26
_27
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadbyte
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	_fwritebyte
	add	[ebp-12],1
_26
	mov	ebx,[ebp-24]
	cmp	[ebp-12],ebx
	jle	_27
_8
_25
	mov	[ebp-12],0
	jmp	_28
_29
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadbyte
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_aipsdata]
	mov	[ebx],eax
	add	[ebp-12],1
_28
	cmp	[ebp-12],4
	jle	_29
_9
	mov	eax,0
	shl	eax,byte 2
	add	eax,[_aipsdata]
	mov	eax,[eax]
	mov	[ebp-40],eax
	sub	esp,4
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_31
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fasc
	mov	ebx,eax
	mov	eax,[ebp-40]
	cmp	eax,ebx
	setz	al
	movzx	eax,al
	mov	[ebp-40],eax
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_aipsdata]
	mov	ebx,[ebx]
	mov	[ebp-44],eax
	sub	esp,4
	mov	[ebp-48],eax
	sub	esp,4
	mov	esi,_32
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-48]
	mov	[esp],esi
	mov	eax,esi
	call	_fasc
	mov	esi,eax
	mov	eax,[ebp-44]
	cmp	ebx,esi
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-40]
	and	eax,ebx
	mov	[ebp-40],eax
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_aipsdata]
	mov	ebx,[ebx]
	mov	[ebp-44],eax
	sub	esp,4
	mov	[ebp-48],eax
	sub	esp,4
	mov	esi,_33
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-48]
	mov	[esp],esi
	mov	eax,esi
	call	_fasc
	mov	esi,eax
	mov	eax,[ebp-44]
	cmp	ebx,esi
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-40]
	and	eax,ebx
	and	eax,eax
	jz	_30
	mov	[ebp-36],1
_30
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_feof
	and	eax,eax
	jz	_34
	mov	[ebp-36],1
_34
	mov	ebx,[ebp-36]
	and	ebx,ebx
	jz	_21
_6
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fclosefile
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fclosefile
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-40]
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fmakeipspatch
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,52
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	sub	esp,4
	mov	eax,_aipsdata
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,5
	mov	esi,_aipsdata
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aipsdata
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fwritefile
	mov	[ebp-4],eax
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-8],eax
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-12],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_35
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fasc
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fwritebyte
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_36
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fasc
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fwritebyte
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_37
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fasc
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fwritebyte
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_38
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fasc
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fwritebyte
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_39
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fasc
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fwritebyte
	mov	[ebp-16],1
	jmp	_41
_40
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_freadbyte
	mov	[ebp-20],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_freadbyte
	mov	[ebp-24],eax
	cmp	[ebp-28],0
	jnz	_42
	mov	ebx,[ebp-24]
	cmp	[ebp-20],ebx
	jz	_43
	mov	ebx,[ebp-24]
	mov	[ebp-32],ebx
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffilepos
	sub	eax,1
	mov	[ebp-36],eax
	mov	[ebp-28],1
	mov	[ebp-40],0
_43
_42
	mov	ebx,[ebp-28]
	and	ebx,ebx
	jz	_44
	mov	ebx,[ebp-32]
	cmp	[ebp-24],ebx
	jz	_45
	mov	[ebp-16],0
_45
	mov	ebx,[ebp-24]
	cmp	[ebp-20],ebx
	jnz	_46
	mov	[ebp-28],0
	sub	esp,8
	mov	ebx,[ebp-36]
	mov	esi,16711680
	and	ebx,esi
	sar	ebx,byte 16
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritebyte
	sub	esp,8
	mov	ebx,[ebp-36]
	mov	esi,65280
	and	ebx,esi
	sar	ebx,byte 8
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritebyte
	sub	esp,8
	mov	ebx,[ebp-36]
	mov	esi,255
	and	ebx,esi
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritebyte
	mov	ebx,[ebp-16]
	cmp	[ebp-40],3
	setge	al
	movzx	eax,al
	and	ebx,eax
	and	ebx,ebx
	jz	_47
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fwritebyte
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fwritebyte
	sub	esp,8
	mov	ebx,[ebp-40]
	mov	esi,65280
	and	ebx,esi
	sar	ebx,byte 8
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritebyte
	sub	esp,8
	mov	ebx,[ebp-40]
	mov	esi,255
	and	ebx,esi
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritebyte
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	call	_fwritebyte
	jmp	_48
_47
	sub	esp,8
	mov	ebx,[ebp-40]
	mov	esi,65280
	and	ebx,esi
	sar	ebx,byte 8
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritebyte
	sub	esp,8
	mov	ebx,[ebp-40]
	mov	esi,255
	and	ebx,esi
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritebyte
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	call	_fseekfile
	mov	[ebp-44],1
	jmp	_49
_50
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadbyte
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fwritebyte
	add	[ebp-44],1
_49
	mov	ebx,[ebp-40]
	cmp	[ebp-44],ebx
	jle	_50
_12
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_freadbyte
_48
	mov	[ebp-16],1
	jmp	_51
_46
	add	[ebp-40],1
_51
_44
_41
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_feof
	cmp	eax,0
	jz	_40
_11
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_52
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fasc
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fwritebyte
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_53
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fasc
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fwritebyte
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,_54
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fasc
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fwritebyte
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fclosefile
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fclosefile
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fclosefile
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[ebp-48],eax
	sub	esp,4
	mov	esi,[ebp+28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-48]
	mov	[ebp-48],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-48]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	4
_aipsdata	.dd	0
	.dd	1
	.dd	1
	.dd	0
_13	.db	"",0
_17	.db	"PATCH",0
_18	.db	"Error: Not an IPS patchfile",0
_31	.db	"E",0
_32	.db	"O",0
_33	.db	"F",0
_35	.db	"P",0
_36	.db	"A",0
_37	.db	"T",0
_38	.db	"C",0
_39	.db	"H",0
_52	.db	"E",0
_53	.db	"O",0
_54	.db	"F",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

