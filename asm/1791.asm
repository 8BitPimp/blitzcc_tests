
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,172
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	mov	[ebp-128],ebx
	mov	[ebp-132],ebx
	mov	[ebp-136],ebx
	mov	[ebp-140],ebx
	mov	[ebp-144],ebx
	mov	[ebp-148],ebx
	mov	[ebp-152],ebx
	mov	[ebp-156],ebx
	mov	[ebp-160],ebx
	mov	[ebp-164],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],768
	mov	[esp],1024
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],1123680256
	mov	[esp+8],1123680256
	mov	[esp],1123680256
	call	_fambientlight
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcreatepivot
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcreatepivot
	mov	[ebp-12],eax
	sub	esp,16
	mov	[esp+8],1073741824
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fmoveentity
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcreatecamera
	mov	[ebp-16],eax
	sub	esp,16
	mov	[esp+8],1125515264
	mov	[esp+12],1132396544
	mov	[esp+4],1123024896
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fcameraclscolor
	sub	esp,16
	mov	[esp+8],1073741824
	mov	[esp+12],-1054867456
	mov	[esp+4],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fmoveentity
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpointentity
	sub	esp,12
	mov	[esp+4],1036831949
	mov	[esp+8],1128792064
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fcamerarange
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsms_init
	mov	[ebp-20],255
	mov	[ebp-24],120
	mov	[ebp-28],20
	mov	[ebp-32],50
	mov	[ebp-36],120
	mov	[ebp-40],20
	mov	[ebp-44],20
	mov	[ebp-48],50
	mov	[ebp-52],0
	mov	[ebp-56],20
	sub	esp,24
	mov	ebx,[ebp-28]
	mov	[esp+16],ebx
	mov	[esp+20],1073741824
	mov	esi,[ebp-24]
	mov	[esp+12],esi
	mov	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	[esp+4],0
	mov	[esp],1
	call	_fsms_createlight
	mov	[ebp-60],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1106247680
	mov	[esp+4],0
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	_fsms_setlightposition
	sub	esp,4
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fsms_setmajrate
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	esi,[ebp-40]
	mov	[esp+8],esi
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fsms_define_groundcolor
	sub	esp,8
	mov	[esp],4
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	call	_fcreatesphere
	mov	[ebp-68],eax
	sub	esp,16
	mov	ebx,[ebp-24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,8
	mov	eax,[ebp-68]
	mov	[esp],eax
	mov	[esp+4],9
	call	_fentityfx
	mov	[ebp-72],0
	jmp	_75
_76
	sub	esp,8
	lea	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-168],eax
	sub	esp,4
	mov	ebx,_tcube
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,4
	mov	[esp],0
	call	_fcreatecube
	mov	ebx,[ebp-76]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,28
	mov	[esp],1056964608
	mov	[esp+4],1073741824
	call	_frnd
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[ebp-168],eax
	sub	esp,8
	mov	[esp],1056964608
	mov	[esp+4],1073741824
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-168]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[ebp-168],eax
	sub	esp,8
	mov	[esp],1056964608
	mov	[esp+4],1073741824
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-168]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-76]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fscaleentity
	sub	esp,28
	mov	[esp],0
	mov	[esp+4],1135869952
	call	_frnd
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[ebp-168],eax
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],1135869952
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-168]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[ebp-168],eax
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],1135869952
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-168]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-76]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fturnentity
	sub	esp,28
	mov	[esp],1069547520
	mov	[esp+4],1084227584
	call	_frnd
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[ebp-168],eax
	sub	esp,8
	mov	[esp],-1035468800
	mov	[esp+4],1112014848
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-168]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[ebp-168],eax
	sub	esp,8
	mov	[esp],-1035468800
	mov	[esp+4],1112014848
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-168]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-76]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	mov	eax,[ebp-76]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1065353216
	call	_fentityshininess
	sub	esp,20
	mov	ebx,[ebp-48]
	mov	[esp+12],ebx
	mov	esi,[ebp-52]
	mov	[esp+16],esi
	mov	esi,[ebp-44]
	mov	[esp+8],esi
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	eax,[ebp-76]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fsms_add_emetteur
	add	[ebp-72],1
_75
	cmp	[ebp-72],20
	jle	_76
_20
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],0
	call	_fcreateplane
	mov	[ebp-80],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-80]
	mov	[esp],eax
	call	_fmoveentity
	sub	esp,16
	mov	ebx,[ebp-36]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-40]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-32]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-80]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,8
	mov	eax,[ebp-80]
	mov	[esp],eax
	mov	[esp+4],9
	call	_fentityfx
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],18
	sub	esp,4
	mov	eax,_77
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-84],eax
	sub	esp,4
	mov	eax,[ebp-84]
	mov	[esp],eax
	call	_fsetfont
	call	_fmillisecs
	mov	[ebp-88],eax
	mov	[ebp-92],0
	mov	[ebp-96],1065353216
	mov	[ebp-100],2
_78
	call	_fmillisecs
	mov	[ebp-104],eax
	mov	ebx,[ebp-88]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-92]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp-104]
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-108],esi
	cmp	[ebp-108],60
	jle	_79
	mov	[ebp-112],1114636288
	jmp	_80
_79
	cmp	[ebp-108],2
	jge	_81
	mov	[ebp-112],1073741824
	jmp	_82
_81
	mov	ebx,[ebp-108]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-112],ebx
_82
_80
	mov	ebx,[ebp-92]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-112]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-92],ebx
	sub	esp,4
	mov	eax,[ebp-92]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1101004800
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,1101004800
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-116],ebx
	sub	esp,4
	mov	eax,[ebp-92]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1112014848
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,1084227584
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	esi,1092616192
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-120],esi
	sub	esp,4
	mov	eax,[ebp-92]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1101004800
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,1092616192
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-124],ebx
	sub	esp,20
	mov	ebx,[ebp-124]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-120]
	mov	[esp+8],esi
	mov	ebx,[ebp-116]
	mov	[esp+4],ebx
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	_fsms_setlightposition
	sub	esp,12
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	_fpointentity
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	call	_fmousexspeed
	neg	eax
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fturnentity
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	call	_fmouseyspeed
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fturnentity
	mov	ebx,eax
	call	_fmousezspeed
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-96],eax
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp-96]
	mov	[esp+12],esi
	mov	[esp+4],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fmoveentity
	sub	esp,24
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-128]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,4
	mov	[esp],2
	call	_fmousehit
	and	eax,eax
	jz	_83
	sub	esp,8
	mov	eax,[ebp-100]
	add	eax,1
	mov	[esp],eax
	mov	[esp+4],4
	call	__bbMod
	mov	[ebp-100],eax
_83
	sub	esp,8
	mov	ebx,[ebp-112]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1123024896
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	eax,[ebp-132]
	push	eax
	fld	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],1132396544
	call	__bbFMod
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-132],eax
	sub	esp,8
	mov	ebx,[ebp-112]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1125515264
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	eax,[ebp-136]
	push	eax
	fld	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],1132396544
	call	__bbFMod
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-136],eax
	sub	esp,8
	mov	ebx,[ebp-112]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1127481344
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	eax,[ebp-140]
	push	eax
	fld	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+4],1132396544
	call	__bbFMod
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-140],eax
	sub	esp,16
	mov	ebx,[ebp-136]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-140]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-132]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	_fsms_setlightcolor
	sub	esp,16
	mov	ebx,[ebp-100]
	mov	[esp+8],ebx
	mov	[esp+12],100
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	_fsms_update
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	mov	eax,[ebp-92]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-144]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_84
	mov	ebx,[ebp-92]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1148846080
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-144],ebx
	mov	ebx,[ebp-152]
	mov	[ebp-148],ebx
	mov	[ebp-152],0
	mov	ebx,[ebp-112]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-156],ebx
	jmp	_85
_84
	add	[ebp-152],1
_85
	sub	esp,12
	mov	[esp+4],200
	mov	[esp+8],150
	mov	[esp],180
	call	_fcolor
	sub	esp,20
	mov	[esp+12],64
	mov	[esp+16],1
	mov	[esp+8],354
	mov	[esp+4],10
	mov	[esp],2
	call	_frect
	sub	esp,12
	mov	[esp+4],50
	mov	[esp+8],50
	mov	[esp],50
	call	_fcolor
	sub	esp,20
	mov	[esp+12],58
	mov	[esp+16],1
	mov	[esp+8],348
	mov	[esp+4],13
	mov	[esp],5
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_86
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],20
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_87
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-168],eax
	sub	esp,4
	mov	ebx,[ebp-148]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],35
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_88
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-168],eax
	sub	esp,4
	mov	[ebp-172],eax
	mov	eax,ebx
	call	_ftrisrendered
	mov	ebx,eax
	mov	eax,[ebp-172]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],50
	mov	[esp],10
	call	_ftext
	sub	esp,12
	mov	[esp+4],120
	mov	[esp+8],50
	mov	[esp],180
	call	_fcolor
	sub	esp,20
	mov	[esp+12],30
	mov	[esp+16],1
	mov	[esp+8],200
	mov	[esp+4],12
	mov	[esp],500
	call	_frect
	sub	esp,12
	mov	[esp+4],50
	mov	[esp+8],55
	mov	[esp],50
	call	_fcolor
	sub	esp,20
	mov	[esp+12],24
	mov	[esp+16],1
	mov	[esp+8],194
	mov	[esp+4],15
	mov	[esp],503
	call	_frect
	sub	esp,12
	mov	[esp+4],120
	mov	[esp+8],250
	mov	[esp],0
	call	_fcolor
	mov	ebx,[ebp-100]
	mov	[ebp-160],ebx
	cmp	[ebp-160],0
	jz	_90
	cmp	[ebp-160],1
	jz	_91
	cmp	[ebp-160],2
	jz	_92
	cmp	[ebp-160],3
	jz	_93
	jmp	_89
_90
	sub	esp,8
	lea	eax,[ebp-164]
	mov	[esp],eax
	mov	[ebp-168],eax
	sub	esp,4
	mov	ebx,_94
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_89
_91
	sub	esp,8
	lea	eax,[ebp-164]
	mov	[esp],eax
	mov	[ebp-168],eax
	sub	esp,4
	mov	ebx,_95
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_89
_92
	sub	esp,8
	lea	eax,[ebp-164]
	mov	[esp],eax
	mov	[ebp-168],eax
	sub	esp,4
	mov	ebx,_96
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_89
_93
	sub	esp,8
	lea	eax,[ebp-164]
	mov	[esp],eax
	mov	[ebp-168],eax
	sub	esp,4
	mov	ebx,_97
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_89
_89
	sub	esp,32
	mov	eax,_98
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-168],eax
	sub	esp,4
	lea	ebx,[ebp-164]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],20
	mov	[esp],510
	call	_ftext
	call	_fmousex
	mov	[ebp-168],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-168]
	sub	ebx,20
	cmp	eax,ebx
	jle	_99
	sub	esp,8
	mov	[esp],30
	mov	[ebp-168],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[esp+4],ebx
	call	_fmovemouse
_99
	call	_fmousex
	cmp	eax,20
	jge	_100
	sub	esp,8
	call	_fgraphicswidth
	sub	eax,30
	mov	[esp],eax
	mov	[ebp-168],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[esp+4],ebx
	call	_fmovemouse
_100
	call	_fmousey
	mov	[ebp-168],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-168]
	sub	ebx,20
	cmp	eax,ebx
	jle	_101
	sub	esp,8
	call	_fmousex
	mov	[esp],eax
	mov	[esp+4],30
	call	_fmovemouse
_101
	call	_fmousey
	cmp	eax,20
	jge	_102
	sub	esp,8
	call	_fmousex
	mov	[esp],eax
	mov	[ebp-168],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-168]
	sub	ebx,30
	mov	[esp+4],ebx
	call	_fmovemouse
_102
	sub	esp,4
	mov	[esp],0
	call	_fflip
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	and	eax,eax
	jz	_78
_21
	call	_fend
	ret
_2_leave
	mov	[ebp-168],eax
	sub	esp,4
	mov	ebx,[ebp-128]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[ebp-168],eax
	sub	esp,4
	mov	esi,[ebp-164]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-168]
	mov	[ebp-168],eax
	sub	esp,4
	mov	esi,[ebp-76]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-168]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsms_init
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_tenv_sms_layer
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbObjStore
	cmp	[ebp+20],0
	jnz	_115
	sub	esp,4
	mov	[esp],0
	call	_fcreatemesh
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	jmp	_116
_115
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcreatemesh
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
_116
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcreatesurface
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],11
	call	_fentityfx
	call	_fmillisecs
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	mov	ebx,16
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	[ebp-8],32
	sub	esp,16
	mov	[esp+8],3
	mov	[esp+12],1
	mov	[esp+4],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcreatetexture
	mov	[ebp-12],eax
	call	_fgraphicsbuffer
	mov	[ebp-16],eax
	sub	esp,12
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-20],0
	jmp	_117
_118
	sub	esp,12
	mov	eax,[ebp-20]
	imul	eax,255
	mov	ecx,[ebp-8]
	cdq
	idiv	ecx
	mov	ebx,255
	sub	ebx,eax
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	imul	eax,255
	mov	ecx,[ebp-8]
	cdq
	idiv	ecx
	mov	esi,255
	sub	esi,eax
	mov	[esp+8],esi
	mov	eax,[ebp-20]
	imul	eax,255
	mov	ecx,[ebp-8]
	cdq
	idiv	ecx
	mov	esi,255
	sub	esi,eax
	mov	[esp],esi
	mov	eax,esi
	call	_fcolor
	mov	esi,eax
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	mov	[esp+8],1
	mov	[esp+4],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_frect
	add	[ebp-20],1
_117
	mov	ebx,[ebp-8]
	cmp	[ebp-20],ebx
	jle	_118
_24
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	esi,[ebp-12]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentitytexture
	mov	eax,0
	jmp	_23_leave
_23_leave
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsms_add_emetteur
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,48
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	cmp	[ebp+20],0
	jnz	_119
	mov	eax,0
	jmp	_25_leave
_119
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	mov	[ebp-4],eax
	cmp	[ebp-4],0
	jnz	_120
	mov	eax,0
	jmp	_25_leave
_120
	mov	[ebp-8],1
	jmp	_121
_122
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcounttriangles
	mov	[ebp-16],eax
	mov	ebx,[ebp-16]
	add	[ebp-20],ebx
	cmp	[ebp-16],0
	jle	_123
	add	[ebp-24],1
_123
	add	[ebp-8],1
_121
	mov	ebx,[ebp-4]
	cmp	[ebp-8],ebx
	jle	_122
_26
	cmp	[ebp-20],0
	jnz	_124
	mov	eax,0
	jmp	_25_leave
_124
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_tenv_sms_layer
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjLast
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-28]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_125
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fsms_init
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_tenv_sms_layer
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjLast
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbObjStore
_125
	mov	ebx,[ebp-28]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-28]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_tenv_sms_mesh
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+28]
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,[ebp-28]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	shl	ebx,byte 2
	mov	esi,[ebp-28]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	add	ebx,esi
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	__bbObjToHandle
	mov	[ebx],eax
	mov	ebx,[ebp+20]
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-24]
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	[ebp-8],1
	jmp	_126
_127
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcounttriangles
	mov	[ebp-16],eax
	cmp	[ebp-16],0
	jz	_128
	add	[ebp-36],1
	sub	esp,8
	lea	eax,[ebp-40]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_tenv_sms_surf
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-36]
	shl	ebx,byte 2
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	add	ebx,esi
	sub	esp,4
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	__bbObjToHandle
	mov	[ebx],eax
	mov	ebx,[ebp-12]
	mov	esi,[ebp-40]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-16]
	mov	esi,[ebp-40]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	[ebp-44],0
	jmp	_129
_130
	sub	esp,12
	mov	ebx,[ebp-44]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	ebx,[ebp-44]
	shl	ebx,byte 2
	mov	esi,[ebp-40]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	add	ebx,esi
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-44]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	ebx,[ebp-44]
	shl	ebx,byte 2
	mov	esi,[ebp-40]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	add	ebx,esi
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-44]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	ebx,[ebp-44]
	shl	ebx,byte 2
	mov	esi,[ebp-40]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	add	ebx,esi
	mov	[ebx],eax
	add	[ebp-44],1
_129
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-44],ebx
	jle	_130
_28
_128
	add	[ebp-8],1
_126
	mov	ebx,[ebp-4]
	cmp	[ebp-8],ebx
	jle	_127
_27
	mov	eax,0
	jmp	_25_leave
_25_leave
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[ebp-48],eax
	sub	esp,4
	mov	esi,[ebp-40]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-48]
	mov	[ebp-48],eax
	sub	esp,4
	mov	esi,[ebp-28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-48]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fsms_free_emetteur
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_mesh
	call	__bbObjEachFirst
	and	eax,eax
	jz	_30
_131
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,[ebp+20]
	jnz	_132
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	jmp	_30
_132
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_131
_30
	mov	eax,0
	jmp	_29_leave
_29_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsms_define_groundcolor
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tenv_sms_layer
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjLast
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,48
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,52
	mov	[esi],ebx
	mov	eax,0
	jmp	_31_leave
_31_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fsms_ratetime
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	call	_fmillisecs
	mov	[ebp-4],eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	add	ebx,esi
	mov	[ebp-8],ebx
	mov	ebx,[ebp-4]
	sub	ebx,[ebp-8]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	cmp	ebx,2
	jge	_133
	mov	ebx,1
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
_133
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	cmp	ebx,esi
	jle	_134
	mov	ebx,0
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	call	_fmillisecs
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	mov	ebx,0
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	mov	eax,1
	jmp	_32_leave
_134
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	mov	eax,0
	jmp	_32_leave
	mov	eax,0
	jmp	_32_leave
_32_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsms_setmajrate
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tenv_sms_layer
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjLast
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	eax,0
	jmp	_33_leave
_33_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsms_update
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_tenv_sms_layer
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjLast
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsms_ratetime
	cmp	eax,1
	jnz	_135
	mov	ebx,[ebp+28]
	mov	[ebp-8],ebx
	cmp	[ebp-8],0
	jz	_137
	cmp	[ebp-8],1
	jz	_138
	cmp	[ebp-8],2
	jz	_139
	jmp	_136
_137
	call	_fsms_noupdate
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,80
	mov	[esi],ebx
	jmp	_136
_138
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,80
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_140
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fsms_simple_shader
	mov	ebx,1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,80
	mov	[esi],ebx
_140
	jmp	_136
_139
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	esi,[ebp+32]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fsms_projection_shader
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,80
	mov	[esi],ebx
	jmp	_136
_136
_135
	mov	eax,0
	jmp	_34_leave
_34_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fsms_simple_shader
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,80
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_tenv_sms_layer
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjLast
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_141
	mov	eax,0
	jmp	_36_leave
_141
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_142
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fclearsurface
	mov	[ebp-12],1
	jmp	_143
_144
	sub	esp,16
	mov	eax,[ebp-12]
	shl	eax,byte 2
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_mesh
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	mov	edi,[ebp-16]
	mov	edi,[edi]
	add	edi,28
	mov	edi,[edi]
	sub	esi,edi
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,44
	mov	esi,[esi]
	mov	edi,[ebp-16]
	mov	edi,[edi]
	add	edi,20
	mov	edi,[edi]
	sub	esi,edi
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],3
	call	_fentityfx
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_145
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-24],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-28],eax
	sub	esp,20
	mov	[esp+12],0
	mov	esi,[ebp+24]
	mov	[esp+16],esi
	mov	esi,[ebp-28]
	mov	[esp+8],esi
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftformpoint
	call	_ftformedz
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_146
	mov	[ebp-32],1
	jmp	_147
_148
	sub	esp,16
	mov	eax,[ebp-32]
	shl	eax,byte 2
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_surf
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp-36]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-40],ebx
	mov	ebx,[ebp-36]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-44],ebx
	mov	[ebp-48],0
	jmp	_149
_150
	mov	[ebp-52],1
	mov	[ebp-56],0
	jmp	_151
_152
	sub	esp,12
	mov	ebx,[ebp-48]
	mov	[esp+4],ebx
	mov	esi,[ebp-56]
	mov	[esp+8],esi
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-60],eax
	sub	esp,8
	mov	eax,[ebp-40]
	mov	[esp],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-64],eax
	sub	esp,8
	mov	eax,[ebp-40]
	mov	[esp],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-68],eax
	sub	esp,8
	mov	eax,[ebp-40]
	mov	[esp],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-72],eax
	sub	esp,20
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-72]
	mov	[esp+8],esi
	mov	ebx,[ebp-64]
	mov	[esp+4],ebx
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_ftformpoint
	call	_ftformedy
	mov	ebx,[ebp-76]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-64],eax
	mov	eax,[ebp-64]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	and	eax,eax
	jz	_153
	call	_ftformedx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-68],eax
	call	_ftformedz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-72],eax
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	ebx,[ebp-72]
	mov	[esp+12],ebx
	mov	[esp+8],1008981770
	mov	ebx,[ebp-68]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-60],eax
	sub	esp,20
	mov	[esp+12],1065353216
	mov	[esp+16],0
	mov	[esp+8],0
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertexnormal
	jmp	_154
_153
	mov	[ebp-52],0
_154
	add	[ebp-56],1
_151
	cmp	[ebp-56],2
	jle	_152
_40
	cmp	[ebp-52],1
	jnz	_155
	sub	esp,16
	mov	ebx,[ebp-60]
	sub	ebx,1
	mov	[esp+8],ebx
	mov	esi,[ebp-60]
	mov	[esp+12],esi
	mov	esi,[ebp-60]
	sub	esi,2
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_faddtriangle
_155
	add	[ebp-48],1
_149
	mov	ebx,[ebp-44]
	sub	ebx,1
	cmp	[ebp-48],ebx
	jle	_150
_39
	add	[ebp-32],1
_147
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	[ebp-32],ebx
	jle	_148
_38
_146
_145
	add	[ebp-12],1
_143
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	[ebp-12],ebx
	jle	_144
_37
_142
	mov	eax,0
	jmp	_36_leave
_36_leave
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	esi,[ebp-36]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsms_projection_shader
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,168
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	mov	[ebp-128],ebx
	mov	[ebp-132],ebx
	mov	[ebp-136],ebx
	mov	[ebp-140],ebx
	mov	[ebp-144],ebx
	mov	[ebp-148],ebx
	mov	[ebp-152],ebx
	mov	[ebp-156],ebx
	mov	[ebp-160],ebx
	mov	[ebp-164],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-168],eax
	sub	esp,4
	mov	ebx,_tenv_sms_layer
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjLast
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_156
	mov	eax,0
	jmp	_41_leave
_156
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	mov	[ebp-24],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	[ebp-28],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,52
	mov	ebx,[ebx]
	mov	[ebp-32],ebx
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	mov	[ebp-36],ebx
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],3
	call	_fentityfx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_157
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fclearsurface
	mov	[ebp-40],1
	jmp	_158
_159
	sub	esp,16
	mov	eax,[ebp-40]
	shl	eax,byte 2
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_mesh
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-44]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_160
	sub	esp,8
	mov	eax,[ebp-44]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fentitydistance
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	__bbAbs
	cmp	eax,[ebp+28]
	jle	_161
	jmp	_162
_161
	sub	esp,8
	mov	eax,[ebp-44]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-52],eax
	sub	esp,8
	mov	eax,[ebp-44]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-56],eax
	sub	esp,8
	mov	eax,[ebp-44]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	eax,[ebp-44]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fmeshheight
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-64],eax
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[ebp-68],ebx
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-72],ebx
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[ebp-76],ebx
	sub	esp,20
	mov	[esp+12],0
	mov	esi,[ebp+24]
	mov	[esp+16],esi
	mov	esi,[ebp-60]
	mov	[esp+8],esi
	mov	ebx,[ebp-56]
	mov	[esp+4],ebx
	mov	eax,[ebp-52]
	mov	[esp],eax
	call	_ftformpoint
	call	_ftformedz
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_163
	mov	[ebp-80],1
	jmp	_164
_165
	sub	esp,16
	mov	eax,[ebp-80]
	shl	eax,byte 2
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_surf
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-84]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp-84]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-88],ebx
	mov	ebx,[ebp-84]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-92],ebx
	mov	[ebp-96],0
	jmp	_166
_167
	mov	[ebp-100],1
	mov	[ebp-104],0
	jmp	_168
_169
	mov	ebx,[ebp-104]
	mov	[ebp-108],ebx
	cmp	[ebp-108],0
	jz	_171
	cmp	[ebp-108],1
	jz	_172
	cmp	[ebp-108],2
	jz	_173
	jmp	_170
_171
	mov	ebx,[ebp-96]
	shl	ebx,byte 2
	mov	esi,[ebp-84]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	[ebp-112],ebx
	jmp	_170
_172
	mov	ebx,[ebp-96]
	shl	ebx,byte 2
	mov	esi,[ebp-84]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	[ebp-112],ebx
	jmp	_170
_173
	mov	ebx,[ebp-96]
	shl	ebx,byte 2
	mov	esi,[ebp-84]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	[ebp-112],ebx
	jmp	_170
_170
	sub	esp,8
	mov	eax,[ebp-88]
	mov	[esp],eax
	mov	ebx,[ebp-112]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-116],eax
	sub	esp,8
	mov	eax,[ebp-88]
	mov	[esp],eax
	mov	ebx,[ebp-112]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-120],eax
	sub	esp,8
	mov	eax,[ebp-88]
	mov	[esp],eax
	mov	ebx,[ebp-112]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-124],eax
	sub	esp,20
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-124]
	mov	[esp+8],esi
	mov	ebx,[ebp-116]
	mov	[esp+4],ebx
	mov	eax,[ebp-120]
	mov	[esp],eax
	call	_ftformpoint
	call	_ftformedy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-128],eax
	sub	esp,4
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-128]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-132],eax
	mov	ebx,[ebp-128]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-132]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-116],ebx
	mov	eax,[ebp-116]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	and	eax,eax
	jz	_174
	call	_ftformedx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-120],eax
	call	_ftformedz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-124],eax
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-120]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-136],ebx
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-124]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-140],ebx
	mov	ebx,[ebp-136]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-116]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-120]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-144],esi
	mov	ebx,[ebp-140]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-116]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-124]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-148],esi
	mov	ebx,[ebp-128]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-128],ebx
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	[esp+12],ebx
	mov	esi,[ebp-36]
	mov	[esp+16],esi
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	ebx,[ebp-148]
	mov	[esp+4],ebx
	mov	eax,[ebp-144]
	mov	[esp],eax
	call	_fsms_lightcoef
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-152],eax
	sub	esp,28
	mov	ebx,[ebp-128]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1112014848
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	esi,[ebp-148]
	mov	[esp+12],esi
	mov	esi,[ebp-144]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-112],eax
	sub	esp,16
	mov	ebx,[ebp-128]
	mov	[esp+8],ebx
	mov	esi,[ebp-152]
	mov	[esp+12],esi
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_fsms_smoothcolor
	mov	[ebp-156],eax
	sub	esp,16
	mov	ebx,[ebp-128]
	mov	[esp+8],ebx
	mov	esi,[ebp-152]
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	mov	[esp+4],esi
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fsms_smoothcolor
	mov	[ebp-160],eax
	sub	esp,16
	mov	ebx,[ebp-128]
	mov	[esp+8],ebx
	mov	esi,[ebp-152]
	mov	[esp+12],esi
	mov	esi,[ebp-32]
	mov	[esp+4],esi
	mov	eax,[ebp-76]
	mov	[esp],eax
	call	_fsms_smoothcolor
	mov	[ebp-164],eax
	sub	esp,24
	mov	ebx,[ebp-164]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	[esp+20],1065353216
	mov	esi,[ebp-160]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-156]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-112]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertexcolor
	jmp	_175
_174
	mov	[ebp-100],0
_175
	add	[ebp-104],1
_168
	cmp	[ebp-104],2
	jle	_169
_45
	cmp	[ebp-100],1
	jnz	_176
	sub	esp,16
	mov	ebx,[ebp-112]
	sub	ebx,1
	mov	[esp+8],ebx
	mov	esi,[ebp-112]
	mov	[esp+12],esi
	mov	esi,[ebp-112]
	sub	esi,2
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_faddtriangle
_176
	add	[ebp-96],1
_166
	mov	ebx,[ebp-92]
	sub	ebx,1
	cmp	[ebp-96],ebx
	jle	_167
_44
	add	[ebp-80],1
_164
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	[ebp-80],ebx
	jle	_165
_43
_163
_162
_160
	add	[ebp-40],1
_158
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	[ebp-40],ebx
	jle	_159
_42
_157
	mov	eax,0
	jmp	_41_leave
_41_leave
	mov	[ebp-168],eax
	sub	esp,4
	mov	ebx,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	[ebp-168],eax
	sub	esp,4
	mov	esi,[ebp-84]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-168]
	mov	[ebp-168],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-168]
	mov	[ebp-168],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-168]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fsms_noupdate
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tenv_sms_layer
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjLast
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_177
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fclearsurface
_177
	mov	eax,0
	jmp	_47_leave
_47_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsms_distance
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	mov	eax,[ebp+20]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_178
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_48_leave
_178
	mov	eax,[ebp+20]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_179
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_48_leave
_179
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_48_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_48_leave
_48_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsms_lightcoef
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+28]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp-8]
	sub	ebx,[ebp-12]
	mov	esi,[ebp-8]
	sub	esi,[ebp-12]
	imul	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	ebx,[ebp+36]
	mov	[esp+4],ebx
	call	_fsms_distance
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-24],eax
	mov	ebx,[ebp-24]
	mov	[_vg_coef],ebx
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_49_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_49_leave
_49_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fsms_smoothcolor
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+32]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	fmulp	st(1)
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,[ebp+32]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	eax,[ebp-4]
	jmp	_50_leave
	mov	eax,0
	jmp	_50_leave
_50_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fsms_boxmesh
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,0
	jmp	_51_leave
_51_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsms_createlight
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tenv_sms_light
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	cmp	[ebp+24],0
	jz	_180
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fcreatelight
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	jmp	_181
_180
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcreatelight
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
_181
	sub	esp,8
	mov	[esp],4
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fcreatesphere
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fhideentity
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjToHandle
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	_fnameentity
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	mov	ebx,[ebp+40]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_flightcolor
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],9
	call	_fentityfx
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_flightrange
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	jmp	_52_leave
	mov	eax,0
	jmp	_52_leave
_52_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	16
_fsms_meshvisible
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	eax,[ebp+24]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	and	eax,eax
	jz	_182
	sub	esp,4
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fhideentity
	jmp	_183
_182
	sub	esp,4
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fshowentity
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fentityalpha
_183
	mov	eax,0
	jmp	_53_leave
_53_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsms_setparent
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentityparent
	mov	eax,0
	jmp	_54_leave
_54_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsms_setlightposition
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	sub	esp,20
	mov	ebx,[ebp+32]
	mov	[esp+12],ebx
	mov	esi,[ebp+36]
	mov	[esp+16],esi
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpositionentity
	mov	eax,0
	jmp	_55_leave
_55_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fsms_setlighttranslate
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,20
	mov	ebx,[ebp+32]
	mov	[esp+12],ebx
	mov	esi,[ebp+36]
	mov	[esp+16],esi
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_ftranslateentity
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],eax
	mov	eax,0
	jmp	_56_leave
_56_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fsms_setlightmove
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,16
	mov	ebx,[ebp+28]
	mov	[esp+8],ebx
	mov	esi,[ebp+32]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fmoveentity
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],eax
	mov	eax,0
	jmp	_57_leave
_57_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fsms_getlightposx
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_58_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_58_leave
_58_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsms_getlightposy
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_59_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_59_leave
_59_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsms_getlightposz
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_60_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_60_leave
_60_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsms_setlightrotate
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	sub	esp,20
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	esi,[ebp+36]
	mov	[esp+16],esi
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_frotateentity
	mov	eax,0
	jmp	_61_leave
_61_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fsms_setlightturn
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,20
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	esi,[ebp+36]
	mov	[esp+16],esi
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fturnentity
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentitypitch
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityyaw
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityroll
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],eax
	mov	eax,0
	jmp	_62_leave
_62_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fsms_getlightrotx
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	jmp	_63_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_63_leave
_63_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsms_getlightroty
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	jmp	_64_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_64_leave
_64_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsms_getlightrotz
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	jmp	_65_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_65_leave
_65_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsms_setlightcolor
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	sub	esp,16
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+32]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_flightcolor
	sub	esp,16
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+32]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentitycolor
	mov	eax,0
	jmp	_66_leave
_66_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fsms_setlightcolorred
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_flightcolor
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentitycolor
	mov	eax,0
	jmp	_67_leave
_67_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsms_setlightcolorgreen
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_flightcolor
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentitycolor
	mov	eax,0
	jmp	_68_leave
_68_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsms_setlightcolorblue
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_flightcolor
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentitycolor
	mov	eax,0
	jmp	_69_leave
_69_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsms_getcolorr
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,32
	mov	eax,[eax]
	jmp	_70_leave
	mov	eax,0
	jmp	_70_leave
_70_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsms_getcolorg
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	jmp	_71_leave
	mov	eax,0
	jmp	_71_leave
_71_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsms_getcolorb
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,40
	mov	eax,[eax]
	jmp	_72_leave
	mov	eax,0
	jmp	_72_leave
_72_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsms_setlightrange
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_flightrange
	mov	eax,0
	jmp	_73_leave
_73_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsms_getrange
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tenv_sms_light
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_74_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_74_leave
_74_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	4
_vg_coef	.dd	0
_77	.db	"Comic Sans Ms",0
_86	.db	"Use MouseHit 2 to toggle Shadow rendering",0
_87	.db	" fps    :",0
_88	.db	" tris   :",0
_94	.db	" Off ",0
_95	.db	" One Time rende",0
_96	.db	" RealTime",0
_97	.db	" no Update",0
_98	.db	"Methode :",0
	.align	4
_3	.dd	6
	.dd	1001
	.dd	__bbIntType
	.align	4
_4	.dd	6
	.dd	1001
	.dd	__bbIntType
	.align	4
_5	.dd	6
	.dd	1001
	.dd	__bbIntType
	.align	4
_6	.dd	6
	.dd	4
	.dd	__bbFltType
	.align	4
_7	.dd	6
	.dd	4
	.dd	__bbFltType
	.align	4
_8	.dd	6
	.dd	4
	.dd	__bbFltType
	.align	4
_9	.dd	6
	.dd	4
	.dd	__bbFltType
	.align	4
_10	.dd	6
	.dd	4
	.dd	__bbFltType
	.align	4
_11	.dd	6
	.dd	4
	.dd	__bbFltType
	.align	4
_tenv_sms_layer	.dd	5
_103	.dd	0
	.dd	_103
	.dd	_103
	.dd	0
	.dd	-1
_104	.dd	0
	.dd	_104
	.dd	_104
	.dd	0
	.dd	-1
	.dd	21
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	_3
	.dd	_4
	.dd	_5
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	_6
	.dd	_7
	.dd	_8
	.dd	_9
	.dd	_10
	.dd	_11
	.dd	__bbIntType
	.align	4
_12	.dd	6
	.dd	21
	.dd	__bbIntType
	.align	4
_13	.dd	6
	.dd	21
	.dd	__bbIntType
	.align	4
_tenv_sms_mesh	.dd	5
_105	.dd	0
	.dd	_105
	.dd	_105
	.dd	0
	.dd	-1
_106	.dd	0
	.dd	_106
	.dd	_106
	.dd	0
	.dd	-1
	.dd	8
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	_12
	.dd	_13
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
_14	.dd	6
	.dd	65537
	.dd	__bbIntType
	.align	4
_15	.dd	6
	.dd	65537
	.dd	__bbIntType
	.align	4
_16	.dd	6
	.dd	65537
	.dd	__bbIntType
	.align	4
_tenv_sms_surf	.dd	5
_107	.dd	0
	.dd	_107
	.dd	_107
	.dd	0
	.dd	-1
_108	.dd	0
	.dd	_108
	.dd	_108
	.dd	0
	.dd	-1
	.dd	5
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	_14
	.dd	_15
	.dd	_16
	.align	4
_17	.dd	6
	.dd	5
	.dd	__bbFltType
	.align	4
_18	.dd	6
	.dd	5
	.dd	__bbFltType
	.align	4
_19	.dd	6
	.dd	5
	.dd	__bbFltType
	.align	4
_tenv_sms_boxmesh	.dd	5
_109	.dd	0
	.dd	_109
	.dd	_109
	.dd	0
	.dd	-1
_110	.dd	0
	.dd	_110
	.dd	_110
	.dd	0
	.dd	-1
	.dd	4
	.dd	__bbIntType
	.dd	_17
	.dd	_18
	.dd	_19
	.align	4
_tenv_sms_light	.dd	5
_111	.dd	0
	.dd	_111
	.dd	_111
	.dd	0
	.dd	-1
_112	.dd	0
	.dd	_112
	.dd	_112
	.dd	0
	.dd	-1
	.dd	12
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbFltType
	.align	4
_tcube	.dd	5
_113	.dd	0
	.dd	_113
	.dd	_113
	.dd	0
	.dd	-1
_114	.dd	0
	.dd	_114
	.dd	_114
	.dd	0
	.dd	-1
	.dd	1
	.dd	__bbIntType
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

