
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	[ebp-4],0
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	call	_fhidepointer
_9
	call	_fcls
	sub	esp,8
	mov	[esp],320
	mov	[esp+4],150
	call	_fdrawiso
	sub	esp,8
	call	_fmousex
	mov	[esp],eax
	mov	[ebp-8],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	_fplot
	sub	esp,40
	call	_fmousex
	sub	eax,320
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_10
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[ebp-12],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-12]
	sub	ebx,150
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,8
	call	_fmousex
	sub	eax,320
	mov	[esp],eax
	mov	[ebp-8],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-8]
	sub	ebx,150
	mov	[esp+4],ebx
	call	_fisocollision
	mov	[ebp-4],eax
	cmp	[ebp-4],0
	jle	_11
	cmp	[ebp-4],1
	jnz	_12
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_13
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],32
	mov	[esp],0
	call	_ftext
_12
	cmp	[ebp-4],1
	jle	_14
	sub	esp,32
	mov	eax,_15
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],32
	mov	[esp],0
	call	_ftext
_14
_11
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	and	eax,eax
	jz	_9
_3
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_frrectcollision
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+28]
	sar	ebx,byte 1
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1075838976
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+20]
	sar	esi,byte 1
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	sub	esp,4
	mov	eax,[ebp+36]
	mov	[esp],eax
	call	_fcos
	fmulp	st(1)
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1075838976
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsin
	mov	ebx,eax
	mov	eax,[ebp-12]
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp+28]
	sar	ebx,byte 1
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	mov	ebx,1068708659
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-4],eax
	mov	ebx,[ebp+28]
	sar	ebx,byte 1
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1075838976
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+20]
	sar	esi,byte 1
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	sub	esp,4
	mov	eax,[ebp+36]
	mov	[esp],eax
	call	_fsin
	fchs
	fmulp	st(1)
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1075838976
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcos
	mov	ebx,eax
	mov	eax,[ebp-12]
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	mov	ebx,1068708659
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1077936128
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-8],eax
	cmp	[ebp-4],0
	setl	al
	movzx	eax,al
	mov	[ebp-12],eax
	mov	ebx,[ebp+28]
	sar	ebx,byte 1
	cmp	[ebp-4],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	or	eax,ebx
	mov	[ebp-12],eax
	mov	ebx,[ebp+32]
	cmp	[ebp-8],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	or	eax,ebx
	mov	[ebp-12],eax
	mov	ebx,[ebp+32]
	add	ebx,[ebp+32]
	cmp	[ebp-8],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	or	eax,ebx
	and	eax,eax
	jz	_16
	mov	eax,1
	jmp	_4_leave
_16
	mov	eax,0
	jmp	_4_leave
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fisocollision
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	cmp	[ebp+20],0
	setl	al
	movzx	eax,al
	mov	[ebp-16],eax
	cmp	[ebp+20],64
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	or	eax,ebx
	mov	[ebp-16],eax
	cmp	[ebp+24],0
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	cmp	[ebp-4],32
	mov	eax,esi
	setg	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-16]
	or	ebx,esi
	or	eax,ebx
	and	eax,eax
	jz	_17
	mov	eax,0
	jmp	_5_leave
_17
	mov	[ebp-4],0
	jmp	_18
_19
	mov	[ebp-8],0
	jmp	_20
_21
	mov	eax,[ebp-12]
	neg	eax
	add	eax,32
	add	eax,[ebp-8]
	cmp	[ebp+20],eax
	setz	al
	movzx	eax,al
	mov	[ebp-16],eax
	mov	ebx,[ebp-12]
	add	ebx,32
	sub	ebx,[ebp-8]
	cmp	[ebp+20],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	or	eax,ebx
	mov	[ebp-16],eax
	mov	ebx,[ebp-4]
	cmp	[ebp+24],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	and	eax,ebx
	and	eax,eax
	jz	_22
	mov	eax,1
	jmp	_5_leave
_22
	add	[ebp-8],1
_20
	mov	ebx,[ebp-12]
	cmp	[ebp-8],ebx
	jle	_21
_7
	cmp	[ebp-4],16
	jl	_23
	sub	[ebp-12],2
	jmp	_24
_23
	add	[ebp-12],2
_24
	add	[ebp-4],1
_18
	cmp	[ebp-4],32
	jle	_19
_6
	cmp	[ebp+20],64
	setl	al
	movzx	eax,al
	mov	[ebp-16],eax
	cmp	[ebp+24],32
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	and	eax,ebx
	and	eax,eax
	jz	_25
	mov	eax,[ebp+24]
	sar	eax,byte 4
	shl	eax,byte 1
	mov	ebx,[ebp+20]
	sar	ebx,byte 5
	add	eax,ebx
	add	eax,2
	jmp	_5_leave
_25
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdrawiso
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	[esp+12],32
	mov	[esp+16],0
	mov	[esp+8],64
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_frect
	sub	esp,16
	mov	ebx,[ebp+20]
	add	ebx,61
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	add	esi,16
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	add	eax,31
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp+20]
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	add	esi,16
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	add	eax,31
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp+20]
	add	ebx,63
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	add	esi,16
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	add	esi,31
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	add	eax,31
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp+20]
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	add	esi,16
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	add	esi,31
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	add	eax,31
	mov	[esp],eax
	call	_fline
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
_10	.db	" : ",0
_13	.db	"Collision !!!",0
_15	.db	"Border :   ",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

