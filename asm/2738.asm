
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fgraphicswidth
	mov	[_vscreenwidth],eax
	call	_fgraphicsheight
	mov	[_vscreenheight],eax
	sub	esp,8
	mov	[esp],_vtitle
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_8
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-4],0
	jmp	_9
_10
	sub	esp,56
	mov	[esp+48],255
	mov	[esp+52],255
	mov	[esp+44],255
	mov	[esp+40],0
	mov	[esp+36],192
	mov	[esp+32],0
	mov	[esp+28],0
	mov	[esp+24],0
	mov	[esp+20],128
	mov	[esp+16],1106247680
	mov	[esp+12],0
	mov	[esp+8],1133903872
	mov	esi,[ebp-4]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	sub	esp,4
	mov	eax,_11
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fupdatebar
	add	[ebp-4],2
_9
	cmp	[ebp-4],300
	jle	_10
_3
	mov	[ebp-8],0
	jmp	_12
_13
	sub	esp,56
	mov	[esp+48],255
	mov	[esp+52],255
	mov	[esp+44],255
	mov	[esp+40],0
	mov	[esp+36],192
	mov	[esp+32],0
	mov	[esp+28],0
	mov	[esp+24],0
	mov	[esp+20],128
	mov	[esp+16],1120403456
	mov	[esp+12],1106247680
	mov	[esp+8],1148846080
	mov	esi,[ebp-8]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	sub	esp,4
	mov	eax,_14
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fupdatebar
	add	[ebp-8],4
_12
	cmp	[ebp-8],1000
	jle	_13
_4
	call	_fcls
	sub	esp,8
	mov	eax,_15
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	call	_fwaitkey
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fupdatebar
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	ebx,[_vscreenwidth]
	sar	ebx,byte 1
	mov	[ebp-12],ebx
	mov	[ebp-16],18
	mov	ebx,[_vscreenwidth]
	sar	ebx,byte 1
	mov	[ebp-20],ebx
	mov	ebx,[_vscreenheight]
	sar	ebx,byte 1
	mov	[ebp-24],ebx
	mov	ebx,[ebp-20]
	mov	esi,[ebp-12]
	sar	esi,byte 1
	sub	ebx,esi
	mov	[ebp-28],ebx
	mov	ebx,[ebp-24]
	mov	esi,[ebp-16]
	sar	esi,byte 1
	sub	ebx,esi
	mov	[ebp-32],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,1120403456
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_16
	call	_fend
_16
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1120403456
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	ebx,1120403456
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-8],esi
	sub	esp,28
	mov	ebx,[ebp+44]
	mov	[esp+20],ebx
	mov	esi,[ebp+48]
	mov	[esp+24],esi
	mov	esi,[ebp+40]
	mov	[esp+16],esi
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fdrawbar
	sub	esp,28
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+56]
	mov	[esp+20],esi
	mov	edi,[ebp+60]
	mov	[esp+24],edi
	mov	edi,[ebp+52]
	mov	[esp+16],edi
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	esi,[ebp-32]
	mov	[esp+4],esi
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fdrawbar
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-12]
	add	esi,1
	mov	[esp+8],esi
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_frect
	sub	esp,28
	mov	ebx,[ebp+44]
	mov	[esp+20],ebx
	mov	esi,[ebp+48]
	mov	[esp+24],esi
	mov	esi,[ebp+40]
	mov	[esp+16],esi
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	ebx,[ebp-32]
	add	ebx,[ebp-16]
	add	ebx,3
	mov	[esp+4],ebx
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fdrawbar
	sub	esp,28
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+56]
	mov	[esp+20],esi
	mov	edi,[ebp+60]
	mov	[esp+24],edi
	mov	edi,[ebp+52]
	mov	[esp+16],edi
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	esi,[ebp-32]
	add	esi,[ebp-16]
	add	esi,3
	mov	[esp+4],esi
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fdrawbar
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-12]
	add	esi,1
	mov	[esp+8],esi
	mov	ebx,[ebp-32]
	add	ebx,[ebp-16]
	add	ebx,3
	mov	[esp+4],ebx
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	ebx,[ebp+68]
	mov	[esp+4],ebx
	mov	esi,[ebp+72]
	mov	[esp+8],esi
	mov	eax,[ebp+64]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,_vtitle
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	ebx,[ebp-24]
	sub	ebx,18
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftext
	sub	esp,32
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_17
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],1
	mov	[esp+16],1
	mov	ebx,[ebp-24]
	sub	ebx,1
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	ebx,[ebp-24]
	add	ebx,[ebp-16]
	add	ebx,2
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 56
	.align	16
_fdrawbar
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-4],0
	jmp	_18
_19
	sub	esp,12
	mov	ebx,[ebp+40]
	mov	[esp+4],ebx
	mov	esi,[ebp+44]
	mov	[esp+8],esi
	mov	eax,[ebp+36]
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp+20]
	add	ebx,[ebp+28]
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	add	esi,[ebp-4]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	add	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fline
	add	[ebp-4],1
_18
	mov	ebx,[ebp+32]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_19
_7
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 28
	.align	4
_vscreenwidth	.dd	0
	.align	4
_vscreenheight	.dd	0
	.align	4
_vtitle	.dd	0
_8	.db	"Loading Bar Demo",0
_11	.db	"Task 1",0
_14	.db	"Task 2",0
_15	.db	"Finished!",0
_17	.db	"%",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

