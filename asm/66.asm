
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],0
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,12
	mov	[esp+4],300
	mov	[esp+8],1
	mov	[esp],400
	call	_fcreateimage
	mov	[ebp-4],eax
	sub	esp,4
	call	_ffrontbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-8],0
	jmp	_5
_6
	sub	esp,20
	mov	[esp],1132396544
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-24],eax
	sub	esp,8
	mov	[esp],1132396544
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-24]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[ebp-24],eax
	sub	esp,8
	mov	[esp],1132396544
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-24]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcolor
	mov	ebx,eax
	sub	esp,28
	mov	[esp],1137180672
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[ebp-24],eax
	sub	esp,8
	mov	[esp],1133903872
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-24]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	[esp+4],0
	sub	esp,8
	mov	[esp],1137180672
	mov	[esp+4],0
	call	_frnd
	mov	esi,1137180672
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp],esi
	mov	eax,esi
	call	_frect
	mov	esi,eax
	add	[ebp-8],1
_5
	cmp	[ebp-8],20
	jle	_6
_3
	sub	esp,40
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+28],eax
	mov	[ebp-24],eax
	mov	eax,ebx
	call	_ffrontbuffer
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+24],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	mov	[esp+12],300
	mov	[esp+8],400
	mov	[esp+4],0
	mov	[esp],400
	call	_fcopyrect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_7
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],10
	mov	[esp],10
	call	_ftext
	sub	esp,4
	mov	[esp],3000
	call	_fdelay
	call	_fmillisecs
	mov	[ebp-12],eax
	mov	[ebp-8],0
	jmp	_8
_9
	sub	esp,32
	call	_ffrontbuffer
	mov	[esp+24],eax
	mov	[esp+28],0
	mov	[esp+20],0
	mov	esi,400
	sub	esi,[ebp-8]
	mov	[esp+16],esi
	mov	[esp+12],300
	mov	[esp+8],1
	mov	[esp+4],0
	mov	eax,400
	add	eax,[ebp-8]
	mov	[esp],eax
	call	_fcopyrect
	add	[ebp-8],1
_8
	cmp	[ebp-8],400
	jle	_9
_4
	call	_fmillisecs
	sub	eax,[ebp-12]
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],4000
	call	_fdelay
	call	_fcls
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_10
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],10
	mov	[esp],10
	call	_ftext
	sub	esp,4
	mov	[esp],3000
	call	_fdelay
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],400
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fdrawimage
	call	_fmillisecs
	mov	[ebp-12],eax
	sub	esp,12
	mov	[esp+4],-1082130432
	mov	[esp+8],1065353216
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fscaleimage
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],400
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fdrawimage
	call	_fmillisecs
	sub	eax,[ebp-12]
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_11
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],450
	mov	[esp],10
	call	_ftext
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],32
	mov	[esp],255
	call	_fcolor
	sub	esp,32
	mov	eax,_12
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],475
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_13
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],500
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_14
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],550
	mov	[esp],10
	call	_ftext
	call	_fwaitkey
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
_7	.db	"Flip Image Using CopyRect",0
_10	.db	"Flip Image Using ScaleImage",0
_11	.db	"Total Time in Milisecs to flip 400 x 300 Image",0
_12	.db	"CopyRect Time: ",0
_13	.db	"ScaleImage Time: ",0
_14	.db	"Hit any key to exit.",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

