
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	call	_fflushmouse
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],0
	mov	[esp+4],768
	mov	[esp],1024
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	mov	eax,_18
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[_vexample_1],eax
	sub	esp,8
	mov	eax,_19
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[_vexample_2],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vexample_1]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,20
	mov	eax,[_vexample_1]
	mov	[esp],eax
	call	_fimagewidth
	sar	eax,byte 1
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+4],100
	mov	eax,[_vexample_1]
	mov	[esp],eax
	call	_fdisplayaveragefromimage
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,24
	mov	eax,[_vexample_1]
	mov	[esp],eax
	call	_fimageheight
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1069547520
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[ebp-4],eax
	sub	esp,4
	mov	esi,_20
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-4]
	mov	[esp+8],esi
	mov	[esp],0
	mov	eax,ebx
	call	_ftext
	mov	ebx,eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],512
	mov	eax,[_vexample_2]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,20
	mov	eax,[_vexample_2]
	mov	[esp],eax
	call	_fimagewidth
	sar	eax,byte 1
	add	eax,512
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+4],100
	mov	eax,[_vexample_2]
	mov	[esp],eax
	call	_fdisplayaveragefromimage
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,24
	mov	eax,[_vexample_1]
	mov	[esp],eax
	call	_fimageheight
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1069547520
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[ebp-4],eax
	sub	esp,4
	mov	esi,_21
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-4]
	mov	[esp+8],esi
	mov	[esp],512
	mov	eax,ebx
	call	_ftext
	mov	ebx,eax
	sub	esp,16
	mov	[esp+8],512
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vexample_1]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,20
	mov	eax,[_vexample_1]
	mov	[esp],eax
	call	_fimagewidth
	sar	eax,byte 1
	mov	[esp+8],eax
	mov	[esp+12],512
	mov	[esp+4],25
	mov	eax,[_vexample_1]
	mov	[esp],eax
	call	_fdisplayaveragefromimage
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,24
	mov	eax,[_vexample_1]
	mov	[esp],eax
	call	_fimageheight
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1069547520
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1140850688
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp],0
	call	_ftext
	sub	esp,16
	mov	[esp+8],512
	mov	[esp+12],0
	mov	[esp+4],512
	mov	eax,[_vexample_2]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,20
	mov	eax,[_vexample_2]
	mov	[esp],eax
	call	_fimagewidth
	sar	eax,byte 1
	add	eax,512
	mov	[esp+8],eax
	mov	[esp+12],512
	mov	[esp+4],25
	mov	eax,[_vexample_2]
	mov	[esp],eax
	call	_fdisplayaveragefromimage
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,24
	mov	eax,[_vexample_2]
	mov	[esp],eax
	call	_fimageheight
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1069547520
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1140850688
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_23
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp],512
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitmouse
	call	_fcls
	jmp	_25
_24
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,24
	mov	eax,[_vexample_1]
	mov	[esp],eax
	call	_fimageheight
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1069547520
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[ebp-4],eax
	sub	esp,4
	mov	esi,_26
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-4]
	mov	[esp+8],esi
	mov	[esp],0
	mov	eax,ebx
	call	_ftext
	mov	ebx,eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vexample_1]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,12
	mov	ebx,[_vexample_2]
	mov	[esp+4],ebx
	mov	[esp+8],16
	mov	eax,[_vexample_1]
	mov	[esp],eax
	call	_fcolourmorph
	sub	esp,4
	mov	[esp],1
	call	_fflip
_25
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_24
_3
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcolourmorph
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fimagewidth
	mov	ebx,eax
	mov	eax,[ebp-28]
	cmp	eax,ebx
	setnz	al
	movzx	eax,al
	mov	[ebp-28],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fimageheight
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[ebp-32],eax
	sub	esp,4
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	eax,esi
	call	_fimageheight
	mov	esi,eax
	mov	eax,[ebp-32]
	cmp	ebx,esi
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	or	eax,ebx
	and	eax,eax
	jz	_27
	sub	esp,16
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fimageheight
	mov	ebx,eax
	mov	eax,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fresizeimage
	mov	ebx,eax
_27
	mov	[ebp-12],0
	jmp	_28
_29
	mov	[ebp-16],0
	jmp	_30
_31
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fgetcolor
	sub	esp,12
	call	_fcolorgreen
	mov	[esp+4],eax
	mov	[ebp-28],eax
	mov	eax,ebx
	call	_fcolorblue
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+8],ebx
	mov	[ebp-28],eax
	mov	eax,ebx
	call	_fcolorred
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fgetrgbinteger
	mov	ebx,eax
	mov	[ebp-20],ebx
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fgetcolor
	sub	esp,12
	call	_fcolorgreen
	mov	[esp+4],eax
	mov	[ebp-28],eax
	mov	eax,ebx
	call	_fcolorblue
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+8],ebx
	mov	[ebp-28],eax
	mov	eax,ebx
	call	_fcolorred
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fgetrgbinteger
	mov	ebx,eax
	mov	[ebp-24],ebx
	sub	esp,28
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fsmoothcolour
	mov	[esp],eax
	call	_fgetgreencomponent
	mov	[esp+4],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	[ebp-32],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	esi,[ebp-24]
	mov	[esp],esi
	mov	eax,esi
	call	_fsmoothcolour
	mov	esi,eax
	mov	eax,[ebp-32]
	mov	[esp],esi
	mov	eax,esi
	call	_fgetbluecomponent
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	[esp+8],esi
	mov	[ebp-28],eax
	sub	esp,4
	mov	[ebp-32],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	esi,[ebp-24]
	mov	[esp],esi
	mov	eax,esi
	call	_fsmoothcolour
	mov	esi,eax
	mov	eax,[ebp-32]
	mov	[esp],esi
	mov	eax,esi
	call	_fgetredcomponent
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	[esp],esi
	mov	eax,esi
	call	_fcolor
	mov	esi,eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fplot
	add	[ebp-16],1
_30
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	cmp	[ebp-16],eax
	jle	_31
_6
	add	[ebp-12],1
_28
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	cmp	[ebp-12],eax
	jle	_29
_5
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fsmoothcolour
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,4
	mov	eax,[ebp+28]
	mov	[esp],eax
	call	__bbAbs
	mov	[ebp+28],eax
	cmp	[ebp+28],0
	jnz	_32
	mov	[ebp+28],1
_32
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetredcomponent
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fgetredcomponent
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetgreencomponent
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fgetgreencomponent
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetbluecomponent
	mov	[ebp-20],eax
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fgetbluecomponent
	mov	[ebp-24],eax
	sub	esp,4
	mov	eax,[ebp-8]
	sub	eax,[ebp-4]
	mov	[esp],eax
	call	__bbSgn
	mov	[ebp-28],eax
	sub	esp,4
	mov	eax,[ebp-16]
	sub	eax,[ebp-12]
	mov	[esp],eax
	call	__bbSgn
	mov	[ebp-32],eax
	sub	esp,4
	mov	eax,[ebp-24]
	sub	eax,[ebp-20]
	mov	[esp],eax
	call	__bbSgn
	mov	[ebp-36],eax
	sub	esp,4
	mov	eax,[ebp-4]
	add	eax,[ebp-28]
	sub	eax,[ebp-8]
	mov	[esp],eax
	call	__bbSgn
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	sub	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbSgn
	mov	ebx,eax
	mov	eax,[ebp-40]
	cmp	eax,ebx
	jz	_33
	mov	ebx,[ebp-28]
	imul	ebx,[ebp+28]
	add	[ebp-4],ebx
	jmp	_34
_33
	mov	ebx,[ebp-8]
	mov	[ebp-4],ebx
_34
	sub	esp,4
	mov	eax,[ebp-12]
	add	eax,[ebp-32]
	sub	eax,[ebp-16]
	mov	[esp],eax
	call	__bbSgn
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	sub	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbSgn
	mov	ebx,eax
	mov	eax,[ebp-40]
	cmp	eax,ebx
	jz	_35
	mov	ebx,[ebp-32]
	imul	ebx,[ebp+28]
	add	[ebp-12],ebx
	jmp	_36
_35
	mov	ebx,[ebp-16]
	mov	[ebp-12],ebx
_36
	sub	esp,4
	mov	eax,[ebp-20]
	add	eax,[ebp-36]
	sub	eax,[ebp-24]
	mov	[esp],eax
	call	__bbSgn
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	sub	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbSgn
	mov	ebx,eax
	mov	eax,[ebp-40]
	cmp	eax,ebx
	jz	_37
	mov	ebx,[ebp-36]
	imul	ebx,[ebp+28]
	add	[ebp-20],ebx
	jmp	_38
_37
	mov	ebx,[ebp-24]
	mov	[ebp-20],ebx
_38
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	esi,[ebp-20]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fgetrgbinteger
	jmp	_7_leave
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fdisplayaveragefromimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fgetaveragecolourvalue
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fgetredcomponent
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fgetgreencomponent
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fgetbluecomponent
	mov	[ebp-16],eax
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcolor
	sub	esp,24
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	mov	[esp+12],eax
	mov	[esp+16],1
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fimagewidth
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+8],ebx
	mov	esi,[ebp+32]
	mov	[esp+4],esi
	mov	eax,[ebp+28]
	mov	[esp],eax
	call	_frect
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fgetredcomponent
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	mov	[ebp-8],eax
	cmp	[ebp-8],7
	jge	_39
	mov	eax,0
	jmp	_9_leave
_39
	mov	ebx,[ebp-8]
	sub	ebx,6
	mov	[ebp-12],ebx
	sub	esp,16
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp],eax
	call	__bbStrToInt
	jmp	_9_leave
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fgetgreencomponent
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	mov	[ebp-8],eax
	cmp	[ebp-8],3
	jge	_40
	mov	eax,0
	jmp	_10_leave
_40
	mov	ebx,[ebp-8]
	sub	ebx,3
	mov	[ebp-12],ebx
	sub	esp,28
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp],eax
	mov	[esp+4],3
	call	_fright
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	jmp	_10_leave
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fgetbluecomponent
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,20
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_42
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setge	al
	movzx	eax,al
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	call	_flen
	and	eax,eax
	jz	_41
	sub	esp,20
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],3
	call	_fright
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_41
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	jmp	_11_leave
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fgetaveragecolourvalue
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	cmp	[ebp+24],0
	setl	al
	movzx	eax,al
	mov	[ebp-40],eax
	cmp	[ebp+24],100
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-40]
	or	eax,ebx
	and	eax,eax
	jz	_43
	mov	[ebp+24],25
_43
	cmp	[ebp+20],0
	jle	_44
	mov	[ebp-4],0
	mov	[ebp-8],0
	mov	[ebp-12],0
	mov	[ebp-16],0
	mov	[ebp-20],0
	mov	[ebp-24],0
	mov	[ebp-28],0
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-32],0
	jmp	_45
_46
	mov	[ebp-36],0
	jmp	_47
_48
	sub	esp,8
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	call	_fgetcolor
	add	[ebp-28],1
	call	_fcolorred
	add	[ebp-4],eax
	call	_fcolorgreen
	add	[ebp-8],eax
	call	_fcolorblue
	add	[ebp-12],eax
	add	[ebp-36],1
_47
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	cmp	[ebp-36],eax
	jle	_48
_14
	add	[ebp-32],1
_45
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	cmp	[ebp-32],eax
	jle	_46
_13
	mov	eax,[ebp-4]
	mov	ecx,[ebp-28]
	cdq
	idiv	ecx
	mov	[ebp-16],eax
	mov	eax,[ebp-8]
	mov	ecx,[ebp-28]
	cdq
	idiv	ecx
	mov	[ebp-20],eax
	mov	eax,[ebp-12]
	mov	ecx,[ebp-28]
	cdq
	idiv	ecx
	mov	[ebp-24],eax
	cmp	[ebp+24],100
	jz	_49
	mov	[ebp-28],0
	mov	[ebp-4],0
	mov	[ebp-8],0
	mov	[ebp-12],0
	mov	[ebp-32],0
	jmp	_50
_51
	mov	[ebp-36],0
	jmp	_52
_53
	sub	esp,8
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	call	_fgetcolor
	add	[ebp-28],1
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1076090634
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	sub	esp,4
	call	_fcolorred
	sub	eax,[ebp-16]
	mov	[esp],eax
	call	__bbAbs
	push	eax
	fild	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_54
	call	_fcolorred
	add	[ebp-4],eax
_54
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1076090634
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	sub	esp,4
	call	_fcolorred
	sub	eax,[ebp-20]
	mov	[esp],eax
	call	__bbAbs
	push	eax
	fild	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_55
	call	_fcolorgreen
	add	[ebp-8],eax
_55
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1076090634
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	sub	esp,4
	call	_fcolorblue
	sub	eax,[ebp-24]
	mov	[esp],eax
	call	__bbAbs
	push	eax
	fild	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_56
	call	_fcolorblue
	add	[ebp-12],eax
_56
	add	[ebp-36],1
_52
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	cmp	[ebp-36],eax
	jle	_53
_16
	add	[ebp-32],1
_50
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	cmp	[ebp-32],eax
	jle	_51
_15
	mov	eax,[ebp-4]
	mov	ecx,[ebp-28]
	cdq
	idiv	ecx
	mov	[ebp-16],eax
	mov	eax,[ebp-8]
	mov	ecx,[ebp-28]
	cdq
	idiv	ecx
	mov	[ebp-20],eax
	mov	eax,[ebp-12]
	mov	ecx,[ebp-28]
	cdq
	idiv	ecx
	mov	[ebp-24],eax
_49
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	esi,[ebp-24]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fgetrgbinteger
	jmp	_12_leave
_44
	mov	eax,0
	jmp	_12_leave
_12_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fgetrgbinteger
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	sub	esp,40
	mov	eax,_57
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[esp+4],3
	call	_fright
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,8
	mov	[ebp-8],eax
	sub	esp,8
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_58
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	[ebp-12],eax
	sub	esp,4
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrFromInt
	mov	esi,eax
	mov	eax,[ebp-12]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	[esp+4],3
	mov	eax,ebx
	call	_fright
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,8
	mov	[ebp-8],eax
	sub	esp,8
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_59
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	[ebp-12],eax
	sub	esp,4
	mov	esi,[ebp+28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrFromInt
	mov	esi,eax
	mov	eax,[ebp-12]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	[esp+4],3
	mov	eax,ebx
	call	_fright
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	__bbStrToInt
	jmp	_17_leave
	mov	eax,0
	jmp	_17_leave
_17_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	4
_vexample_1	.dd	0
_18	.db	"example1.bmp",0
	.align	4
_vexample_2	.dd	0
_19	.db	"example2.bmp",0
_20	.db	"Average Image Colouration Full Tolerance Example 1",0
_21	.db	"Average Image Colouration Full Tolerance Example 2",0
_22	.db	"Average Image Colouration Low Tolerance Example 1",0
_23	.db	"Average Image Colouration Low Tolerance Example 2",0
_26	.db	"Colour Morphing Example",0
_42	.db	"3",0
_57	.db	"000",0
_58	.db	"000",0
_59	.db	"000",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

