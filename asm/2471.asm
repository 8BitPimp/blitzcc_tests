
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	sub	esp,12
	mov	eax,_13
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_14
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],768
	mov	[esp],1024
	call	_fgraphics
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],128
	mov	[esp],128
	call	_fclscolor
	sub	esp,12
	call	_fgraphicsheight
	sub	eax,200
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,200
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcreateimage
	mov	ebx,eax
	mov	[_vtestimage],ebx
	sub	esp,12
	mov	eax,[_vtestimage]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,20
	call	_fgraphicsheight
	sub	eax,200
	mov	[esp+12],eax
	mov	[esp+16],1
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,200
	mov	[esp+8],ebx
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],24
	sub	esp,4
	mov	eax,_15
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[_vfont],eax
	sub	esp,4
	mov	eax,[_vfont]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	[esp],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-4]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	call	_fmovemouse
	call	_fhidepointer
	jmp	_17
_16
	call	_fcls
	sub	esp,16
	mov	[esp+8],100
	mov	[esp+12],0
	mov	[esp+4],100
	mov	eax,[_vtestimage]
	mov	[esp],eax
	call	_fdrawblock
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_18
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],26
	call	_fgraphicswidth
	sar	eax,byte 1
	add	eax,1
	mov	[esp],eax
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_19
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],25
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	[esp],eax
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_20
	sub	esp,12
	mov	eax,[_vtestimage]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[_vpaintgreen]
	mov	[esp+4],ebx
	mov	esi,[_vpaintblue]
	mov	[esp+8],esi
	mov	eax,[_vpaintred]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	[esp+12],21
	mov	[esp+16],1
	mov	[esp+8],21
	call	_fmousey
	sub	eax,110
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,110
	mov	[esp],ebx
	mov	eax,ebx
	call	_foval
	mov	ebx,eax
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
_20
	sub	esp,4
	mov	[esp],57
	call	_fkeyhit
	and	eax,eax
	jz	_21
	sub	esp,12
	mov	eax,[_vtestimage]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	call	_fgraphicsheight
	sub	eax,200
	mov	[esp+12],eax
	mov	[esp+16],1
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,200
	mov	[esp+8],ebx
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
_21
	sub	esp,4
	mov	[esp],28
	call	_fkeyhit
	and	eax,eax
	jz	_22
	sub	esp,12
	mov	[esp+4],192
	mov	[esp+8],192
	mov	[esp],192
	call	_fcolor
	sub	esp,12
	mov	ebx,[_vpaintgreen]
	mov	[esp+4],ebx
	mov	esi,[_vpaintblue]
	mov	[esp+8],esi
	mov	eax,[_vpaintred]
	mov	[esp],eax
	call	_fpickcolor
	mov	ebx,[_vpickedred]
	mov	[_vpaintred],ebx
	mov	ebx,[_vpickedgreen]
	mov	[_vpaintgreen],ebx
	mov	ebx,[_vpickedblue]
	mov	[_vpaintblue],ebx
	sub	esp,4
	mov	eax,[_vfont]
	mov	[esp],eax
	call	_fsetfont
_22
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],3
	mov	[esp+16],1
	mov	[esp+8],20
	call	_fmousey
	sub	eax,1
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,20
	mov	[esp],ebx
	mov	eax,ebx
	call	_frect
	mov	ebx,eax
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],1
	mov	[esp+8],3
	call	_fmousey
	sub	eax,20
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,1
	mov	[esp],ebx
	mov	eax,ebx
	call	_frect
	mov	ebx,eax
	sub	esp,20
	mov	[esp+12],3
	mov	[esp+16],1
	mov	[esp+8],20
	call	_fmousey
	sub	eax,1
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	add	ebx,1
	mov	[esp],ebx
	mov	eax,ebx
	call	_frect
	mov	ebx,eax
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],1
	mov	[esp+8],3
	call	_fmousey
	add	eax,1
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,1
	mov	[esp],ebx
	mov	eax,ebx
	call	_frect
	mov	ebx,eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,16
	call	_fmousex
	sub	eax,2
	mov	[esp+8],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fmousex
	sub	eax,19
	mov	[esp],eax
	call	_fline
	sub	esp,16
	call	_fmousex
	mov	[esp+8],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,2
	mov	[esp+12],ebx
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	ebx,19
	mov	[esp+4],ebx
	call	_fmousex
	mov	[esp],eax
	call	_fline
	sub	esp,16
	call	_fmousex
	add	eax,2
	mov	[esp+8],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+12],ebx
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fmousex
	add	eax,19
	mov	[esp],eax
	call	_fline
	sub	esp,16
	call	_fmousex
	mov	[esp+8],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-4]
	add	ebx,2
	mov	[esp+12],ebx
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-4]
	add	ebx,19
	mov	[esp+4],ebx
	call	_fmousex
	mov	[esp],eax
	call	_fline
	sub	esp,4
	mov	[esp],1
	call	_fflip
_17
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_16
_3
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fpickcolor
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,96
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	sub	esp,4
	mov	eax,_5
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-52],eax
	sub	esp,4
	mov	eax,_6
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-76],eax
	call	_fgraphicsbuffer
	mov	[ebp-4],eax
	call	_fcolorred
	mov	[ebp-8],eax
	call	_fcolorgreen
	mov	[ebp-12],eax
	call	_fcolorblue
	mov	[ebp-16],eax
	sub	esp,12
	call	_fgraphicsheight
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcreateimage
	mov	ebx,eax
	mov	[ebp-20],ebx
	sub	esp,40
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+28],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_ffrontbuffer
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+24],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	call	_fgraphicsheight
	mov	[esp+12],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+8],ebx
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	[ebp-24],eax
	call	_fgraphicsheight
	sar	eax,byte 1
	mov	[ebp-28],eax
	sub	esp,12
	mov	[esp+4],20
	mov	[esp+8],1
	mov	[esp],12
	call	_fcreateimage
	mov	[ebp-32],eax
	sub	esp,12
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],10
	mov	[esp],0
	call	_fcolor
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],15
	mov	[esp+4],0
	mov	[esp],0
	call	_fline
	sub	esp,16
	mov	[esp+8],11
	mov	[esp+12],10
	mov	[esp+4],0
	mov	[esp],1
	call	_fline
	sub	esp,16
	mov	[esp+8],3
	mov	[esp+12],12
	mov	[esp+4],14
	mov	[esp],1
	call	_fline
	sub	esp,16
	mov	[esp+8],7
	mov	[esp+12],18
	mov	[esp+4],11
	mov	[esp],4
	call	_fline
	sub	esp,16
	mov	[esp+8],10
	mov	[esp+12],18
	mov	[esp+4],11
	mov	[esp],7
	call	_fline
	sub	esp,16
	mov	[esp+8],9
	mov	[esp+12],19
	mov	[esp+4],19
	mov	[esp],8
	call	_fline
	sub	esp,16
	mov	[esp+8],10
	mov	[esp+12],10
	mov	[esp+4],10
	mov	[esp],7
	call	_fline
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	[esp+8],1
	mov	[esp+12],13
	mov	[esp+4],1
	mov	[esp],1
	call	_fline
	sub	esp,16
	mov	[esp+8],2
	mov	[esp+12],12
	mov	[esp+4],2
	mov	[esp],2
	call	_fline
	sub	esp,16
	mov	[esp+8],3
	mov	[esp+12],11
	mov	[esp+4],3
	mov	[esp],3
	call	_fline
	sub	esp,16
	mov	[esp+8],4
	mov	[esp+12],10
	mov	[esp+4],4
	mov	[esp],4
	call	_fline
	sub	esp,16
	mov	[esp+8],5
	mov	[esp+12],12
	mov	[esp+4],5
	mov	[esp],5
	call	_fline
	sub	esp,16
	mov	[esp+8],6
	mov	[esp+12],14
	mov	[esp+4],6
	mov	[esp],6
	call	_fline
	sub	esp,16
	mov	[esp+8],7
	mov	[esp+12],9
	mov	[esp+4],7
	mov	[esp],7
	call	_fline
	sub	esp,16
	mov	[esp+8],7
	mov	[esp+12],16
	mov	[esp+4],13
	mov	[esp],7
	call	_fline
	sub	esp,16
	mov	[esp+8],8
	mov	[esp+12],9
	mov	[esp+4],8
	mov	[esp],8
	call	_fline
	sub	esp,16
	mov	[esp+8],8
	mov	[esp+12],18
	mov	[esp+4],15
	mov	[esp],8
	call	_fline
	sub	esp,8
	mov	[esp],9
	mov	[esp+4],9
	call	_fplot
	sub	esp,16
	mov	[esp+8],9
	mov	[esp+12],18
	mov	[esp+4],17
	mov	[esp],9
	call	_fline
	sub	esp,12
	mov	[esp+4],9
	mov	[esp+8],1
	mov	[esp],17
	call	_fcreateimage
	mov	[ebp-36],eax
	sub	esp,12
	mov	eax,[ebp-36]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	[esp+12],9
	mov	[esp+16],1
	mov	[esp+8],17
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],0
	mov	[esp+4],0
	mov	[esp],0
	call	_fline
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],8
	mov	[esp+4],0
	mov	[esp],0
	call	_fline
	sub	esp,16
	mov	[esp+8],10
	mov	[esp+12],6
	mov	[esp+4],6
	mov	[esp],6
	call	_fline
	sub	esp,16
	mov	[esp+8],10
	mov	[esp+12],6
	mov	[esp+4],2
	mov	[esp],10
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	[esp+8],6
	mov	[esp+12],6
	mov	[esp+4],2
	mov	[esp],6
	call	_fline
	sub	esp,16
	mov	[esp+8],10
	mov	[esp+12],2
	mov	[esp+4],2
	mov	[esp],6
	call	_fline
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],8
	mov	[esp+4],8
	mov	[esp],0
	call	_fline
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],8
	mov	[esp+4],0
	mov	[esp],16
	call	_fline
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],10
	mov	[esp],0
	call	_fcolor
	sub	esp,16
	mov	[esp+8],5
	mov	[esp+12],4
	mov	[esp+4],4
	mov	[esp],1
	call	_fline
	sub	esp,16
	mov	[esp+8],15
	mov	[esp+12],4
	mov	[esp+4],4
	mov	[esp],11
	call	_fline
	sub	esp,4
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fmidhandle
	sub	esp,12
	mov	[esp+4],256
	mov	[esp+8],1
	mov	[esp],256
	call	_fcreateimage
	mov	[ebp-40],eax
	mov	ebx,[ebp+20]
	mov	[ebp-56],ebx
	mov	ebx,[ebp+24]
	mov	[ebp-60],ebx
	mov	ebx,[ebp+28]
	mov	[ebp-64],ebx
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],14
	sub	esp,4
	mov	eax,_23
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-68],eax
	sub	esp,4
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-80],1
	jmp	_25
_24
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_26
	mov	[ebp-80],0
_26
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	cmp	eax,0
	jnz	_27
	mov	[ebp-72],0
_27
	call	_fmousezspeed
	mov	[ebp-84],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fdrawblock
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	[esp+12],400
	mov	[esp+16],1
	mov	[esp+8],400
	mov	ebx,[ebp-28]
	sub	ebx,200
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	sub	eax,200
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,199
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	sub	esi,200
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,200
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,200
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,200
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,199
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,200
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,200
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,199
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,199
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,199
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,199
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,199
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,199
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,199
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,199
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,200
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,200
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,200
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,200
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,200
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,200
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,200
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,200
	mov	[esp],eax
	call	_fline
	sub	esp,4
	mov	eax,[ebp-84]
	mov	[esp],eax
	call	__bbAbs
	imul	eax,[ebp-84]
	add	[ebp-64],eax
	sub	esp,4
	mov	[esp],13
	call	_fkeydown
	mov	[ebp-92],eax
	sub	esp,4
	mov	[esp],78
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-92]
	or	eax,ebx
	and	eax,eax
	jz	_28
	add	[ebp-64],1
	jmp	_29
_28
	sub	esp,4
	mov	[esp],12
	call	_fkeydown
	mov	[ebp-92],eax
	sub	esp,4
	mov	[esp],74
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-92]
	or	eax,ebx
	and	eax,eax
	jz	_30
	sub	[ebp-64],1
_30
_29
	cmp	[ebp-64],0
	jge	_31
	mov	[ebp-64],0
	jmp	_32
_31
	cmp	[ebp-64],255
	jle	_33
	mov	[ebp-64],255
_33
_32
	call	_fmousex
	mov	ebx,[ebp-24]
	sub	ebx,190
	cmp	eax,ebx
	setge	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-24]
	sub	esi,190
	add	esi,256
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	sub	esi,190
	cmp	ebx,esi
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,256
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	cmp	[ebp-72],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_34
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_35
	mov	[ebp-72],4
_35
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_36
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_37
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_38
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_39
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_40
_34
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_41
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_42
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_43
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_44
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
_40
	cmp	[ebp-72],4
	jnz	_45
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_46
	call	_fmousex
	mov	ebx,[ebp-24]
	sub	ebx,190
	sub	eax,ebx
	mov	[ebp-56],eax
	call	_fmousey
	mov	ebx,[ebp-28]
	sub	ebx,190
	sub	eax,ebx
	mov	[ebp-60],eax
_46
	cmp	[ebp-56],0
	jge	_47
	mov	[ebp-56],0
	jmp	_48
_47
	cmp	[ebp-56],255
	jle	_49
	mov	[ebp-56],255
_49
_48
	cmp	[ebp-60],0
	jge	_50
	mov	[ebp-60],0
	jmp	_51
_50
	cmp	[ebp-60],255
	jle	_52
	mov	[ebp-60],255
_52
_51
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_53
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_54
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_55
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_56
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
_45
	sub	esp,12
	mov	eax,[ebp-40]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	[ebp-48],0
	jmp	_57
_58
	mov	[ebp-44],0
	jmp	_59
_60
	sub	esp,16
	mov	ebx,[ebp-48]
	shl	ebx,byte 8
	add	ebx,[ebp-64]
	mov	esi,[ebp-44]
	shl	esi,byte 16
	add	ebx,esi
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-48]
	mov	[esp+4],esi
	mov	eax,[ebp-44]
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-44],1
_59
	cmp	[ebp-44],255
	jle	_60
_9
	add	[ebp-48],1
_57
	cmp	[ebp-48],255
	jle	_58
_8
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,16
	mov	ebx,[ebp-28]
	sub	ebx,190
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-24]
	sub	esi,190
	mov	[esp+4],esi
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fdrawblock
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,191
	add	ebx,257
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	sub	esi,191
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,191
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,191
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,191
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	sub	esi,191
	add	esi,257
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,191
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,191
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,66
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	sub	esi,191
	add	esi,257
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,191
	add	esi,257
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,191
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,66
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,66
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,191
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,66
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],7
	mov	[esp+16],0
	mov	[esp+8],7
	mov	ebx,[ebp-28]
	sub	ebx,193
	add	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	sub	eax,193
	add	eax,[ebp-56]
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	esi,[ebp-64]
	mov	[esp+8],esi
	mov	eax,[ebp-56]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	[esp+12],5
	mov	[esp+16],1
	mov	[esp+8],5
	mov	ebx,[ebp-28]
	sub	ebx,192
	add	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	sub	eax,192
	add	eax,[ebp-56]
	mov	[esp],eax
	call	_frect
	cmp	[ebp-72],0
	jnz	_61
	call	_fmousex
	mov	ebx,[ebp-24]
	add	ebx,90
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-24]
	add	esi,110
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	sub	esi,185
	cmp	ebx,esi
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	sub	esi,185
	add	esi,256
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_62
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_63
	mov	[ebp-72],1
_63
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_64
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_65
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_66
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_67
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
_62
	call	_fmousex
	mov	ebx,[ebp-24]
	add	ebx,120
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-24]
	add	esi,140
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	sub	esi,185
	cmp	ebx,esi
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	sub	esi,185
	add	esi,256
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_68
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_69
	mov	[ebp-72],2
_69
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_70
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_71
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_72
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_73
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
_68
	call	_fmousex
	mov	ebx,[ebp-24]
	add	ebx,150
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-24]
	add	esi,170
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	sub	esi,185
	cmp	ebx,esi
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	sub	esi,185
	add	esi,256
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_74
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_75
	mov	[ebp-72],3
_75
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_76
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_77
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_78
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_79
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
_74
_61
	cmp	[ebp-72],1
	jnz	_80
	call	_fmousey
	mov	ebx,[ebp-28]
	sub	ebx,190
	sub	eax,ebx
	mov	ebx,255
	sub	ebx,eax
	mov	[ebp-56],ebx
	cmp	[ebp-56],0
	jge	_81
	mov	[ebp-56],0
	jmp	_82
_81
	cmp	[ebp-56],255
	jle	_83
	mov	[ebp-56],255
_83
_82
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_84
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_85
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_86
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_87
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_88
_80
	cmp	[ebp-72],2
	jnz	_89
	call	_fmousey
	mov	ebx,[ebp-28]
	sub	ebx,190
	sub	eax,ebx
	mov	ebx,255
	sub	ebx,eax
	mov	[ebp-60],ebx
	cmp	[ebp-60],0
	jge	_90
	mov	[ebp-60],0
	jmp	_91
_90
	cmp	[ebp-60],255
	jle	_92
	mov	[ebp-60],255
_92
_91
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_93
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_94
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_95
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_96
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_97
_89
	cmp	[ebp-72],3
	jnz	_98
	call	_fmousey
	mov	ebx,[ebp-28]
	sub	ebx,190
	sub	eax,ebx
	mov	ebx,255
	sub	ebx,eax
	mov	[ebp-64],ebx
	cmp	[ebp-64],0
	jge	_99
	mov	[ebp-64],0
	jmp	_100
_99
	cmp	[ebp-64],255
	jle	_101
	mov	[ebp-64],255
_101
_100
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_102
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_103
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_104
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_105
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
_98
_97
_88
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	[ebp-88],0
	jmp	_106
_107
	sub	esp,16
	mov	ebx,[ebp-28]
	sub	ebx,190
	mov	esi,255
	sub	esi,[ebp-88]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-60]
	shl	esi,byte 8
	add	esi,[ebp-64]
	mov	edi,[ebp-88]
	shl	edi,byte 16
	add	esi,edi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,[ebp-24]
	add	eax,99
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,16
	mov	ebx,[ebp-28]
	sub	ebx,190
	mov	esi,255
	sub	esi,[ebp-88]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-60]
	shl	esi,byte 8
	add	esi,[ebp-64]
	mov	edi,[ebp-88]
	shl	edi,byte 16
	add	esi,edi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,[ebp-24]
	add	eax,100
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,16
	mov	ebx,[ebp-28]
	sub	ebx,190
	mov	esi,255
	sub	esi,[ebp-88]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-60]
	shl	esi,byte 8
	add	esi,[ebp-64]
	mov	edi,[ebp-88]
	shl	edi,byte 16
	add	esi,edi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,[ebp-24]
	add	eax,101
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-88],1
_106
	cmp	[ebp-88],255
	jle	_107
_10
	mov	[ebp-88],0
	jmp	_108
_109
	sub	esp,16
	mov	ebx,[ebp-28]
	sub	ebx,190
	mov	esi,255
	sub	esi,[ebp-88]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-88]
	shl	esi,byte 8
	add	esi,[ebp-64]
	mov	edi,[ebp-56]
	shl	edi,byte 16
	add	esi,edi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,[ebp-24]
	add	eax,129
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,16
	mov	ebx,[ebp-28]
	sub	ebx,190
	mov	esi,255
	sub	esi,[ebp-88]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-88]
	shl	esi,byte 8
	add	esi,[ebp-64]
	mov	edi,[ebp-56]
	shl	edi,byte 16
	add	esi,edi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,[ebp-24]
	add	eax,130
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,16
	mov	ebx,[ebp-28]
	sub	ebx,190
	mov	esi,255
	sub	esi,[ebp-88]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-88]
	shl	esi,byte 8
	add	esi,[ebp-64]
	mov	edi,[ebp-56]
	shl	edi,byte 16
	add	esi,edi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,[ebp-24]
	add	eax,131
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-88],1
_108
	cmp	[ebp-88],255
	jle	_109
_11
	mov	[ebp-88],0
	jmp	_110
_111
	sub	esp,16
	mov	ebx,[ebp-28]
	sub	ebx,190
	mov	esi,255
	sub	esi,[ebp-88]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-60]
	shl	esi,byte 8
	add	esi,[ebp-88]
	mov	edi,[ebp-56]
	shl	edi,byte 16
	add	esi,edi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,[ebp-24]
	add	eax,159
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,16
	mov	ebx,[ebp-28]
	sub	ebx,190
	mov	esi,255
	sub	esi,[ebp-88]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-60]
	shl	esi,byte 8
	add	esi,[ebp-88]
	mov	edi,[ebp-56]
	shl	edi,byte 16
	add	esi,edi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,[ebp-24]
	add	eax,160
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,16
	mov	ebx,[ebp-28]
	sub	ebx,190
	mov	esi,255
	sub	esi,[ebp-88]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-60]
	shl	esi,byte 8
	add	esi,[ebp-88]
	mov	edi,[ebp-56]
	shl	edi,byte 16
	add	esi,edi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,[ebp-24]
	add	eax,161
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-88],1
_110
	cmp	[ebp-88],255
	jle	_111
_12
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	sub	esp,12
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	esi,[ebp-64]
	mov	[esp+8],esi
	mov	eax,[ebp-56]
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-28]
	sub	ebx,190
	mov	esi,255
	sub	esi,[ebp-56]
	add	ebx,esi
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-24]
	add	esi,100
	mov	[esp+4],esi
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,20
	mov	ebx,[ebp-28]
	sub	ebx,191
	mov	esi,255
	sub	esi,[ebp-56]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	[esp+12],3
	mov	[esp+16],1
	mov	[esp+8],3
	mov	eax,[ebp-24]
	add	eax,99
	mov	[esp],eax
	call	_frect
	sub	esp,16
	mov	ebx,[ebp-28]
	sub	ebx,190
	mov	esi,255
	sub	esi,[ebp-60]
	add	ebx,esi
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-24]
	add	esi,130
	mov	[esp+4],esi
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,20
	mov	ebx,[ebp-28]
	sub	ebx,191
	mov	esi,255
	sub	esi,[ebp-60]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	[esp+12],3
	mov	[esp+16],1
	mov	[esp+8],3
	mov	eax,[ebp-24]
	add	eax,129
	mov	[esp],eax
	call	_frect
	sub	esp,16
	mov	ebx,[ebp-28]
	sub	ebx,190
	mov	esi,255
	sub	esi,[ebp-64]
	add	ebx,esi
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-24]
	add	esi,160
	mov	[esp+4],esi
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,20
	mov	ebx,[ebp-28]
	sub	ebx,191
	mov	esi,255
	sub	esi,[ebp-64]
	add	ebx,esi
	mov	[esp+4],ebx
	mov	[esp+12],3
	mov	[esp+16],1
	mov	[esp+8],3
	mov	eax,[ebp-24]
	add	eax,159
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_112
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[ebp-28]
	add	ebx,70
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	add	eax,100
	mov	[esp],eax
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_113
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[ebp-28]
	add	ebx,70
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	add	eax,130
	mov	[esp],eax
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_114
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[ebp-28]
	add	ebx,70
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	add	eax,160
	mov	[esp],eax
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,99
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,90
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,90
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,90
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,109
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,100
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,100
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,100
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,129
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,120
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,120
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,120
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,139
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,130
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,130
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,130
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,159
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,150
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,150
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,150
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,169
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,160
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,160
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,160
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,99
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,90
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,99
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,99
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,109
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,100
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,109
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,109
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,129
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,120
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,129
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,129
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,139
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,130
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,139
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,139
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,159
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,150
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,159
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,159
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,169
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,160
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,169
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,169
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],2
	mov	[esp+16],1
	mov	[esp+8],8
	mov	ebx,[ebp-28]
	add	ebx,94
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	add	eax,91
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],8
	mov	[esp+16],1
	mov	[esp+8],2
	mov	ebx,[ebp-28]
	add	ebx,91
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	add	eax,94
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],2
	mov	[esp+16],1
	mov	[esp+8],8
	mov	ebx,[ebp-28]
	add	ebx,94
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	add	eax,101
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],2
	mov	[esp+16],1
	mov	[esp+8],8
	mov	ebx,[ebp-28]
	add	ebx,94
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	add	eax,121
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],8
	mov	[esp+16],1
	mov	[esp+8],2
	mov	ebx,[ebp-28]
	add	ebx,91
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	add	eax,124
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],2
	mov	[esp+16],1
	mov	[esp+8],8
	mov	ebx,[ebp-28]
	add	ebx,94
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	add	eax,131
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],2
	mov	[esp+16],1
	mov	[esp+8],8
	mov	ebx,[ebp-28]
	add	ebx,94
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	add	eax,151
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],8
	mov	[esp+16],1
	mov	[esp+8],2
	mov	ebx,[ebp-28]
	add	ebx,91
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	add	eax,154
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],2
	mov	[esp+16],1
	mov	[esp+8],8
	mov	ebx,[ebp-28]
	add	ebx,94
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	add	eax,161
	mov	[esp],eax
	call	_frect
	call	_fmousex
	mov	ebx,[ebp-24]
	add	ebx,89
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-24]
	add	esi,100
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,89
	cmp	ebx,esi
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,100
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_115
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_116
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_117
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_118
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_119
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_120
	mov	ebx,0
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,0
	add	esi,[ebp-52]
	mov	[esi],ebx
	mov	eax,0
	add	eax,[ebp-52]
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	ebx,0
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	cmp	ebx,45
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	or	eax,ebx
	and	eax,eax
	jz	_121
	add	[ebp-56],1
_121
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,99
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,90
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,99
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,99
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,99
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,90
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,90
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,90
	mov	[esp],eax
	call	_fline
	jmp	_122
_120
	mov	ebx,0
	mov	esi,0
	add	esi,[ebp-52]
	mov	[esi],ebx
_122
	jmp	_123
_115
	call	_fmousex
	mov	ebx,[ebp-24]
	add	ebx,99
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-24]
	add	esi,110
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,89
	cmp	ebx,esi
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,100
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_124
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_125
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_126
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_127
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_128
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_129
	mov	ebx,4
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,4
	add	esi,[ebp-52]
	mov	[esi],ebx
	mov	eax,4
	add	eax,[ebp-52]
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	ebx,4
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	cmp	ebx,45
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	or	eax,ebx
	and	eax,eax
	jz	_130
	sub	[ebp-56],1
_130
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,109
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,100
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,109
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,109
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,109
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,100
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,100
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,100
	mov	[esp],eax
	call	_fline
	jmp	_131
_129
	mov	ebx,0
	mov	esi,4
	add	esi,[ebp-52]
	mov	[esi],ebx
_131
	jmp	_132
_124
	call	_fmousex
	mov	ebx,[ebp-24]
	add	ebx,119
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-24]
	add	esi,130
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,89
	cmp	ebx,esi
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,100
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_133
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_134
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_135
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_136
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_137
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_138
	mov	ebx,8
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,8
	add	esi,[ebp-52]
	mov	[esi],ebx
	mov	eax,8
	add	eax,[ebp-52]
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	ebx,8
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	cmp	ebx,45
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	or	eax,ebx
	and	eax,eax
	jz	_139
	add	[ebp-60],1
_139
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,129
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,120
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,129
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,129
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,129
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,120
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,120
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,120
	mov	[esp],eax
	call	_fline
	jmp	_140
_138
	mov	ebx,0
	mov	esi,8
	add	esi,[ebp-52]
	mov	[esi],ebx
_140
	jmp	_141
_133
	call	_fmousex
	mov	ebx,[ebp-24]
	add	ebx,129
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-24]
	add	esi,140
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,89
	cmp	ebx,esi
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,100
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_142
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_143
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_144
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_145
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_146
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_147
	mov	ebx,12
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,12
	add	esi,[ebp-52]
	mov	[esi],ebx
	mov	eax,12
	add	eax,[ebp-52]
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	ebx,12
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	cmp	ebx,45
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	or	eax,ebx
	and	eax,eax
	jz	_148
	sub	[ebp-60],1
_148
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,139
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,130
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,139
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,139
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,139
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,130
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,130
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,130
	mov	[esp],eax
	call	_fline
	jmp	_149
_147
	mov	ebx,0
	mov	esi,12
	add	esi,[ebp-52]
	mov	[esi],ebx
_149
	jmp	_150
_142
	call	_fmousex
	mov	ebx,[ebp-24]
	add	ebx,149
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-24]
	add	esi,160
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,89
	cmp	ebx,esi
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,100
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_151
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_152
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_153
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_154
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_155
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_156
	mov	ebx,16
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,16
	add	esi,[ebp-52]
	mov	[esi],ebx
	mov	eax,16
	add	eax,[ebp-52]
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	ebx,16
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	cmp	ebx,45
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	or	eax,ebx
	and	eax,eax
	jz	_157
	add	[ebp-64],1
_157
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,159
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,150
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,159
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,159
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,159
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,150
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,150
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,150
	mov	[esp],eax
	call	_fline
	jmp	_158
_156
	mov	ebx,0
	mov	esi,16
	add	esi,[ebp-52]
	mov	[esi],ebx
_158
	jmp	_159
_151
	call	_fmousex
	mov	ebx,[ebp-24]
	add	ebx,159
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-24]
	add	esi,170
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,89
	cmp	ebx,esi
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,100
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_160
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_161
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_162
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_163
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_164
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_165
	mov	ebx,20
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,20
	add	esi,[ebp-52]
	mov	[esi],ebx
	mov	eax,20
	add	eax,[ebp-52]
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	ebx,20
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	cmp	ebx,45
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	or	eax,ebx
	and	eax,eax
	jz	_166
	sub	[ebp-64],1
_166
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,169
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,160
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,169
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,169
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,169
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,160
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,160
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,99
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,90
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,160
	mov	[esp],eax
	call	_fline
	jmp	_167
_165
	mov	ebx,0
	mov	esi,20
	add	esi,[ebp-52]
	mov	[esi],ebx
_167
_160
_159
_150
_141
_132
_123
	cmp	[ebp-56],0
	jge	_168
	mov	[ebp-56],0
	jmp	_169
_168
	cmp	[ebp-56],255
	jle	_170
	mov	[ebp-56],255
_170
_169
	cmp	[ebp-60],0
	jge	_171
	mov	[ebp-60],0
	jmp	_172
_171
	cmp	[ebp-60],255
	jle	_173
	mov	[ebp-60],255
_173
_172
	cmp	[ebp-64],0
	jge	_174
	mov	[ebp-64],0
	jmp	_175
_174
	cmp	[ebp-64],255
	jle	_176
	mov	[ebp-64],255
_176
_175
	sub	esp,12
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	esi,[ebp-64]
	mov	[esp+8],esi
	mov	eax,[ebp-56]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	[esp+12],50
	mov	[esp+16],1
	mov	[esp+8],50
	mov	ebx,[ebp-28]
	add	ebx,80
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	sub	eax,190
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,140
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,130
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,79
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,140
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,140
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,130
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,130
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,191
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,140
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,79
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,79
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,191
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,191
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,130
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,79
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,191
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_177
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[ebp-28]
	add	ebx,80
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	sub	eax,130
	mov	[esp],eax
	call	_ftext
	sub	esp,64
	mov	eax,_178
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_179
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,[ebp-60]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_180
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	ebx,[ebp-28]
	add	ebx,97
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	sub	eax,130
	mov	[esp],eax
	call	_ftext
	sub	esp,56
	mov	eax,[ebp-56]
	mov	[esp],eax
	call	_fhex
	mov	[esp],eax
	mov	[esp+4],2
	call	_fright
	mov	[esp+4],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_181
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	_fhex
	mov	[esp],eax
	mov	[esp+4],2
	call	_fright
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fhex
	mov	[esp],eax
	mov	[esp+4],2
	call	_fright
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	esi,[ebp-28]
	add	esi,114
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,130
	mov	[esp],eax
	call	_ftext
	call	_fmousex
	mov	ebx,[ebp-24]
	add	ebx,3
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-24]
	add	esi,56
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,78
	cmp	ebx,esi
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	add	esi,131
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_182
	sub	esp,8
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_183
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_184
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_185
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_186
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	mov	[ebp-92],eax
	cmp	[ebp-72],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_187
	mov	[ebp-80],0
_187
_182
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,_188
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[ebp-28]
	add	ebx,104
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	add	eax,29
	mov	[esp],eax
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,55
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,79
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,79
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,4
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,4
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,130
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,79
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,4
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,55
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,130
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,79
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,55
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	add	ebx,55
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	add	esi,130
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	add	esi,130
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	add	eax,4
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,0
	add	eax,[ebp-76]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	ebx,[ebp-28]
	add	ebx,140
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,4
	add	eax,[ebp-76]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	ebx,[ebp-28]
	add	ebx,155
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,8
	add	eax,[ebp-76]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	ebx,[ebp-28]
	add	ebx,170
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_ftext
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,12
	add	eax,[ebp-76]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	ebx,[ebp-28]
	add	ebx,185
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_ftext
	call	_fmousex
	mov	ebx,[ebp-24]
	sub	ebx,190
	cmp	eax,ebx
	setge	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-24]
	sub	esi,190
	add	esi,256
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	sub	esi,190
	cmp	ebx,esi
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,256
	cmp	ebx,esi
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	mov	[ebp-92],eax
	cmp	[ebp-72],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_189
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	[esp+12],31
	mov	[esp+16],1
	mov	[esp+8],122
	call	_fmousey
	add	eax,24
	mov	[esp+4],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-92]
	sub	ebx,61
	mov	[esp],ebx
	mov	eax,ebx
	call	_frect
	mov	ebx,eax
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	call	_fmousex
	add	eax,60
	mov	[esp+8],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-92]
	add	ebx,24
	mov	[esp+12],ebx
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-92]
	add	ebx,24
	mov	[esp+4],ebx
	call	_fmousex
	sub	eax,61
	mov	[esp],eax
	call	_fline
	sub	esp,16
	call	_fmousex
	sub	eax,61
	mov	[esp+8],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-92]
	add	ebx,54
	mov	[esp+12],ebx
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-92]
	add	ebx,24
	mov	[esp+4],ebx
	call	_fmousex
	sub	eax,61
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	call	_fmousex
	add	eax,60
	mov	[esp+8],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-92]
	add	ebx,54
	mov	[esp+12],ebx
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-92]
	add	ebx,25
	mov	[esp+4],ebx
	call	_fmousex
	add	eax,60
	mov	[esp],eax
	call	_fline
	sub	esp,16
	call	_fmousex
	add	eax,60
	mov	[esp+8],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-92]
	add	ebx,54
	mov	[esp+12],ebx
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-92]
	add	ebx,54
	mov	[esp+4],ebx
	call	_fmousex
	sub	eax,60
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,16
	call	_fmousex
	add	eax,61
	mov	[esp+8],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-92]
	add	ebx,55
	mov	[esp+12],ebx
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-92]
	add	ebx,55
	mov	[esp+4],ebx
	call	_fmousex
	sub	eax,61
	mov	[esp],eax
	call	_fline
	sub	esp,16
	call	_fmousex
	add	eax,61
	mov	[esp+8],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-92]
	add	ebx,55
	mov	[esp+12],ebx
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-92]
	add	ebx,24
	mov	[esp+4],ebx
	call	_fmousex
	add	eax,61
	mov	[esp],eax
	call	_fline
	sub	esp,64
	call	_fmousex
	mov	ebx,[ebp-24]
	sub	ebx,190
	sub	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_190
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_191
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	call	_fmousey
	mov	esi,[ebp-28]
	sub	esi,190
	sub	eax,esi
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_192
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	call	_fmousey
	add	eax,25
	mov	[esp+4],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-92]
	sub	ebx,60
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftext
	mov	ebx,eax
	sub	esp,56
	call	_fmousex
	mov	ebx,[ebp-24]
	sub	ebx,190
	sub	eax,ebx
	mov	[esp],eax
	call	_fhex
	mov	[esp],eax
	mov	[esp+4],2
	call	_fright
	mov	[esp+4],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_193
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	call	_fmousey
	mov	esi,[ebp-28]
	sub	esi,190
	sub	eax,esi
	mov	[esp],eax
	call	_fhex
	mov	[esp],eax
	mov	[esp+4],2
	call	_fright
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fhex
	mov	[esp],eax
	mov	[esp+4],2
	call	_fright
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	call	_fmousey
	add	eax,40
	mov	[esp+4],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-92]
	sub	ebx,60
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftext
	mov	ebx,eax
	call	_fmousex
	mov	ebx,[ebp-24]
	sub	ebx,190
	sub	eax,ebx
	cmp	eax,[ebp-56]
	setz	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	[ebp-96],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esi,[ebp-28]
	sub	esi,190
	sub	ebx,esi
	cmp	ebx,[ebp-60]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_194
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
_194
	sub	esp,20
	mov	[esp+12],43
	mov	[esp+16],0
	mov	[esp+8],43
	call	_fmousey
	sub	eax,21
	mov	[esp+4],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-92]
	sub	ebx,21
	mov	[esp],ebx
	mov	eax,ebx
	call	_frect
	mov	ebx,eax
	sub	esp,12
	call	_fmousex
	mov	ebx,[ebp-24]
	sub	ebx,190
	sub	eax,ebx
	mov	[esp],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	esi,[ebp-28]
	sub	esi,190
	sub	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-64]
	mov	[esp+8],esi
	call	_fcolor
	sub	esp,20
	mov	[esp+12],41
	mov	[esp+16],1
	mov	[esp+8],41
	call	_fmousey
	sub	eax,20
	mov	[esp+4],eax
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-92]
	sub	ebx,20
	mov	[esp],ebx
	mov	eax,ebx
	call	_frect
	mov	ebx,eax
	jmp	_195
_189
	cmp	[ebp-72],4
	jnz	_196
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	[esp+12],31
	mov	[esp+16],1
	mov	[esp+8],122
	mov	ebx,[ebp-28]
	sub	ebx,190
	add	ebx,[ebp-60]
	add	ebx,24
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	sub	eax,190
	add	eax,[ebp-56]
	sub	eax,61
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,190
	add	ebx,[ebp-56]
	add	ebx,60
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,[ebp-60]
	add	esi,24
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,[ebp-60]
	add	esi,24
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,190
	add	eax,[ebp-56]
	sub	eax,61
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,190
	add	ebx,[ebp-56]
	sub	ebx,61
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,[ebp-60]
	add	esi,54
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,[ebp-60]
	add	esi,24
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,190
	add	eax,[ebp-56]
	sub	eax,61
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,1069547520
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,190
	add	ebx,[ebp-56]
	add	ebx,60
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,[ebp-60]
	add	esi,54
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,[ebp-60]
	add	esi,25
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,190
	add	eax,[ebp-56]
	add	eax,60
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,190
	add	ebx,[ebp-56]
	add	ebx,60
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,[ebp-60]
	add	esi,54
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,[ebp-60]
	add	esi,54
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,190
	add	eax,[ebp-56]
	sub	eax,60
	mov	[esp],eax
	call	_fline
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,190
	add	ebx,[ebp-56]
	add	ebx,61
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,[ebp-60]
	add	esi,55
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,[ebp-60]
	add	esi,55
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,190
	add	eax,[ebp-56]
	sub	eax,61
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,190
	add	ebx,[ebp-56]
	add	ebx,61
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,[ebp-60]
	add	esi,55
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,[ebp-60]
	add	esi,24
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,190
	add	eax,[ebp-56]
	add	eax,61
	mov	[esp],eax
	call	_fline
	sub	esp,64
	mov	eax,_197
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_198
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,[ebp-60]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_199
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	ebx,[ebp-28]
	sub	ebx,190
	add	ebx,[ebp-60]
	add	ebx,25
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	sub	eax,190
	add	eax,[ebp-56]
	sub	eax,60
	mov	[esp],eax
	call	_ftext
	sub	esp,56
	mov	eax,[ebp-56]
	mov	[esp],eax
	call	_fhex
	mov	[esp],eax
	mov	[esp+4],2
	call	_fright
	mov	[esp+4],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,_200
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	_fhex
	mov	[esp],eax
	mov	[esp+4],2
	call	_fright
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_fhex
	mov	[esp],eax
	mov	[esp+4],2
	call	_fright
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	esi,[ebp-28]
	sub	esi,190
	add	esi,[ebp-60]
	add	esi,40
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	sub	eax,190
	add	eax,[ebp-56]
	sub	eax,60
	mov	[esp],eax
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],43
	mov	[esp+16],0
	mov	[esp+8],43
	mov	ebx,[ebp-28]
	sub	ebx,190
	add	ebx,[ebp-60]
	sub	ebx,21
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	sub	eax,190
	add	eax,[ebp-56]
	sub	eax,21
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	esi,[ebp-64]
	mov	[esp+8],esi
	mov	eax,[ebp-56]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	[esp+12],41
	mov	[esp+16],1
	mov	[esp+8],41
	mov	ebx,[ebp-28]
	sub	ebx,190
	add	ebx,[ebp-60]
	sub	ebx,20
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	sub	eax,190
	add	eax,[ebp-56]
	sub	eax,20
	mov	[esp],eax
	call	_frect
	jmp	_201
_196
	sub	esp,16
	call	_fmousey
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-92],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp+4],ebx
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fdrawimage
_201
_195
	sub	esp,4
	mov	[esp],1
	call	_fflip
_25
	mov	ebx,[ebp-80]
	and	ebx,ebx
	jnz	_24
_7
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_ffreefont
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcolor
	mov	ebx,[ebp-56]
	mov	[_vpickedred],ebx
	mov	ebx,[ebp-60]
	mov	[_vpickedgreen],ebx
	mov	ebx,[ebp-64]
	mov	[_vpickedblue],ebx
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	[ebp-92],eax
	sub	esp,8
	mov	ebx,[ebp-52]
	mov	[esp],ebx
	mov	[esp+4],_5
	mov	eax,ebx
	call	__bbVecFree
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[ebp-92],eax
	sub	esp,8
	mov	esi,[ebp-76]
	mov	[esp],esi
	mov	[esp+4],_6
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-92]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	4
_vpickedred	.dd	0
	.align	4
_vpickedgreen	.dd	0
	.align	4
_vpickedblue	.dd	0
_13	.db	"PickColor(): a nice, easy-to-understand demo.",0
_14	.db	"Are you sure you want to quit this nice, easy-to-understand demo??",0
	.align	4
_vtestimage	.dd	0
	.align	4
_vpaintred	.dd	0
	.align	4
_vpaintgreen	.dd	0
	.align	4
_vpaintblue	.dd	0
	.align	4
_vfont	.dd	0
_15	.db	"Arial",0
_18	.db	"Use the mouse to draw, Spacebar to clear the canvas, Enter to call PickColor().",0
_19	.db	"Use the mouse to draw, Spacebar to clear the canvas, Enter to call PickColor().",0
	.align	4
_5	.dd	6
	.dd	6
	.dd	__bbIntType
_23	.db	"Courier",0
	.align	4
_6	.dd	6
	.dd	4
	.dd	__bbStrType
_36	.db	"Click anywhere on the chart to select that color.",0
_37	.db	"",0
_38	.db	"TIP: You can quickly change the blue level using",0
_39	.db	"the mouse wheel or the +/- keys.",0
_41	.db	"Color Picker",0
_42	.db	"",0
_43	.db	"Designed by Adam Novagen, May 2009",0
_44	.db	"",0
_53	.db	"Click anywhere on the chart to select that color.",0
_54	.db	"",0
_55	.db	"TIP: You can quickly change the blue level using",0
_56	.db	"the mouse wheel or the +/- keys.",0
_64	.db	"Click and drag to move the slider and change the",0
_65	.db	" red level.",0
_66	.db	"",0
_67	.db	"",0
_70	.db	"Click and drag to move the slider and change the",0
_71	.db	" green level.",0
_72	.db	"",0
_73	.db	"",0
_76	.db	"Click and drag to move the slider and change the",0
_77	.db	" blue level.",0
_78	.db	"",0
_79	.db	"",0
_84	.db	"Click and drag to move the slider and change the",0
_85	.db	" red level.",0
_86	.db	"",0
_87	.db	"",0
_93	.db	"Click and drag to move the slider and change the",0
_94	.db	" green level.",0
_95	.db	"",0
_96	.db	"",0
_102	.db	"Click and drag to move the slider and change the",0
_103	.db	" blue level.",0
_104	.db	"",0
_105	.db	"",0
_112	.db	"R",0
_113	.db	"G",0
_114	.db	"B",0
_116	.db	"Click to increase the red level by 1.",0
_117	.db	"",0
_118	.db	"",0
_119	.db	"",0
_125	.db	"Click to decrease the red level by 1.",0
_126	.db	"",0
_127	.db	"",0
_128	.db	"",0
_134	.db	"Click to increase the green level by 1.",0
_135	.db	"",0
_136	.db	"",0
_137	.db	"",0
_143	.db	"Click to decrease the green level by 1.",0
_144	.db	"",0
_145	.db	"",0
_146	.db	"",0
_152	.db	"Click to increase the blue level by 1.",0
_153	.db	"",0
_154	.db	"",0
_155	.db	"",0
_161	.db	"Click to decrease the blue level by 1.",0
_162	.db	"",0
_163	.db	"",0
_164	.db	"",0
_177	.db	"SELECTED COLOR",0
_178	.db	"RGB: ",0
_179	.db	",",0
_180	.db	",",0
_181	.db	"HEX: ",0
_183	.db	"Found the color you want? Click here to finish.",0
_184	.db	"",0
_185	.db	"",0
_186	.db	"",0
_188	.db	"DONE",0
_190	.db	"RGB ",0
_191	.db	",",0
_192	.db	",",0
_193	.db	"HEX ",0
_197	.db	"RGB ",0
_198	.db	",",0
_199	.db	",",0
_200	.db	"HEX ",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

