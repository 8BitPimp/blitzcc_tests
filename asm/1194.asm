
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fhidepointer
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[ebp-4],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],-1060110336
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fmoveentity
	sub	esp,8
	mov	[esp],320
	mov	[esp+4],240
	call	_fmovemouse
	sub	esp,4
	mov	[esp],0
	call	_fcreatemesh
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcreatesurface
	mov	[ebp-12],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],35
	call	_fentityfx
	sub	esp,12
	mov	[esp+4],1065353216
	mov	[esp+8],1065353216
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fquadadd
	mov	[ebp-16],eax
	jmp	_13
_12
	sub	esp,4
	mov	[esp],17
	call	_fkeyhit
	and	eax,eax
	jz	_14
	cmp	[ebp-20],0
	setz	al
	movzx	eax,al
	mov	[ebp-20],eax
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fwireframe
_14
	sub	esp,4
	mov	[esp],57
	call	_fkeydown
	and	eax,eax
	jz	_15
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],1069547520
	mov	[esp+8],0
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fquadrotate
_15
	call	_fmousexspeed
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1098907648
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	call	_fmouseyspeed
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1098907648
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	sub	esp,8
	mov	[esp],320
	mov	[esp+4],240
	call	_fmovemouse
	sub	esp,20
	mov	ebx,[ebp-28]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-24]
	mov	[esp+8],esi
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fquadposition
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	sub	esp,12
	mov	[esp+4],100
	mov	[esp+8],100
	mov	[esp],100
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_16
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],40
	mov	[esp],20
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_17
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],60
	mov	[esp],20
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_18
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],80
	mov	[esp],20
	call	_ftext
	sub	esp,32
	mov	eax,_19
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],130
	mov	[esp],80
	call	_ftext
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],200
	call	_fcolor
	sub	esp,20
	mov	[esp+12],100
	mov	[esp+16],0
	mov	[esp+8],100
	mov	[esp+4],140
	mov	[esp],320
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fflip
_13
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_12
_3
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fquadadd
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,28
	mov	[esp+20],1065353216
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-8],eax
	sub	esp,28
	mov	[esp+20],1065353216
	mov	[esp+24],1065353216
	mov	[esp+16],1065353216
	mov	[esp+12],0
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],1065353216
	mov	[esp+12],0
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,16
	mov	ebx,[ebp-8]
	add	ebx,2
	mov	[esp+8],ebx
	mov	esi,[ebp-8]
	add	esi,1
	mov	[esp+12],esi
	mov	esi,[ebp-8]
	add	esi,0
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddtriangle
	sub	esp,16
	mov	ebx,[ebp-8]
	add	ebx,2
	mov	[esp+8],ebx
	mov	esi,[ebp-8]
	add	esi,3
	mov	[esp+12],esi
	mov	esi,[ebp-8]
	add	esi,1
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddtriangle
	mov	[ebp-4],0
	jmp	_20
_21
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],-1082130432
	mov	[esp+8],0
	mov	ebx,[ebp-8]
	add	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexnormal
	add	[ebp-4],1
_20
	cmp	[ebp-4],3
	jle	_21
_5
	mov	eax,[ebp-8]
	jmp	_4_leave
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fquadcolor
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	mov	[ebp-4],0
	jmp	_22
_23
	sub	esp,24
	mov	ebx,[ebp+36]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	esi,[ebp+40]
	mov	[esp+20],esi
	mov	esi,[ebp+32]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	add	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexcolor
	add	[ebp-4],1
_22
	cmp	[ebp-4],3
	jle	_23
_7
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	16
_fquadposition
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fvertexx
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fvertexy
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fvertexz
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],0
	jmp	_24
_25
	sub	esp,28
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	add	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fvertexy
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+12],eax
	mov	[ebp-20],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	esi,[ebp+24]
	add	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fvertexz
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	[ebp-20],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	esi,[ebp+24]
	add	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fvertexx
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+24]
	add	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexcoords
	add	[ebp-16],1
_24
	cmp	[ebp-16],3
	jle	_25
_9
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fquadrotate
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	mov	ebx,[ebp+24]
	mov	[ebp-4],ebx
	jmp	_26
_27
	sub	esp,28
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexx
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcos
	mov	ebx,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	call	_fvertexy
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp+36]
	mov	[esp],esi
	mov	eax,esi
	call	_fsin
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	call	_fvertexx
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp+36]
	mov	[esp],esi
	mov	eax,esi
	call	_fsin
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	edi,[ebp-4]
	mov	[esp+4],edi
	call	_fvertexy
	mov	[ebp-8],eax
	sub	esp,4
	mov	edi,[ebp+36]
	mov	[esp],edi
	mov	eax,edi
	call	_fcos
	mov	edi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	edi,[ebp-4]
	mov	[esp+4],edi
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+16],eax
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,28
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexx
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcos
	mov	ebx,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	call	_fvertexz
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp+32]
	mov	[esp],esi
	mov	eax,esi
	call	_fsin
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	call	_fvertexx
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp+32]
	mov	[esp],esi
	mov	eax,esi
	call	_fsin
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	fchs
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	edi,[ebp-4]
	mov	[esp+4],edi
	call	_fvertexz
	mov	[ebp-8],eax
	sub	esp,4
	mov	edi,[ebp+32]
	mov	[esp],edi
	mov	eax,edi
	call	_fcos
	mov	edi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+16],esi
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	edi,[ebp-4]
	mov	[esp+4],edi
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+12],eax
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,28
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexy
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcos
	mov	ebx,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	call	_fvertexz
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp+28]
	mov	[esp],esi
	mov	eax,esi
	call	_fsin
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	call	_fvertexy
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp+28]
	mov	[esp],esi
	mov	eax,esi
	call	_fsin
	mov	esi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	edi,[ebp-4]
	mov	[esp+4],edi
	call	_fvertexz
	mov	[ebp-8],eax
	sub	esp,4
	mov	edi,[ebp+28]
	mov	[esp],edi
	mov	eax,edi
	call	_fcos
	mov	edi,eax
	mov	eax,[ebp-8]
	fmulp	st(1)
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+16],esi
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexcoords
	add	[ebp-4],1
_26
	mov	ebx,[ebp+24]
	add	ebx,3
	cmp	[ebp-4],ebx
	jle	_27
_11
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
_16	.db	"[MOUSE] = move main quad",0
_17	.db	"[SPACE] = rotate main quad",0
_18	.db	"[W] = Wireframe",0
_19	.db	"Angle# = ",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

