
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,88
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,24
	mov	[esp+12],1
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],20
	sub	esp,4
	mov	eax,_5
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[esp],eax
	call	_fsetfont
	sub	esp,12
	mov	[esp+4],180
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],34
	mov	[esp+16],1
	mov	[esp+8],800
	mov	[esp+4],550
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],32
	mov	[esp+16],1
	mov	[esp+8],800
	mov	[esp+4],551
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],180
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],34
	mov	[esp+16],1
	mov	[esp+8],800
	mov	[esp+4],500
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],32
	mov	[esp+16],1
	mov	[esp+8],800
	mov	[esp+4],501
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],180
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],34
	mov	[esp+16],1
	mov	[esp+8],800
	mov	[esp+4],450
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],32
	mov	[esp+16],1
	mov	[esp+8],800
	mov	[esp+4],451
	mov	[esp],0
	call	_frect
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_6
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_7
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_8
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	mov	[esp+4],20
	mov	[esp+8],1
	mov	[esp],800
	call	_fcreateimage
	mov	[ebp-16],eax
	sub	esp,12
	mov	[esp+4],20
	mov	[esp+8],1
	mov	[esp],800
	call	_fcreateimage
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],20
	mov	[esp+8],1
	mov	[esp],800
	call	_fcreateimage
	mov	[ebp-24],eax
	sub	esp,4
	mov	[esp],2000
	call	_fdelay
_9
	add	[ebp-28],1
	add	[ebp-32],1
	add	[ebp-36],1
	cmp	[ebp-36],2
	jnz	_10
	mov	[ebp-36],0
	sub	esp,4
	mov	[esp],1
	call	_fvwait
_10
	mov	ebx,[ebp-44]
	cmp	[ebp-40],ebx
	jnz	_11
	add	[ebp-48],1
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-48],eax
	jnz	_12
	mov	[ebp-48],1
_12
	sub	esp,20
	mov	ebx,[ebp-48]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-52]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	mov	[ebp-44],eax
	mov	[ebp-40],0
_11
	add	[ebp-40],1
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],24
	mov	[esp+16],1
	mov	[esp+8],1
	mov	[esp+4],560
	mov	[esp],799
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	lea	eax,[ebp-52]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	[esp+4],558
	mov	eax,800
	sub	eax,[ebp-40]
	mov	[esp],eax
	call	_ftext
	sub	esp,16
	mov	[esp+8],560
	mov	[esp+12],0
	mov	[esp+4],1
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fgrabimage
	sub	esp,16
	mov	[esp+8],560
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fdrawimage
	cmp	[ebp-28],2
	jnz	_13
	mov	[ebp-28],0
	mov	ebx,[ebp-60]
	cmp	[ebp-56],ebx
	jnz	_14
	add	[ebp-64],1
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-64],eax
	jnz	_15
	mov	[ebp-64],1
_15
	sub	esp,20
	mov	ebx,[ebp-64]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-68]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-68]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	mov	[ebp-60],eax
	mov	[ebp-56],0
_14
	add	[ebp-56],1
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],24
	mov	[esp+16],1
	mov	[esp+8],1
	mov	[esp+4],510
	mov	[esp],799
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	lea	eax,[ebp-68]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	[esp+4],508
	mov	eax,800
	sub	eax,[ebp-56]
	mov	[esp],eax
	call	_ftext
	sub	esp,16
	mov	[esp+8],510
	mov	[esp+12],0
	mov	[esp+4],1
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fgrabimage
	sub	esp,16
	mov	[esp+8],510
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fdrawimage
_13
	cmp	[ebp-32],4
	jnz	_16
	mov	[ebp-32],0
	mov	ebx,[ebp-76]
	cmp	[ebp-72],ebx
	jnz	_17
	add	[ebp-80],1
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-80],eax
	jnz	_18
	mov	[ebp-80],1
_18
	sub	esp,20
	mov	ebx,[ebp-80]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-84]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	mov	[ebp-76],eax
	mov	[ebp-72],0
_17
	add	[ebp-72],1
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],24
	mov	[esp+16],1
	mov	[esp+8],1
	mov	[esp+4],460
	mov	[esp],799
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	lea	eax,[ebp-84]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	[esp+4],458
	mov	eax,800
	sub	eax,[ebp-72]
	mov	[esp],eax
	call	_ftext
	sub	esp,16
	mov	[esp+8],460
	mov	[esp+12],0
	mov	[esp+4],1
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fgrabimage
	sub	esp,16
	mov	[esp+8],460
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fdrawimage
_16
_19
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	cmp	eax,0
	jnz	_19
_4
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	cmp	eax,1
	jnz	_9
_3
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_ffreeimage
	ret
_2_leave
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-68]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	esi,[ebp-84]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	esi,[ebp-52]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
_5	.db	"arial",0
_6	.db	"Hallo ein Scrolltext!!! - Rechte Maustaste = Pause und linke Maustaste = Ende!                       ",0
_7	.db	"Dies ist die zweite Scroll-Linie !!!         ",0
_8	.db	"Hier ist die Erste Scroll-Zeile des Intros !!!               ",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

