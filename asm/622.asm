
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,12
	mov	eax,_11
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_12
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	sub	esp,4
	mov	eax,_axp
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_axp
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,_axp
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_axp
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ayp
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_ayp
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,_ayp
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ayp
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_axdelta
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_axdelta
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_axdelta
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aydelta
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_aydelta
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aydelta
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	mov	eax,_13
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fimagewidth
	mov	[_vimagew],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fimageheight
	mov	[_vimageh],eax
	sub	esp,4
	mov	eax,_aimagergb
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vimagew]
	sub	ebx,1
	mov	esi,_aimagergb
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vimageh]
	sub	ebx,1
	mov	esi,_aimagergb
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aimagergb
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aposition
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vimagew]
	sub	ebx,1
	mov	esi,_aposition
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vimageh]
	sub	ebx,1
	mov	esi,_aposition
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aposition
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-8],0
	jmp	_14
_15
	mov	[ebp-12],0
	jmp	_16
_17
	sub	esp,20
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	ebx,_aimagergb
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-12]
	add	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aimagergb]
	mov	[ebx],eax
	mov	ebx,0
	mov	esi,_aposition
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-12]
	add	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_aposition]
	mov	[esi],ebx
	add	[ebp-12],1
_16
	mov	ebx,[_vimageh]
	sub	ebx,1
	cmp	[ebp-12],ebx
	jle	_17
_4
	add	[ebp-8],1
_14
	mov	ebx,[_vimagew]
	sub	ebx,1
	cmp	[ebp-8],ebx
	jle	_15
_3
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,4
	mov	eax,_axp
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vimagew]
	mov	esi,_axp
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,_axp
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_axp
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ayp
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vimagew]
	mov	esi,_ayp
	add	esi,12
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,_ayp
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ayp
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_axdelta
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vimagew]
	mov	esi,_axdelta
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_axdelta
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aydelta
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vimagew]
	mov	esi,_aydelta
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aydelta
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-16],0
	sub	esp,8
	mov	eax,[ebp-20]
	sar	eax,byte 1
	mov	[esp],eax
	mov	ebx,[ebp-24]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	call	_fmovemouse
_18
	sub	esp,8
	mov	eax,[ebp-16]
	add	eax,3
	mov	[esp],eax
	mov	[esp+4],360
	call	__bbMod
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp-16]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,1120403456
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	eax,[ebp-16]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,1120403456
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,36
	mov	eax,[ebp-28]
	mov	ecx,3
	cdq
	idiv	ecx
	add	eax,130
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[ebp-36],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-36]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+28],ebx
	mov	[ebp-36],eax
	mov	eax,esi
	call	_fmousey
	mov	esi,eax
	mov	eax,[ebp-36]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+32],esi
	mov	[esp+24],1132593152
	mov	[esp+20],1139146752
	mov	esi,[ebp-28]
	sar	esi,byte 1
	add	esi,90
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+16],esi
	mov	ebx,[ebp-32]
	sar	ebx,byte 1
	add	ebx,400
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[ebp-36],eax
	mov	ebx,[ebp-32]
	mov	ecx,3
	mov	eax,ebx
	cdq
	idiv	ecx
	mov	ebx,eax
	mov	eax,[ebp-36]
	add	ebx,130
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fquad
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_19
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],460
	mov	[esp],5
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fcls
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_18
_5
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fquad
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[_vimagew]
	sub	esi,1
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[_vimagew]
	sub	esi,1
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+48]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[_vimagew]
	sub	esi,1
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp+44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+52]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[_vimagew]
	sub	esi,1
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],0
	jmp	_20
_21
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,_axp
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,0
	add	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_axp]
	mov	[ebx],esi
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,_ayp
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,0
	add	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_ayp]
	mov	[ebx],esi
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+48]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,_axp
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 0
	add	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_axp]
	mov	[ebx],esi
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+52]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,_ayp
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 0
	add	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_ayp]
	mov	[ebx],esi
	add	[ebp-20],1
_20
	mov	ebx,[_vimagew]
	cmp	[ebp-20],ebx
	jle	_21
_7
	mov	[ebp-20],0
	jmp	_22
_23
	mov	ebx,_axp
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 0
	add	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_axp]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,_axp
	add	esi,12
	mov	esi,[esi]
	imul	esi,0
	add	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_axp]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[_vimageh]
	sub	esi,1
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_axdelta]
	mov	[esi],ebx
	mov	ebx,_ayp
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 0
	add	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_ayp]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,_ayp
	add	esi,12
	mov	esi,[esi]
	imul	esi,0
	add	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_ayp]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[_vimageh]
	sub	esi,1
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_aydelta]
	mov	[esi],ebx
	add	[ebp-20],1
_22
	mov	ebx,[_vimagew]
	cmp	[ebp-20],ebx
	jle	_23
_8
	mov	[ebp-20],0
	jmp	_24
_25
	mov	[ebp-24],0
	jmp	_26
_27
	mov	ebx,_aimagergb
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_aimagergb]
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_28
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_axdelta]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	mov	ebx,[ebp-24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_axdelta]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	shr	ebx,byte 16
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,_axp
	add	esi,12
	mov	esi,[esi]
	imul	esi,0
	add	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_axp]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	ebx,[ebp-24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	edi,[ebp-20]
	shl	edi,byte 2
	add	edi,[_aydelta]
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,_ayp
	add	edi,12
	mov	edi,[edi]
	imul	edi,0
	add	edi,[ebp-20]
	shl	edi,byte 2
	add	edi,[_ayp]
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fistp	[esp]
	pop	edi
	or	esi,edi
	mov	ebx,_aposition
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_aposition]
	mov	[ebx],esi
	sub	esp,12
	mov	ebx,_aimagergb
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_aimagergb]
	mov	ebx,[ebx]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[esp+4],ebx
	mov	esi,_aimagergb
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-24]
	add	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_aimagergb]
	mov	esi,[esi]
	mov	edi,255
	and	esi,edi
	mov	[esp+8],esi
	mov	eax,_aimagergb
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-24]
	add	eax,[ebp-20]
	shl	eax,byte 2
	add	eax,[_aimagergb]
	mov	eax,[eax]
	shr	eax,byte 16
	mov	esi,255
	and	eax,esi
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_aydelta]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,_ayp
	add	esi,12
	mov	esi,[esi]
	imul	esi,0
	add	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_ayp]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	[esp+12],6
	mov	[esp+16],1
	mov	[esp+8],6
	mov	ebx,[ebp-24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	edi,[ebp-20]
	shl	edi,byte 2
	add	edi,[_axdelta]
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	eax,_axp
	add	eax,12
	mov	eax,[eax]
	imul	eax,0
	add	eax,[ebp-20]
	shl	eax,byte 2
	add	eax,[_axp]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
_28
	add	[ebp-24],1
_26
	mov	ebx,[_vimageh]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_27
_10
	add	[ebp-20],1
_24
	mov	ebx,[_vimagew]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_25
_9
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 36
_11	.db	"Quad function demo",0
_12	.db	"",0
	.align	4
_axp	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ayp	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_axdelta	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_aydelta	.dd	0
	.dd	2
	.dd	1
	.dd	0
_13	.db	"cat.png",0
	.align	4
_vimagew	.dd	0
	.align	4
_vimageh	.dd	0
	.align	4
_aimagergb	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aposition	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
_19	.db	"Quad Mapping by Beaker 2001",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

