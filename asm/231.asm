
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	sub	esp,12
	mov	eax,_21
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_22
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],1
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	sub	esp,92
	mov	[esp+84],50
	mov	[esp+88],50
	mov	[esp+80],50
	mov	[esp+76],0
	mov	[esp+72],0
	mov	[esp+68],0
	mov	[esp+64],0
	mov	[esp+60],0
	mov	[esp+56],0
	mov	[esp+52],255
	mov	[esp+48],255
	mov	[esp+44],255
	mov	[esp+40],255
	mov	[esp+36],255
	mov	[esp+32],255
	sub	esp,4
	mov	eax,_25
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+28],eax
	mov	[esp+24],17
	sub	esp,4
	mov	eax,_24
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+20],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_23
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+16],ebx
	mov	[esp+12],400
	mov	[esp+8],500
	mov	[esp+4],10
	mov	[esp],10
	call	_fadd_window
	sub	esp,12
	mov	eax,_26
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_27
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_28
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_29
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_30
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_31
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_32
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_33
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_34
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_35
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_36
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_37
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_38
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_39
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_40
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_41
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_42
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_43
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_44
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_45
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_46
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_47
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_48
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_49
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_50
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_51
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_52
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_53
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_54
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_55
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_56
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_57
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_58
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_59
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_60
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_61
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_62
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_63
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_64
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_65
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_66
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_67
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_68
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_69
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_70
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_71
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_72
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_73
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_74
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_75
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_76
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_77
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	sub	esp,12
	mov	eax,_78
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_79
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fadd_text
	jmp	_81
_80
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fcls
	sub	esp,8
	mov	eax,_82
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_frender_window
	sub	esp,8
	mov	eax,_83
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fdraw_window
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],1
	mov	[esp+8],20
	call	_fmousey
	mov	[esp+4],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_frect
	mov	ebx,eax
	sub	esp,4
	mov	[esp],1
	call	_fflip
_81
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_80
_3
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fadd_window
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_tscrollbar
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp+40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	sub	ebx,20
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	ebx,[ebp+44]
	mov	[esp+4],ebx
	sub	esp,4
	lea	eax,[ebp+48]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadfont
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,40
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,40
	mov	eax,[eax]
	mov	[esp],eax
	call	_fsetfont
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,24
	mov	eax,[eax]
	mov	[ebp-12],eax
	mov	eax,ebx
	call	_ffontheight
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	ecx,ebx
	cdq
	idiv	ecx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,108
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,20
	mov	eax,[eax]
	add	eax,20
	mov	[esp],eax
	call	_fcreateimage
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],eax
	mov	ebx,1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,116
	mov	[esi],ebx
	mov	ebx,[ebp+52]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
	mov	ebx,[ebp+56]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,48
	mov	[esi],ebx
	mov	ebx,[ebp+60]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,52
	mov	[esi],ebx
	mov	ebx,[ebp+64]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,56
	mov	[esi],ebx
	mov	ebx,[ebp+68]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,60
	mov	[esi],ebx
	mov	ebx,[ebp+72]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,64
	mov	[esi],ebx
	mov	ebx,[ebp+76]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,68
	mov	[esi],ebx
	mov	ebx,[ebp+80]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,72
	mov	[esi],ebx
	mov	ebx,[ebp+84]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,76
	mov	[esi],ebx
	mov	ebx,[ebp+88]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,80
	mov	[esi],ebx
	mov	ebx,[ebp+92]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,84
	mov	[esi],ebx
	mov	ebx,[ebp+96]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,88
	mov	[esi],ebx
	mov	ebx,[ebp+100]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,92
	mov	[esi],ebx
	mov	ebx,[ebp+104]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,96
	mov	[esi],ebx
	mov	ebx,[ebp+108]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,100
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	sub	ebx,42
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,180
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,21
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,172
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,192
	mov	[esi],ebx
	call	_fcls
	sub	esp,12
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,96
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,100
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,92
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	[esp+12],9
	mov	[esp+16],1
	mov	[esp+8],9
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,64
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,56
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	mov	[ebp-8],0
	jmp	_86
_87
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	[esp+8],ebx
	mov	[esp+12],8
	mov	[esp+4],0
	mov	[esp],4
	call	_fline
	add	[ebp-8],1
_86
	cmp	[ebp-8],8
	jle	_87
_5
	sub	esp,12
	mov	[esp+4],9
	mov	[esp+8],1
	mov	[esp],9
	call	_fcreateimage
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,32
	mov	eax,[eax]
	mov	[esp],eax
	call	_fgrabimage
	call	_fcls
	sub	esp,12
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,96
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,100
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,92
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	[esp+12],9
	mov	[esp+16],1
	mov	[esp+8],9
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,64
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,56
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	mov	[ebp-8],0
	jmp	_88
_89
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+4],8
	mov	[esp],4
	call	_fline
	add	[ebp-8],1
_88
	cmp	[ebp-8],8
	jle	_89
_6
	sub	esp,12
	mov	[esp+4],9
	mov	[esp+8],1
	mov	[esp],9
	call	_fcreateimage
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	call	_fgrabimage
	call	_fcls
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+48]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[ebp-12],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-12]
	mov	[ebp-12],eax
	sub	esp,4
	mov	esi,[ebp+40]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-12]
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 92
	.align	16
_fadd_text
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	[ebp-4],0
	sub	esp,24
	mov	eax,_90
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[esp],2
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+8],ebx
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freplace
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tscrollbar
	call	__bbObjEachFirst
	and	eax,eax
	jz	_8
_91
	sub	esp,12
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_93
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_92
	sub	esp,28
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[esp],1
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_94
_92
	sub	esp,12
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_96
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp],ebx
	mov	[ebp-16],eax
	sub	esp,4
	lea	esi,[ebp+24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-16]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrCompare
	mov	ebx,eax
	mov	eax,[ebp-12]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_95
	sub	esp,28
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	[esp],1
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_95
_94
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_91
_8
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_frender_window
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	call	_fgraphicsbuffer
	mov	[ebp-4],eax
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	call	_fgraphicsheight
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-24],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcreateimage
	mov	ebx,eax
	mov	[ebp-8],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fgrabimage
	call	_fcls
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],_tscrollbar
	call	__bbObjEachFirst
	and	eax,eax
	jz	_10
_97
	sub	esp,12
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	[ebp-28],eax
	sub	esp,8
	mov	[ebp-32],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp],ebx
	mov	[ebp-32],eax
	sub	esp,4
	mov	esi,_99
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-32]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrCompare
	mov	ebx,eax
	mov	eax,[ebp-28]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	or	eax,ebx
	and	eax,eax
	jz	_98
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,76
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,68
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	sub	ebx,2
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	sub	esi,2
	mov	[esp+8],esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,1
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	add	eax,1
	mov	[esp],eax
	call	_frect
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,40
	mov	eax,[eax]
	mov	[esp],eax
	call	_fsetfont
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,112
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,160
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,136
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,124
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,188
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,116
	mov	ebx,[ebx]
	cmp	ebx,1
	jnz	_100
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,112
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,136
	mov	[esi],ebx
_100
_101
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_102
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,120
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,168
	mov	[esi],ebx
_103
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,140
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	[esp],2
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	[ebp-28],eax
	sub	esp,8
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,140
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp],ebx
	mov	[ebp-32],eax
	sub	esp,4
	mov	[esp],1
	mov	eax,esi
	call	_fchr
	mov	esi,eax
	mov	eax,[ebp-32]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrCompare
	mov	ebx,eax
	mov	eax,[ebp-28]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_104
	sub	esp,20
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,140
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,132
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_105
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
_104
	sub	esp,12
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	[esp],1
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_106
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,168
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,168
	mov	[esi],ebx
_106
	sub	esp,12
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	[esp],2
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,160
	mov	ebx,[ebx]
	cmp	ebx,2
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	ebx,eax
	and	ebx,ebx
	jz	_107
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,160
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_108
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
_107
	sub	esp,12
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	[esp],2
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,160
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	ebx,eax
	and	ebx,ebx
	jz	_109
	mov	ebx,3
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,160
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_110
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	eax,0
	jle	_111
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,44
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	jmp	_112
_111
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
_112
_113
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,140
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_115
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_114
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,156
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	jmp	_116
_114
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	esi,[esi]
	sub	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	esi,[esi]
	mov	[esp+8],esi
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,144
	mov	[ebx],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	[esi],ebx
_116
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,156
	mov	ebx,[ebx]
	cmp	ebx,3
	jnz	_117
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	esi,[esi]
	sub	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	esi,[esi]
	mov	[esp+8],esi
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,144
	mov	[ebx],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_118
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
_117
	sub	esp,12
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_119
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_113
_13
_120
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,140
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_122
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_121
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,156
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	jmp	_123
_121
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	esi,[esi]
	sub	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	esi,[esi]
	mov	[esp+8],esi
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,148
	mov	[ebx],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	[esi],ebx
_123
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,156
	mov	ebx,[ebx]
	cmp	ebx,3
	jnz	_124
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	esi,[esi]
	sub	ebx,esi
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	esi,[esi]
	mov	[esp+8],esi
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,148
	mov	[ebx],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,156
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_125
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
_124
	sub	esp,12
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_126
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_120
_14
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],3
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_128
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jge	_127
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,152
	mov	[ebx],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	jmp	_129
_127
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],3
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_131
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jge	_130
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],2
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,152
	mov	[ebx],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,2
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	jmp	_132
_130
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],3
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	__bbStrToInt
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,152
	mov	[ebx],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	add	ebx,3
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
_132
_129
_109
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,136
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_133
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	add	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	sub	esi,21
	cmp	ebx,esi
	jl	_134
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	mov	[ebp-16],eax
	mov	ebx,[ebp-16]
	mov	[ebp-20],ebx
	jmp	_135
_136
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,140
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_138
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_137
	sub	esp,16
	mov	[esp+4],1
	mov	esi,[ebp-20]
	mov	[esp+8],esi
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	_flen
	mov	[ebp-24],eax
	sub	esp,4
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,132
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-24]
	sub	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	esi,[esi]
	sub	esi,ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	[ebx],esi
	sub	esp,20
	mov	[esp+4],1
	mov	esi,[ebp-20]
	mov	[esp+8],esi
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,132
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,168
	mov	[esi],ebx
	jmp	_15
_137
	cmp	[ebp-20],1
	jnz	_139
	sub	esp,20
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,132
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-24]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,132
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	sub	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,168
	mov	[esi],ebx
	jmp	_15
_139
	add	[ebp-20],-1
_135
	cmp	[ebp-20],1
	jge	_136
_15
_134
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,164
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,160
	mov	ebx,[ebx]
	cmp	ebx,3
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_140
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,44
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,124
	mov	ebx,[ebx]
	sub	ebx,1
	call	_ffontheight
	imul	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	add	esi,3
	add	esi,ebx
	mov	[esp+4],esi
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	add	eax,3
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	add	eax,ebx
	mov	[esp],eax
	call	_ftext
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	add	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,120
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_141
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	mov	ebx,2
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,160
	mov	[esi],ebx
_140
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,164
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,160
	mov	ebx,[ebx]
	cmp	ebx,2
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_142
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,148
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,152
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,144
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,124
	mov	ebx,[ebx]
	sub	ebx,1
	call	_ffontheight
	imul	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	add	esi,3
	add	esi,ebx
	mov	[esp+4],esi
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	add	eax,3
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	add	eax,ebx
	mov	[esp],eax
	call	_ftext
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	add	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,120
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_143
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
_142
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,164
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,160
	mov	ebx,[ebx]
	cmp	ebx,1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_144
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,148
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,152
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,144
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,124
	mov	ebx,[ebx]
	sub	ebx,1
	call	_ffontheight
	imul	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	add	esi,3
	add	esi,ebx
	mov	[esp+4],esi
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	add	eax,3
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	add	eax,ebx
	mov	[esp],eax
	call	_ftext
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	add	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,120
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_145
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,160
	mov	[esi],ebx
_144
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,164
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,160
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_146
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,44
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,124
	mov	ebx,[ebx]
	sub	ebx,1
	call	_ffontheight
	imul	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	add	esi,3
	add	esi,ebx
	mov	[esp+4],esi
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	add	eax,3
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	add	eax,ebx
	mov	[esp],eax
	call	_ftext
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	add	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,120
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_147
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
_146
	jmp	_148
_133
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	add	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	sub	esi,21
	cmp	ebx,esi
	jl	_149
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	mov	[ebp-16],eax
	mov	ebx,[ebp-16]
	mov	[ebp-20],ebx
	jmp	_150
_151
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,140
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,140
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_153
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_152
	sub	esp,16
	mov	[esp+4],1
	mov	esi,[ebp-20]
	mov	[esp+8],esi
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	_flen
	mov	[ebp-24],eax
	sub	esp,4
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,132
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-24]
	sub	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	esi,[esi]
	sub	esi,ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	[ebx],esi
	sub	esp,20
	mov	[esp+4],1
	mov	esi,[ebp-20]
	mov	[esp+8],esi
	sub	esp,4
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,132
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,168
	mov	[esi],ebx
	jmp	_16
_152
	cmp	[ebp-20],1
	jnz	_154
	sub	esp,20
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,132
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-24]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp+4],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,132
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	sub	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,128
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,168
	mov	[esi],ebx
	jmp	_16
_154
	add	[ebp-20],-1
_150
	cmp	[ebp-20],1
	jge	_151
_16
_149
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,164
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,160
	mov	ebx,[ebx]
	cmp	ebx,3
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_155
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	add	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,120
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_156
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	mov	ebx,2
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,160
	mov	[esi],ebx
_155
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,164
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,160
	mov	ebx,[ebx]
	cmp	ebx,2
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_157
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	add	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,120
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_158
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
_157
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,164
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,160
	mov	ebx,[ebx]
	cmp	ebx,1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_159
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	add	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,120
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_160
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,160
	mov	[esi],ebx
_159
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,164
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,160
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_161
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,120
	mov	ebx,[ebx]
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	add	ebx,eax
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,120
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,132
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_162
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,164
	mov	[esi],ebx
_161
_148
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,168
	mov	ebx,[ebx]
	cmp	ebx,1
	jnz	_103
_12
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,136
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_163
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,124
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,124
	mov	[esi],ebx
_163
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,112
	mov	eax,[eax]
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,116
	mov	ebx,[ebx]
	cmp	eax,ebx
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,136
	mov	ebx,[ebx]
	cmp	ebx,1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	ebx,eax
	and	ebx,ebx
	jz	_164
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,136
	mov	[esi],ebx
	jmp	_165
_164
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,116
	mov	ebx,[ebx]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,108
	mov	esi,[esi]
	add	ebx,esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,112
	mov	eax,[eax]
	cmp	eax,ebx
	setge	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,136
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	ebx,eax
	and	ebx,ebx
	jz	_166
	mov	ebx,2
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,136
	mov	[esi],ebx
_166
_165
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,188
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,188
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,168
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,112
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,112
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,128
	mov	ebx,[ebx]
	sub	esp,8
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	ebx,eax
	jl	_101
_11
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,84
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,88
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,80
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	add	eax,ebx
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	sub	ebx,2
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	[esp+8],18
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,1
	mov	[esp+4],ebx
	call	_frect
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,96
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,100
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,92
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	add	eax,ebx
	mov	[esp],eax
	mov	[esp+12],18
	mov	[esp+16],1
	mov	[esp+8],18
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,1
	mov	[esp+4],ebx
	call	_frect
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	add	ebx,esi
	sub	ebx,19
	mov	[esp+4],ebx
	mov	[esp+12],18
	mov	[esp+16],1
	mov	[esp+8],18
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	add	eax,esi
	mov	[esp],eax
	call	_frect
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,188
	mov	ebx,[ebx]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,108
	mov	esi,[esi]
	cmp	ebx,esi
	jle	_167
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,180
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,188
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,108
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,184
	mov	[esi],ebx
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,172
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1084227584
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,184
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1092616192
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	[esp+8],21
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	add	eax,esi
	mov	[esp],eax
	call	_frect
_167
	sub	esp,32
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,172
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1084227584
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+20],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,184
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1092616192
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+28],esi
	mov	[esp+24],21
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	edi,[ebp-12]
	mov	edi,[edi]
	add	edi,20
	mov	edi,[edi]
	add	esi,edi
	mov	[esp+16],esi
	mov	[esp+12],1
	mov	[esp+8],1
	call	_fmousey
	mov	[esp+4],eax
	mov	[ebp-24],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_frectsoverlap
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,192
	mov	eax,[eax]
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	sub	esp,4
	mov	[esp],1
	mov	eax,esi
	call	_fmousedown
	mov	esi,eax
	mov	eax,[ebp-24]
	and	eax,esi
	and	eax,ebx
	and	eax,eax
	jz	_168
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,192
	mov	[esi],ebx
	call	_fmousey
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,176
	mov	[ebx],eax
_168
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,192
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	sub	esp,4
	mov	[esp],1
	mov	eax,ebx
	call	_fmousedown
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_169
	call	_fmousey
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,176
	mov	ebx,[ebx]
	cmp	eax,ebx
	jl	_170
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,196
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,180
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,188
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	call	_fmouseyspeed
	push	eax
	fild	[esp]
	pop	eax
	fdivrp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,200
	mov	[ebx],eax
_170
	call	_fmousey
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,176
	mov	ebx,[ebx]
	cmp	eax,ebx
	jg	_171
	mov	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,196
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,180
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,188
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	call	_fmouseyspeed
	imul	eax,-1
	push	eax
	fild	[esp]
	pop	eax
	fdivrp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,200
	mov	[ebx],eax
_171
	jmp	_173
_172
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,188
	mov	ebx,[ebx]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,108
	mov	esi,[esi]
	sub	ebx,esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,116
	mov	eax,[eax]
	cmp	eax,ebx
	setle	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,196
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	ebx,eax
	and	ebx,ebx
	jz	_174
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,116
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,116
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,180
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,188
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,172
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,172
	mov	[ebx],esi
_174
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,116
	mov	eax,[eax]
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,200
	mov	ebx,[ebx]
	cmp	eax,ebx
	setg	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,196
	mov	ebx,[ebx]
	cmp	ebx,1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	ebx,eax
	and	ebx,ebx
	jz	_175
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,116
	mov	ebx,[ebx]
	sub	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,116
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,180
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,188
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,172
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,172
	mov	[ebx],esi
_175
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,200
	mov	ebx,[ebx]
	sub	ebx,1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,200
	mov	[esi],ebx
_173
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,200
	mov	ebx,[ebx]
	cmp	ebx,0
	jg	_172
_17
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,200
	mov	[esi],ebx
	call	_fmousey
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,176
	mov	[ebx],eax
	jmp	_176
_169
	mov	ebx,0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,192
	mov	[esi],ebx
_176
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,64
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,56
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	add	eax,ebx
	sub	eax,1
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[esp+8],21
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_frect
	sub	esp,20
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	add	eax,ebx
	sub	eax,1
	mov	[esp],eax
	mov	[esp+12],21
	mov	[esp+16],0
	mov	[esp+8],21
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_frect
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	add	ebx,esi
	sub	ebx,21
	mov	[esp+4],ebx
	mov	[esp+12],21
	mov	[esp+16],0
	mov	[esp+8],21
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	add	eax,esi
	sub	eax,1
	mov	[esp],eax
	call	_frect
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	add	ebx,esi
	add	ebx,5
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	add	esi,6
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,32
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawblock
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	add	ebx,esi
	add	ebx,5
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	mov	edi,[ebp-12]
	mov	edi,[edi]
	add	edi,24
	mov	edi,[edi]
	add	esi,edi
	sub	esi,14
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawblock
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	mov	[esp],eax
	call	_fgrabimage
	call	_fcls
_98
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_97
_10
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fdrawblock
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetbuffer
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[ebp-24],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-24]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fdraw_window
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,12
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_178
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_177
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tscrollbar
	call	__bbObjEachFirst
	and	eax,eax
	jz	_19
_179
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawblock
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_179
_19
	jmp	_180
_177
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tscrollbar
	call	__bbObjEachFirst
	and	eax,eax
	jz	_20
_181
	sub	esp,12
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_182
	sub	esp,16
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawblock
_182
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_181
_20
_180
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
_21	.db	"Text Box function version 2",0
_22	.db	"",0
_23	.db	"window",0
_24	.db	"wrap",0
_25	.db	"arial",0
_26	.db	"written",0
_27	.db	"global",0
_28	.db	"In 2001",0
_29	.db	"global",0
_30	.db	"testing testing testing testing testing testing [c]255,0,0 Apocalyptic [c] [c]60,60,255 Coders [c] [c]0,255,0 testing again[c]",0
_31	.db	"global",0
_32	.db	"www.acoders.com",0
_33	.db	"global",0
_34	.db	"[c]255,0,0 RED[c][c]0,255,0 GREEN[c][c]0,0,255 BLUE[c][c]80,80,80 This is a long test line so i can fully test the test wrap feature, lets hope it works now. Thank you for viewing my text box object, please give feedback and send bug reports to[c][c]0,255,255 skn3_skn3@yahoo.com[c]",0
_35	.db	"global",0
_36	.db	"line 1",0
_37	.db	"global",0
_38	.db	"line 2",0
_39	.db	"global",0
_40	.db	"line 3",0
_41	.db	"global",0
_42	.db	"line 4",0
_43	.db	"global",0
_44	.db	"[c]255,0,0 RED[c][c]0,255,0 GREEN[c][c]0,0,255 BLUE[c][c]80,80,80 This is a long test line so i can fully test the test wrap feature, lets hope it works now. Thank you for viewing my text box object, please give feedback and send bug reports to[c][c]0,255,255 skn3_skn3@yahoo.com[c]",0
_45	.db	"global",0
_46	.db	"line 5",0
_47	.db	"global",0
_48	.db	"line 6",0
_49	.db	"global",0
_50	.db	"line 7",0
_51	.db	"global",0
_52	.db	"line 8",0
_53	.db	"global",0
_54	.db	"[c]255,0,0 RED[c][c]0,255,0 GREEN[c][c]0,0,255 BLUE[c][c]80,80,80 This is a long test line so i can fully test the test wrap feature, lets hope it works now. Thank you for viewing my text box object, please give feedback and send bug reports to[c][c]0,255,255 skn3_skn3@yahoo.com[c]",0
_55	.db	"global",0
_56	.db	"line 9",0
_57	.db	"global",0
_58	.db	"line 10",0
_59	.db	"global",0
_60	.db	"line 11",0
_61	.db	"global",0
_62	.db	"line 12",0
_63	.db	"global",0
_64	.db	"line 13",0
_65	.db	"global",0
_66	.db	"line 14",0
_67	.db	"global",0
_68	.db	"[c]255,0,0 RED[c][c]0,255,0 GREEN[c][c]0,0,255 BLUE[c][c]80,80,80 This is a long test line so i can fully test the test wrap feature, lets hope it works now. Thank you for viewing my text box object, please give feedback and send bug reports to[c][c]0,255,255 skn3_skn3@yahoo.com[c]",0
_69	.db	"global",0
_70	.db	"line 15",0
_71	.db	"global",0
_72	.db	"line 16",0
_73	.db	"global",0
_74	.db	"line 17",0
_75	.db	"global",0
_76	.db	"line 18",0
_77	.db	"global",0
_78	.db	"[c]255,0,0 RED[c][c]0,255,0 GREEN[c][c]0,0,255 BLUE[c][c]80,80,80 This is a long test line so i can fully test the test wrap feature, lets hope it works now. Thank you for viewing my text box object, please give feedback and send bug reports to[c][c]0,255,255 skn3_skn3@yahoo.com[c]",0
_79	.db	"global",0
_82	.db	"window",0
_83	.db	"window",0
	.align	4
_tscrollbar	.dd	5
_84	.dd	0
	.dd	_84
	.dd	_84
	.dd	0
	.dd	-1
_85	.dd	0
	.dd	_85
	.dd	_85
	.dd	0
	.dd	-1
	.dd	51
	.dd	__bbStrType
	.dd	__bbStrType
	.dd	__bbStrType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbStrType
	.dd	__bbIntType
	.dd	__bbStrType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
_90	.db	"[c]",0
_93	.db	"global",0
_96	.db	"global",0
_99	.db	"global",0
_102	.db	"",0
_105	.db	"",0
_108	.db	"",0
_110	.db	"",0
_115	.db	",",0
_118	.db	",",0
_119	.db	",",0
_122	.db	",",0
_125	.db	",",0
_126	.db	",",0
_128	.db	"10",0
_131	.db	"100",0
_138	.db	" ",0
_141	.db	"",0
_143	.db	"",0
_145	.db	"",0
_147	.db	"",0
_153	.db	" ",0
_156	.db	"",0
_158	.db	"",0
_160	.db	"",0
_162	.db	"",0
_178	.db	"global",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

