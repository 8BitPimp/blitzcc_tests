
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,84
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	sub	esp,4
	mov	eax,_3
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[_vpcodes],eax
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	[esp+4],768
	mov	[esp],1024
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[_vcx],300
	mov	[_vcy],80
	sub	esp,20
	mov	eax,_29
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[esp+4],260
	call	_fstring
	mov	[esp+4],eax
	mov	[esp],_vfld
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	[_vscore],0
	sub	esp,8
	mov	eax,4
	add	eax,[_vpcodes]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_30
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,8
	add	eax,[_vpcodes]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_31
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,12
	add	eax,[_vpcodes]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_32
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,16
	add	eax,[_vpcodes]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_33
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,20
	add	eax,[_vpcodes]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_34
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,24
	add	eax,[_vpcodes]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_35
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,28
	add	eax,[_vpcodes]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_36
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	eax,_37
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fwritefile
	mov	[ebp-4],eax
	call	__bbReadInt
	mov	[ebp-8],eax
	mov	[ebp-12],1
	jmp	_38
_39
	call	__bbReadInt
	mov	[ebp-16],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fwritebyte
	add	[ebp-12],1
_38
	mov	ebx,[ebp-8]
	cmp	[ebp-12],ebx
	jle	_39
_4
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fclosefile
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],7
	call	_frand
	mov	[ebp-20],eax
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],7
	call	_frand
	mov	[ebp-24],eax
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_vpcodes]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	shl	ebx,byte 2
	add	ebx,[_vpcodes]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-36],5
	mov	[ebp-40],0
	call	_fmillisecs
	mov	[ebp-44],eax
	mov	[ebp-48],0
	sub	esp,8
	mov	eax,_40
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-52],eax
_41
	call	_fcls
	call	_fdrawgrids
	cmp	[ebp-48],0
	jnz	_42
	mov	ebx,[ebp-36]
	mov	[ebp-56],ebx
	mov	ebx,[ebp-40]
	mov	[ebp-60],ebx
	sub	esp,16
	mov	[esp+8],16711680
	sub	esp,4
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+12],eax
	mov	esi,[ebp-40]
	mov	[esp+4],esi
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fdrawpiece
	mov	eax,[ebp-44]
	add	eax,500
	mov	[ebp-80],eax
	mov	eax,ebx
	call	_fmillisecs
	mov	ebx,eax
	mov	eax,[ebp-80]
	cmp	eax,ebx
	setl	al
	movzx	eax,al
	mov	[ebp-80],eax
	sub	esp,4
	mov	[esp],208
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-80]
	or	eax,ebx
	and	eax,eax
	jz	_43
	add	[ebp-40],1
	call	_fmillisecs
	mov	[ebp-44],eax
_43
	sub	esp,12
	mov	ebx,[ebp-40]
	mov	[esp+4],ebx
	sub	esp,4
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fcheckinsertpiece
	cmp	eax,0
	jnz	_44
	sub	esp,16
	mov	ebx,[ebp-20]
	mov	[esp+8],ebx
	sub	esp,4
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+12],eax
	mov	esi,[ebp-60]
	mov	[esp+4],esi
	mov	eax,[ebp-56]
	mov	[esp],eax
	call	_finsertpiece
	cmp	[ebp-60],1
	jg	_45
	mov	[ebp-48],1
_45
	call	_fwipelines
	mov	ebx,[ebp-24]
	mov	[ebp-20],ebx
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	lea	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],7
	call	_frand
	mov	[ebp-24],eax
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_vpcodes]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-36],5
	mov	[ebp-40],-2
_44
	mov	ebx,[ebp-36]
	mov	[ebp-56],ebx
	mov	ebx,[ebp-40]
	mov	[ebp-60],ebx
	sub	esp,4
	mov	[esp],203
	call	_fkeyhit
	and	eax,eax
	jz	_46
	sub	[ebp-36],1
_46
	sub	esp,4
	mov	[esp],205
	call	_fkeyhit
	and	eax,eax
	jz	_47
	add	[ebp-36],1
_47
	sub	esp,12
	mov	ebx,[ebp-40]
	mov	[esp+4],ebx
	sub	esp,4
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fcheckinsertpiece
	cmp	eax,0
	jnz	_48
	mov	ebx,[ebp-56]
	mov	[ebp-36],ebx
	mov	ebx,[ebp-60]
	mov	[ebp-40],ebx
_48
	sub	esp,4
	mov	[esp],200
	call	_fkeyhit
	and	eax,eax
	jz	_49
	sub	esp,8
	lea	eax,[ebp-64]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	[ebp-84],eax
	sub	esp,4
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-84]
	mov	[esp],ebx
	mov	eax,ebx
	call	_frotatepiece
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	mov	ebx,[ebp-40]
	mov	[esp+4],ebx
	sub	esp,4
	lea	eax,[ebp-28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fcheckinsertpiece
	cmp	eax,0
	jnz	_50
	sub	esp,8
	lea	eax,[ebp-28]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	lea	ebx,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrStore
_50
_49
	sub	esp,8
	mov	eax,_vfld
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fdrawfield
	jmp	_51
_42
	sub	esp,8
	mov	eax,_vfld
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fdrawfield
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_52
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_53
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],12
	mov	[esp],0
	call	_ftext
	mov	[ebp-68],1
	jmp	_54
_55
	mov	[ebp-72],1
	jmp	_56
_57
	sub	esp,12
	mov	ebx,[ebp-72]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_freadpixel
	mov	[ebp-76],eax
	mov	ebx,[ebp-76]
	mov	esi,255
	and	ebx,esi
	and	ebx,ebx
	jz	_58
	sub	esp,12
	mov	ebx,[ebp-72]
	sub	ebx,3
	mov	[esp+4],ebx
	mov	[esp+8],16777215
	mov	eax,[ebp-68]
	sub	eax,5
	mov	[esp],eax
	call	_fdrawbox
_58
	add	[ebp-72],1
_56
	cmp	[ebp-72],30
	jle	_57
_7
	add	[ebp-68],1
_54
	cmp	[ebp-68],40
	jle	_55
_6
_51
	sub	esp,20
	mov	[esp+12],272
	mov	[esp+16],0
	mov	[esp+8],132
	mov	[esp+4],286
	mov	[esp],564
	call	_frect
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_59
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],408
	mov	[esp],570
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_60
	jmp	_5
_60
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,32
	mov	eax,_61
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[_vscore]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	ebx,[_vcy]
	add	ebx,86
	mov	[esp+4],ebx
	mov	eax,[_vcx]
	add	eax,264
	mov	[esp],eax
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_62
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[_vcy]
	add	ebx,106
	mov	[esp+4],ebx
	mov	eax,[_vcx]
	add	eax,264
	mov	[esp],eax
	call	_ftext
	sub	esp,16
	mov	[esp+8],16776960
	sub	esp,4
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+12],eax
	mov	[esp+4],3
	mov	[esp],14
	call	_fdrawpiece
	sub	esp,16
	mov	[esp+8],143
	mov	[esp+12],0
	mov	[esp+4],622
	mov	eax,[ebp-52]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,64
	mov	eax,_63
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	[ebp-84],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-84]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_64
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	[ebp-84],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-84]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_65
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	[ebp-84],eax
	mov	eax,ebx
	call	_fmousez
	mov	ebx,eax
	mov	eax,[ebp-84]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	jmp	_41
_5
	call	_fend
	ret
_2_leave
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	esi,[ebp-64]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	esi,[ebp-28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawgrids
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,12
	mov	[esp+4],64
	mov	[esp+8],64
	mov	[esp],64
	call	_fcolor
	mov	[ebp-4],80
	jmp	_66
_67
	sub	esp,16
	mov	ebx,[_vcx]
	add	ebx,260
	mov	[esp+8],ebx
	mov	esi,[_vcy]
	add	esi,[ebp-4]
	mov	[esp+12],esi
	mov	esi,[_vcy]
	add	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[_vcx]
	mov	[esp],eax
	call	_fline
	add	[ebp-4],20
_66
	cmp	[ebp-4],480
	jle	_67
_9
	mov	[ebp-4],0
	jmp	_68
_69
	sub	esp,16
	mov	ebx,[_vcx]
	add	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	esi,[_vcy]
	add	esi,480
	mov	[esp+12],esi
	mov	esi,[_vcy]
	add	esi,80
	mov	[esp+4],esi
	mov	eax,[_vcx]
	add	eax,[ebp-4]
	mov	[esp],eax
	call	_fline
	add	[ebp-4],20
_68
	cmp	[ebp-4],260
	jle	_69
_10
	sub	esp,12
	mov	[esp+4],192
	mov	[esp+8],192
	mov	[esp],192
	call	_fcolor
	sub	esp,20
	mov	[esp+12],560
	mov	[esp+16],0
	mov	[esp+8],400
	mov	ebx,[_vcy]
	mov	[esp+4],ebx
	mov	eax,[_vcx]
	mov	[esp],eax
	call	_frect
	sub	esp,16
	mov	ebx,[_vcx]
	add	ebx,399
	mov	[esp+8],ebx
	mov	esi,[_vcy]
	add	esi,80
	mov	[esp+12],esi
	mov	esi,[_vcy]
	add	esi,80
	mov	[esp+4],esi
	mov	eax,[_vcx]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[_vcx]
	add	ebx,399
	mov	[esp+8],ebx
	mov	esi,[_vcy]
	add	esi,480
	mov	[esp+12],esi
	mov	esi,[_vcy]
	add	esi,480
	mov	[esp+4],esi
	mov	eax,[_vcx]
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[_vcx]
	add	ebx,260
	mov	[esp+8],ebx
	mov	esi,[_vcy]
	add	esi,480
	mov	[esp+12],esi
	mov	esi,[_vcy]
	add	esi,80
	mov	[esp+4],esi
	mov	eax,[_vcx]
	add	eax,260
	mov	[esp],eax
	call	_fline
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawbox
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,[ebp+28]
	mov	esi,65280
	and	ebx,esi
	shr	ebx,byte 8
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	mov	edi,255
	and	esi,edi
	mov	[esp+8],esi
	mov	eax,[ebp+28]
	mov	esi,16711680
	and	eax,esi
	shr	eax,byte 16
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[_vcy]
	add	ebx,80
	mov	esi,[ebp+24]
	sub	esi,1
	imul	esi,20
	add	ebx,esi
	add	ebx,1
	mov	[esp+4],ebx
	mov	[esp+12],19
	mov	[esp+16],1
	mov	[esp+8],19
	mov	eax,[ebp+20]
	sub	eax,1
	imul	eax,20
	add	eax,[_vcx]
	add	eax,1
	mov	[esp],eax
	call	_frect
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fdrawpiece
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-4],1
	mov	[ebp-8],1
	jmp	_70
_71
	mov	[ebp-12],1
	jmp	_72
_73
	sub	esp,20
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_75
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_74
	sub	esp,12
	mov	ebx,[ebp+24]
	add	ebx,[ebp-8]
	sub	ebx,1
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	add	eax,[ebp-12]
	sub	eax,1
	mov	[esp],eax
	call	_fdrawbox
_74
	add	[ebp-4],1
	add	[ebp-12],1
_72
	cmp	[ebp-12],4
	jle	_73
_14
	add	[ebp-8],1
_70
	cmp	[ebp-8],4
	jle	_71
_13
	mov	eax,0
	jmp	_12_leave
_12_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp+32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fdrawfield
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-4],1
	mov	[ebp-8],1
	jmp	_76
_77
	mov	[ebp-12],1
	jmp	_78
_79
	sub	esp,20
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	mov	[ebp-20],1
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_82
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	cmp	[ebp-20],eax
	jz	_81
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_84
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	cmp	[ebp-20],eax
	jz	_83
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_86
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	cmp	[ebp-20],eax
	jz	_85
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_88
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	cmp	[ebp-20],eax
	jz	_87
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_90
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	cmp	[ebp-20],eax
	jz	_89
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_92
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	cmp	[ebp-20],eax
	jz	_91
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_94
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	cmp	[ebp-20],eax
	jz	_93
	jmp	_80
_81
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],16711680
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fdrawbox
	jmp	_80
_83
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],65280
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fdrawbox
	jmp	_80
_85
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],255
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fdrawbox
	jmp	_80
_87
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],16711935
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fdrawbox
	jmp	_80
_89
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],16776960
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fdrawbox
	jmp	_80
_91
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],65535
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fdrawbox
	jmp	_80
_93
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],16777215
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fdrawbox
	jmp	_80
_80
	add	[ebp-4],1
	add	[ebp-12],1
_78
	cmp	[ebp-12],13
	jle	_79
_17
	add	[ebp-8],1
_76
	cmp	[ebp-8],20
	jle	_77
_16
	mov	eax,0
	jmp	_15_leave
_15_leave
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[ebp-24],eax
	sub	esp,4
	mov	esi,[ebp-16]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-24]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_finsertpiece
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-4],1
	mov	[ebp-8],1
	jmp	_95
_96
	mov	[ebp-12],1
	jmp	_97
_98
	sub	esp,20
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_100
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_99
	mov	ebx,[ebp-12]
	add	ebx,[ebp+20]
	sub	ebx,1
	mov	[ebp-16],ebx
	mov	ebx,[ebp-8]
	add	ebx,[ebp+24]
	sub	ebx,1
	mov	[ebp-20],ebx
	cmp	[ebp-16],1
	setl	al
	movzx	eax,al
	mov	[ebp-28],eax
	cmp	[ebp-16],13
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	or	eax,ebx
	and	eax,eax
	jz	_101
	mov	eax,0
	jmp	_19_leave
_101
	cmp	[ebp-20],20
	jle	_102
	mov	eax,0
	jmp	_19_leave
_102
	cmp	[ebp-20],1
	jl	_103
	sub	esp,20
	mov	ebx,[ebp-20]
	sub	ebx,1
	imul	ebx,13
	add	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vfld
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_105
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_104
	mov	eax,0
	jmp	_19_leave
_104
	sub	esp,36
	mov	eax,_vfld
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	ebx,[ebp-20]
	sub	ebx,1
	imul	ebx,13
	add	ebx,[ebp-16]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fleft
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	sub	ebx,1
	imul	ebx,13
	add	ebx,[ebp-16]
	add	ebx,1
	mov	[esp+4],ebx
	mov	[esp+8],-1
	mov	[ebp-32],eax
	sub	esp,4
	mov	esi,_vfld
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-32]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	[esp+4],esi
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp],_vfld
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_103
_99
	add	[ebp-4],1
	add	[ebp-12],1
_97
	cmp	[ebp-12],4
	jle	_98
_21
	add	[ebp-8],1
_95
	cmp	[ebp-8],4
	jle	_96
_20
	mov	eax,1
	jmp	_19_leave
	mov	eax,0
	jmp	_19_leave
_19_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp+32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fcheckinsertpiece
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-4],1
	mov	[ebp-8],1
	jmp	_106
_107
	mov	[ebp-12],1
	jmp	_108
_109
	sub	esp,20
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_111
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_110
	mov	ebx,[ebp-12]
	add	ebx,[ebp+20]
	sub	ebx,1
	mov	[ebp-16],ebx
	mov	ebx,[ebp-8]
	add	ebx,[ebp+24]
	sub	ebx,1
	mov	[ebp-20],ebx
	cmp	[ebp-16],1
	setl	al
	movzx	eax,al
	mov	[ebp-28],eax
	cmp	[ebp-16],13
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	or	eax,ebx
	and	eax,eax
	jz	_112
	mov	eax,0
	jmp	_22_leave
_112
	cmp	[ebp-20],20
	jle	_113
	mov	eax,0
	jmp	_22_leave
_113
	cmp	[ebp-20],1
	jl	_114
	sub	esp,20
	mov	ebx,[ebp-20]
	sub	ebx,1
	imul	ebx,13
	add	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vfld
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_116
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_115
	mov	eax,0
	jmp	_22_leave
_115
_114
_110
	add	[ebp-4],1
	add	[ebp-12],1
_108
	cmp	[ebp-12],4
	jle	_109
_24
	add	[ebp-8],1
_106
	cmp	[ebp-8],4
	jle	_107
_23
	mov	eax,1
	jmp	_22_leave
	mov	eax,0
	jmp	_22_leave
_22_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_frotatepiece
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	[ebp-4],0
	sub	esp,24
	mov	ebx,16
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	sub	ebx,eax
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_117
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fstring
	mov	[esp+4],eax
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,44
	mov	[esp+4],13
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,12
	mov	[esp+4],9
	mov	[esp+8],1
	mov	[ebp-12],eax
	sub	esp,4
	lea	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	[esp+4],esi
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,12
	mov	[esp+4],5
	mov	[esp+8],1
	mov	[ebp-12],eax
	sub	esp,4
	lea	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	[esp+4],esi
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	[ebp-12],eax
	sub	esp,4
	lea	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	[esp+4],esi
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,52
	mov	[esp+4],14
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	[esp+4],10
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	[esp+4],6
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,52
	mov	[esp+4],15
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	[esp+4],11
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	[esp+4],7
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	[esp+4],3
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,52
	mov	[esp+4],16
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	[ebp-8],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	[esp+4],12
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	[esp+4],8
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	[esp+4],4
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_25_leave
	sub	esp,4
	mov	eax,_118
	mov	[esp],eax
	call	__bbStrConst
	jmp	_25_leave
_25_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fwipelines
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-4],20
	jmp	_119
_120
	mov	[ebp-8],1
	mov	[ebp-12],1
	jmp	_121
_122
	sub	esp,20
	mov	ebx,[ebp-4]
	sub	ebx,1
	imul	ebx,13
	add	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	mov	eax,_vfld
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_124
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_123
	mov	[ebp-8],0
	jmp	_28
_123
	add	[ebp-12],1
_121
	cmp	[ebp-12],13
	jle	_122
_28
	mov	ebx,[ebp-8]
	and	ebx,ebx
	jz	_125
	sub	esp,36
	mov	eax,_126
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[esp+4],13
	call	_fstring
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,8
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_vfld
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	sub	esi,1
	imul	esi,13
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fleft
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,12
	mov	ebx,[ebp-4]
	imul	ebx,13
	add	ebx,1
	mov	[esp+4],ebx
	mov	[esp+8],-1
	mov	[ebp-24],eax
	sub	esp,4
	mov	esi,_vfld
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-24]
	mov	[esp],esi
	mov	eax,esi
	call	_fmid
	mov	esi,eax
	mov	eax,[ebp-20]
	mov	[esp+4],esi
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp],_vfld
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[_vscore],1
	add	[ebp-4],1
_125
	add	[ebp-4],-1
_119
	cmp	[ebp-4],1
	jge	_120
_27
	mov	eax,0
	jmp	_26_leave
_26_leave
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
_vcx	.dd	0
	.align	4
_vcy	.dd	0
	.align	4
_vfld	.dd	0
_29	.db	" ",0
	.align	4
_3	.dd	6
	.dd	8
	.dd	__bbStrType
_vpcodes	.dd	0
	.align	4
_vscore	.dd	0
_30	.db	"  x   x   x   x ",0
_31	.db	"     xxx x",0
_32	.db	"     xx  xx ",0
_33	.db	" x   xx   x",0
_34	.db	" x  xxx",0
_35	.db	"     xx   xx",0
_36	.db	"     xxx   x",0
_37	.db	"lb3d.png",0
_40	.db	"lb3d.png",0
_52	.db	"Game",0
_53	.db	"Over",0
_59	.db	"Place for an ad",0
_61	.db	"Score: ",0
_62	.db	"Next: ",0
_63	.db	"X: ",0
_64	.db	" Y: ",0
_65	.db	" Z: ",0
_75	.db	"x",0
_82	.db	"1",0
_84	.db	"2",0
_86	.db	"3",0
_88	.db	"4",0
_90	.db	"5",0
_92	.db	"6",0
_94	.db	"7",0
_100	.db	"x",0
_105	.db	" ",0
_111	.db	"x",0
_116	.db	" ",0
_117	.db	" ",0
_118	.db	"",0
_124	.db	" ",0
_126	.db	" ",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	1
	.dd	567
	.dd	1
	.dd	137
	.dd	1
	.dd	80
	.dd	1
	.dd	78
	.dd	1
	.dd	71
	.dd	1
	.dd	13
	.dd	1
	.dd	10
	.dd	1
	.dd	26
	.dd	1
	.dd	10
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	13
	.dd	1
	.dd	73
	.dd	1
	.dd	72
	.dd	1
	.dd	68
	.dd	1
	.dd	82
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	76
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	16
	.dd	1
	.dd	8
	.dd	1
	.dd	3
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	139
	.dd	1
	.dd	5
	.dd	1
	.dd	105
	.dd	1
	.dd	149
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	4
	.dd	1
	.dd	103
	.dd	1
	.dd	65
	.dd	1
	.dd	77
	.dd	1
	.dd	65
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	175
	.dd	1
	.dd	200
	.dd	1
	.dd	55
	.dd	1
	.dd	5
	.dd	1
	.dd	138
	.dd	1
	.dd	233
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	25
	.dd	1
	.dd	116
	.dd	1
	.dd	69
	.dd	1
	.dd	88
	.dd	1
	.dd	116
	.dd	1
	.dd	83
	.dd	1
	.dd	111
	.dd	1
	.dd	102
	.dd	1
	.dd	116
	.dd	1
	.dd	119
	.dd	1
	.dd	97
	.dd	1
	.dd	114
	.dd	1
	.dd	101
	.dd	1
	.dd	0
	.dd	1
	.dd	65
	.dd	1
	.dd	100
	.dd	1
	.dd	111
	.dd	1
	.dd	98
	.dd	1
	.dd	101
	.dd	1
	.dd	32
	.dd	1
	.dd	73
	.dd	1
	.dd	109
	.dd	1
	.dd	97
	.dd	1
	.dd	103
	.dd	1
	.dd	101
	.dd	1
	.dd	82
	.dd	1
	.dd	101
	.dd	1
	.dd	97
	.dd	1
	.dd	100
	.dd	1
	.dd	121
	.dd	1
	.dd	113
	.dd	1
	.dd	201
	.dd	1
	.dd	101
	.dd	1
	.dd	60
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	96
	.dd	1
	.dd	80
	.dd	1
	.dd	76
	.dd	1
	.dd	84
	.dd	1
	.dd	69
	.dd	1
	.dd	237
	.dd	1
	.dd	237
	.dd	1
	.dd	237
	.dd	1
	.dd	46
	.dd	1
	.dd	106
	.dd	1
	.dd	178
	.dd	1
	.dd	251
	.dd	1
	.dd	77
	.dd	1
	.dd	3
	.dd	1
	.dd	220
	.dd	1
	.dd	159
	.dd	1
	.dd	87
	.dd	1
	.dd	158
	.dd	1
	.dd	47
	.dd	1
	.dd	1
	.dd	1
	.dd	240
	.dd	1
	.dd	240
	.dd	1
	.dd	240
	.dd	1
	.dd	210
	.dd	1
	.dd	48
	.dd	1
	.dd	0
	.dd	1
	.dd	167
	.dd	1
	.dd	162
	.dd	1
	.dd	161
	.dd	1
	.dd	186
	.dd	1
	.dd	120
	.dd	1
	.dd	43
	.dd	1
	.dd	255
	.dd	1
	.dd	98
	.dd	1
	.dd	18
	.dd	1
	.dd	145
	.dd	1
	.dd	117
	.dd	1
	.dd	110
	.dd	1
	.dd	199
	.dd	1
	.dd	208
	.dd	1
	.dd	210
	.dd	1
	.dd	218
	.dd	1
	.dd	230
	.dd	1
	.dd	179
	.dd	1
	.dd	6
	.dd	1
	.dd	11
	.dd	1
	.dd	97
	.dd	1
	.dd	109
	.dd	1
	.dd	42
	.dd	1
	.dd	18
	.dd	1
	.dd	167
	.dd	1
	.dd	191
	.dd	1
	.dd	206
	.dd	1
	.dd	91
	.dd	1
	.dd	97
	.dd	1
	.dd	27
	.dd	1
	.dd	74
	.dd	1
	.dd	0
	.dd	1
	.dd	43
	.dd	1
	.dd	127
	.dd	1
	.dd	30
	.dd	1
	.dd	4
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	97
	.dd	1
	.dd	162
	.dd	1
	.dd	235
	.dd	1
	.dd	227
	.dd	1
	.dd	61
	.dd	1
	.dd	0
	.dd	1
	.dd	215
	.dd	1
	.dd	197
	.dd	1
	.dd	134
	.dd	1
	.dd	116
	.dd	1
	.dd	58
	.dd	1
	.dd	45
	.dd	1
	.dd	74
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	255
	.dd	1
	.dd	111
	.dd	1
	.dd	30
	.dd	1
	.dd	194
	.dd	1
	.dd	190
	.dd	1
	.dd	189
	.dd	1
	.dd	37
	.dd	1
	.dd	0
	.dd	1
	.dd	43
	.dd	1
	.dd	38
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	43
	.dd	1
	.dd	226
	.dd	1
	.dd	230
	.dd	1
	.dd	223
	.dd	1
	.dd	221
	.dd	1
	.dd	224
	.dd	1
	.dd	225
	.dd	1
	.dd	217
	.dd	1
	.dd	135
	.dd	1
	.dd	43
	.dd	1
	.dd	10
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	93
	.dd	1
	.dd	73
	.dd	1
	.dd	68
	.dd	1
	.dd	65
	.dd	1
	.dd	84
	.dd	1
	.dd	120
	.dd	1
	.dd	218
	.dd	1
	.dd	164
	.dd	1
	.dd	147
	.dd	1
	.dd	139
	.dd	1
	.dd	146
	.dd	1
	.dd	131
	.dd	1
	.dd	32
	.dd	1
	.dd	12
	.dd	1
	.dd	69
	.dd	1
	.dd	17
	.dd	1
	.dd	65
	.dd	1
	.dd	5
	.dd	1
	.dd	124
	.dd	1
	.dd	172
	.dd	1
	.dd	40
	.dd	1
	.dd	42
	.dd	1
	.dd	110
	.dd	1
	.dd	107
	.dd	1
	.dd	255
	.dd	1
	.dd	255
	.dd	1
	.dd	47
	.dd	1
	.dd	55
	.dd	1
	.dd	9
	.dd	1
	.dd	88
	.dd	1
	.dd	117
	.dd	1
	.dd	234
	.dd	1
	.dd	214
	.dd	1
	.dd	157
	.dd	1
	.dd	110
	.dd	1
	.dd	180
	.dd	1
	.dd	58
	.dd	1
	.dd	163
	.dd	1
	.dd	205
	.dd	1
	.dd	241
	.dd	1
	.dd	230
	.dd	1
	.dd	38
	.dd	1
	.dd	97
	.dd	1
	.dd	108
	.dd	1
	.dd	97
	.dd	1
	.dd	151
	.dd	1
	.dd	33
	.dd	1
	.dd	183
	.dd	1
	.dd	67
	.dd	1
	.dd	210
	.dd	1
	.dd	239
	.dd	1
	.dd	151
	.dd	1
	.dd	120
	.dd	1
	.dd	205
	.dd	1
	.dd	52
	.dd	1
	.dd	122
	.dd	1
	.dd	212
	.dd	1
	.dd	51
	.dd	1
	.dd	147
	.dd	1
	.dd	115
	.dd	1
	.dd	14
	.dd	1
	.dd	183
	.dd	1
	.dd	3
	.dd	1
	.dd	225
	.dd	1
	.dd	130
	.dd	1
	.dd	116
	.dd	1
	.dd	6
	.dd	1
	.dd	203
	.dd	1
	.dd	173
	.dd	1
	.dd	227
	.dd	1
	.dd	206
	.dd	1
	.dd	106
	.dd	1
	.dd	109
	.dd	1
	.dd	5
	.dd	1
	.dd	23
	.dd	1
	.dd	54
	.dd	1
	.dd	151
	.dd	1
	.dd	164
	.dd	1
	.dd	139
	.dd	1
	.dd	180
	.dd	1
	.dd	149
	.dd	1
	.dd	109
	.dd	1
	.dd	243
	.dd	1
	.dd	39
	.dd	1
	.dd	101
	.dd	1
	.dd	105
	.dd	1
	.dd	215
	.dd	1
	.dd	117
	.dd	1
	.dd	125
	.dd	1
	.dd	212
	.dd	1
	.dd	101
	.dd	1
	.dd	149
	.dd	1
	.dd	242
	.dd	1
	.dd	74
	.dd	1
	.dd	89
	.dd	1
	.dd	1
	.dd	1
	.dd	87
	.dd	1
	.dd	238
	.dd	1
	.dd	106
	.dd	1
	.dd	131
	.dd	1
	.dd	148
	.dd	1
	.dd	9
	.dd	1
	.dd	95
	.dd	1
	.dd	35
	.dd	1
	.dd	44
	.dd	1
	.dd	156
	.dd	1
	.dd	49
	.dd	1
	.dd	115
	.dd	1
	.dd	169
	.dd	1
	.dd	187
	.dd	1
	.dd	238
	.dd	1
	.dd	222
	.dd	1
	.dd	172
	.dd	1
	.dd	111
	.dd	1
	.dd	35
	.dd	1
	.dd	12
	.dd	1
	.dd	61
	.dd	1
	.dd	51
	.dd	1
	.dd	109
	.dd	1
	.dd	19
	.dd	1
	.dd	133
	.dd	1
	.dd	105
	.dd	1
	.dd	167
	.dd	1
	.dd	188
	.dd	1
	.dd	247
	.dd	1
	.dd	202
	.dd	1
	.dd	89
	.dd	1
	.dd	32
	.dd	1
	.dd	114
	.dd	1
	.dd	110
	.dd	1
	.dd	53
	.dd	1
	.dd	60
	.dd	1
	.dd	130
	.dd	1
	.dd	124
	.dd	1
	.dd	150
	.dd	1
	.dd	222
	.dd	1
	.dd	77
	.dd	1
	.dd	80
	.dd	1
	.dd	182
	.dd	1
	.dd	193
	.dd	1
	.dd	134
	.dd	1
	.dd	68
	.dd	1
	.dd	202
	.dd	1
	.dd	162
	.dd	1
	.dd	122
	.dd	1
	.dd	224
	.dd	1
	.dd	131
	.dd	1
	.dd	225
	.dd	1
	.dd	150
	.dd	1
	.dd	236
	.dd	1
	.dd	202
	.dd	1
	.dd	44
	.dd	1
	.dd	159
	.dd	1
	.dd	176
	.dd	1
	.dd	145
	.dd	1
	.dd	123
	.dd	1
	.dd	138
	.dd	1
	.dd	2
	.dd	1
	.dd	245
	.dd	1
	.dd	185
	.dd	1
	.dd	108
	.dd	1
	.dd	140
	.dd	1
	.dd	249
	.dd	1
	.dd	67
	.dd	1
	.dd	107
	.dd	1
	.dd	72
	.dd	1
	.dd	86
	.dd	1
	.dd	14
	.dd	1
	.dd	114
	.dd	1
	.dd	42
	.dd	1
	.dd	13
	.dd	1
	.dd	90
	.dd	1
	.dd	58
	.dd	1
	.dd	74
	.dd	1
	.dd	31
	.dd	1
	.dd	42
	.dd	1
	.dd	250
	.dd	1
	.dd	134
	.dd	1
	.dd	76
	.dd	1
	.dd	43
	.dd	1
	.dd	115
	.dd	1
	.dd	6
	.dd	1
	.dd	171
	.dd	1
	.dd	185
	.dd	1
	.dd	34
	.dd	1
	.dd	152
	.dd	1
	.dd	163
	.dd	1
	.dd	50
	.dd	1
	.dd	179
	.dd	1
	.dd	122
	.dd	1
	.dd	85
	.dd	1
	.dd	70
	.dd	1
	.dd	18
	.dd	1
	.dd	182
	.dd	1
	.dd	50
	.dd	1
	.dd	135
	.dd	1
	.dd	111
	.dd	1
	.dd	186
	.dd	1
	.dd	137
	.dd	1
	.dd	36
	.dd	1
	.dd	72
	.dd	1
	.dd	45
	.dd	1
	.dd	167
	.dd	1
	.dd	254
	.dd	1
	.dd	12
	.dd	1
	.dd	6
	.dd	1
	.dd	101
	.dd	1
	.dd	6
	.dd	1
	.dd	154
	.dd	1
	.dd	247
	.dd	1
	.dd	28
	.dd	1
	.dd	96
	.dd	1
	.dd	250
	.dd	1
	.dd	220
	.dd	1
	.dd	179
	.dd	1
	.dd	144
	.dd	1
	.dd	92
	.dd	1
	.dd	144
	.dd	1
	.dd	103
	.dd	1
	.dd	7
	.dd	1
	.dd	216
	.dd	1
	.dd	209
	.dd	1
	.dd	179
	.dd	1
	.dd	25
	.dd	1
	.dd	154
	.dd	1
	.dd	73
	.dd	1
	.dd	174
	.dd	1
	.dd	41
	.dd	1
	.dd	100
	.dd	1
	.dd	77
	.dd	1
	.dd	115
	.dd	1
	.dd	252
	.dd	1
	.dd	18
	.dd	1
	.dd	40
	.dd	1
	.dd	217
	.dd	1
	.dd	195
	.dd	1
	.dd	68
	.dd	1
	.dd	240
	.dd	1
	.dd	8
	.dd	1
	.dd	203
	.dd	1
	.dd	123
	.dd	1
	.dd	167
	.dd	1
	.dd	140
	.dd	1
	.dd	105
	.dd	1
	.dd	1
	.dd	1
	.dd	218
	.dd	1
	.dd	84
	.dd	1
	.dd	96
	.dd	1
	.dd	217
	.dd	1
	.dd	124
	.dd	1
	.dd	157
	.dd	1
	.dd	9
	.dd	1
	.dd	248
	.dd	1
	.dd	247
	.dd	1
	.dd	14
	.dd	1
	.dd	86
	.dd	1
	.dd	4
	.dd	1
	.dd	139
	.dd	1
	.dd	168
	.dd	1
	.dd	218
	.dd	1
	.dd	119
	.dd	1
	.dd	158
	.dd	1
	.dd	225
	.dd	1
	.dd	160
	.dd	1
	.dd	9
	.dd	1
	.dd	206
	.dd	1
	.dd	17
	.dd	1
	.dd	149
	.dd	1
	.dd	77
	.dd	1
	.dd	57
	.dd	1
	.dd	205
	.dd	1
	.dd	88
	.dd	1
	.dd	232
	.dd	1
	.dd	230
	.dd	1
	.dd	170
	.dd	1
	.dd	12
	.dd	1
	.dd	52
	.dd	1
	.dd	4
	.dd	1
	.dd	195
	.dd	1
	.dd	82
	.dd	1
	.dd	16
	.dd	1
	.dd	83
	.dd	1
	.dd	36
	.dd	1
	.dd	177
	.dd	1
	.dd	155
	.dd	1
	.dd	253
	.dd	1
	.dd	233
	.dd	1
	.dd	156
	.dd	1
	.dd	97
	.dd	1
	.dd	205
	.dd	1
	.dd	163
	.dd	1
	.dd	224
	.dd	1
	.dd	14
	.dd	1
	.dd	88
	.dd	1
	.dd	227
	.dd	1
	.dd	35
	.dd	1
	.dd	204
	.dd	1
	.dd	255
	.dd	1
	.dd	193
	.dd	1
	.dd	51
	.dd	1
	.dd	48
	.dd	1
	.dd	170
	.dd	1
	.dd	250
	.dd	1
	.dd	194
	.dd	1
	.dd	110
	.dd	1
	.dd	86
	.dd	1
	.dd	195
	.dd	1
	.dd	13
	.dd	1
	.dd	46
	.dd	1
	.dd	230
	.dd	1
	.dd	100
	.dd	1
	.dd	206
	.dd	1
	.dd	142
	.dd	1
	.dd	177
	.dd	1
	.dd	104
	.dd	1
	.dd	155
	.dd	1
	.dd	101
	.dd	1
	.dd	52
	.dd	1
	.dd	98
	.dd	1
	.dd	255
	.dd	1
	.dd	222
	.dd	1
	.dd	77
	.dd	1
	.dd	76
	.dd	1
	.dd	134
	.dd	1
	.dd	101
	.dd	1
	.dd	210
	.dd	1
	.dd	47
	.dd	1
	.dd	132
	.dd	1
	.dd	15
	.dd	1
	.dd	118
	.dd	1
	.dd	51
	.dd	1
	.dd	54
	.dd	1
	.dd	117
	.dd	1
	.dd	94
	.dd	1
	.dd	119
	.dd	1
	.dd	242
	.dd	1
	.dd	185
	.dd	1
	.dd	155
	.dd	1
	.dd	159
	.dd	1
	.dd	42
	.dd	1
	.dd	59
	.dd	1
	.dd	86
	.dd	1
	.dd	198
	.dd	1
	.dd	46
	.dd	1
	.dd	244
	.dd	1
	.dd	108
	.dd	1
	.dd	241
	.dd	1
	.dd	35
	.dd	1
	.dd	192
	.dd	1
	.dd	0
	.dd	1
	.dd	241
	.dd	1
	.dd	206
	.dd	1
	.dd	35
	.dd	1
	.dd	57
	.dd	1
	.dd	223
	.dd	1
	.dd	208
	.dd	1
	.dd	30
	.dd	1
	.dd	205
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	73
	.dd	1
	.dd	69
	.dd	1
	.dd	78
	.dd	1
	.dd	68
	.dd	1
	.dd	174
	.dd	1
	.dd	66
	.dd	1
	.dd	96
	.dd	1
	.dd	130
	.dd	0

