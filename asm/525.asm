
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	call	_flmexample
	sub	esp,8
	mov	[esp],_vg_lmparams
	mov	[esp+4],0
	call	__bbObjStore
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fbeginlightmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,8
	mov	[esp],_vg_lmparams
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_tlmparams
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_flightmapparams
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+20]
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	eax,0
	jmp	_19_leave
_19_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fendlightmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	mov	eax,[_vg_lmparams]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_115
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tlmlight
	call	__bbObjEachFirst
	and	eax,eax
	jz	_21
_116
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_116
_21
	sub	esp,4
	mov	eax,[_vg_lmparams]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,8
	mov	[esp],_vg_lmparams
	mov	[esp+4],0
	call	__bbObjStore
_115
	mov	eax,0
	jmp	_20_leave
_20_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreatelmlight
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tlmlight
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+40]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp+44]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp+48]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	ebx,[ebp+64]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	mov	ebx,[ebp+52]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+56]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+60]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	eax,[ebp-4]
	jmp	_22_leave
	mov	eax,0
	jmp	_22_leave
_22_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 48
	.align	16
_fapplylightmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	cmp	[ebp+24],0
	jnz	_117
	mov	eax,0
	jmp	_23_leave
_117
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityfx
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp+28]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentitytexture
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreetexture
	mov	eax,1
	jmp	_23_leave
	mov	eax,0
	jmp	_23_leave
_23_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fsavelightmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	cmp	[ebp+24],0
	jnz	_118
	mov	eax,0
	jmp	_24_leave
_118
	sub	esp,16
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fsavebuffer
	sub	esp,16
	lea	eax,[ebp+32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcreateluvs
	mov	ebx,eax
	mov	eax,0
	jmp	_24_leave
_24_leave
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[ebp-4],eax
	sub	esp,4
	mov	esi,[ebp+32]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-4]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_floadlightmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_funweld
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_ffiletype
	and	eax,eax
	jz	_119
	sub	esp,16
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_floadluvs
	mov	ebx,eax
_119
	sub	esp,12
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_floadtexture
	mov	[ebp-4],eax
	mov	ebx,[ebp-4]
	and	ebx,ebx
	jz	_120
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityfx
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_ftexturecoords
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp+32]
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentitytexture
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreetexture
_120
	mov	eax,0
	jmp	_25_leave
_25_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp+28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_flightmapmesh
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,128
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fcls
	sub	esp,28
	mov	eax,_121
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-128],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fentityname
	mov	ebx,eax
	mov	eax,[ebp-128]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-128],eax
	sub	esp,4
	mov	ebx,_122
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-128]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],20
	sub	esp,4
	mov	eax,_123
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,12
	mov	[esp+4],250
	mov	[esp+8],150
	mov	[esp],250
	call	_fcolor
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	[ebp-128],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-128]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	[esp],eax
	call	_ftext
	mov	[ebp-12],400
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	ebx,[ebp-12]
	sar	ebx,byte 1
	sub	eax,ebx
	mov	[ebp-16],eax
	call	_fgraphicsheight
	sar	eax,byte 1
	add	eax,50
	mov	[ebp-20],eax
	mov	[ebp-24],20
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],200
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-24]
	add	ebx,8
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-12]
	add	esi,8
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	sub	ebx,4
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	sub	eax,4
	mov	[esp],eax
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_funweld
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	mov	[ebp-28],eax
	mov	[ebp-32],1
	jmp	_124
_125
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-36],eax
	mov	[ebp-40],0
	jmp	_126
_127
	sub	esp,8
	lea	eax,[ebp-44]
	mov	[esp],eax
	mov	[ebp-128],eax
	sub	esp,4
	mov	ebx,_tlmtriangle
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-128]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	[ebp-48],0
	jmp	_128
_129
	sub	esp,12
	mov	ebx,[ebp-40]
	mov	[esp+4],ebx
	mov	esi,[ebp-48]
	mov	[esp+8],esi
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-52],eax
	sub	esp,28
	mov	eax,[ebp-36]
	mov	[esp],eax
	mov	ebx,[ebp-52]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp+20]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[ebp-128],eax
	sub	esp,8
	mov	ebx,[ebp-36]
	mov	[esp],ebx
	mov	esi,[ebp-52]
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fvertexy
	mov	ebx,eax
	mov	eax,[ebp-128]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	sub	esp,8
	mov	eax,[ebp-36]
	mov	[esp],eax
	mov	esi,[ebp-52]
	mov	[esp+4],esi
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftformpoint
	mov	ebx,[ebp-48]
	shl	ebx,byte 2
	mov	esi,[ebp-44]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	call	_ftformedx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebx],eax
	mov	ebx,[ebp-48]
	shl	ebx,byte 2
	mov	esi,[ebp-44]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	call	_ftformedy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebx],eax
	mov	ebx,[ebp-48]
	shl	ebx,byte 2
	mov	esi,[ebp-44]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	add	ebx,esi
	call	_ftformedz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebx],eax
	mov	ebx,[ebp-48]
	shl	ebx,byte 2
	mov	esi,[ebp-44]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp-52]
	mov	[ebx],esi
	add	[ebp-48],1
_128
	cmp	[ebp-48],2
	jle	_129
_29
	mov	ebx,[ebp-36]
	mov	esi,[ebp-44]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	sub	esp,36
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+28],ebx
	mov	esi,[ebp-44]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+32],esi
	mov	esi,[ebp-44]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+24],esi
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	esi,[ebp-44]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-44]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-44]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fgettrianglenormal
	call	_ftrianglenormalx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebx],eax
	call	_ftrianglenormaly
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],eax
	call	_ftrianglenormalz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	add	[ebp-40],1
_126
	sub	esp,4
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fcounttriangles
	sub	eax,1
	cmp	[ebp-40],eax
	jle	_127
_28
	add	[ebp-32],1
_124
	mov	ebx,[ebp-28]
	cmp	[ebp-32],ebx
	jle	_125
_27
	mov	[ebp-56],0
_130
	sub	esp,8
	lea	eax,[ebp-60]
	mov	[esp],eax
	mov	[ebp-128],eax
	sub	esp,4
	mov	ebx,_tlmsurface
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-128]
	mov	[esp+4],ebx
	call	__bbObjStore
	add	[ebp-56],1
	sub	esp,8
	lea	eax,[ebp-44]
	mov	[esp],eax
	mov	[esp+4],_tlmtriangle
	call	__bbObjEachFirst
	and	eax,eax
	jz	_31
_131
	mov	ebx,[ebp-44]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_132
	jmp	_31
_132
	sub	esp,4
	lea	eax,[ebp-44]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_131
_31
	sub	esp,8
	mov	eax,[ebp-44]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_133
	jmp	_30
_133
	mov	ebx,1
	mov	esi,[ebp-44]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-60]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	shl	eax,byte 2
	mov	ebx,[ebp-60]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	[esp],eax
	mov	ebx,[ebp-44]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-60]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-60]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	[ebp-64],1
	jmp	_134
_135
	sub	esp,8
	lea	eax,[ebp-68]
	mov	[esp],eax
	mov	[esp+4],_tlmtriangle
	call	__bbObjEachFirst
	and	eax,eax
	jz	_33
_136
	mov	ebx,[ebp-68]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_137
	mov	ebx,[ebp-68]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-44]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-68]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-44]
	mov	edi,[edi]
	add	edi,28
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-68]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-44]
	mov	edi,[edi]
	add	edi,32
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	sub	esp,4
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_facos
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	and	eax,eax
	jz	_138
	mov	[ebp-76],0
	mov	[ebp-48],0
	jmp	_139
_140
	sub	esp,8
	mov	ebx,[ebp-48]
	shl	ebx,byte 2
	mov	esi,[ebp-60]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	lea	eax,[ebp-80]
	mov	[esp],eax
	call	__bbObjStore
	mov	[ebp-84],0
	jmp	_141
_142
	mov	[ebp-88],0
	jmp	_143
_144
	mov	ebx,[ebp-84]
	shl	ebx,byte 2
	mov	esi,[ebp-68]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-88]
	shl	esi,byte 2
	mov	edi,[ebp-80]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-92],ebx
	mov	ebx,[ebp-84]
	shl	ebx,byte 2
	mov	esi,[ebp-68]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-88]
	shl	esi,byte 2
	mov	edi,[ebp-80]
	mov	edi,[edi]
	add	edi,4
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-96],ebx
	mov	ebx,[ebp-84]
	shl	ebx,byte 2
	mov	esi,[ebp-68]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-88]
	shl	esi,byte 2
	mov	edi,[ebp-80]
	mov	edi,[edi]
	add	edi,8
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-100],ebx
	sub	esp,4
	mov	eax,[ebp-92]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-92]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-96]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-96]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-100]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-100]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-104],eax
	mov	eax,[ebp-104]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1008981770
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	and	eax,eax
	jz	_145
	add	[ebp-76],1
	jmp	_36
_145
	add	[ebp-88],1
_143
	cmp	[ebp-88],2
	jle	_144
_36
	add	[ebp-84],1
_141
	cmp	[ebp-84],2
	jle	_142
_35
	add	[ebp-48],1
_139
	mov	ebx,[ebp-60]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-48],ebx
	jle	_140
_34
	cmp	[ebp-76],0
	jle	_146
	mov	ebx,1
	mov	esi,[ebp-68]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-60]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	shl	eax,byte 2
	mov	ebx,[ebp-60]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	[esp],eax
	mov	ebx,[ebp-68]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-60]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-60]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp-60]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,256
	jle	_147
	jmp	_33
_147
_146
_138
_137
	sub	esp,4
	lea	eax,[ebp-68]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_136
_33
	mov	ebx,[ebp-60]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,256
	jle	_148
	jmp	_32
_148
	add	[ebp-64],1
_134
	cmp	[ebp-64],3
	jle	_135
_32
	sub	esp,8
	mov	eax,[ebp-60]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_flmsetupsurface
	jmp	_130
_30
	mov	[ebp-108],0
	sub	esp,8
	lea	eax,[ebp-60]
	mov	[esp],eax
	mov	[esp+4],_tlmsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_37
_149
	add	[ebp-108],1
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_150
	call	_fend
_150
	sub	esp,8
	mov	eax,[ebp-60]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_flmlightsurface
	cmp	[ebp+32],0
	jle	_151
	sub	esp,8
	mov	eax,[ebp-60]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp+32]
	mov	[esp+4],ebx
	call	_flmblurimage
_151
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],200
	mov	[esp],0
	call	_fcolor
	call	_fcls
	sub	esp,20
	mov	ebx,[ebp-24]
	add	ebx,8
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-12]
	add	esi,8
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	sub	ebx,4
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	sub	eax,4
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-108]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	esi,[ebp-20]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	[esp+4],250
	mov	[esp+8],150
	mov	[esp],250
	call	_fcolor
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	[ebp-128],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-128]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	[esp],eax
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	lea	eax,[ebp-60]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_149
_37
	sub	esp,8
	lea	eax,[ebp-60]
	mov	[esp],eax
	mov	[esp+4],_tlmsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_38
_152
	sub	esp,8
	lea	eax,[ebp-112]
	mov	[esp],eax
	mov	[esp+4],_tlmsortedsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_39
_153
	mov	ebx,[ebp-112]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,88
	mov	ebx,[ebx]
	mov	esi,[ebp-60]
	mov	esi,[esi]
	add	esi,88
	mov	esi,[esi]
	cmp	ebx,esi
	jg	_154
	jmp	_39
_154
	sub	esp,4
	lea	eax,[ebp-112]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_153
_39
	sub	esp,8
	lea	eax,[ebp-116]
	mov	[esp],eax
	mov	[ebp-128],eax
	sub	esp,4
	mov	ebx,_tlmsortedsurface
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-128]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-116]
	mov	eax,[eax]
	add	eax,0
	mov	[esp],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-112]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_155
	sub	esp,8
	mov	eax,[ebp-116]
	mov	[esp],eax
	mov	ebx,[ebp-112]
	mov	[esp+4],ebx
	call	__bbObjInsBefore
_155
	sub	esp,4
	lea	eax,[ebp-60]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_152
_38
	sub	esp,4
	mov	eax,[ebp+28]
	mov	[esp],eax
	call	_flmpacker_fittexsize
	mov	[ebp-120],eax
	sub	esp,4
	mov	eax,[ebp-120]
	mov	[esp],eax
	call	_flmpacker_pack
	mov	[ebp-124],eax
	sub	esp,8
	lea	eax,[ebp-60]
	mov	[esp],eax
	mov	[esp+4],_tlmsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_40
_156
	sub	esp,4
	mov	eax,[ebp-60]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-60]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_156
_40
	sub	esp,4
	mov	eax,_tlmsortedsurface
	mov	[esp],eax
	call	__bbObjDeleteEach
	sub	esp,4
	mov	eax,_tlmtriangle
	mov	[esp],eax
	call	__bbObjDeleteEach
	mov	eax,[ebp-124]
	jmp	_26_leave
	mov	eax,0
	jmp	_26_leave
_26_leave
	mov	[ebp-128],eax
	sub	esp,4
	mov	ebx,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-128]
	mov	[ebp-128],eax
	sub	esp,4
	mov	esi,[ebp-116]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-128]
	mov	[ebp-128],eax
	sub	esp,4
	mov	esi,[ebp-80]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-128]
	mov	[ebp-128],eax
	sub	esp,4
	mov	ebx,[ebp-68]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-128]
	mov	[ebp-128],eax
	sub	esp,4
	mov	esi,[ebp-60]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-128]
	mov	[ebp-128],eax
	sub	esp,4
	mov	ebx,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-128]
	mov	[ebp-128],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-128]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_flightmapterrain
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,192
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	mov	[ebp-128],ebx
	mov	[ebp-132],ebx
	mov	[ebp-136],ebx
	mov	[ebp-140],ebx
	mov	[ebp-144],ebx
	mov	[ebp-148],ebx
	mov	[ebp-152],ebx
	mov	[ebp-156],ebx
	mov	[ebp-160],ebx
	mov	[ebp-164],ebx
	mov	[ebp-168],ebx
	mov	[ebp-172],ebx
	mov	[ebp-176],ebx
	mov	[ebp-180],ebx
	mov	[ebp-184],ebx
	mov	[ebp-188],ebx
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fcls
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-192],eax
	sub	esp,4
	mov	ebx,_157
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-192]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],20
	sub	esp,4
	mov	eax,_158
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,12
	mov	[esp+4],250
	mov	[esp+8],150
	mov	[esp],250
	call	_fcolor
	sub	esp,32
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-192],eax
	sub	esp,4
	mov	ebx,_159
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-192]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],1
	mov	[esp+16],1
	mov	[ebp-192],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-192]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	[esp],eax
	call	_ftext
	mov	[ebp-12],400
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	ebx,[ebp-12]
	sar	ebx,byte 1
	sub	eax,ebx
	mov	[ebp-16],eax
	call	_fgraphicsheight
	sar	eax,byte 1
	add	eax,50
	mov	[ebp-20],eax
	mov	[ebp-24],20
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],200
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-24]
	add	ebx,8
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-12]
	add	esi,8
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	sub	ebx,4
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	sub	eax,4
	mov	[esp],eax
	call	_frect
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fterrainsize
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-28],eax
	cmp	[ebp+24],0
	jnz	_160
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp+24],ebx
_160
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],2
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	eax,[ebp-32]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],2
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	eax,[ebp-32]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-48],eax
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],2
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	eax,[ebp-32]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-52],eax
	mov	[ebp-56],1065353216
	mov	eax,[ebp+24]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_161
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-56],ebx
_161
	mov	ebx,[ebp+24]
	mov	[ebp-60],ebx
	sub	esp,12
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-64],eax
	sub	esp,8
	mov	eax,[ebp-64]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-68],eax
	sub	esp,4
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[_vg_lmparams]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[_vg_lmparams]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fclscolor
	call	_fcls
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	sub	esp,4
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	[ebp-72],eax
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	[ebp-76],eax
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp-76]
	mov	[esp],eax
	call	_fentitypickmode
	sub	esp,12
	mov	[esp+4],1059061760
	mov	[esp+8],0
	mov	eax,[ebp-76]
	mov	[esp],eax
	call	_fentityradius
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-80],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-84],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-88],eax
	mov	[ebp-92],0
	sub	esp,8
	lea	eax,[ebp-96]
	mov	[esp],eax
	mov	[esp+4],_tlmlight
	call	__bbObjEachFirst
	and	eax,eax
	jz	_42
_162
	add	[ebp-92],1
	sub	esp,20
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-96]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fpositionentity
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	cmp	ebx,1
	jnz	_163
	sub	esp,4
	mov	eax,[ebp-96]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	mov	ebx,[ebp-88]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fceil
	mov	ebx,[ebp-60]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	fsubrp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-100],ebx
	sub	esp,4
	mov	eax,[ebp-96]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	mov	ebx,[ebp-88]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	mov	ebx,[ebp-60]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	fsubrp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-104],ebx
	sub	esp,4
	mov	eax,[ebp-96]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	mov	ebx,[ebp-80]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-108],eax
	sub	esp,4
	mov	eax,[ebp-96]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	mov	ebx,[ebp-80]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fceil
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-112],eax
	cmp	[ebp-100],0
	jge	_164
	mov	[ebp-100],0
_164
	mov	ebx,[ebp-60]
	sub	ebx,1
	cmp	[ebp-104],ebx
	jle	_165
	mov	ebx,[ebp-60]
	sub	ebx,1
	mov	[ebp-104],ebx
_165
	cmp	[ebp-108],0
	jge	_166
	mov	[ebp-108],0
_166
	mov	ebx,[ebp-60]
	sub	ebx,1
	cmp	[ebp-112],ebx
	jle	_167
	mov	ebx,[ebp-60]
	sub	ebx,1
	mov	[ebp-112],ebx
_167
	jmp	_168
_163
	mov	[ebp-108],0
	mov	[ebp-100],0
	mov	ebx,[ebp-60]
	sub	ebx,1
	mov	[ebp-112],ebx
	mov	ebx,[ebp-60]
	sub	ebx,1
	mov	[ebp-104],ebx
_168
	mov	ebx,[ebp-100]
	mov	[ebp-116],ebx
	jmp	_169
_170
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_171
	call	_fend
_171
	mov	ebx,[ebp-108]
	mov	[ebp-120],ebx
	jmp	_172
_173
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-116]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-124],ebx
	sub	esp,12
	mov	ebx,[ebp-120]
	add	ebx,1
	mov	[esp+4],ebx
	mov	esi,[ebp-124]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fterrainheight
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-128],eax
	mov	ebx,[ebp-120]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-44]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	ebx,[ebp-56]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-132],esi
	mov	ebx,[ebp-128]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-84]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	ebx,[ebp-56]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-136],esi
	mov	ebx,[ebp-124]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-88]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	ebx,[ebp-56]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-140],esi
	sub	esp,20
	mov	ebx,[ebp-140]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-136]
	mov	[esp+8],esi
	mov	ebx,[ebp-132]
	mov	[esp+4],ebx
	mov	eax,[ebp-76]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	mov	eax,[ebp-72]
	mov	[esp],eax
	mov	ebx,[ebp-76]
	mov	[esp+4],ebx
	call	_fentitydistance
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-144],eax
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-148],ebx
	cmp	[ebp-148],0
	jz	_175
	cmp	[ebp-148],1
	jz	_176
	jmp	_174
_175
	sub	esp,8
	mov	eax,[ebp-76]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-152],eax
	sub	esp,8
	mov	eax,[ebp-76]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-156],eax
	sub	esp,8
	mov	eax,[ebp-76]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-160],eax
	sub	esp,20
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-156]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-96]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-160]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],0
	mov	esi,[ebp-96]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-152]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	mov	eax,[ebp-76]
	mov	[esp],eax
	mov	ebx,[ebp-72]
	mov	[esp+4],ebx
	call	_fentityvisible
	and	eax,eax
	jz	_177
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	[ebp-164],ebx
	sub	esp,12
	mov	ebx,[ebp-116]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-120]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	[ebp-168],eax
	mov	ebx,[ebp-168]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-172],ebx
	mov	ebx,[ebp-168]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-176],ebx
	mov	ebx,[ebp-168]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-180],ebx
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-164]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-172]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-172],esi
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-164]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-176]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-176],esi
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-164]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-180]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-180],esi
	cmp	[ebp-172],255
	jle	_178
	mov	[ebp-172],255
_178
	cmp	[ebp-176],255
	jle	_179
	mov	[ebp-176],255
_179
	cmp	[ebp-180],255
	jle	_180
	mov	[ebp-180],255
_180
	mov	ebx,[ebp-180]
	mov	esi,[ebp-176]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-172]
	shl	esi,byte 16
	or	ebx,esi
	mov	[ebp-184],ebx
	sub	esp,16
	mov	ebx,[ebp-184]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-116]
	mov	[esp+4],esi
	mov	eax,[ebp-120]
	mov	[esp],eax
	call	_fwritepixelfast
_177
	jmp	_174
_176
	mov	eax,[ebp-144]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-96]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	mov	[ebp-192],eax
	mov	ebx,[ebp-144]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-192]
	and	eax,ebx
	and	eax,eax
	jz	_181
	sub	esp,36
	mov	[esp+28],1065353216
	mov	esi,[ebp-76]
	mov	[esp+32],esi
	mov	esi,[ebp-144]
	mov	[esp+24],esi
	mov	ebx,[ebp-140]
	mov	[esp+20],ebx
	mov	esi,[ebp-136]
	mov	[esp+16],esi
	mov	ebx,[ebp-132]
	mov	[esp+12],ebx
	mov	esi,[ebp-96]
	mov	[esp+8],esi
	mov	ebx,[ebp-116]
	mov	[esp+4],ebx
	mov	eax,[ebp-120]
	mov	[esp],eax
	call	_flmlightprocess
_181
	jmp	_174
_174
	add	[ebp-120],1
_172
	mov	ebx,[ebp-112]
	cmp	[ebp-120],ebx
	jle	_173
_44
	sub	esp,4
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	call	_fcls
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],200
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-24]
	add	ebx,8
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-12]
	add	esi,8
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	sub	ebx,4
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	sub	eax,4
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-104]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-116]
	add	esi,1
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	esi,[ebp-20]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	[esp+4],250
	mov	[esp+8],150
	mov	[esp],250
	call	_fcolor
	sub	esp,40
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-192],eax
	sub	esp,4
	mov	ebx,_182
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-192]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-192],eax
	sub	esp,4
	mov	ebx,[ebp-92]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-192]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],1
	mov	[esp+16],1
	mov	[ebp-192],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-192]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	[esp],eax
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_flockbuffer
	add	[ebp-116],1
_169
	mov	ebx,[ebp-104]
	cmp	[ebp-116],ebx
	jle	_170
_43
	sub	esp,4
	lea	eax,[ebp-96]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_162
_42
	sub	esp,4
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_funlockbuffer
	cmp	[ebp+28],0
	jle	_183
	sub	esp,8
	mov	eax,[ebp-64]
	mov	[esp],eax
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	call	_flmblurimage
_183
	sub	esp,16
	mov	[esp+8],512
	mov	[esp+12],1
	mov	esi,[ebp-60]
	mov	[esp+4],esi
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	_fcreatetexture
	mov	[ebp-188],eax
	sub	esp,40
	mov	eax,[ebp-64]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+24],eax
	mov	[ebp-192],eax
	sub	esp,8
	mov	ebx,[ebp-188]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_ftexturebuffer
	mov	ebx,eax
	mov	eax,[ebp-192]
	mov	[esp+28],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	mov	ebx,[ebp-60]
	mov	[esp+12],ebx
	mov	esi,[ebp-60]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	sub	esp,8
	mov	eax,[ebp-188]
	mov	[esp],eax
	mov	[esp+4],1
	call	_ftexturecoords
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	esi,[ebp-28]
	mov	[esp+8],esi
	mov	eax,[ebp-188]
	mov	[esp],eax
	call	_fscaletexture
	sub	esp,4
	mov	eax,[ebp-64]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp-76]
	mov	[esp],eax
	call	_ffreeentity
	mov	eax,[ebp-188]
	jmp	_41_leave
	mov	eax,0
	jmp	_41_leave
_41_leave
	mov	[ebp-192],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-192]
	mov	[ebp-192],eax
	sub	esp,4
	mov	esi,[ebp-96]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-192]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_flmpacker_pack
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,80
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	sub	esp,16
	mov	[esp+8],512
	mov	[esp+12],1
	mov	esi,[ebp+20]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcreatetexture
	mov	[ebp-4],eax
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_tlmimgnode
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjStore
	mov	[ebp-12],0
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],_tlmsortedsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_47
_184
	sub	esp,16
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_flmpacker_insert
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_185
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,4
	mov	eax,[ebp-24]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-28],eax
	sub	esp,4
	mov	eax,[ebp-24]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-32],eax
	sub	esp,40
	mov	eax,[ebp-24]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+24],eax
	mov	[ebp-80],eax
	sub	esp,8
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_ftexturebuffer
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+28],ebx
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	esi,[ebp-20]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-32]
	mov	[esp+12],ebx
	mov	esi,[ebp-28]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	mov	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],0
	jmp	_186
_187
	mov	[ebp-56],0
	jmp	_188
_189
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	esi,[ebp-24]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	edi,[ebp-24]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	edi,[ebp-56]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	esi,[ebp-24]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	edi,[ebp-24]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	edi,[ebp-56]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	sub	esp,24
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	esi,[ebp-24]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	[esp+16],0
	mov	[esp+20],1
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	edi,[ebp-24]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	edi,[ebp-56]
	shl	edi,byte 2
	add	edi,ebx
	mov	edi,[edi]
	mov	[esp+8],edi
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	esi,[ebp-24]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-52]
	shl	eax,byte 2
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,40
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-56],1
_188
	cmp	[ebp-56],2
	jle	_189
_49
	add	[ebp-52],1
_186
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-52],ebx
	jle	_187
_48
	add	[ebp-12],1
	jmp	_190
_185
	sub	esp,8
	mov	eax,_191
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fdebuglog
	jmp	_47
_190
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_184
_47
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_ftexturecoords
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	lea	eax,[ebp-76]
	mov	[esp],eax
	mov	[esp+4],_tlmimgnode
	call	__bbObjEachFirst
	and	eax,eax
	jz	_51
_192
	sub	esp,4
	mov	eax,[ebp-76]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-76]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_192
_51
	mov	eax,[ebp-4]
	jmp	_46_leave
	mov	eax,0
	jmp	_46_leave
_46_leave
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	esi,[ebp-76]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	esi,[ebp-20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_flmpacker_fittexsize
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-4],2
	jmp	_194
_193
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_tlmimgnode
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjStore
	mov	[ebp-12],1
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],_tlmsortedsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_54
_195
	sub	esp,16
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_flmpacker_insert
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_196
	mov	[ebp-12],0
	jmp	_54
_196
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_195
_54
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	[esp+4],_tlmimgnode
	call	__bbObjEachFirst
	and	eax,eax
	jz	_55
_197
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-24]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_197
_55
	mov	ebx,[ebp-12]
	and	ebx,ebx
	jz	_198
	mov	eax,[ebp-4]
	jmp	_52_leave
_198
	mov	ebx,[ebp-4]
	shl	ebx,byte 1
	mov	[ebp-4],ebx
_194
	mov	ebx,[ebp+20]
	cmp	[ebp-4],ebx
	jle	_193
_53
	mov	eax,[ebp+20]
	jmp	_52_leave
	mov	eax,0
	jmp	_52_leave
_52_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-16]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_flmpacker_insert
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-32],eax
	mov	[ebp-36],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	__bbObjCompare
	mov	ebx,eax
	mov	eax,[ebp-36]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-32]
	and	eax,ebx
	and	eax,eax
	jz	_199
	sub	esp,16
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_flmpacker_insert
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_200
	mov	eax,[ebp-4]
	jmp	_56_leave
_200
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_flmpacker_insert
	jmp	_56_leave
	jmp	_201
_199
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_202
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	ebx,[ebx]
	add	ebx,84
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_flmimagealike
	and	eax,eax
	jz	_203
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	eax,[ebp+20]
	jmp	_56_leave
	jmp	_204
_203
	mov	eax,0
	jmp	_56_leave
_204
_202
	sub	esp,4
	mov	eax,[ebp+24]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+24]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-12],eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	sub	ebx,esi
	mov	[ebp-16],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	sub	ebx,esi
	mov	[ebp-20],ebx
	mov	eax,[ebp-16]
	cmp	[ebp-8],eax
	setg	al
	movzx	eax,al
	mov	[ebp-32],eax
	mov	ebx,[ebp-20]
	cmp	[ebp-12],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-32]
	or	eax,ebx
	and	eax,eax
	jz	_205
	mov	eax,0
	jmp	_56_leave
_205
	mov	eax,[ebp-16]
	cmp	[ebp-8],eax
	setz	al
	movzx	eax,al
	mov	[ebp-32],eax
	mov	ebx,[ebp-20]
	cmp	[ebp-12],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-32]
	and	eax,ebx
	and	eax,eax
	jz	_206
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	eax,[ebp+20]
	jmp	_56_leave
_206
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,0
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_tlmimgnode
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_tlmimgnode
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-16]
	sub	ebx,[ebp-8]
	mov	[ebp-24],ebx
	mov	ebx,[ebp-20]
	sub	ebx,[ebp-12]
	mov	[ebp-28],ebx
	mov	ebx,[ebp-28]
	cmp	[ebp-24],ebx
	jle	_207
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,[ebp-8]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,[ebp-8]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_208
_207
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,[ebp-12]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,[ebp-12]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
_208
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_flmpacker_insert
	jmp	_56_leave
_201
	mov	eax,0
	jmp	_56_leave
_56_leave
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_flmimagealike
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-8],eax
	mov	ebx,[ebp-8]
	cmp	[ebp-4],ebx
	jz	_209
	mov	eax,0
	jmp	_57_leave
_209
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-16],eax
	mov	ebx,[ebp-16]
	cmp	[ebp-12],ebx
	jz	_210
	mov	eax,0
	jmp	_57_leave
_210
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,12
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-20],0
	jmp	_211
_212
	mov	[ebp-24],0
	jmp	_213
_214
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-28],eax
	sub	esp,20
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-32],eax
	mov	ebx,[ebp-32]
	cmp	[ebp-28],ebx
	jz	_215
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	eax,0
	jmp	_57_leave
_215
	add	[ebp-24],1
_213
	mov	ebx,[ebp-4]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_214
_59
	add	[ebp-20],1
_211
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_212
_58
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	eax,1
	jmp	_57_leave
	mov	eax,0
	jmp	_57_leave
_57_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_flmsetupsurface
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,88
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-4],0
	mov	[ebp-8],0
	mov	[ebp-12],0
	mov	[ebp-16],0
	jmp	_216
_217
	sub	esp,36
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+28],ebx
	mov	esi,[ebp-16]
	shl	esi,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+32],esi
	mov	esi,[ebp-16]
	shl	esi,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+24],esi
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	esi,[ebp-16]
	shl	esi,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-16]
	shl	esi,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	shl	eax,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	eax,esi
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fgettrianglenormal
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	call	_ftrianglenormalx
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	call	_ftrianglenormaly
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	call	_ftrianglenormalz
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	add	[ebp-16],1
_216
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_217
_61
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbFAbs
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbFAbs
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,16
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbFAbs
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-12],eax
	mov	eax,[ebp-12]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	and	eax,eax
	jz	_218
	mov	ebx,0
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_219
_218
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	and	eax,eax
	jz	_220
	mov	ebx,1
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_221
_220
	mov	ebx,2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
_221
_219
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[ebp-20],ebx
	cmp	[ebp-20],0
	jz	_223
	cmp	[ebp-20],1
	jz	_224
	cmp	[ebp-20],2
	jz	_225
	jmp	_222
_223
	mov	[ebp-16],0
	jmp	_226
_227
	mov	[ebp-24],0
	jmp	_228
_229
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	add	[ebp-24],1
_228
	cmp	[ebp-24],2
	jle	_229
_64
	add	[ebp-16],1
_226
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_227
_63
	jmp	_222
_224
	mov	[ebp-16],0
	jmp	_230
_231
	mov	[ebp-24],0
	jmp	_232
_233
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	add	[ebp-24],1
_232
	cmp	[ebp-24],2
	jle	_233
_66
	add	[ebp-16],1
_230
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_231
_65
	jmp	_222
_225
	mov	[ebp-16],0
	jmp	_234
_235
	mov	[ebp-24],0
	jmp	_236
_237
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	add	[ebp-24],1
_236
	cmp	[ebp-24],2
	jle	_237
_68
	add	[ebp-16],1
_234
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_235
_67
	jmp	_222
_222
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	mov	[ebp-16],0
	jmp	_238
_239
	mov	[ebp-24],0
	jmp	_240
_241
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,ebx
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_242
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebx],esi
_242
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,ebx
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_243
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],esi
_243
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,ebx
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_244
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],esi
_244
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,ebx
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_245
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	[ebx],esi
_245
	add	[ebp-24],1
_240
	cmp	[ebp-24],2
	jle	_241
_70
	add	[ebp-16],1
_238
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_239
_69
	mov	ebx,[ebp+24]
	mov	[ebp-28],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,36
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
	mov	[ebp-16],0
	jmp	_246
_247
	mov	[ebp-24],0
	jmp	_248
_249
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	add	[ebp-24],1
_248
	cmp	[ebp-24],2
	jle	_249
_72
	add	[ebp-16],1
_246
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_247
_71
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	mov	edi,[edi]
	add	edi,4
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	mov	edi,[edi]
	add	edi,8
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[ebp-72],ebx
	cmp	[ebp-72],0
	jz	_251
	cmp	[ebp-72],1
	jz	_252
	cmp	[ebp-72],2
	jz	_253
	jmp	_250
_251
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,36
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-36],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-40],ebx
	mov	ebx,[ebp-76]
	mov	[ebp-44],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,36
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[ebp-48],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-52],ebx
	mov	ebx,[ebp-76]
	mov	[ebp-56],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,40
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-60],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	[ebp-64],ebx
	mov	ebx,[ebp-76]
	mov	[ebp-68],ebx
	jmp	_250
_252
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,36
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-80],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-36],ebx
	mov	ebx,[ebp-80]
	mov	[ebp-40],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-44],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,36
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-80],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[ebp-48],ebx
	mov	ebx,[ebp-80]
	mov	[ebp-52],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-56],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,40
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-80],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-60],ebx
	mov	ebx,[ebp-80]
	mov	[ebp-64],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	[ebp-68],ebx
	jmp	_250
_253
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,36
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-84],ebx
	mov	ebx,[ebp-84]
	mov	[ebp-36],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-40],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-44],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,36
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-84],ebx
	mov	ebx,[ebp-84]
	mov	[ebp-48],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[ebp-52],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-56],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,40
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-84],ebx
	mov	ebx,[ebp-84]
	mov	[ebp-60],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-64],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	[ebp-68],ebx
	jmp	_250
_250
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,48
	mov	[esi],ebx
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,52
	mov	[esi],ebx
	mov	ebx,[ebp-56]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-44]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,56
	mov	[esi],ebx
	mov	ebx,[ebp-60]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,60
	mov	[esi],ebx
	mov	ebx,[ebp-64]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,64
	mov	[esi],ebx
	mov	ebx,[ebp-68]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-44]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,68
	mov	[esi],ebx
	mov	ebx,[ebp-36]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,72
	mov	[esi],ebx
	mov	ebx,[ebp-40]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,76
	mov	[esi],ebx
	mov	ebx,[ebp-44]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,80
	mov	[esi],ebx
	mov	eax,[ebp+20]
	jmp	_60_leave
	mov	eax,0
	jmp	_60_leave
_60_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_flmlightsurface
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,144
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	mov	[ebp-128],ebx
	mov	[ebp-132],ebx
	mov	[ebp-136],ebx
	mov	[ebp-140],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	cmp	[ebp-4],2
	jge	_254
	mov	[ebp-4],2
_254
	cmp	[ebp-8],2
	jge	_255
	mov	[ebp-8],2
_255
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcreateimage
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,84
	mov	[ebx],eax
	mov	ebx,[ebp-4]
	imul	ebx,[ebp-8]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,88
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[_vg_lmparams]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[_vg_lmparams]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fclscolor
	call	_fcls
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fentitypickmode
	sub	esp,12
	mov	[esp+4],1059061760
	mov	[esp+8],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fentityradius
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	[esp+4],_tlmlight
	call	__bbObjEachFirst
	and	eax,eax
	jz	_75
_256
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-24]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpositionentity
	mov	[ebp-28],0
	jmp	_257
_258
	mov	[ebp-32],0
	jmp	_259
_260
	mov	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,52
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-52],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-56],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,64
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-60],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,68
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-64],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-44]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-68],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,76
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp-60]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,80
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	sub	esp,20
	mov	ebx,[ebp-76]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-72]
	mov	[esp+8],esi
	mov	ebx,[ebp-68]
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fentitydistance
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-80],eax
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-84],ebx
	cmp	[ebp-84],0
	jz	_262
	cmp	[ebp-84],1
	jz	_263
	jmp	_261
_262
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-88],ebx
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-92],ebx
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-96],ebx
	mov	ebx,[ebp-88]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-92]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,12
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-96]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,16
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-100],ebx
	mov	eax,[ebp-100]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_264
	mov	[ebp-104],0
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-108],ebx
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-112],ebx
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-116],ebx
	sub	esp,28
	mov	ebx,[ebp-112]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1199570688
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	esi,[ebp-116]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1199570688
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+20],esi
	mov	[esp+24],0
	mov	esi,[ebp-108]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1199570688
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-76]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-72]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-68]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_flinepick
	cmp	eax,[ebp-20]
	jnz	_265
	add	[ebp-104],1
_265
	cmp	[ebp-104],0
	jle	_266
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-100]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-120],ebx
	mov	eax,[ebp-120]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_267
	mov	[ebp-120],0
_267
	mov	eax,[ebp-120]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_268
	mov	[ebp-120],1065353216
_268
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	[ebp-124],eax
	mov	ebx,[ebp-124]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-128],ebx
	mov	ebx,[ebp-124]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-132],ebx
	mov	ebx,[ebp-124]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-136],ebx
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-120]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-128]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-128],esi
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-120]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-132]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-132],esi
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-120]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-136]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-136],esi
	cmp	[ebp-128],255
	jle	_269
	mov	[ebp-128],255
_269
	cmp	[ebp-132],255
	jle	_270
	mov	[ebp-132],255
_270
	cmp	[ebp-136],255
	jle	_271
	mov	[ebp-136],255
_271
	mov	ebx,[ebp-136]
	mov	esi,[ebp-132]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-128]
	shl	esi,byte 16
	or	ebx,esi
	mov	[ebp-140],ebx
	sub	esp,16
	mov	ebx,[ebp-140]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-28]
	mov	[esp+4],esi
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fwritepixelfast
_266
_264
	jmp	_261
_263
	mov	eax,[ebp-80]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	mov	[ebp-144],eax
	mov	ebx,[ebp-80]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-144]
	and	eax,ebx
	and	eax,eax
	jz	_272
	mov	ebx,[ebp-68]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-88],ebx
	mov	ebx,[ebp-72]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-92],ebx
	mov	ebx,[ebp-76]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-96],ebx
	mov	ebx,[ebp-88]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-92]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,12
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-96]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,16
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-100],ebx
	mov	eax,[ebp-100]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_273
	sub	esp,36
	mov	ebx,[ebp-100]
	mov	[esp+28],ebx
	mov	esi,[ebp-20]
	mov	[esp+32],esi
	mov	esi,[ebp-80]
	mov	[esp+24],esi
	mov	ebx,[ebp-76]
	mov	[esp+20],ebx
	mov	esi,[ebp-72]
	mov	[esp+16],esi
	mov	ebx,[ebp-68]
	mov	[esp+12],ebx
	mov	esi,[ebp-24]
	mov	[esp+8],esi
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_flmlightprocess
_273
_272
	jmp	_261
_261
	add	[ebp-32],1
_259
	mov	ebx,[ebp-4]
	sub	ebx,1
	cmp	[ebp-32],ebx
	jle	_260
_77
	add	[ebp-28],1
_257
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-28],ebx
	jle	_258
_76
	sub	esp,4
	lea	eax,[ebp-24]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_256
_75
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ffreeentity
	mov	eax,0
	jmp	_74_leave
_74_leave
	mov	[ebp-144],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-144]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_flmlightprocess
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,44
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-4],0
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp+40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	sub	esp,28
	mov	ebx,[ebp-16]
	mov	[esp+20],ebx
	mov	[esp+24],0
	mov	esi,[ebp-12]
	mov	[esp+16],esi
	mov	ebx,[ebp-8]
	mov	[esp+12],ebx
	mov	esi,[ebp+28]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp+28]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_flinepick
	cmp	eax,[ebp+52]
	jnz	_274
	add	[ebp-4],1
_274
	cmp	[ebp-4],0
	jle	_275
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+44]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+28]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp+44]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp+44]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fdivrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	mov	eax,[ebp-24]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_276
	mov	[ebp-24],0
_276
	mov	eax,[ebp-24]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_277
	mov	[ebp-24],1065353216
_277
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	[ebp-28],eax
	mov	ebx,[ebp-28]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-32],ebx
	mov	ebx,[ebp-28]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-36],ebx
	mov	ebx,[ebp-28]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-40],ebx
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-32],esi
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-36]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-36],esi
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-40]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-40],esi
	cmp	[ebp-32],255
	jle	_278
	mov	[ebp-32],255
_278
	cmp	[ebp-36],255
	jle	_279
	mov	[ebp-36],255
_279
	cmp	[ebp-40],255
	jle	_280
	mov	[ebp-40],255
_280
	mov	ebx,[ebp-40]
	mov	esi,[ebp-36]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-32]
	shl	esi,byte 16
	or	ebx,esi
	mov	[ebp-44],ebx
	sub	esp,16
	mov	ebx,[ebp-44]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fwritepixelfast
_275
	mov	eax,0
	jmp	_79_leave
_79_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 36
	.align	16
_flmblurimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,88
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcopyimage
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-20],eax
	mov	[ebp-24],0
	jmp	_281
_282
	mov	[ebp-28],0
	jmp	_283
_284
	mov	ebx,[ebp-28]
	sub	ebx,[ebp+24]
	mov	[ebp-32],ebx
	mov	ebx,[ebp-24]
	sub	ebx,[ebp+24]
	mov	[ebp-36],ebx
	mov	ebx,[ebp-28]
	add	ebx,[ebp+24]
	mov	[ebp-40],ebx
	mov	ebx,[ebp-24]
	add	ebx,[ebp+24]
	mov	[ebp-44],ebx
	cmp	[ebp-32],0
	jge	_285
	mov	[ebp-32],0
_285
	cmp	[ebp-36],0
	jge	_286
	mov	[ebp-36],0
_286
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-40],ebx
	jle	_287
	mov	ebx,[ebp-16]
	sub	ebx,1
	mov	[ebp-40],ebx
_287
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-44],ebx
	jle	_288
	mov	ebx,[ebp-20]
	sub	ebx,1
	mov	[ebp-44],ebx
_288
	mov	[ebp-48],0
	mov	[ebp-52],0
	mov	[ebp-56],0
	mov	[ebp-60],0
	mov	ebx,[ebp-36]
	mov	[ebp-64],ebx
	jmp	_289
_290
	mov	ebx,[ebp-32]
	mov	[ebp-68],ebx
	jmp	_291
_292
	sub	esp,12
	mov	ebx,[ebp-64]
	mov	[esp+4],ebx
	mov	esi,[ebp-8]
	mov	[esp+8],esi
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	[ebp-72],eax
	mov	ebx,[ebp-72]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-76],ebx
	mov	ebx,[ebp-72]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-80],ebx
	mov	ebx,[ebp-72]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-84],ebx
	mov	ebx,[ebp-76]
	add	[ebp-48],ebx
	mov	ebx,[ebp-80]
	add	[ebp-52],ebx
	mov	ebx,[ebp-84]
	add	[ebp-56],ebx
	add	[ebp-60],1
	add	[ebp-68],1
_291
	mov	ebx,[ebp-40]
	cmp	[ebp-68],ebx
	jle	_292
_84
	add	[ebp-64],1
_289
	mov	ebx,[ebp-44]
	cmp	[ebp-64],ebx
	jle	_290
_83
	mov	eax,[ebp-48]
	mov	ecx,[ebp-60]
	cdq
	idiv	ecx
	mov	[ebp-48],eax
	mov	eax,[ebp-52]
	mov	ecx,[ebp-60]
	cdq
	idiv	ecx
	mov	[ebp-52],eax
	mov	eax,[ebp-56]
	mov	ecx,[ebp-60]
	cdq
	idiv	ecx
	mov	[ebp-56],eax
	cmp	[ebp-48],255
	jle	_293
	mov	[ebp-48],255
_293
	cmp	[ebp-52],255
	jle	_294
	mov	[ebp-52],255
_294
	cmp	[ebp-56],255
	jle	_295
	mov	[ebp-56],255
_295
	mov	ebx,[ebp-56]
	mov	esi,[ebp-52]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-48]
	shl	esi,byte 16
	or	ebx,esi
	mov	[ebp-88],ebx
	sub	esp,16
	mov	ebx,[ebp-88]
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	mov	[esp+12],esi
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-28],1
_283
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-28],ebx
	jle	_284
_82
	add	[ebp-24],1
_281
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_282
_81
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreeimage
	mov	eax,0
	jmp	_80_leave
_80_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fgettrianglenormal
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+36]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+40]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp+44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp+48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+36]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,[ebp+52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+40]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-12]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-4]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-8]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	sub	esp,4
	mov	eax,[ebp-28]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	mov	eax,[ebp-40]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_296
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	jmp	_297
_296
	mov	[ebp-28],0
	mov	[ebp-32],0
	mov	[ebp-36],1065353216
_297
	mov	ebx,[ebp-28]
	mov	[_vg_trinormalx],ebx
	mov	ebx,[ebp-32]
	mov	[_vg_trinormaly],ebx
	mov	ebx,[ebp-36]
	mov	[_vg_trinormalz],ebx
	mov	eax,0
	jmp	_85_leave
_85_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 36
	.align	16
_ftrianglenormalx
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[_vg_trinormalx]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_86_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_86_leave
_86_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_ftrianglenormaly
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[_vg_trinormaly]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_87_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_87_leave
_87_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_ftrianglenormalz
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[_vg_trinormalz]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_88_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_88_leave
_88_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreateluvs
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fwritefile
	mov	[ebp-4],eax
	mov	[ebp-8],1
	jmp	_298
_299
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-12],eax
	mov	[ebp-16],0
	jmp	_300
_301
	sub	esp,20
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritefloat
	mov	ebx,eax
	sub	esp,20
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritefloat
	mov	ebx,eax
	add	[ebp-16],1
_300
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,1
	cmp	[ebp-16],eax
	jle	_301
_91
	add	[ebp-8],1
_298
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	cmp	[ebp-8],eax
	jle	_299
_90
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fclosefile
	mov	eax,0
	jmp	_89_leave
_89_leave
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_floadluvs
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-4],eax
	mov	[ebp-8],1
	jmp	_302
_303
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-12],eax
	mov	[ebp-16],0
	jmp	_304
_305
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-24],eax
	sub	esp,24
	mov	[esp+16],0
	mov	esi,[ebp+28]
	mov	[esp+20],esi
	mov	esi,[ebp-24]
	mov	[esp+12],esi
	mov	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-16],1
_304
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,1
	cmp	[ebp-16],eax
	jle	_305
_94
	add	[ebp-8],1
_302
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	cmp	[ebp-8],eax
	jle	_303
_93
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fclosefile
	mov	eax,0
	jmp	_92_leave
_92_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_funweld
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-4],1
	jmp	_306
_307
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-8],eax
	mov	[ebp-12],0
	jmp	_308
_309
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_ttris
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-8]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-20],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	mov	ebx,[ebp-20]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-20],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	mov	ebx,[ebp-20]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-20],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	mov	ebx,[ebp-20]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	add	[ebp-12],1
_308
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcounttriangles
	sub	eax,1
	cmp	[ebp-12],eax
	jle	_309
_97
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fclearsurface
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],_ttris
	call	__bbObjEachFirst
	and	eax,eax
	jz	_98
_310
	sub	esp,28
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_faddvertex
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,28
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_faddvertex
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,28
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_faddvertex
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,16
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	_faddtriangle
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_310
_98
	add	[ebp-4],1
_306
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	cmp	[ebp-4],eax
	jle	_307
_96
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fupdatenormals
	mov	eax,[ebp+20]
	jmp	_95_leave
	mov	eax,0
	jmp	_95_leave
_95_leave
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_flmexample
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,60
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[ebp-4],eax
	sub	esp,20
	mov	[esp+12],1099956224
	mov	[esp+16],0
	mov	[esp+8],1099956224
	mov	[esp+4],1099431936
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	mov	[esp],512
	mov	[esp+4],0
	call	_fcreateterrain
	mov	[ebp-8],eax
	sub	esp,20
	mov	[esp+12],-1006632960
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],-1006632960
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,20
	mov	[esp+12],1082130432
	mov	[esp+16],0
	mov	[esp+8],1065353216
	mov	[esp+4],1082130432
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fscaleentity
	sub	esp,16
	mov	[esp+8],1115684864
	mov	[esp+12],0
	mov	[esp+4],1124073472
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,8
	mov	[esp],8
	mov	[esp+4],0
	call	_fcreatesphere
	mov	[ebp-12],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1114636288
	mov	[esp+4],-1035468800
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,4
	mov	[esp],0
	call	_fcreatecube
	mov	[ebp-16],eax
	sub	esp,16
	mov	[esp+8],1101004800
	mov	[esp+12],1101004800
	mov	[esp+4],1115684864
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,16
	mov	[esp+8],1065353216
	mov	[esp+12],0
	mov	[esp+4],-1073741824
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpositionmesh
	sub	esp,20
	mov	[esp+12],1101004800
	mov	[esp+16],0
	mov	[esp+8],1084227584
	mov	[esp+4],1101004800
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fscaleentity
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fentitypickmode
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_311
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	_fnameentity
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpointentity
	sub	esp,4
	mov	[esp],0
	call	_fcreatecube
	mov	[ebp-20],eax
	sub	esp,16
	mov	[esp+8],1115684864
	mov	[esp+12],1101004800
	mov	[esp+4],1101004800
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,16
	mov	[esp+8],1065353216
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpositionmesh
	sub	esp,20
	mov	[esp+12],1073741824
	mov	[esp+16],0
	mov	[esp+8],1073741824
	mov	[esp+4],1073741824
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fscaleentity
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fentitypickmode
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_312
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	_fnameentity
	sub	esp,12
	mov	[esp+4],1112014848
	mov	[esp+8],1112014848
	mov	[esp],1112014848
	call	_fambientlight
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],0
	call	_fcreatelight
	mov	[ebp-24],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1106247680
	mov	[esp+4],1110704128
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_frotateentity
	call	_fmillisecs
	mov	[ebp-28],eax
	jmp	_314
_313
	call	_fmillisecs
	mov	[ebp-32],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1148846080
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	mov	ebx,[ebp-32]
	mov	[ebp-28],ebx
	mov	ebx,1092616192
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	sub	esp,20
	mov	[esp],205
	call	_fkeydown
	mov	[ebp-56],eax
	sub	esp,4
	mov	[esp],203
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-56]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	[esp],200
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[ebp-56],eax
	sub	esp,4
	mov	[esp],208
	mov	eax,esi
	call	_fkeydown
	mov	esi,eax
	mov	eax,[ebp-56]
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fmoveentity
	mov	ebx,eax
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	and	eax,eax
	jz	_315
	mov	[ebp-44],1061997773
	sub	esp,20
	call	_fmouseyspeed
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fturnentity
	mov	ebx,eax
	sub	esp,20
	call	_fmousexspeed
	push	eax
	fild	[esp]
	pop	eax
	fchs
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],1
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fturnentity
	jmp	_316
_315
	call	_fmousexspeed
	call	_fmouseyspeed
_316
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_317
	sub	esp,12
	call	_fmousex
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-56],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-56]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcamerapick
	mov	ebx,eax
	mov	[ebp-48],ebx
	mov	ebx,[ebp-48]
	and	ebx,ebx
	jz	_318
	sub	esp,12
	mov	[esp+4],40
	mov	[esp+8],40
	mov	[esp],40
	call	_fbeginlightmap
	sub	esp,48
	mov	[esp+40],0
	mov	[esp+44],0
	mov	[esp+36],1065353216
	mov	[esp+32],0
	mov	[esp+28],1065353216
	mov	[esp+24],1065353216
	mov	[esp+20],1092616192
	mov	[esp+16],1132396544
	mov	[esp+12],1132396544
	mov	[esp+8],0
	mov	[esp+4],1114636288
	mov	[esp],-1035468800
	call	_fcreatelmlight
	sub	esp,48
	mov	[esp+40],0
	mov	[esp+44],1
	mov	[esp+36],1065353216
	mov	[esp+32],0
	mov	[esp+28],1073741824
	mov	[esp+24],1109393408
	mov	[esp+20],1130037248
	mov	[esp+16],1132396544
	mov	[esp+12],1132396544
	mov	[esp+8],1077936128
	mov	[esp+4],1077936128
	mov	[esp],1090519040
	call	_fcreatelmlight
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fentitypickmode
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_flightmapterrain
	mov	[ebp-52],eax
	sub	esp,12
	mov	ebx,[ebp-52]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fapplylightmap
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fentitypickmode
	sub	esp,16
	mov	[esp+8],1024
	mov	[esp+12],1
	mov	[esp+4],1056964608
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_flightmapmesh
	mov	[ebp-52],eax
	mov	ebx,[ebp-52]
	and	ebx,ebx
	jz	_319
	sub	esp,28
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_320
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[ebp-56],eax
	sub	esp,8
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[ebp-48]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fentityname
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp],ebx
	mov	[ebp-60],eax
	sub	esp,4
	mov	esi,_321
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-60]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+12],ebx
	mov	ebx,[ebp-52]
	mov	[esp+4],ebx
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fsavelightmap
	sub	esp,12
	mov	ebx,[ebp-52]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fapplylightmap
_319
	call	_fendlightmap
_318
_317
	sub	esp,4
	mov	[esp],60
	call	_fkeyhit
	and	eax,eax
	jz	_322
	sub	esp,12
	call	_fmousex
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-56],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-56]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcamerapick
	mov	ebx,eax
	mov	[ebp-48],ebx
	mov	ebx,[ebp-48]
	and	ebx,ebx
	jz	_323
	sub	esp,28
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_324
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[ebp-56],eax
	sub	esp,8
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,[ebp-48]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fentityname
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp],ebx
	mov	[ebp-60],eax
	sub	esp,4
	mov	esi,_325
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-60]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+8],ebx
	mov	[esp+12],1
	mov	ebx,[ebp-48]
	mov	[esp],ebx
	mov	eax,ebx
	call	_floadlightmap
	mov	ebx,eax
_323
_322
	sub	esp,4
	mov	[esp],1065353216
	call	_fupdateworld
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	sub	esp,4
	mov	[esp],1
	call	_fflip
_314
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_313
_100
	call	_fendgraphics
	mov	eax,0
	jmp	_99_leave
_99_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
_vg_lmparams	.dd	0
	.align	4
_vg_trinormalx	.dd	0
	.align	4
_vg_trinormaly	.dd	0
	.align	4
_vg_trinormalz	.dd	0
	.align	4
_3	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_4	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_5	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_6	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_7	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_8	.dd	6
	.dd	3
	.dd	__bbIntType
	.align	4
_tlmtriangle	.dd	5
_101	.dd	0
	.dd	_101
	.dd	_101
	.dd	0
	.dd	-1
_102	.dd	0
	.dd	_102
	.dd	_102
	.dd	0
	.dd	-1
	.dd	11
	.dd	_3
	.dd	_4
	.dd	_5
	.dd	_6
	.dd	_7
	.dd	_8
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
_9	.dd	6
	.dd	257
	.dd	_tlmtriangle
	.align	4
_tlmsurface	.dd	5
_103	.dd	0
	.dd	_103
	.dd	_103
	.dd	0
	.dd	-1
_104	.dd	0
	.dd	_104
	.dd	_104
	.dd	0
	.dd	-1
	.dd	23
	.dd	_9
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
_tlmsortedsurface	.dd	5
_105	.dd	0
	.dd	_105
	.dd	_105
	.dd	0
	.dd	-1
_106	.dd	0
	.dd	_106
	.dd	_106
	.dd	0
	.dd	-1
	.dd	1
	.dd	_tlmsurface
	.align	4
_10	.dd	6
	.dd	2
	.dd	_tlmimgnode
	.align	4
_tlmimgnode	.dd	5
_107	.dd	0
	.dd	_107
	.dd	_107
	.dd	0
	.dd	-1
_108	.dd	0
	.dd	_108
	.dd	_108
	.dd	0
	.dd	-1
	.dd	6
	.dd	_10
	.dd	_tlmsurface
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
_tlmparams	.dd	5
_109	.dd	0
	.dd	_109
	.dd	_109
	.dd	0
	.dd	-1
_110	.dd	0
	.dd	_110
	.dd	_110
	.dd	0
	.dd	-1
	.dd	3
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
_11	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_tlmlight	.dd	5
_111	.dd	0
	.dd	_111
	.dd	_111
	.dd	0
	.dd	-1
_112	.dd	0
	.dd	_112
	.dd	_112
	.dd	0
	.dd	-1
	.dd	10
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	_11
	.dd	__bbFltType
	.dd	__bbIntType
	.align	4
_12	.dd	6
	.dd	4
	.dd	__bbFltType
	.align	4
_13	.dd	6
	.dd	4
	.dd	__bbFltType
	.align	4
_14	.dd	6
	.dd	4
	.dd	__bbFltType
	.align	4
_15	.dd	6
	.dd	4
	.dd	__bbIntType
	.align	4
_16	.dd	6
	.dd	4
	.dd	__bbFltType
	.align	4
_17	.dd	6
	.dd	4
	.dd	__bbFltType
	.align	4
_ttris	.dd	5
_113	.dd	0
	.dd	_113
	.dd	_113
	.dd	0
	.dd	-1
_114	.dd	0
	.dd	_114
	.dd	_114
	.dd	0
	.dd	-1
	.dd	11
	.dd	_12
	.dd	_13
	.dd	_14
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	_15
	.dd	_16
	.dd	_17
	.dd	__bbIntType
	.dd	__bbFltType
_121	.db	"Creating lightmap object ",0
_122	.db	"...",0
_123	.db	"Arial",0
_157	.db	"Creating terrain lightmap...",0
_158	.db	"Arial",0
_159	.db	" 1",0
_182	.db	" ",0
_191	.db	"Lightmap doesn't fit into the maxmapsize, increase the lumelsize or increase the maxmapsize",0
_311	.db	"cube1",0
_312	.db	"cube2",0
_320	.db	"_lm.bmp",0
_321	.db	".luv",0
_324	.db	"_lm.bmp",0
_325	.db	".luv",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

