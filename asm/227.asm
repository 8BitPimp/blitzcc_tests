
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],1
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,4
	mov	eax,_aalinetable
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,64
	mov	esi,_aalinetable
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aalinetable
	mov	[esp],eax
	call	__bbDimArray
	call	_finitalinetable
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-4],0
	jmp	_13
_14
	mov	eax,[ebp-4]
	imul	eax,255
	mov	ecx,599
	cdq
	idiv	ecx
	mov	[ebp-8],eax
	sub	esp,12
	mov	eax,[ebp-8]
	mov	ecx,3
	cdq
	idiv	ecx
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp-8]
	sar	ebx,byte 1
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcolor
	mov	ebx,eax
	sub	esp,16
	mov	[esp+8],799
	mov	esi,[ebp-4]
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	mov	[esp],0
	call	_fline
	add	[ebp-4],1
_13
	cmp	[ebp-4],599
	jle	_14
_3
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	call	_fmillisecs
	mov	[ebp-12],eax
	mov	[ebp-16],0
	jmp	_15
_16
	mov	ebx,1125515264
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-16]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,1125515264
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-16]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	sub	esp,16
	mov	ebx,160
	sub	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	esi,300
	sub	esi,[ebp-24]
	mov	[esp+12],esi
	mov	esi,300
	add	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,160
	add	eax,[ebp-20]
	mov	[esp],eax
	call	_fline
	add	[ebp-16],5
_15
	cmp	[ebp-16],360
	jle	_16
_4
	call	_fmillisecs
	mov	[ebp-28],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_17
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],535
	mov	[esp],50
	call	_ftext
	sub	esp,40
	mov	eax,_18
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-28]
	sub	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_19
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],550
	mov	[esp],50
	call	_ftext
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	call	_fmillisecs
	mov	[ebp-32],eax
	mov	[ebp-16],0
	jmp	_20
_21
	mov	ebx,1125515264
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-16]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,1125515264
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-16]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	sub	esp,16
	mov	ebx,600
	sub	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	esi,300
	sub	esi,[ebp-24]
	mov	[esp+12],esi
	mov	esi,300
	add	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,600
	add	eax,[ebp-20]
	mov	[esp],eax
	call	_fantiline
	add	[ebp-16],5
_20
	cmp	[ebp-16],360
	jle	_21
_5
	call	_fmillisecs
	mov	[ebp-36],eax
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],535
	mov	[esp],500
	call	_ftext
	sub	esp,40
	mov	eax,_23
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-36]
	sub	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_24
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],550
	mov	[esp],500
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	jmp	_26
_25
_26
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_25
_6
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fantiline
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,52
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	ebx,[ebp+28]
	sub	ebx,[ebp+20]
	mov	[ebp-4],ebx
	mov	ebx,[ebp+32]
	sub	ebx,[ebp+24]
	mov	[ebp-8],ebx
	cmp	[ebp-4],0
	setz	al
	movzx	eax,al
	mov	[ebp-52],eax
	cmp	[ebp-8],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	and	eax,eax
	jz	_27
	sub	esp,16
	mov	ebx,[ebp+28]
	mov	[esp+8],ebx
	mov	esi,[ebp+32]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fline
	mov	eax,0
	jmp	_7_leave
_27
	call	_fcolorred
	shl	eax,byte 16
	mov	[ebp-12],eax
	call	_fcolorgreen
	shl	eax,byte 8
	mov	[ebp-16],eax
	call	_fcolorblue
	mov	[ebp-20],eax
	sub	esp,16
	mov	ebx,[ebp-12]
	add	ebx,[ebp-16]
	add	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fwritepixel
	sub	esp,16
	mov	ebx,[ebp-12]
	add	ebx,[ebp-16]
	add	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+32]
	mov	[esp+4],esi
	mov	eax,[ebp+28]
	mov	[esp],eax
	call	_fwritepixel
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbAbs
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbAbs
	mov	ebx,eax
	mov	eax,[ebp-52]
	cmp	eax,ebx
	jle	_28
	mov	ebx,[ebp+28]
	cmp	[ebp+20],ebx
	jle	_29
	mov	ebx,[ebp+20]
	mov	[ebp-24],ebx
	mov	ebx,[ebp+28]
	mov	[ebp+20],ebx
	mov	ebx,[ebp-24]
	mov	[ebp+28],ebx
	mov	ebx,[ebp+24]
	mov	[ebp-24],ebx
	mov	ebx,[ebp+32]
	mov	[ebp+24],ebx
	mov	ebx,[ebp-24]
	mov	[ebp+32],ebx
	mov	ebx,[ebp+28]
	sub	ebx,[ebp+20]
	mov	[ebp-4],ebx
	mov	ebx,[ebp+32]
	sub	ebx,[ebp+24]
	mov	[ebp-8],ebx
_29
	mov	eax,[ebp-8]
	shl	eax,byte 16
	mov	ecx,[ebp-4]
	cdq
	idiv	ecx
	mov	[ebp-28],eax
	mov	ebx,[ebp+24]
	shl	ebx,byte 16
	mov	[ebp-32],ebx
	mov	ebx,[ebp+20]
	add	ebx,1
	mov	[ebp-36],ebx
	jmp	_30
_31
	mov	ebx,[ebp-28]
	add	[ebp-32],ebx
	mov	ebx,[ebp-32]
	sar	ebx,byte 10
	mov	esi,63
	and	ebx,esi
	mov	[ebp-40],ebx
	mov	ebx,[ebp-32]
	sar	ebx,byte 16
	mov	[ebp-44],ebx
	sub	esp,24
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	esi,63
	sub	esi,[ebp-40]
	mov	[esp+20],esi
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	esi,[ebp-44]
	mov	[esp+4],esi
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fmergepixel
	sub	esp,24
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	esi,[ebp-40]
	mov	[esp+20],esi
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	esi,[ebp-44]
	add	esi,1
	mov	[esp+4],esi
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fmergepixel
	add	[ebp-36],1
_30
	mov	ebx,[ebp+28]
	sub	ebx,1
	cmp	[ebp-36],ebx
	jle	_31
_8
	jmp	_32
_28
	mov	ebx,[ebp+32]
	cmp	[ebp+24],ebx
	jle	_33
	mov	ebx,[ebp+20]
	mov	[ebp-24],ebx
	mov	ebx,[ebp+28]
	mov	[ebp+20],ebx
	mov	ebx,[ebp-24]
	mov	[ebp+28],ebx
	mov	ebx,[ebp+24]
	mov	[ebp-24],ebx
	mov	ebx,[ebp+32]
	mov	[ebp+24],ebx
	mov	ebx,[ebp-24]
	mov	[ebp+32],ebx
	mov	ebx,[ebp+28]
	sub	ebx,[ebp+20]
	mov	[ebp-4],ebx
	mov	ebx,[ebp+32]
	sub	ebx,[ebp+24]
	mov	[ebp-8],ebx
_33
	mov	eax,[ebp-4]
	shl	eax,byte 16
	mov	ecx,[ebp-8]
	cdq
	idiv	ecx
	mov	[ebp-28],eax
	mov	ebx,[ebp+20]
	shl	ebx,byte 16
	mov	[ebp-48],ebx
	mov	ebx,[ebp+24]
	add	ebx,1
	mov	[ebp-44],ebx
	jmp	_34
_35
	mov	ebx,[ebp-28]
	add	[ebp-48],ebx
	mov	ebx,[ebp-48]
	sar	ebx,byte 10
	mov	esi,63
	and	ebx,esi
	mov	[ebp-40],ebx
	mov	ebx,[ebp-48]
	sar	ebx,byte 16
	mov	[ebp-36],ebx
	sub	esp,24
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	esi,63
	sub	esi,[ebp-40]
	mov	[esp+20],esi
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	esi,[ebp-44]
	mov	[esp+4],esi
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fmergepixel
	sub	esp,24
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	esi,[ebp-40]
	mov	[esp+20],esi
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	esi,[ebp-44]
	mov	[esp+4],esi
	mov	eax,[ebp-36]
	add	eax,1
	mov	[esp],eax
	call	_fmergepixel
	add	[ebp-44],1
_34
	mov	ebx,[ebp+32]
	sub	ebx,1
	cmp	[ebp-44],ebx
	jle	_35
_9
_32
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fmergepixel
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	ebx,[ebp+40]
	shl	ebx,byte 2
	add	ebx,[_aalinetable]
	mov	ebx,[ebx]
	mov	[ebp+40],ebx
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_freadpixel
	mov	[ebp-4],eax
	mov	ebx,[ebp-4]
	mov	esi,16711680
	and	ebx,esi
	mov	[ebp-8],ebx
	mov	ebx,[ebp-4]
	mov	esi,65280
	and	ebx,esi
	mov	[ebp-12],ebx
	mov	ebx,[ebp-4]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-16],ebx
	mov	ebx,[ebp+28]
	sub	ebx,[ebp-8]
	imul	ebx,[ebp+40]
	sar	ebx,byte 8
	add	ebx,[ebp-8]
	mov	esi,16711680
	and	ebx,esi
	mov	[ebp-20],ebx
	mov	ebx,[ebp+32]
	sub	ebx,[ebp-12]
	imul	ebx,[ebp+40]
	sar	ebx,byte 8
	add	ebx,[ebp-12]
	mov	esi,65280
	and	ebx,esi
	mov	[ebp-24],ebx
	mov	ebx,[ebp+36]
	sub	ebx,[ebp-16]
	imul	ebx,[ebp+40]
	sar	ebx,byte 8
	add	ebx,[ebp-16]
	mov	[ebp-28],ebx
	sub	esp,16
	mov	ebx,[ebp-20]
	add	ebx,[ebp-24]
	add	ebx,[ebp-28]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fwritepixel
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	16
_finitalinetable
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	mov	[ebp-4],0
	jmp	_36
_37
	sub	esp,4
	mov	eax,[ebp-4]
	shl	eax,byte 2
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	mov	ebx,1098907648
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1053609165
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1058642330
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_aalinetable]
	mov	[ebx],eax
	add	[ebp-4],1
_36
	cmp	[ebp-4],63
	jle	_37
_12
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
_aalinetable	.dd	0
	.dd	1
	.dd	1
	.dd	0
_17	.db	"Regular lines",0
_18	.db	"Took ",0
_19	.db	" ms",0
_22	.db	"Anti-aliased lines",0
_23	.db	"Took ",0
_24	.db	" ms",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

