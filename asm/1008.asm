
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],0
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	[esp],0
	call	_fwireframe
	sub	esp,4
	mov	[esp],0
	call	_fantialias
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	call	_fgraphicswidth
	mov	[_vscreen_width],eax
	call	_fgraphicsheight
	mov	[_vscreen_height],eax
	mov	[_vcam_yaw],0
	mov	[_vcam_pitch],1110704128
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	[_vworld_piv],eax
	sub	esp,8
	mov	[esp],_vpicked_point
	mov	[esp+4],0
	call	__bbObjStore
	mov	[_vmouse_on],1
	mov	[_vbatch_points],0
	mov	[_vactive_points],0
	mov	[_vop_state],0
	sub	esp,4
	mov	[esp],60
	call	_fcreatetimer
	mov	[ebp-4],eax
	mov	[_vwiref_on],0
	mov	[_vinfo_state],1
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	[_vcampiv],eax
	sub	esp,4
	mov	eax,[_vcampiv]
	mov	[esp],eax
	call	_fcreatecamera
	mov	[_vcam],eax
	sub	esp,20
	mov	[esp+12],-1063256064
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	esi,[_vcam_yaw]
	mov	[esp+8],esi
	mov	ebx,[_vcam_pitch]
	mov	[esp+4],ebx
	mov	eax,[_vcampiv]
	mov	[esp],eax
	call	_fturnentity
	sub	esp,12
	mov	[esp+4],1036831949
	mov	[esp+8],1148846080
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_fcamerarange
	sub	esp,8
	mov	[esp],1
	mov	ebx,[_vcam]
	mov	[esp+4],ebx
	call	_fcreatelight
	mov	[ebp-8],eax
	sub	esp,4
	mov	[esp],0
	call	_fcreatemesh
	mov	[_vpoint_mesh],eax
	sub	esp,8
	mov	eax,[_vpoint_mesh]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcreatesurface
	mov	[_vpoint_surf],eax
	sub	esp,8
	mov	eax,[_vpoint_mesh]
	mov	[esp],eax
	mov	[esp+4],3
	call	_fentityfx
	sub	esp,4
	mov	[esp],0
	call	_fcreatemesh
	mov	[_vpad_mesh],eax
	sub	esp,8
	mov	eax,[_vpad_mesh]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcreatesurface
	mov	[_vpad_surf],eax
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,16
	mov	[esp+8],1
	mov	[esp+12],2
	mov	[esp+4],0
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	call	_faddtriangle
	sub	esp,16
	mov	[esp+8],2
	mov	[esp+12],1
	mov	[esp+4],3
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	call	_faddtriangle
	sub	esp,4
	mov	eax,[_vpad_mesh]
	mov	[esp],eax
	call	_fhideentity
	sub	esp,8
	mov	eax,[_vscreen_width]
	mov	[esp],eax
	mov	ebx,[_vscreen_height]
	mov	[esp+4],ebx
	call	_fset_viewport
	sub	esp,12
	mov	[esp+4],1065353216
	mov	[esp+8],1065353216
	mov	[esp],1065353216
	call	_fset_cam_scale
	sub	esp,4
	mov	[esp],1065353216
	call	_fset_cam_zoom
	call	_fcreate_world
	sub	esp,8
	mov	eax,[_vscreen_width]
	sar	eax,byte 1
	mov	[esp],eax
	mov	ebx,[_vscreen_height]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	call	_fmovemouse
	jmp	_40
_39
	call	_fmillisecs
	mov	[_vframe_start],eax
	call	_fcls
	call	_fmouse_control
	call	_fkeyboard_control
	call	_fupdate_points
	mov	ebx,[_vwiref_on]
	and	ebx,ebx
	jz	_41
	sub	esp,4
	mov	[esp],1
	call	_fwireframe
	sub	esp,4
	mov	eax,[_vpoint_mesh]
	mov	[esp],eax
	call	_fhideentity
	sub	esp,4
	mov	eax,[_vworld_piv]
	mov	[esp],eax
	call	_fshowentity
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_fcameraclsmode
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	sub	esp,4
	mov	[esp],0
	call	_fwireframe
	sub	esp,4
	mov	eax,[_vpoint_mesh]
	mov	[esp],eax
	call	_fshowentity
	sub	esp,4
	mov	eax,[_vworld_piv]
	mov	[esp],eax
	call	_fhideentity
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_fcameraclsmode
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	sub	esp,4
	mov	eax,[_vworld_piv]
	mov	[esp],eax
	call	_fshowentity
	jmp	_42
_41
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
_42
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],200
	call	_fcolor
	sub	esp,20
	mov	ebx,[_vvport_height]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[_vvport_width]
	mov	[esp+8],esi
	mov	ebx,[_vvport_y]
	mov	[esp+4],ebx
	mov	eax,[_vvport_x]
	mov	[esp],eax
	call	_frect
	call	_fshow_info
	mov	ebx,[_vmouse_on]
	and	ebx,ebx
	jz	_43
	call	_fmousex
	mov	[ebp-12],eax
	call	_fmousey
	mov	[ebp-16],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],3
	mov	[esp+16],1
	mov	[esp+8],7
	mov	ebx,[ebp-16]
	sub	ebx,1
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	sub	eax,10
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],7
	mov	[esp+16],1
	mov	[esp+8],3
	mov	ebx,[ebp-16]
	sub	ebx,10
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	sub	eax,1
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],3
	mov	[esp+16],1
	mov	[esp+8],7
	mov	ebx,[ebp-16]
	sub	ebx,1
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	add	eax,4
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],7
	mov	[esp+16],1
	mov	[esp+8],3
	mov	ebx,[ebp-16]
	add	ebx,4
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	sub	eax,1
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	mov	[esp+8],5
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	sub	eax,9
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],5
	mov	[esp+16],1
	mov	[esp+8],1
	mov	ebx,[ebp-16]
	sub	ebx,9
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	mov	[esp+8],5
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	add	eax,5
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],5
	mov	[esp+16],1
	mov	[esp+8],1
	mov	ebx,[ebp-16]
	add	ebx,5
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_frect
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fplot
_43
	call	_fmillisecs
	sub	eax,[_vframe_start]
	mov	[_vframe_time],eax
	sub	esp,4
	mov	[esp],0
	call	_fflip
_40
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_39
_3
	call	_fclose_3dpoint_system
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	[esp],1
	call	_fclearworld
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreate_point
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_tpointt
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_tfree_pointt
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjFirst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_50
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjDelete
	jmp	_51
_50
	cmp	[_vbatch_points],16383
	jnz	_52
	mov	[_vbatch_points],0
	sub	esp,8
	mov	eax,[_vpoint_mesh]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcreatesurface
	mov	[_vpoint_surf],eax
_52
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vpoint_surf]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-12],eax
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vpoint_surf]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-16],eax
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vpoint_surf]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-20],eax
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vpoint_surf]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-24],eax
	sub	esp,16
	mov	ebx,[ebp-16]
	mov	[esp+8],ebx
	mov	esi,[ebp-20]
	mov	[esp+12],esi
	mov	esi,[ebp-12]
	mov	[esp+4],esi
	mov	eax,[_vpoint_surf]
	mov	[esp],eax
	call	_faddtriangle
	sub	esp,16
	mov	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[_vpoint_surf]
	mov	[esp],eax
	call	_faddtriangle
	mov	ebx,[ebp-12]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[_vpoint_surf]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	add	[_vbatch_points],1
_51
	sub	esp,16
	mov	[esp+8],200
	mov	[esp+12],200
	mov	[esp+4],200
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcolour_point
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	add	[_vactive_points],1
	mov	eax,[ebp-4]
	jmp	_4_leave
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fcreate_piv_point
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_tppointt
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,20
	mov	ebx,[ebp+28]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjToHandle
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	_fnameentity
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_tfree_pointt
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjFirst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_53
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjDelete
	jmp	_54
_53
	cmp	[_vbatch_points],16383
	jnz	_55
	mov	[_vbatch_points],0
	sub	esp,8
	mov	eax,[_vpoint_mesh]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fcreatesurface
	mov	[_vpoint_surf],eax
_55
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vpoint_surf]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-12],eax
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vpoint_surf]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-16],eax
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vpoint_surf]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-20],eax
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	[esp+12],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vpoint_surf]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-24],eax
	sub	esp,16
	mov	ebx,[ebp-16]
	mov	[esp+8],ebx
	mov	esi,[ebp-20]
	mov	[esp+12],esi
	mov	esi,[ebp-12]
	mov	[esp+4],esi
	mov	eax,[_vpoint_surf]
	mov	[esp],eax
	call	_faddtriangle
	sub	esp,16
	mov	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[_vpoint_surf]
	mov	[esp],eax
	call	_faddtriangle
	mov	ebx,[ebp-12]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[_vpoint_surf]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	add	[_vbatch_points],1
_54
	sub	esp,16
	mov	[esp+8],200
	mov	[esp+12],200
	mov	[esp+4],200
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcolour_piv_point
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	add	[_vactive_points],1
	mov	eax,[ebp-4]
	jmp	_5_leave
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fcreate_vert_points
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-4],1
	jmp	_56
_57
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-8],eax
	mov	[ebp-12],0
	jmp	_58
_59
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-24],eax
	sub	esp,20
	mov	ebx,[ebp+20]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-24]
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_ftformpoint
	sub	esp,24
	call	_ftformedz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp+40]
	mov	[esp+12],ebx
	mov	[ebp-32],eax
	mov	eax,ebx
	call	_ftformedy
	mov	ebx,eax
	mov	eax,[ebp-32]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_ftformedx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcreate_piv_point
	mov	[esp+4],eax
	lea	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,12
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-28]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentityparent
	mov	ebx,[ebp-8]
	mov	esi,[ebp-28]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	mov	esi,[ebp-28]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	sub	esp,16
	mov	ebx,[ebp+32]
	mov	[esp+8],ebx
	mov	esi,[ebp+36]
	mov	[esp+12],esi
	mov	esi,[ebp+28]
	mov	[esp+4],esi
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fcolour_piv_point
	sub	esp,8
	mov	eax,[ebp-28]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fset_pick_radius
	add	[ebp-12],1
_58
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,1
	cmp	[ebp-12],eax
	jle	_59
_8
	add	[ebp-4],1
_56
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	cmp	[ebp-4],eax
	jle	_57
_7
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	16
_ffree_point
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-4],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_tfree_pointt
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-4]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	add	ebx,1
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	add	ebx,2
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	add	ebx,3
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	__bbObjDelete
	sub	[_vactive_points],1
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_ffree_piv_point
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-4],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_tfree_pointt
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-4]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	add	ebx,1
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	add	ebx,2
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	add	ebx,3
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	__bbObjDelete
	sub	[_vactive_points],1
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_ffree_vert_points
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tppointt
	call	__bbObjEachFirst
	and	eax,eax
	jz	_12
_60
	sub	esp,4
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fgetparent
	cmp	eax,[ebp+20]
	jnz	_61
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffree_piv_point
_61
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_60
_12
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fcolour_point
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	[esp+20],1065353216
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertexcolor
	sub	esp,24
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	[esp+20],1065353216
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,1
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertexcolor
	sub	esp,24
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	[esp+20],1065353216
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,2
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertexcolor
	sub	esp,24
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	[esp+20],1065353216
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,3
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertexcolor
	mov	eax,0
	jmp	_13_leave
_13_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fcolour_piv_point
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	[esp+20],1065353216
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertexcolor
	sub	esp,24
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	[esp+20],1065353216
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,1
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertexcolor
	sub	esp,24
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	[esp+20],1065353216
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,2
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertexcolor
	sub	esp,24
	mov	ebx,[ebp+32]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+16],ebx
	mov	[esp+20],1065353216
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,3
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertexcolor
	mov	eax,0
	jmp	_14_leave
_14_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fposition_point
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+24]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	eax,0
	jmp	_15_leave
_15_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fset_pick_radius
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+24]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_62
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentityradius
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentitypickmode
	jmp	_63
_62
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentityradius
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_fentitypickmode
_63
	mov	eax,0
	jmp	_16_leave
_16_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fset_scaling
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vvport_width]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vpixel_size],ebx
	mov	ebx,[_vpixel_size]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vcam_scale_x]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vquad_size_x],ebx
	mov	ebx,[_vpixel_size]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vcam_scale_y]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vquad_size_y],ebx
	mov	eax,0
	jmp	_17_leave
_17_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fset_viewport
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[_vscreen_width]
	cmp	[ebp+20],ebx
	jle	_64
	mov	ebx,[_vscreen_width]
	mov	[ebp+20],ebx
	jmp	_65
_64
	cmp	[ebp+20],100
	jge	_66
	mov	[ebp+20],100
_66
_65
	mov	ebx,[_vscreen_height]
	cmp	[ebp+24],ebx
	jle	_67
	mov	ebx,[_vscreen_height]
	mov	[ebp+24],ebx
	jmp	_68
_67
	cmp	[ebp+24],100
	jge	_69
	mov	[ebp+24],100
_69
_68
	mov	ebx,[ebp+20]
	mov	[_vvport_width],ebx
	mov	ebx,[ebp+24]
	mov	[_vvport_height],ebx
	mov	ebx,[_vscreen_width]
	sub	ebx,[_vvport_width]
	sar	ebx,byte 1
	mov	[_vvport_x],ebx
	mov	ebx,[_vscreen_height]
	sub	ebx,[_vvport_height]
	sar	ebx,byte 1
	mov	[_vvport_y],ebx
	sub	esp,20
	mov	ebx,[ebp+20]
	mov	[esp+12],ebx
	mov	esi,[ebp+24]
	mov	[esp+16],esi
	mov	esi,[_vvport_y]
	mov	[esp+8],esi
	mov	ebx,[_vvport_x]
	mov	[esp+4],ebx
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_fcameraviewport
	call	_fset_scaling
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fset_cam_scale
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1008981770
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_70
	mov	[ebp+20],1008981770
_70
	mov	eax,[ebp+24]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1008981770
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_71
	mov	[ebp+24],1008981770
_71
	mov	eax,[ebp+28]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1008981770
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_72
	mov	[ebp+28],1008981770
_72
	sub	esp,20
	mov	ebx,[ebp+28]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_fscaleentity
	mov	ebx,[ebp+20]
	mov	[_vcam_scale_x],ebx
	mov	ebx,[ebp+24]
	mov	[_vcam_scale_y],ebx
	mov	ebx,[ebp+28]
	mov	[_vcam_scale_z],ebx
	call	_fset_scaling
	mov	eax,0
	jmp	_19_leave
_19_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fset_cam_zoom
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[ebp+20]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1008981770
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_73
	mov	[ebp+20],1008981770
_73
	sub	esp,8
	mov	eax,[_vcam]
	mov	[esp],eax
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	call	_fcamerazoom
	mov	ebx,[ebp+20]
	mov	[_vcam_zoom],ebx
	mov	eax,0
	jmp	_20_leave
_20_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fupdate_points
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,112
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	sub	esp,20
	mov	ebx,[_vquad_size_y]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[_vquad_size_x]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	ebx,[_vquad_size_y]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[_vquad_size_x]
	mov	[esp+8],esi
	mov	[esp+4],1
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	ebx,[_vquad_size_y]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[_vquad_size_x]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+4],2
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	ebx,[_vquad_size_y]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[_vquad_size_x]
	mov	[esp+8],esi
	mov	[esp+4],3
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,24
	mov	eax,[_vcam]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityyaw
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[ebp-112],eax
	sub	esp,8
	mov	ebx,[_vcam]
	mov	[esp],ebx
	mov	[esp+4],1
	mov	eax,ebx
	call	_fentityroll
	mov	ebx,eax
	mov	eax,[ebp-112]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[ebp-112],eax
	sub	esp,8
	mov	ebx,[_vcam]
	mov	[esp],ebx
	mov	[esp+4],1
	mov	eax,ebx
	call	_fentitypitch
	mov	ebx,eax
	mov	eax,[ebp-112]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vpad_mesh]
	mov	[esp],eax
	call	_frotatemesh
	sub	esp,8
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-12],eax
	sub	esp,8
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,8
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,8
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-24],eax
	sub	esp,8
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	mov	[esp+4],2
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-28],eax
	sub	esp,8
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	mov	[esp+4],2
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	mov	[esp+4],2
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,8
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	mov	[esp+4],3
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,8
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	mov	[esp+4],3
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,8
	mov	eax,[_vpad_surf]
	mov	[esp],eax
	mov	[esp+4],3
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-48],eax
	sub	esp,8
	mov	eax,[_vcam]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-52],eax
	sub	esp,8
	mov	eax,[_vcam]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-56],eax
	sub	esp,8
	mov	eax,[_vcam]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-60],eax
	sub	esp,8
	lea	eax,[ebp-64]
	mov	[esp],eax
	mov	[esp+4],_tpointt
	call	__bbObjEachFirst
	and	eax,eax
	jz	_23
_74
	mov	ebx,[ebp-64]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-68],ebx
	mov	ebx,[ebp-64]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-72],ebx
	mov	ebx,[ebp-64]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[ebp-76],ebx
	mov	ebx,[ebp-64]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[ebp-80],ebx
	mov	ebx,[ebp-64]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[ebp-84],ebx
	sub	esp,20
	mov	[esp+12],0
	mov	esi,[_vcam]
	mov	[esp+16],esi
	mov	esi,[ebp-84]
	mov	[esp+8],esi
	mov	ebx,[ebp-80]
	mov	[esp+4],ebx
	mov	eax,[ebp-76]
	mov	[esp],eax
	call	_ftformpoint
	call	_ftformedz
	mov	ebx,[_vcam_zoom]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[ebp-64]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-104],eax
	sub	esp,20
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-104]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-84]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+16],edi
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-76]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+8],edi
	mov	ebx,[ebp-68]
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-104]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-84]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+16],edi
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-76]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+8],edi
	mov	ebx,[ebp-68]
	add	ebx,1
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-104]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-84]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+16],edi
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-76]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+8],edi
	mov	ebx,[ebp-68]
	add	ebx,2
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-104]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-84]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+16],edi
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-76]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+8],edi
	mov	ebx,[ebp-68]
	add	ebx,3
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,4
	lea	eax,[ebp-64]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_74
_23
	sub	esp,8
	lea	eax,[ebp-108]
	mov	[esp],eax
	mov	[esp+4],_tppointt
	call	__bbObjEachFirst
	and	eax,eax
	jz	_24
_75
	mov	ebx,[ebp-108]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-68],ebx
	mov	ebx,[ebp-108]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-72],ebx
	sub	esp,8
	mov	eax,[ebp-108]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-76],eax
	sub	esp,8
	mov	eax,[ebp-108]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-80],eax
	sub	esp,8
	mov	eax,[ebp-108]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-84],eax
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-76]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-88],ebx
	mov	ebx,[ebp-56]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-92],ebx
	mov	ebx,[ebp-60]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-84]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-96],ebx
	sub	esp,4
	mov	eax,[ebp-88]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-88]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-92]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-92]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-96]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-96]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-100],eax
	mov	ebx,[ebp-88]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-100]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1036831949
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-76]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-76],esi
	mov	ebx,[ebp-92]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-100]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1036831949
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-80],esi
	mov	ebx,[ebp-96]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-100]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1036831949
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-84]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-84],esi
	sub	esp,20
	mov	[esp+12],0
	mov	esi,[_vcam]
	mov	[esp+16],esi
	mov	esi,[ebp-84]
	mov	[esp+8],esi
	mov	ebx,[ebp-80]
	mov	[esp+4],ebx
	mov	eax,[ebp-76]
	mov	[esp],eax
	call	_ftformpoint
	call	_ftformedz
	mov	ebx,[_vcam_zoom]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[ebp-108]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-104],eax
	sub	esp,20
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-104]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-84]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+16],edi
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-76]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+8],edi
	mov	ebx,[ebp-68]
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-104]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-84]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+16],edi
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-76]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+8],edi
	mov	ebx,[ebp-68]
	add	ebx,1
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-104]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-84]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+16],edi
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-76]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+8],edi
	mov	ebx,[ebp-68]
	add	ebx,2
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-104]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-84]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+16],edi
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-104]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-76]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+8],edi
	mov	ebx,[ebp-68]
	add	ebx,3
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,4
	lea	eax,[ebp-108]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_75
_24
	mov	eax,0
	jmp	_21_leave
_21_leave
	mov	[ebp-112],eax
	sub	esp,4
	mov	ebx,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-112]
	mov	[ebp-112],eax
	sub	esp,4
	mov	esi,[ebp-108]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-112]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fclose_3dpoint_system
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tppointt
	call	__bbObjEachFirst
	and	eax,eax
	jz	_27
_76
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_76
_27
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],_tppointt
	call	__bbObjEachFirst
	and	eax,eax
	jz	_28
_77
	sub	esp,4
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_77
_28
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],_tfree_pointt
	call	__bbObjEachFirst
	and	eax,eax
	jz	_29
_78
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_78
_29
	sub	esp,4
	mov	eax,[_vpoint_mesh]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[_vpad_mesh]
	mov	[esp],eax
	call	_ffreeentity
	mov	eax,0
	jmp	_26_leave
_26_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreate_world
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,8
	mov	[esp],16
	mov	ebx,[_vworld_piv]
	mov	[esp+4],ebx
	call	_fcreatesphere
	mov	[_vsphere],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1128792064
	mov	[esp+4],0
	mov	eax,[_vsphere]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,24
	mov	[esp+16],200
	mov	[esp+20],3
	mov	[esp+12],200
	mov	[esp+8],200
	mov	[esp+4],1028443341
	mov	eax,[_vsphere]
	mov	[esp],eax
	call	_fcreate_vert_points
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	eax,[_vsphere]
	mov	[esp],eax
	call	_fentitypickmode
	mov	[ebp-4],70
	mov	[ebp-8],70
	mov	ebx,[ebp-4]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	jmp	_79
_80
	mov	ebx,[ebp-8]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	jmp	_81
_82
	sub	esp,24
	mov	eax,[ebp-12]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[esp+12],3
	mov	[esp+4],-1073741824
	call	_fcreate_point
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],150
	call	_frand
	mov	[ebp-24],eax
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],150
	call	_frand
	mov	[ebp-28],eax
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],150
	call	_frand
	mov	[ebp-32],eax
	sub	esp,16
	mov	ebx,[ebp-28]
	mov	[esp+8],ebx
	mov	esi,[ebp-32]
	mov	[esp+12],esi
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fcolour_point
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
_81
	mov	ebx,[ebp-8]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_82
_32
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
_79
	mov	ebx,[ebp-4]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	eax,[ebp-12]
	push	eax
	fld	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_80
_31
	mov	eax,0
	jmp	_30_leave
_30_leave
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fkeyboard_control
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-4],1008981770
	sub	esp,4
	mov	[esp],42
	call	_fkeydown
	and	eax,eax
	jz	_83
	sub	esp,4
	mov	[esp],75
	call	_fkeydown
	and	eax,eax
	jz	_84
	sub	esp,12
	mov	eax,[_vcam_scale_x]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[_vcam_scale_y]
	mov	[esp+4],ebx
	mov	esi,[_vcam_scale_z]
	mov	[esp+8],esi
	call	_fset_cam_scale
_84
	sub	esp,4
	mov	[esp],77
	call	_fkeydown
	and	eax,eax
	jz	_85
	sub	esp,12
	mov	eax,[_vcam_scale_x]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[_vcam_scale_y]
	mov	[esp+4],ebx
	mov	esi,[_vcam_scale_z]
	mov	[esp+8],esi
	call	_fset_cam_scale
_85
	sub	esp,4
	mov	[esp],72
	call	_fkeydown
	and	eax,eax
	jz	_86
	sub	esp,12
	mov	ebx,[_vcam_scale_y]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[_vcam_scale_z]
	mov	[esp+8],esi
	mov	eax,[_vcam_scale_x]
	mov	[esp],eax
	call	_fset_cam_scale
_86
	sub	esp,4
	mov	[esp],80
	call	_fkeydown
	and	eax,eax
	jz	_87
	sub	esp,12
	mov	ebx,[_vcam_scale_y]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[_vcam_scale_z]
	mov	[esp+8],esi
	mov	eax,[_vcam_scale_x]
	mov	[esp],eax
	call	_fset_cam_scale
_87
	sub	esp,4
	mov	[esp],74
	call	_fkeydown
	and	eax,eax
	jz	_88
	sub	esp,12
	mov	ebx,[_vcam_scale_z]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vcam_scale_y]
	mov	[esp+4],esi
	mov	eax,[_vcam_scale_x]
	mov	[esp],eax
	call	_fset_cam_scale
_88
	sub	esp,4
	mov	[esp],78
	call	_fkeydown
	and	eax,eax
	jz	_89
	sub	esp,12
	mov	ebx,[_vcam_scale_z]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vcam_scale_y]
	mov	[esp+4],esi
	mov	eax,[_vcam_scale_x]
	mov	[esp],eax
	call	_fset_cam_scale
_89
	jmp	_90
_83
	sub	esp,4
	mov	[esp],17
	call	_fkeyhit
	and	eax,eax
	jz	_91
	cmp	[_vwiref_on],0
	setz	al
	movzx	eax,al
	mov	[_vwiref_on],eax
	mov	ebx,[_vwiref_on]
	and	ebx,ebx
	jz	_92
	mov	[ebp-8],1
	jmp	_93
_94
	sub	esp,8
	mov	eax,[_vworld_piv]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetchild
	mov	[ebp-12],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],17
	call	_fentityfx
	add	[ebp-8],1
_93
	sub	esp,4
	mov	eax,[_vworld_piv]
	mov	[esp],eax
	call	_fcountchildren
	cmp	[ebp-8],eax
	jle	_94
_34
	jmp	_95
_92
	mov	[ebp-8],1
	jmp	_96
_97
	sub	esp,8
	mov	eax,[_vworld_piv]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetchild
	mov	[ebp-12],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityfx
	add	[ebp-8],1
_96
	sub	esp,4
	mov	eax,[_vworld_piv]
	mov	[esp],eax
	call	_fcountchildren
	cmp	[ebp-8],eax
	jle	_97
_35
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_fcameraclsmode
	sub	esp,4
	mov	[esp],0
	call	_fwireframe
	sub	esp,4
	mov	eax,[_vpoint_mesh]
	mov	[esp],eax
	call	_fshowentity
	sub	esp,4
	mov	eax,[_vworld_piv]
	mov	[esp],eax
	call	_fshowentity
_95
_91
	sub	esp,4
	mov	[esp],59
	call	_fkeyhit
	and	eax,eax
	jz	_98
	cmp	[_vinfo_state],0
	setz	al
	movzx	eax,al
	mov	[_vinfo_state],eax
_98
	sub	esp,4
	mov	[esp],200
	call	_fkeydown
	and	eax,eax
	jz	_99
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1036831949
	mov	[esp+4],0
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_fmoveentity
_99
	sub	esp,4
	mov	[esp],208
	call	_fkeydown
	and	eax,eax
	jz	_100
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],-1110651699
	mov	[esp+4],0
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_fmoveentity
_100
	sub	esp,4
	mov	[esp],205
	call	_fkeydown
	and	eax,eax
	jz	_101
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],1036831949
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_fmoveentity
_101
	sub	esp,4
	mov	[esp],203
	call	_fkeydown
	and	eax,eax
	jz	_102
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],-1110651699
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_fmoveentity
_102
	sub	esp,4
	mov	[esp],75
	call	_fkeydown
	and	eax,eax
	jz	_103
	sub	esp,8
	mov	eax,[_vvport_width]
	sub	eax,1
	mov	[esp],eax
	mov	ebx,[_vvport_height]
	mov	[esp+4],ebx
	call	_fset_viewport
_103
	sub	esp,4
	mov	[esp],77
	call	_fkeydown
	and	eax,eax
	jz	_104
	sub	esp,8
	mov	eax,[_vvport_width]
	add	eax,1
	mov	[esp],eax
	mov	ebx,[_vvport_height]
	mov	[esp+4],ebx
	call	_fset_viewport
_104
	sub	esp,4
	mov	[esp],72
	call	_fkeydown
	and	eax,eax
	jz	_105
	sub	esp,8
	mov	eax,[_vvport_width]
	mov	[esp],eax
	mov	ebx,[_vvport_height]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fset_viewport
_105
	sub	esp,4
	mov	[esp],80
	call	_fkeydown
	and	eax,eax
	jz	_106
	sub	esp,8
	mov	eax,[_vvport_width]
	mov	[esp],eax
	mov	ebx,[_vvport_height]
	add	ebx,1
	mov	[esp+4],ebx
	call	_fset_viewport
_106
	sub	esp,4
	mov	[esp],74
	call	_fkeydown
	and	eax,eax
	jz	_107
	sub	esp,4
	mov	eax,[_vcam_zoom]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fset_cam_zoom
_107
	sub	esp,4
	mov	[esp],78
	call	_fkeydown
	and	eax,eax
	jz	_108
	sub	esp,4
	mov	eax,[_vcam_zoom]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fset_cam_zoom
_108
_90
	mov	eax,0
	jmp	_33_leave
_33_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fmouse_control
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,64
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	ebx,[_vop_state]
	mov	[ebp-4],ebx
	cmp	[ebp-4],0
	jz	_110
	cmp	[ebp-4],1
	jz	_111
	cmp	[ebp-4],2
	jz	_112
	jmp	_109
_110
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	and	eax,eax
	jz	_113
	sub	esp,8
	mov	eax,[_vpicked_point]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_114
	sub	esp,16
	mov	[esp+8],200
	mov	[esp+12],200
	mov	[esp+4],200
	mov	eax,[_vpicked_point]
	mov	[esp],eax
	call	_fcolour_piv_point
	mov	ebx,3
	mov	esi,[_vpicked_point]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	sub	esp,8
	mov	[esp],_vpicked_point
	mov	[esp+4],0
	call	__bbObjStore
_114
	call	_fmousexspeed
	call	_fmouseyspeed
	call	_fmousezspeed
	mov	[_vmouse_on],0
	mov	[_vop_state],2
	jmp	_115
_113
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_116
	sub	esp,8
	mov	eax,[_vpicked_point]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_117
	mov	[_vmouse_on],0
	mov	[_vop_state],1
_117
	jmp	_118
_116
	sub	esp,12
	call	_fmousex
	sub	eax,[_vvport_x]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-64],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-64]
	sub	ebx,[_vvport_y]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	ebx,[_vcam]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcamerapick
	mov	ebx,eax
	mov	[_vpicked_ent],ebx
	mov	ebx,[_vpicked_ent]
	and	ebx,ebx
	jz	_119
	sub	esp,24
	mov	eax,[_vpicked_ent]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp],eax
	mov	[esp+4],_tppointt
	call	__bbObjFromHandle
	mov	[esp+4],eax
	lea	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_120
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[_vpicked_point]
	mov	[esp+4],ebx
	call	__bbObjCompare
	cmp	eax,0
	jz	_121
	sub	esp,8
	mov	eax,[_vpicked_point]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_122
	sub	esp,16
	mov	[esp+8],200
	mov	[esp+12],200
	mov	[esp+4],200
	mov	eax,[_vpicked_point]
	mov	[esp],eax
	call	_fcolour_piv_point
	mov	ebx,3
	mov	esi,[_vpicked_point]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
_122
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],255
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcolour_piv_point
	mov	ebx,5
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	sub	esp,8
	mov	[esp],_vpicked_point
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
_121
	jmp	_123
_120
	sub	esp,8
	mov	eax,[_vpicked_point]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_124
	sub	esp,16
	mov	[esp+8],200
	mov	[esp+12],200
	mov	[esp+4],200
	mov	eax,[_vpicked_point]
	mov	[esp],eax
	call	_fcolour_piv_point
	mov	ebx,3
	mov	esi,[_vpicked_point]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	sub	esp,8
	mov	[esp],_vpicked_point
	mov	[esp+4],0
	call	__bbObjStore
_124
_123
	jmp	_125
_119
	sub	esp,8
	mov	eax,[_vpicked_point]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_126
	sub	esp,16
	mov	[esp+8],200
	mov	[esp+12],200
	mov	[esp+4],200
	mov	eax,[_vpicked_point]
	mov	[esp],eax
	call	_fcolour_piv_point
	mov	ebx,3
	mov	esi,[_vpicked_point]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	sub	esp,8
	mov	[esp],_vpicked_point
	mov	[esp+4],0
	call	__bbObjStore
_126
_125
_118
_115
	jmp	_109
_111
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_127
	mov	ebx,[_vpicked_point]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[ebp-12],ebx
	mov	ebx,[_vpicked_point]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[ebp-16],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fvertexnx
	mov	ebx,1008981770
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fvertexny
	mov	ebx,1008981770
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-24],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fvertexnz
	mov	ebx,1008981770
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-28],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fvertexx
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fvertexy
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fvertexz
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,20
	mov	ebx,[ebp-36]
	mov	[esp+12],ebx
	mov	esi,[ebp-40]
	mov	[esp+16],esi
	mov	esi,[ebp-32]
	mov	[esp+8],esi
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexcoords
	sub	esp,20
	mov	ebx,[ebp-40]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-36]
	mov	[esp+8],esi
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	mov	eax,[_vpicked_ent]
	mov	[esp],eax
	call	_fpositionentity
	jmp	_128
_127
	mov	[_vmouse_on],1
	mov	[_vop_state],0
_128
	jmp	_109
_112
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	and	eax,eax
	jz	_129
	sub	esp,8
	mov	eax,[_vcam]
	mov	[esp],eax
	mov	ebx,[_vcampiv]
	mov	[esp+4],ebx
	call	_fentitydistance
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	call	_fmousexspeed
	mov	[ebp-48],eax
	call	_fmouseyspeed
	mov	[ebp-52],eax
	call	_fmousezspeed
	mov	[ebp-56],eax
	sub	esp,8
	mov	eax,[_vscreen_width]
	sar	eax,byte 1
	mov	[esp],eax
	mov	ebx,[_vscreen_height]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	call	_fmovemouse
	call	_fflushmouse
	mov	ebx,[ebp-56]
	and	ebx,ebx
	jz	_130
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1088421888
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-56]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-60],esi
	sub	esp,4
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1036831949
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_131
	mov	ebx,1036831949
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	__bbFSgn
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-60],ebx
_131
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp-60]
	mov	[esp+12],esi
	mov	[esp+4],0
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_fmoveentity
_130
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_132
	sub	esp,20
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1148846080
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-52]
	neg	esi
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_ftranslateentity
	sub	esp,20
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1148846080
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-48]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_ftranslateentity
	jmp	_133
_132
	sub	esp,4
	mov	[esp],3
	call	_fmousedown
	and	eax,eax
	jz	_134
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1145569280
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-52]
	neg	esi
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-60],esi
	sub	esp,4
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1036831949
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_135
	mov	ebx,1036831949
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	__bbFSgn
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-60],ebx
_135
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp-60]
	mov	[esp+12],esi
	mov	[esp+4],0
	mov	eax,[_vcam]
	mov	[esp],eax
	call	_fmoveentity
	jmp	_136
_134
	mov	ebx,[ebp-52]
	neg	ebx
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vcam_pitch]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[_vcam_pitch],esi
	mov	ebx,[ebp-48]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vcam_yaw]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[_vcam_yaw],esi
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	esi,[_vcam_yaw]
	mov	[esp+8],esi
	mov	ebx,[_vcam_pitch]
	mov	[esp+4],ebx
	mov	eax,[_vcampiv]
	mov	[esp],eax
	call	_frotateentity
_136
_133
	jmp	_137
_129
	mov	[_vmouse_on],1
	mov	[_vop_state],0
_137
	jmp	_109
_109
	mov	eax,0
	jmp	_36_leave
_36_leave
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fshow_info
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,[_vfps_timeout]
	and	ebx,ebx
	jz	_138
	add	[_vframe_count],1
	call	_fmillisecs
	cmp	eax,[_vfps_timeout]
	jle	_139
	call	_fmillisecs
	add	eax,1000
	mov	[_vfps_timeout],eax
	mov	ebx,[_vframe_count]
	mov	[_vfps],ebx
	mov	[_vframe_count],0
	mov	eax,[_vslowest_fps]
	cmp	[_vfps],eax
	setl	al
	movzx	eax,al
	mov	[ebp-4],eax
	cmp	[_vslowest_fps],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	or	eax,ebx
	and	eax,eax
	jz	_140
	mov	ebx,[_vfps]
	mov	[_vslowest_fps],ebx
_140
_139
	mov	ebx,[_vslowest_frame]
	cmp	[_vframe_time],ebx
	jle	_141
	mov	ebx,[_vframe_time]
	mov	[_vslowest_frame],ebx
_141
	cmp	[_vinfo_state],1
	jnz	_142
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_143
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],10
	mov	[esp],10
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,32
	mov	eax,_144
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	[ebp-8],eax
	mov	eax,ebx
	call	_ftrisrendered
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],25
	mov	[esp],10
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,32
	mov	eax,_145
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vframe_time]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],40
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_146
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vslowest_frame]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],55
	mov	[esp],10
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,32
	mov	eax,_147
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vfps]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],70
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_148
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vslowest_fps]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],85
	mov	[esp],10
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,32
	mov	eax,_149
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[_vpoint_mesh]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcountsurfaces
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],100
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_150
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vactive_points]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],115
	mov	[esp],10
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,64
	mov	eax,_151
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vcam_scale_x]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_152
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vcam_scale_y]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_153
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vcam_scale_z]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],130
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_154
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vcam_zoom]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],145
	mov	[esp],10
	call	_ftext
	sub	esp,48
	mov	eax,_155
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vvport_width]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_156
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vvport_height]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],160
	mov	[esp],10
	call	_ftext
	jmp	_157
_142
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_158
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],10
	mov	[esp],10
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],200
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_159
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],40
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_160
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],55
	mov	[esp],10
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_161
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],85
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_162
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],100
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_163
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],115
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_164
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],130
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_165
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],145
	mov	[esp],10
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_166
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],175
	mov	[esp],10
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_167
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],205
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_168
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],220
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_169
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],235
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_170
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],250
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_171
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],265
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_172
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],280
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_173
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],295
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_174
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],310
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_175
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],325
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_176
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],340
	mov	[esp],10
	call	_ftext
_157
	jmp	_177
_138
	call	_fmillisecs
	add	eax,1000
	mov	[_vfps_timeout],eax
_177
	mov	eax,0
	jmp	_38_leave
_38_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
_vscreen_width	.dd	0
	.align	4
_vscreen_height	.dd	0
	.align	4
_vvport_width	.dd	0
	.align	4
_vvport_height	.dd	0
	.align	4
_vvport_x	.dd	0
	.align	4
_vvport_y	.dd	0
	.align	4
_vpixel_size	.dd	0
	.align	4
_vcam_scale_x	.dd	0
	.align	4
_vcam_scale_y	.dd	0
	.align	4
_vcam_scale_z	.dd	0
	.align	4
_vcam_zoom	.dd	0
	.align	4
_vcam_yaw	.dd	0
	.align	4
_vcam_pitch	.dd	0
	.align	4
_vsphere	.dd	0
	.align	4
_vworld_piv	.dd	0
	.align	4
_vpicked_ent	.dd	0
	.align	4
_vpicked_point	.dd	0
	.align	4
_vmouse_on	.dd	0
	.align	4
_vbatch_points	.dd	0
	.align	4
_vactive_points	.dd	0
	.align	4
_vpoint_mesh	.dd	0
	.align	4
_vpoint_surf	.dd	0
	.align	4
_vpad_mesh	.dd	0
	.align	4
_vpad_surf	.dd	0
	.align	4
_vquad_size_x	.dd	0
	.align	4
_vquad_size_y	.dd	0
	.align	4
_vop_state	.dd	0
	.align	4
_vframe_count	.dd	0
	.align	4
_vfps	.dd	0
	.align	4
_vslowest_fps	.dd	0
	.align	4
_vfps_timeout	.dd	0
	.align	4
_vframe_time	.dd	0
	.align	4
_vslowest_frame	.dd	0
	.align	4
_vframe_start	.dd	0
	.align	4
_vwiref_on	.dd	0
	.align	4
_vinfo_state	.dd	0
	.align	4
_vcampiv	.dd	0
	.align	4
_vcam	.dd	0
	.align	4
_tpointt	.dd	5
_44	.dd	0
	.dd	_44
	.dd	_44
	.dd	0
	.dd	-1
_45	.dd	0
	.dd	_45
	.dd	_45
	.dd	0
	.dd	-1
	.dd	6
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
	.align	4
_tppointt	.dd	5
_46	.dd	0
	.dd	_46
	.dd	_46
	.dd	0
	.dd	-1
_47	.dd	0
	.dd	_47
	.dd	_47
	.dd	0
	.dd	-1
	.dd	6
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
_tfree_pointt	.dd	5
_48	.dd	0
	.dd	_48
	.dd	_48
	.dd	0
	.dd	-1
_49	.dd	0
	.dd	_49
	.dd	_49
	.dd	0
	.dd	-1
	.dd	2
	.dd	__bbIntType
	.dd	__bbIntType
_143	.db	"(Press F1 for help)",0
_144	.db	"  Triangles: ",0
_145	.db	"  Millisecs: ",0
_146	.db	"    Slowest: ",0
_147	.db	"        FPS: ",0
_148	.db	"      Worst: ",0
_149	.db	"Point Surfs: ",0
_150	.db	"     Points: ",0
_151	.db	"  Cam Scale: x=",0
_152	.db	" y=",0
_153	.db	" z=",0
_154	.db	"   Cam Zoom: ",0
_155	.db	"   Viewport: width=",0
_156	.db	" height=",0
_158	.db	"Mouse Controls:",0
_159	.db	"Click and hold left mouse button on a vertex",0
_160	.db	"handle to move that vertex along it's normal.",0
_161	.db	"With right mouse button held down:",0
_162	.db	"  drag to tumble camera.",0
_163	.db	"  use wheel to dolly camera (in steps).",0
_164	.db	"  hold middle button and drag to dolly camera (fine tune).",0
_165	.db	"  hold left button and drag to track camera.",0
_166	.db	"Keyboard Controls:",0
_167	.db	"Up/Down arrows dolly camera.",0
_168	.db	"Left/Right arrows track camera.",0
_169	.db	"W toggles wireframe.",0
_170	.db	"F1 toggles info.",0
_171	.db	"On numeric keypad:",0
_172	.db	"  arrows resize camera viewport.",0
_173	.db	"  +/- zoom camera in/out.",0
_174	.db	"On numeric keypad with LEFT SHIFT held down:",0
_175	.db	"  arrows scale camera on x/y axes.",0
_176	.db	"  +/- scale camera on z axis.",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

