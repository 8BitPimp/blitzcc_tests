
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[_vb_method],4
	sub	esp,12
	mov	eax,_15
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_16
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	[esp+4],1
	mov	[esp],1
	call	_fgraphics3d
	mov	[ebp-4],90
	mov	[ebp-8],10
	cmp	[ebp-4],80
	jle	_17
	mov	[_vb_method],8
_17
	mov	ebx,1083095122
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	sub	esp,4
	mov	eax,_apattern
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vb_method]
	sub	ebx,1
	mov	esi,_apattern
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vb_method]
	sub	ebx,1
	mov	esi,_apattern
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_apattern
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ac_table
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-12]
	mov	esi,_ac_table
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ac_table
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_18
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-20],eax
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-24],eax
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-28],eax
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	esi,[ebp-28]
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fgraphics3d
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-20],eax
	sub	esp,16
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fimageheight
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fimagewidth
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcreateimage
	mov	ebx,eax
	mov	[ebp-32],ebx
	mov	[ebp-36],1
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fsetup
	sub	esp,20
	mov	ebx,[ebp-8]
	mov	[esp+12],ebx
	mov	esi,[ebp-36]
	mov	[esp+16],esi
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fbpdither
	call	_fend
_l_2bayer4
_l_2bayer8
	ret
_2_leave
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsetup
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	cmp	[_vb_method],4
	jnz	_19
	sub	esp,4
	mov	eax,__DATA
	add	eax,0
	mov	[esp],eax
	call	__bbRestore
	mov	[ebp-4],0
	jmp	_20
_21
	mov	[ebp-8],0
	jmp	_22
_23
	call	__bbReadInt
	mov	[ebp-12],eax
	mov	ebx,[ebp-12]
	mov	esi,_apattern
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_apattern]
	mov	[esi],ebx
	add	[ebp-8],1
_22
	cmp	[ebp-8],3
	jle	_23
_5
	add	[ebp-4],1
_20
	cmp	[ebp-4],3
	jle	_21
_4
	jmp	_24
_19
	sub	esp,4
	mov	eax,__DATA
	add	eax,128
	mov	[esp],eax
	call	__bbRestore
	mov	[ebp-4],0
	jmp	_25
_26
	mov	[ebp-8],0
	jmp	_27
_28
	call	__bbReadInt
	mov	[ebp-12],eax
	mov	ebx,[ebp-12]
	mov	esi,_apattern
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_apattern]
	mov	[esi],ebx
	add	[ebp-8],1
_27
	cmp	[ebp-8],7
	jle	_28
_7
	add	[ebp-4],1
_25
	cmp	[ebp-4],7
	jle	_26
_6
_24
	mov	[ebp-16],1127481344
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	cmp	[_vb_method],4
	jnz	_29
	mov	[ebp-28],0
	jmp	_30
_31
	sub	esp,4
	mov	eax,[ebp-28]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,1098907648
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1098907648
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	sub	esp,4
	mov	eax,[ebp-32]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1098907648
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-28]
	shl	ebx,byte 2
	add	ebx,[_ac_table]
	mov	[ebx],eax
	add	[ebp-28],1
_30
	mov	ebx,[ebp+20]
	cmp	[ebp-28],ebx
	jle	_31
_8
	jmp	_32
_29
	mov	[ebp-28],0
	jmp	_33
_34
	sub	esp,4
	mov	eax,[ebp-28]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,1115684864
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1115684864
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	sub	esp,4
	mov	eax,[ebp-32]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1115684864
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-28]
	shl	ebx,byte 2
	add	ebx,[_ac_table]
	mov	[ebx],eax
	add	[ebp-28],1
_33
	mov	ebx,[ebp+20]
	cmp	[ebp-28],ebx
	jle	_34
_9
_32
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fbpdither
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,60
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1138688000
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,1138688000
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	cmp	[ebp+36],1
	jnz	_35
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdrawimage
_35
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fmillisecs
	mov	[ebp-12],eax
	mov	[ebp-16],0
	jmp	_36
_37
	mov	[ebp-20],0
	jmp	_38
_39
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,1
	jnz	_40
	call	_fend
_40
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-24],eax
	mov	ebx,[ebp-24]
	mov	esi,16777215
	and	ebx,esi
	mov	[ebp-24],ebx
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	ebx,[ebp-24]
	sar	ebx,byte 8
	sar	ebx,byte 8
	mov	[ebp-28],ebx
	mov	ebx,[ebp-24]
	mov	esi,[ebp-28]
	shl	esi,byte 8
	shl	esi,byte 8
	sub	ebx,esi
	sar	ebx,byte 8
	mov	[ebp-32],ebx
	mov	ebx,[ebp-24]
	mov	esi,[ebp-28]
	shl	esi,byte 8
	shl	esi,byte 8
	sub	ebx,esi
	mov	esi,[ebp-32]
	shl	esi,byte 8
	sub	ebx,esi
	mov	[ebp-36],ebx
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-28]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,1048576000
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-36]
	push	edi
	fild	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	eax,[ebp-40]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_41
	mov	[ebp-40],0
	jmp	_l_10jump
_41
	mov	ebx,1138688000
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	eax,[ebp-40]
	push	eax
	fld	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_42
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
_42
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	sub	esp,8
	mov	eax,[ebp+32]
	sar	eax,byte 1
	neg	eax
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp+32]
	sar	ebx,byte 1
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_frnd
	mov	ebx,[ebp-44]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	cmp	[ebp-44],0
	jge	_43
	mov	[ebp-44],0
_43
	mov	ebx,[ebp+28]
	cmp	[ebp-44],ebx
	jle	_44
	mov	ebx,[ebp+28]
	mov	[ebp-44],ebx
_44
	cmp	[_vb_method],4
	jnz	_45
	mov	ebx,[ebp-20]
	mov	esi,3
	and	ebx,esi
	mov	[ebp-48],ebx
	mov	ebx,[ebp-16]
	mov	esi,3
	and	ebx,esi
	mov	[ebp-52],ebx
	jmp	_46
_45
	mov	ebx,[ebp-20]
	mov	esi,7
	and	ebx,esi
	mov	[ebp-48],ebx
	mov	ebx,[ebp-16]
	mov	esi,7
	and	ebx,esi
	mov	[ebp-52],ebx
_46
	mov	ebx,[ebp-44]
	shl	ebx,byte 2
	add	ebx,[_ac_table]
	mov	ebx,[ebx]
	mov	esi,_apattern
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-52]
	add	esi,[ebp-48]
	shl	esi,byte 2
	add	esi,[_apattern]
	mov	esi,[esi]
	cmp	ebx,esi
	jle	_47
	sub	esp,12
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,24
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+12],eax
	mov	[esp+8],16777215
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,12
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
_47
_l_10jump
	add	[ebp-20],1
_38
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	sub	eax,1
	cmp	[ebp-20],eax
	jle	_39
_12
	add	[ebp-16],1
_36
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	sub	eax,1
	cmp	[ebp-16],eax
	jle	_37
_11
	call	_fmillisecs
	mov	[ebp-56],eax
	sub	esp,16
	mov	eax,[ebp-56]
	sub	eax,[ebp-12]
	mov	ecx,1000
	cdq
	idiv	ecx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	mov	[ebp-60],eax
	sub	esp,4
	mov	ebx,_48
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-60]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	_fdebuglog
	mov	ebx,eax
	cmp	[ebp+36],1
	jnz	_49
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fflipscreens
_49
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fflipscreens
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	jmp	_51
_50
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fdrawblock
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitkey
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,1
	jnz	_52
	call	_fend
_52
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdrawblock
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitkey
_51
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_50
_14
	mov	eax,0
	jmp	_13_leave
_13_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	4
_vb_method	.dd	0
_15	.db	"Bayer-Palbo Dithering Algorithm",0
_16	.db	"",0
	.align	4
_apattern	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ac_table	.dd	0
	.dd	1
	.dd	1
	.dd	0
_18	.db	"TEST.JPG",0
_48	.db	"Seconds: ",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	1
	.dd	0
	.dd	1
	.dd	8
	.dd	1
	.dd	2
	.dd	1
	.dd	10
	.dd	1
	.dd	12
	.dd	1
	.dd	4
	.dd	1
	.dd	14
	.dd	1
	.dd	6
	.dd	1
	.dd	3
	.dd	1
	.dd	11
	.dd	1
	.dd	1
	.dd	1
	.dd	9
	.dd	1
	.dd	15
	.dd	1
	.dd	7
	.dd	1
	.dd	13
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	1
	.dd	32
	.dd	1
	.dd	8
	.dd	1
	.dd	40
	.dd	1
	.dd	2
	.dd	1
	.dd	34
	.dd	1
	.dd	10
	.dd	1
	.dd	42
	.dd	1
	.dd	48
	.dd	1
	.dd	16
	.dd	1
	.dd	56
	.dd	1
	.dd	24
	.dd	1
	.dd	50
	.dd	1
	.dd	18
	.dd	1
	.dd	58
	.dd	1
	.dd	26
	.dd	1
	.dd	12
	.dd	1
	.dd	44
	.dd	1
	.dd	4
	.dd	1
	.dd	36
	.dd	1
	.dd	14
	.dd	1
	.dd	46
	.dd	1
	.dd	6
	.dd	1
	.dd	38
	.dd	1
	.dd	60
	.dd	1
	.dd	28
	.dd	1
	.dd	52
	.dd	1
	.dd	20
	.dd	1
	.dd	62
	.dd	1
	.dd	30
	.dd	1
	.dd	54
	.dd	1
	.dd	22
	.dd	1
	.dd	3
	.dd	1
	.dd	35
	.dd	1
	.dd	11
	.dd	1
	.dd	43
	.dd	1
	.dd	1
	.dd	1
	.dd	33
	.dd	1
	.dd	9
	.dd	1
	.dd	41
	.dd	1
	.dd	51
	.dd	1
	.dd	19
	.dd	1
	.dd	59
	.dd	1
	.dd	27
	.dd	1
	.dd	49
	.dd	1
	.dd	17
	.dd	1
	.dd	57
	.dd	1
	.dd	25
	.dd	1
	.dd	15
	.dd	1
	.dd	47
	.dd	1
	.dd	7
	.dd	1
	.dd	39
	.dd	1
	.dd	13
	.dd	1
	.dd	45
	.dd	1
	.dd	5
	.dd	1
	.dd	37
	.dd	1
	.dd	63
	.dd	1
	.dd	31
	.dd	1
	.dd	55
	.dd	1
	.dd	23
	.dd	1
	.dd	61
	.dd	1
	.dd	29
	.dd	1
	.dd	53
	.dd	1
	.dd	21
	.dd	0

