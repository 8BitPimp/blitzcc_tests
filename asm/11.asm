
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	[ebp-4],0
	sub	esp,12
	mov	eax,_13
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_14
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	mov	eax,ebx
	call	_fcommandline
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadsource
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fcopyimage
	mov	[_vtextureimage],eax
	mov	[_vtexwidth],64
	mov	[_vtexheight],64
	sub	esp,4
	mov	[esp],0
	call	_ftformfilter
_15
	call	_frotatesource
	call	_fpositionsource
	call	_fcopytotexture
	call	_fresizetexture
	call	_fprintinfo
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_15
_3
	call	_fsavetexture
	call	_fend
	ret
_2_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_floadsource
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	sub	esp,20
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fleft
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-4],eax
	mov	[ebp-8],eax
	sub	esp,8
	mov	[ebp-12],eax
	sub	esp,8
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp],ebx
	mov	[esp+4],1
	mov	eax,ebx
	call	_fright
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	[ebp-12],eax
	sub	esp,4
	mov	[esp],34
	mov	eax,esi
	call	_fchr
	mov	esi,eax
	mov	eax,[ebp-12]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrCompare
	mov	ebx,eax
	mov	eax,[ebp-8]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	and	eax,ebx
	and	eax,eax
	jz	_16
	sub	esp,20
	mov	[esp+4],2
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	sub	eax,2
	mov	[esp+8],eax
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_16
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[_vsourceimage],eax
	cmp	[_vsourceimage],0
	jnz	_17
	sub	esp,32
	mov	eax,_18
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	[esp],10
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	[esp],10
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_19
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
	call	_fend
_17
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fcopyimage
	mov	[_vsourcecopy],eax
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-4]
	cmp	eax,ebx
	jle	_20
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-4]
	sub	eax,ebx
	neg	eax
	mov	[_vmaxsx],eax
	jmp	_21
_20
	mov	[_vmaxsx],0
_21
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-4]
	sar	ebx,byte 1
	cmp	eax,ebx
	jle	_22
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-4]
	sar	ebx,byte 1
	sub	eax,ebx
	add	eax,1
	neg	eax
	mov	[_vmaxsy],eax
	jmp	_23
_22
	mov	[_vmaxsy],0
_23
	mov	[_vsx],0
	mov	[_vsy],0
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fpositionsource
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,16
	call	_fgraphicswidth
	mov	[esp+8],eax
	mov	[ebp-8],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-8]
	sar	ebx,byte 1
	sub	ebx,1
	mov	[esp+12],ebx
	mov	[esp+4],0
	mov	[esp],0
	call	_fviewport
	call	_fcls
	cmp	[_vresizing],0
	jnz	_24
	sub	esp,4
	mov	[esp],42
	call	_fkeydown
	mov	[ebp-8],eax
	sub	esp,4
	mov	[esp],54
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_25
	mov	[ebp-4],32
	jmp	_26
_25
	mov	[ebp-4],1
_26
	cmp	[_vmaxsx],0
	jz	_27
	sub	esp,4
	mov	[esp],203
	call	_fkeydown
	and	eax,eax
	jz	_28
	mov	ebx,[ebp-4]
	add	[_vsx],ebx
_28
	sub	esp,4
	mov	[esp],205
	call	_fkeydown
	and	eax,eax
	jz	_29
	mov	ebx,[ebp-4]
	sub	[_vsx],ebx
_29
_27
	cmp	[_vmaxsy],0
	jz	_30
	sub	esp,4
	mov	[esp],208
	call	_fkeydown
	and	eax,eax
	jz	_31
	mov	ebx,[ebp-4]
	sub	[_vsy],ebx
_31
	sub	esp,4
	mov	[esp],200
	call	_fkeydown
	and	eax,eax
	jz	_32
	mov	ebx,[ebp-4]
	add	[_vsy],ebx
_32
_30
	cmp	[_vsx],0
	jle	_33
	mov	[_vsx],0
_33
	cmp	[_vsy],0
	jle	_34
	mov	[_vsy],0
_34
	mov	ebx,[_vmaxsx]
	cmp	[_vsx],ebx
	jge	_35
	mov	ebx,[_vmaxsx]
	mov	[_vsx],ebx
_35
	mov	ebx,[_vmaxsy]
	cmp	[_vsy],ebx
	jge	_36
	mov	ebx,[_vmaxsy]
	mov	[_vsy],ebx
_36
_24
	sub	esp,16
	mov	ebx,[_vsy]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[_vsx]
	mov	[esp+4],esi
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fdrawimage
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawbox
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	mov	ebx,[_vbw]
	and	ebx,ebx
	jz	_37
	mov	[ebp-4],255
	jmp	_38
_37
	mov	[ebp-4],0
_38
	sub	esp,12
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	esi,[ebp-4]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcolor
	sub	esp,20
	mov	ebx,[_vtexheight]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[_vtexwidth]
	mov	[esp+8],esi
	call	_fmousey
	mov	[esp+4],eax
	mov	[ebp-8],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_frect
	mov	ebx,eax
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcopytotexture
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_39
	sub	esp,4
	mov	eax,[_vtextureimage]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,12
	mov	ebx,[_vtexheight]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[_vtexwidth]
	mov	[esp],eax
	call	_fcreateimage
	mov	[_vtextureimage],eax
	sub	esp,16
	call	_fmousey
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	mov	eax,[_vtextureimage]
	mov	[esp],eax
	call	_fgrabimage
_39
	call	_fdrawbox
	mov	ebx,1
	sub	ebx,[_vbw]
	mov	[_vbw],ebx
	sub	esp,16
	call	_fgraphicswidth
	mov	[esp+8],eax
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-4]
	sar	ebx,byte 1
	sub	ebx,1
	mov	[esp+12],ebx
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-4]
	sar	ebx,byte 1
	add	ebx,1
	mov	[esp+4],ebx
	mov	[esp],0
	call	_fviewport
	call	_fcls
	sub	esp,16
	call	_fgraphicsheight
	sar	eax,byte 1
	add	eax,1
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vtextureimage]
	mov	[esp],eax
	call	_ftileimage
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fresizetexture
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[_vresizing],0
	sub	esp,4
	mov	[esp],29
	call	_fkeydown
	mov	[ebp-12],eax
	sub	esp,4
	mov	[esp],157
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-12]
	or	eax,ebx
	and	eax,eax
	jz	_40
	mov	[_vresizing],1
	mov	[ebp-4],0
	sub	esp,4
	mov	[esp],42
	call	_fkeydown
	mov	[ebp-12],eax
	sub	esp,4
	mov	[esp],54
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-12]
	or	eax,ebx
	and	eax,eax
	jz	_41
	mov	[ebp-8],16
	jmp	_42
_41
	mov	[ebp-8],1
_42
	sub	esp,4
	mov	[esp],203
	call	_fkeydown
	and	eax,eax
	jz	_43
	mov	ebx,[ebp-8]
	sub	[_vtexwidth],ebx
	mov	[ebp-4],1
_43
	sub	esp,4
	mov	[esp],205
	call	_fkeydown
	and	eax,eax
	jz	_44
	mov	ebx,[ebp-8]
	add	[_vtexwidth],ebx
	mov	[ebp-4],1
_44
	sub	esp,4
	mov	[esp],200
	call	_fkeydown
	and	eax,eax
	jz	_45
	mov	ebx,[ebp-8]
	sub	[_vtexheight],ebx
	mov	[ebp-4],1
_45
	sub	esp,4
	mov	[esp],208
	call	_fkeydown
	and	eax,eax
	jz	_46
	mov	ebx,[ebp-8]
	add	[_vtexheight],ebx
	mov	[ebp-4],1
_46
	cmp	[_vtexwidth],2
	jge	_47
	mov	[_vtexwidth],2
_47
	cmp	[_vtexheight],2
	jge	_48
	mov	[_vtexheight],2
_48
_40
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fprintinfo
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,32
	mov	eax,_49
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vtexwidth]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-4]
	sar	ebx,byte 1
	add	ebx,20
	mov	[esp+4],ebx
	mov	[esp],20
	call	_ftext
	sub	esp,32
	mov	eax,_50
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vtexheight]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-4]
	sar	ebx,byte 1
	add	ebx,40
	mov	[esp+4],ebx
	mov	[esp],20
	call	_ftext
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,32
	mov	eax,_51
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vtexwidth]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-4]
	sar	ebx,byte 1
	add	ebx,21
	mov	[esp+4],ebx
	mov	[esp],21
	call	_ftext
	sub	esp,32
	mov	eax,_52
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vtexheight]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[ebp-4],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-4]
	sar	ebx,byte 1
	add	ebx,41
	mov	[esp+4],ebx
	mov	[esp],20
	call	_ftext
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsavetexture
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_53
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-8],1
_54
	add	[ebp-8],1
	sub	esp,28
	mov	eax,_55
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_56
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_ffiletype
	cmp	eax,0
	jnz	_54
_11
	sub	esp,28
	call	_fcurrentdir
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_57
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[_vtextureimage]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsaveimage
	mov	ebx,eax
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_frotatesource
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-4],0
	sub	esp,4
	mov	[esp],42
	call	_fkeydown
	mov	[ebp-12],eax
	sub	esp,4
	mov	[esp],54
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-12]
	or	eax,ebx
	and	eax,eax
	jz	_58
	mov	[ebp-8],1056964608
	jmp	_59
_58
	mov	[ebp-8],1028443341
_59
	sub	esp,4
	mov	[esp],51
	call	_fkeydown
	and	eax,eax
	jz	_60
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[_vsourcecopy]
	mov	[esp],eax
	call	_fcopyimage
	mov	[_vsourceimage],eax
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fmidhandle
	mov	ebx,[_vrotation]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vrotation],ebx
	mov	[ebp-4],1
_60
	sub	esp,4
	mov	[esp],52
	call	_fkeydown
	and	eax,eax
	jz	_61
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[_vsourcecopy]
	mov	[esp],eax
	call	_fcopyimage
	mov	[_vsourceimage],eax
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fmidhandle
	mov	ebx,[_vrotation]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vrotation],ebx
	mov	[ebp-4],1
_61
	mov	ebx,[ebp-4]
	and	ebx,ebx
	jz	_62
	sub	esp,8
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	mov	ebx,[_vrotation]
	mov	[esp+4],ebx
	call	_frotateimage
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fhandleimage
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-12],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-12]
	cmp	eax,ebx
	jle	_63
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-12],eax
	mov	eax,ebx
	call	_fgraphicswidth
	mov	ebx,eax
	mov	eax,[ebp-12]
	sub	eax,ebx
	neg	eax
	mov	[_vmaxsx],eax
	jmp	_64
_63
	mov	[_vmaxsx],0
_64
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-12],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-12]
	sar	ebx,byte 1
	cmp	eax,ebx
	jle	_65
	sub	esp,4
	mov	eax,[_vsourceimage]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-12],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-12]
	sar	ebx,byte 1
	sub	eax,ebx
	add	eax,1
	neg	eax
	mov	[_vmaxsy],eax
	jmp	_66
_65
	mov	[_vmaxsy],0
_66
_62
	mov	eax,0
	jmp	_12_leave
_12_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
_13	.db	"Textile",0
_14	.db	"",0
	.align	4
_vsourceimage	.dd	0
	.align	4
_vsourcecopy	.dd	0
	.align	4
_vsx	.dd	0
	.align	4
_vsy	.dd	0
	.align	4
_vmaxsx	.dd	0
	.align	4
_vmaxsy	.dd	0
	.align	4
_vbw	.dd	0
	.align	4
_vresizing	.dd	0
	.align	4
_vrotation	.dd	0
	.align	4
_vtextureimage	.dd	0
	.align	4
_vtexwidth	.dd	0
	.align	4
_vtexheight	.dd	0
_18	.db	"[Guru Meditation]",0
_19	.db	"Cannot load image. Throwing dollies out of pram...",0
_49	.db	"Texture width: ",0
_50	.db	"Texture height: ",0
_51	.db	"Texture width: ",0
_52	.db	"Texture height: ",0
_53	.db	"Texture.bmp",0
_55	.db	"Texture",0
_56	.db	".bmp",0
_57	.db	"\",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

