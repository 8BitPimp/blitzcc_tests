
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	call	_flmexample
	sub	esp,8
	mov	[esp],_vg_lmparams
	mov	[esp+4],0
	call	__bbObjStore
	sub	esp,4
	mov	eax,_atxv
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,3
	mov	esi,_atxv
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atxv
	mov	[esp],eax
	call	__bbDimArray
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_faddlmentity
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tlmentity
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fmeshwidth
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fmeshheight
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fmeshdepth
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],eax
	mov	eax,1
	jmp	_18_leave
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_flmentityvisible
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,0
	jmp	_19_leave
_19_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fbeginlightmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,8
	mov	[esp],_vg_lmparams
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_tlmparams
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	eax,0
	jmp	_20_leave
_20_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_flightmapparams
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+20]
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	eax,0
	jmp	_21_leave
_21_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fendlightmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	mov	eax,[_vg_lmparams]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_148
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tlmlight
	call	__bbObjEachFirst
	and	eax,eax
	jz	_23
_149
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_149
_23
	sub	esp,4
	mov	eax,[_vg_lmparams]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,8
	mov	[esp],_vg_lmparams
	mov	[esp+4],0
	call	__bbObjStore
_148
	sub	esp,4
	mov	eax,_tlmentity
	mov	[esp],eax
	call	__bbObjDeleteEach
	mov	eax,0
	jmp	_22_leave
_22_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreatelmlight
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tlmlight
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+40]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp+44]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	mov	ebx,[ebp+52]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
	mov	ebx,[ebp+56]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+60]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+64]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,48
	mov	[esi],ebx
	mov	ebx,[ebp+48]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,52
	mov	[esi],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	and	eax,eax
	jz	_150
	mov	ebx,1259902591
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
_150
	mov	eax,[ebp-4]
	jmp	_24_leave
	mov	eax,0
	jmp	_24_leave
_24_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 48
	.align	16
_fcreatelmlight2
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_tlmlight
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+44]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+48]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+52]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,[ebp+40]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	ebx,[ebp+60]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
	mov	ebx,1065353216
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,48
	mov	[esi],ebx
	mov	ebx,[ebp+56]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,52
	mov	[esi],ebx
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,36
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	and	eax,eax
	jz	_151
	mov	ebx,1259902591
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
_151
	mov	eax,[ebp-4]
	jmp	_25_leave
	mov	eax,0
	jmp	_25_leave
_25_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 44
	.align	16
_fapplylightmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+24],0
	jnz	_152
	mov	eax,0
	jmp	_26_leave
_152
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityclass
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_154
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_153
	sub	esp,12
	lea	eax,[ebp+32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_floadtexture
	mov	[ebp-4],eax
	mov	ebx,[ebp-4]
	and	ebx,ebx
	jz	_155
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fblendtexturemultiply
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreetexture
_155
_153
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityfx
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp+28]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentitytexture
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ffreetexture
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityclass
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_157
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_156
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fweld
_156
	mov	eax,1
	jmp	_26_leave
	mov	eax,0
	jmp	_26_leave
_26_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fsavelightmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	cmp	[ebp+24],0
	jnz	_158
	mov	eax,0
	jmp	_27_leave
_158
	sub	esp,16
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	_fsavebuffer
	sub	esp,12
	lea	eax,[ebp+32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_160
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_159
	sub	esp,16
	lea	eax,[ebp+32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcreateluvs
	mov	ebx,eax
_159
	mov	eax,0
	jmp	_27_leave
_27_leave
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[ebp-4],eax
	sub	esp,4
	mov	esi,[ebp+32]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-4]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fblendtexturemultiply
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,80
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ftexturewidth
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ftextureheight
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ftexturewidth
	cmp	[ebp-4],eax
	setnz	al
	movzx	eax,al
	mov	[ebp-76],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftextureheight
	mov	ebx,eax
	mov	eax,[ebp-80]
	cmp	[ebp-8],ebx
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-76]
	or	eax,ebx
	and	eax,eax
	jz	_161
	mov	eax,0
	jmp	_28_leave
_161
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[ebp-12],eax
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-20],0
	jmp	_162
_163
	mov	[ebp-24],0
	jmp	_164
_165
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-28],eax
	mov	ebx,[ebp-28]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-32],ebx
	mov	ebx,[ebp-28]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-36],ebx
	mov	ebx,[ebp-28]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-40],ebx
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-44],eax
	mov	ebx,[ebp-44]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-48],ebx
	mov	ebx,[ebp-44]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-52],ebx
	mov	ebx,[ebp-44]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-56],ebx
	mov	ebx,[ebp-48]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1132396544
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-60],esi
	mov	ebx,[ebp-52]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1132396544
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-36]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-64],esi
	mov	ebx,[ebp-56]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1132396544
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-40]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-68],esi
	mov	ebx,[ebp-68]
	mov	esi,[ebp-64]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-60]
	shl	esi,byte 16
	or	ebx,esi
	mov	[ebp-72],ebx
	sub	esp,16
	mov	ebx,[ebp-72]
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	mov	[esp+12],esi
	mov	esi,[ebp-20]
	mov	[esp+4],esi
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-24],1
_164
	mov	ebx,[ebp-4]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_165
_30
	add	[ebp-20],1
_162
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_163
_29
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_funlockbuffer
	mov	eax,[ebp+20]
	jmp	_28_leave
	mov	eax,0
	jmp	_28_leave
_28_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_floadlightmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityclass
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_167
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_166
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_funweld
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_ffiletype
	and	eax,eax
	jz	_168
	sub	esp,16
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_floadluvs
	mov	ebx,eax
_168
	sub	esp,12
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_floadtexture
	mov	[ebp-4],eax
	mov	ebx,[ebp-4]
	and	ebx,ebx
	jz	_169
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityfx
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_ftexturecoords
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp+32]
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentitytexture
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fweld
	mov	eax,[ebp-4]
	jmp	_31_leave
_169
_166
	mov	eax,0
	jmp	_31_leave
	mov	eax,0
	jmp	_31_leave
_31_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[ebp-8],eax
	sub	esp,4
	mov	esi,[ebp+28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_floadterrainlightmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentityclass
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_171
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_170
	sub	esp,12
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_floadtexture
	mov	[ebp-4],eax
	mov	ebx,[ebp-4]
	and	ebx,ebx
	jz	_172
	sub	esp,12
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_floadtexture
	mov	[ebp-8],eax
	mov	ebx,[ebp-8]
	and	ebx,ebx
	jz	_173
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fblendtexturemultiply
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreetexture
_173
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fterrainsize
	mov	[ebp-12],eax
	sub	esp,12
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fscaletexture
	cmp	[ebp+32],0
	jl	_174
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityfx
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp+32]
	mov	[esp+12],esi
	mov	esi,[ebp-4]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fentitytexture
_174
	mov	eax,[ebp-4]
	jmp	_32_leave
_172
_170
	mov	eax,0
	jmp	_32_leave
	mov	eax,0
	jmp	_32_leave
_32_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	sub	esp,4
	mov	esi,[ebp+28]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_flightmapmesh
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,148
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	mov	[ebp-128],ebx
	mov	[ebp-132],ebx
	mov	[ebp-136],ebx
	mov	[ebp-140],ebx
	mov	[ebp-144],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_funweld
	mov	[ebp-4],1
	jmp	_175
_176
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-8],eax
	mov	[ebp-12],0
	jmp	_177
_178
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,_tlmtriangle
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	[ebp-20],0
	jmp	_179
_180
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	esi,[ebp-20]
	mov	[esp+8],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-24],eax
	sub	esp,28
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp+20]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[ebp-148],eax
	sub	esp,8
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fvertexy
	mov	ebx,eax
	mov	eax,[ebp-148]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftformpoint
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	add	ebx,esi
	call	_ftformedx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebx],eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	add	ebx,esi
	call	_ftformedy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebx],eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	add	ebx,esi
	call	_ftformedz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	ebx,esi
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	add	ebx,esi
	mov	[ebx],eax
	sub	esp,28
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fvertexnz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	ebx,[ebp+20]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[ebp-148],eax
	sub	esp,8
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fvertexny
	mov	ebx,eax
	mov	eax,[ebp-148]
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	call	_fvertexnx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftformnormal
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	add	ebx,esi
	call	_ftformedx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebx],eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	add	ebx,esi
	call	_ftformedy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebx],eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	add	ebx,esi
	call	_ftformedz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebx],eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,44
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp-24]
	mov	[ebx],esi
	add	[ebp-20],1
_179
	cmp	[ebp-20],2
	jle	_180
_36
	mov	ebx,[ebp-8]
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,60
	mov	[esi],ebx
	sub	esp,36
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+28],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+32],esi
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+24],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fgettrianglenormal
	call	_ftrianglenormalx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,48
	mov	[ebx],eax
	call	_ftrianglenormaly
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,52
	mov	[ebx],eax
	call	_ftrianglenormalz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,56
	mov	[ebx],eax
	add	[ebp-12],1
_177
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcounttriangles
	sub	eax,1
	cmp	[ebp-12],eax
	jle	_178
_35
	add	[ebp-4],1
_175
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	cmp	[ebp-4],eax
	jle	_176
_34
	mov	[ebp-28],0
_181
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],_tlmtriangle
	call	__bbObjEachFirst
	and	eax,eax
	jz	_38
_182
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,64
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_183
	jmp	_38
_183
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_182
_38
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_184
	jmp	_37
_184
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,_tlmsurface
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-16]
	mov	eax,[eax]
	add	eax,64
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-32]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	shl	eax,byte 2
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
_185
	mov	[ebp-36],0
	sub	esp,8
	lea	eax,[ebp-40]
	mov	[esp],eax
	mov	[esp+4],_tlmtriangle
	call	__bbObjEachFirst
	and	eax,eax
	jz	_40
_186
	sub	esp,8
	mov	eax,[ebp-40]
	mov	eax,[eax]
	add	eax,64
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_187
	mov	ebx,[ebp-40]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,48
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-40]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-16]
	mov	edi,[edi]
	add	edi,52
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-40]
	mov	esi,[esi]
	add	esi,56
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-16]
	mov	edi,[edi]
	add	edi,56
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	mov	eax,[ebp-44]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065302884
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	and	eax,eax
	jz	_188
	mov	[ebp-48],0
	mov	[ebp-20],0
	jmp	_189
_190
	sub	esp,8
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	lea	eax,[ebp-52]
	mov	[esp],eax
	call	__bbObjStore
	mov	[ebp-56],0
	jmp	_191
_192
	mov	[ebp-60],0
	jmp	_193
_194
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	mov	esi,[ebp-40]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-60]
	shl	esi,byte 2
	mov	edi,[ebp-52]
	mov	edi,[edi]
	add	edi,12
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-64],ebx
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	mov	esi,[ebp-40]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-60]
	shl	esi,byte 2
	mov	edi,[ebp-52]
	mov	edi,[edi]
	add	edi,16
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-68],ebx
	mov	ebx,[ebp-56]
	shl	ebx,byte 2
	mov	esi,[ebp-40]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-60]
	shl	esi,byte 2
	mov	edi,[ebp-52]
	mov	edi,[edi]
	add	edi,20
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	sub	esp,4
	mov	eax,[ebp-64]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-64]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-68]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-72]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-72]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-76],eax
	mov	eax,[ebp-76]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1008981770
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	and	eax,eax
	jz	_195
	add	[ebp-48],1
	jmp	_43
_195
	add	[ebp-60],1
_193
	cmp	[ebp-60],2
	jle	_194
_43
	add	[ebp-56],1
_191
	cmp	[ebp-56],2
	jle	_192
_42
	add	[ebp-20],1
_189
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_190
_41
	cmp	[ebp-48],0
	jle	_196
	sub	esp,8
	mov	eax,[ebp-40]
	mov	eax,[eax]
	add	eax,64
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-32]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	shl	eax,byte 2
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	[esp],eax
	mov	ebx,[ebp-40]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	[ebp-36],1
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,256
	jle	_197
	jmp	_40
_197
_196
_188
_187
	sub	esp,4
	lea	eax,[ebp-40]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_186
_40
	cmp	[ebp-36],0
	jnz	_198
	jmp	_39
_198
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	cmp	ebx,256
	jle	_199
	jmp	_39
_199
	jmp	_185
_39
	mov	[ebp-80],0
	mov	[ebp-84],0
	mov	[ebp-88],0
	mov	[ebp-20],0
	jmp	_200
_201
	sub	esp,36
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+28],ebx
	mov	esi,[ebp-20]
	shl	esi,byte 2
	mov	edi,[ebp-32]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+32],esi
	mov	esi,[ebp-20]
	shl	esi,byte 2
	mov	edi,[ebp-32]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+24],esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	edi,[ebp-32]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	esi,[ebp-20]
	shl	esi,byte 2
	mov	edi,[ebp-32]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	edi,[ebp-32]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-20]
	shl	esi,byte 2
	mov	edi,[ebp-32]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	esi,edi
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,20
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	edi,[ebp-32]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	shl	eax,byte 2
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	eax,esi
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fgettrianglenormal
	mov	ebx,[ebp-80]
	push	ebx
	fld	[esp]
	pop	ebx
	call	_ftrianglenormalx
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-80],ebx
	mov	ebx,[ebp-84]
	push	ebx
	fld	[esp]
	pop	ebx
	call	_ftrianglenormaly
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-84],ebx
	mov	ebx,[ebp-88]
	push	ebx
	fld	[esp]
	pop	ebx
	call	_ftrianglenormalz
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-88],ebx
	add	[ebp-20],1
_200
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_201
_44
	mov	ebx,[ebp-80]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp-84]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-88]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	esi,[ebp+32]
	mov	[esp+8],esi
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_flmsetupsurface
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,88
	mov	ebx,[ebx]
	add	[ebp-28],ebx
	jmp	_181
_37
	mov	[ebp-92],0
	mov	[ebp-96],0
	mov	[ebp-100],0
	call	_fmillisecs
	mov	[ebp-104],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	call	_fcls
	sub	esp,8
	lea	eax,[ebp+36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_202
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_203
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[esp+4],_tlmsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_45
_204
	call	_fmillisecs
	mov	[ebp-108],eax
	sub	esp,8
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_flmlightsurface
	cmp	[ebp+32],0
	jle	_205
	sub	esp,8
	mov	eax,[ebp-32]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp+32]
	mov	[esp+4],ebx
	call	_flmblurimage
_205
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,88
	mov	ebx,[ebx]
	add	[ebp-92],ebx
	add	[ebp-96],1
	call	_fmillisecs
	mov	[ebp-112],eax
	mov	ebx,[ebp-112]
	sub	ebx,[ebp-108]
	mov	[ebp-116],ebx
	cmp	[ebp-116],0
	jle	_206
	mov	ebx,[ebp-32]
	mov	ebx,[ebx]
	add	ebx,88
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-116]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1148846080
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-120],ebx
	mov	ebx,[ebp-100]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-120]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-100],ebx
_206
	mov	ebx,[ebp-100]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-96]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-124],ebx
	mov	ebx,[ebp-28]
	sub	ebx,[ebp-92]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-124]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-128],ebx
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	call	_fcls
	sub	esp,8
	lea	eax,[ebp+36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fprint
	sub	esp,24
	mov	eax,[ebp-92]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,1120403456
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,_207
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_208
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	_fprint
	mov	ebx,eax
	sub	esp,40
	mov	eax,[ebp-112]
	sub	eax,[ebp-104]
	mov	ecx,1000
	cdq
	idiv	ecx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,_209
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_210
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,[ebp-128]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_211
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	_fprint
	mov	ebx,eax
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_204
_45
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[esp+4],_tlmsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_46
_212
	sub	esp,8
	lea	eax,[ebp-132]
	mov	[esp],eax
	mov	[esp+4],_tlmsortedsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_47
_213
	mov	ebx,[ebp-132]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,88
	mov	ebx,[ebx]
	mov	esi,[ebp-32]
	mov	esi,[esi]
	add	esi,88
	mov	esi,[esi]
	cmp	ebx,esi
	jg	_214
	jmp	_47
_214
	sub	esp,4
	lea	eax,[ebp-132]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_213
_47
	sub	esp,8
	lea	eax,[ebp-136]
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,_tlmsortedsurface
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-136]
	mov	eax,[eax]
	add	eax,0
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-132]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_215
	sub	esp,8
	mov	eax,[ebp-136]
	mov	[esp],eax
	mov	ebx,[ebp-132]
	mov	[esp+4],ebx
	call	__bbObjInsBefore
_215
	sub	esp,4
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_212
_46
	sub	esp,4
	mov	eax,[ebp+28]
	mov	[esp],eax
	call	_flmpacker_fittexsize
	mov	[ebp-140],eax
	sub	esp,4
	mov	eax,[ebp-140]
	mov	[esp],eax
	call	_flmpacker_pack
	mov	[ebp-144],eax
	sub	esp,8
	lea	eax,[ebp-32]
	mov	[esp],eax
	mov	[esp+4],_tlmsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_48
_216
	sub	esp,4
	mov	eax,[ebp-32]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-32]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_216
_48
	sub	esp,4
	mov	eax,_tlmsortedsurface
	mov	[esp],eax
	call	__bbObjDeleteEach
	sub	esp,4
	mov	eax,_tlmtriangle
	mov	[esp],eax
	call	__bbObjDeleteEach
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	eax,[ebp-144]
	jmp	_33_leave
	mov	eax,0
	jmp	_33_leave
_33_leave
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,[ebp-132]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[ebp-148],eax
	sub	esp,4
	mov	esi,[ebp-136]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-148]
	mov	[ebp-148],eax
	sub	esp,4
	mov	esi,[ebp-52]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-148]
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[ebp-148],eax
	sub	esp,4
	mov	esi,[ebp-32]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-148]
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[ebp-148],eax
	sub	esp,4
	mov	esi,[ebp+36]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-148]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_flightmapterrain
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,192
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	mov	[ebp-128],ebx
	mov	[ebp-132],ebx
	mov	[ebp-136],ebx
	mov	[ebp-140],ebx
	mov	[ebp-144],ebx
	mov	[ebp-148],ebx
	mov	[ebp-152],ebx
	mov	[ebp-156],ebx
	mov	[ebp-160],ebx
	mov	[ebp-164],ebx
	mov	[ebp-168],ebx
	mov	[ebp-172],ebx
	mov	[ebp-176],ebx
	mov	[ebp-180],ebx
	mov	[ebp-184],ebx
	mov	[ebp-188],ebx
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	call	_fcls
	sub	esp,8
	lea	eax,[ebp+36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_217
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_218
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fterrainsize
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	cmp	[ebp+24],0
	jnz	_219
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp+24],ebx
_219
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-12],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],2
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-12],eax
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],2
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-24],eax
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-12],eax
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],2
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fgetmatelement
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-28],eax
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-32],eax
	sub	esp,8
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-36],eax
	sub	esp,4
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[_vg_lmparams]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[_vg_lmparams]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fclscolor
	call	_fcls
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	sub	esp,4
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	[ebp-40],eax
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	[ebp-44],eax
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-52],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-56],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-60],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-64],eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],0
	sub	esp,8
	lea	eax,[ebp-76]
	mov	[esp],eax
	mov	[esp+4],_tlmlight
	call	__bbObjEachFirst
	and	eax,eax
	jz	_50
_220
	add	[ebp-72],1
	sub	esp,4
	lea	eax,[ebp-76]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_220
_50
	mov	ebx,[ebp+24]
	imul	ebx,[ebp+24]
	imul	ebx,[ebp-72]
	mov	[ebp-80],ebx
	mov	[ebp-84],0
	mov	[ebp-88],0
	mov	[ebp-92],0
	call	_fmillisecs
	mov	[ebp-96],eax
	sub	esp,8
	lea	eax,[ebp-76]
	mov	[esp],eax
	mov	[esp+4],_tlmlight
	call	__bbObjEachFirst
	and	eax,eax
	jz	_51
_221
	mov	[ebp-100],0
	jmp	_222
_223
	call	_fmillisecs
	mov	[ebp-104],eax
	mov	[ebp-108],0
	jmp	_224
_225
	mov	ebx,[ebp-108]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-112],ebx
	mov	ebx,[ebp-100]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-116],ebx
	sub	esp,12
	mov	ebx,[ebp-112]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-116]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fterrainheight
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-120],eax
	mov	ebx,[ebp-120]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-60]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	ebx,925353388
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-124],esi
	mov	ebx,[ebp-108]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-128],esi
	mov	ebx,[ebp-100]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-132],esi
	sub	esp,20
	mov	ebx,[ebp-132]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-124]
	mov	[esp+8],esi
	mov	ebx,[ebp-128]
	mov	[esp+4],ebx
	mov	eax,[ebp-44]
	mov	[esp],eax
	call	_fpositionentity
	mov	ebx,[ebp-76]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-136],ebx
	mov	ebx,[ebp-76]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-140],ebx
	mov	ebx,[ebp-76]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[ebp-144],ebx
	sub	esp,20
	mov	ebx,[ebp-76]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-76]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-76]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_frotateentity
	mov	ebx,[ebp-76]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	and	ebx,ebx
	jz	_226
	sub	esp,20
	mov	ebx,[ebp-40]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[esp+8],-1082130432
	mov	[esp+4],0
	mov	[esp],0
	call	_ftformvector
	call	_ftformedx
	mov	ebx,1176255488
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-128]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-136],ebx
	call	_ftformedy
	mov	ebx,1176255488
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-124]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-140],ebx
	call	_ftformedz
	mov	ebx,1176255488
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-132]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-144],ebx
	mov	[ebp-148],953267991
_226
	sub	esp,20
	mov	ebx,[ebp-144]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-140]
	mov	[esp+8],esi
	mov	ebx,[ebp-136]
	mov	[esp+4],ebx
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fpositionentity
	mov	ebx,[ebp-76]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_227
	sub	esp,8
	mov	eax,[ebp-40]
	mov	[esp],eax
	mov	ebx,[ebp-44]
	mov	[esp+4],ebx
	call	_fentitydistance
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-148],eax
_227
	mov	eax,[ebp-148]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-76]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	mov	[ebp-192],eax
	mov	ebx,[ebp-148]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-192]
	and	eax,ebx
	and	eax,eax
	jz	_228
	cmp	[ebp+32],0
	jnz	_229
	sub	esp,32
	mov	ebx,[ebp-40]
	mov	[esp+24],ebx
	mov	esi,[ebp-48]
	mov	[esp+28],esi
	mov	esi,[ebp-44]
	mov	[esp+20],esi
	mov	[esp+16],1065353216
	mov	esi,[ebp-148]
	mov	[esp+12],esi
	mov	ebx,[ebp-76]
	mov	[esp+8],ebx
	mov	esi,[ebp-100]
	mov	[esp+4],esi
	mov	eax,[ebp-108]
	mov	[esp],eax
	call	_flmlightprocess
	jmp	_230
_229
	sub	esp,28
	mov	ebx,[ebp-124]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1045220557
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+20],0
	mov	[esp+24],0
	mov	[esp+16],-1082130432
	mov	[esp+12],0
	mov	edi,[ebp-132]
	mov	[esp+8],edi
	mov	eax,[ebp-128]
	mov	[esp],eax
	call	_flinepick
	and	eax,eax
	jz	_231
	mov	ebx,[ebp-136]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-128]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-148]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-152],ebx
	mov	ebx,[ebp-140]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-124]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-148]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-156],ebx
	mov	ebx,[ebp-144]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-132]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-148]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-160],ebx
	mov	ebx,[ebp-152]
	push	ebx
	fld	[esp]
	pop	ebx
	call	_fpickednx
	fmulp	st(1)
	mov	esi,[ebp-156]
	push	esi
	fld	[esp]
	pop	esi
	call	_fpickedny
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-160]
	push	esi
	fld	[esp]
	pop	esi
	call	_fpickednz
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-164],ebx
	mov	eax,[ebp-164]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_232
	sub	esp,32
	mov	ebx,[ebp-40]
	mov	[esp+24],ebx
	mov	esi,[ebp-48]
	mov	[esp+28],esi
	mov	esi,[ebp-44]
	mov	[esp+20],esi
	mov	ebx,[ebp-164]
	mov	[esp+16],ebx
	mov	esi,[ebp-148]
	mov	[esp+12],esi
	mov	ebx,[ebp-76]
	mov	[esp+8],ebx
	mov	esi,[ebp-100]
	mov	[esp+4],esi
	mov	eax,[ebp-108]
	mov	[esp],eax
	call	_flmlightprocess
_232
_231
_230
_228
	add	[ebp-108],1
_224
	mov	ebx,[ebp+24]
	sub	ebx,1
	cmp	[ebp-108],ebx
	jle	_225
_53
	mov	ebx,[ebp+24]
	add	[ebp-88],ebx
	add	[ebp-84],1
	call	_fmillisecs
	mov	[ebp-168],eax
	mov	ebx,[ebp-168]
	sub	ebx,[ebp-104]
	mov	[ebp-172],ebx
	cmp	[ebp-172],0
	jle	_233
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-172]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1148846080
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-176],ebx
	mov	ebx,[ebp-92]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-176]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-92],ebx
_233
	mov	ebx,[ebp-92]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-84]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-180],ebx
	mov	ebx,[ebp-80]
	sub	ebx,[ebp-88]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-180]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-184],ebx
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	call	_fcls
	sub	esp,8
	lea	eax,[ebp+36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fprint
	sub	esp,24
	mov	eax,[ebp-88]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-80]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,1120403456
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	mov	[ebp-192],eax
	sub	esp,4
	mov	ebx,_234
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-192]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_235
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	_fprint
	mov	ebx,eax
	sub	esp,40
	mov	eax,[ebp-168]
	sub	eax,[ebp-96]
	mov	ecx,1000
	cdq
	idiv	ecx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	mov	[ebp-192],eax
	sub	esp,4
	mov	ebx,_236
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-192]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_237
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,[ebp-184]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_238
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	_fprint
	mov	ebx,eax
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fsetbuffer
	add	[ebp-100],1
_222
	mov	ebx,[ebp+24]
	sub	ebx,1
	cmp	[ebp-100],ebx
	jle	_223
_52
	sub	esp,4
	lea	eax,[ebp-76]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_221
_51
	sub	esp,4
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_funlockbuffer
	cmp	[ebp+28],0
	jle	_239
	sub	esp,8
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	call	_flmblurimage
_239
	sub	esp,12
	mov	[esp+4],1065353216
	mov	[esp+8],-1082130432
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fscaleimage
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fhandleimage
	sub	esp,16
	mov	[esp+8],512
	mov	[esp+12],1
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fcreatetexture
	mov	[ebp-188],eax
	sub	esp,40
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+24],eax
	mov	[ebp-192],eax
	sub	esp,8
	mov	ebx,[ebp-188]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_ftexturebuffer
	mov	ebx,eax
	mov	eax,[ebp-192]
	mov	[esp+28],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	mov	ebx,[ebp+24]
	mov	[esp+12],ebx
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	sub	esp,8
	mov	eax,[ebp-188]
	mov	[esp],eax
	mov	[esp+4],1
	call	_ftexturecoords
	sub	esp,12
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	esi,[ebp-4]
	mov	[esp+8],esi
	mov	eax,[ebp-188]
	mov	[esp],eax
	call	_fscaletexture
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_ffreeimage
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp-44]
	mov	[esp],eax
	call	_ffreeentity
	mov	eax,[ebp-188]
	jmp	_49_leave
	mov	eax,0
	jmp	_49_leave
_49_leave
	mov	[ebp-192],eax
	sub	esp,4
	mov	ebx,[ebp+36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-192]
	mov	[ebp-192],eax
	sub	esp,4
	mov	esi,[ebp-76]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-192]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_flmpacker_pack
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,80
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	sub	esp,16
	mov	[esp+8],512
	mov	[esp+12],1
	mov	esi,[ebp+20]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcreatetexture
	mov	[ebp-4],eax
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[_vg_lmparams]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[_vg_lmparams]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fclscolor
	call	_fcls
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_tlmimgnode
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjStore
	mov	[ebp-12],0
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],_tlmsortedsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_55
_240
	sub	esp,16
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_flmpacker_insert
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_241
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,4
	mov	eax,[ebp-24]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-28],eax
	sub	esp,4
	mov	eax,[ebp-24]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-32],eax
	sub	esp,40
	mov	eax,[ebp-24]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+24],eax
	mov	[ebp-80],eax
	sub	esp,8
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_ftexturebuffer
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+28],ebx
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	esi,[ebp-20]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-32]
	mov	[esp+12],ebx
	mov	esi,[ebp-28]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	mov	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],0
	jmp	_242
_243
	mov	[ebp-56],0
	jmp	_244
_245
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	esi,[ebp-24]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	edi,[ebp-24]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	edi,[ebp-56]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	esi,[ebp-24]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	edi,[ebp-24]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	edi,[ebp-56]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	sub	esp,24
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	esi,[ebp-24]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	[esp+16],0
	mov	[esp+20],1
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	edi,[ebp-24]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	edi,[ebp-56]
	shl	edi,byte 2
	add	edi,ebx
	mov	edi,[edi]
	mov	[esp+8],edi
	mov	ebx,[ebp-52]
	shl	ebx,byte 2
	mov	esi,[ebp-24]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	mov	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-52]
	shl	eax,byte 2
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,60
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-56],1
_244
	cmp	[ebp-56],2
	jle	_245
_57
	add	[ebp-52],1
_242
	mov	ebx,[ebp-24]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-52],ebx
	jle	_243
_56
	add	[ebp-12],1
	jmp	_246
_241
	sub	esp,8
	mov	eax,_247
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fdebuglog
	jmp	_55
_246
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_240
_55
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_ftexturecoords
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	lea	eax,[ebp-76]
	mov	[esp],eax
	mov	[esp+4],_tlmimgnode
	call	__bbObjEachFirst
	and	eax,eax
	jz	_59
_248
	sub	esp,4
	mov	eax,[ebp-76]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-76]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_248
_59
	mov	eax,[ebp-4]
	jmp	_54_leave
	mov	eax,0
	jmp	_54_leave
_54_leave
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	esi,[ebp-76]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	esi,[ebp-20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_flmpacker_fittexsize
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-4],2
	jmp	_250
_249
	sub	esp,8
	lea	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_tlmimgnode
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	esi,[ebp-8]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-8]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjStore
	mov	[ebp-12],1
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],_tlmsortedsurface
	call	__bbObjEachFirst
	and	eax,eax
	jz	_62
_251
	sub	esp,16
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_flmpacker_insert
	mov	[esp+4],eax
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jnz	_252
	mov	[ebp-12],0
	jmp	_62
_252
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_251
_62
	sub	esp,8
	lea	eax,[ebp-24]
	mov	[esp],eax
	mov	[esp+4],_tlmimgnode
	call	__bbObjEachFirst
	and	eax,eax
	jz	_63
_253
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-24]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_253
_63
	mov	ebx,[ebp-12]
	and	ebx,ebx
	jz	_254
	mov	eax,[ebp-4]
	jmp	_60_leave
_254
	mov	ebx,[ebp-4]
	shl	ebx,byte 1
	mov	[ebp-4],ebx
_250
	mov	ebx,[ebp+20]
	cmp	[ebp-4],ebx
	jle	_249
_61
	mov	eax,[ebp+20]
	jmp	_60_leave
	mov	eax,0
	jmp	_60_leave
_60_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-16]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_flmpacker_insert
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-32],eax
	mov	[ebp-36],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	__bbObjCompare
	mov	ebx,eax
	mov	eax,[ebp-36]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-32]
	and	eax,ebx
	and	eax,eax
	jz	_255
	sub	esp,16
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_flmpacker_insert
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_256
	mov	eax,[ebp-4]
	jmp	_64_leave
_256
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_flmpacker_insert
	jmp	_64_leave
	jmp	_257
_255
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_258
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	ebx,[ebx]
	add	ebx,84
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_flmimagealike
	and	eax,eax
	jz	_259
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	eax,[ebp+20]
	jmp	_64_leave
	jmp	_260
_259
	mov	eax,0
	jmp	_64_leave
_260
_258
	sub	esp,4
	mov	eax,[ebp+24]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+24]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-12],eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	sub	ebx,esi
	mov	[ebp-16],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	sub	ebx,esi
	mov	[ebp-20],ebx
	mov	eax,[ebp-16]
	cmp	[ebp-8],eax
	setg	al
	movzx	eax,al
	mov	[ebp-32],eax
	mov	ebx,[ebp-20]
	cmp	[ebp-12],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-32]
	or	eax,ebx
	and	eax,eax
	jz	_261
	mov	eax,0
	jmp	_64_leave
_261
	mov	eax,[ebp-16]
	cmp	[ebp-8],eax
	setz	al
	movzx	eax,al
	mov	[ebp-32],eax
	mov	ebx,[ebp-20]
	cmp	[ebp-12],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-32]
	and	eax,ebx
	and	eax,eax
	jz	_262
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	eax,[ebp+20]
	jmp	_64_leave
_262
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,0
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_tlmimgnode
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,4
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_tlmimgnode
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-16]
	sub	ebx,[ebp-8]
	mov	[ebp-24],ebx
	mov	ebx,[ebp-20]
	sub	ebx,[ebp-12]
	mov	[ebp-28],ebx
	mov	ebx,[ebp-28]
	cmp	[ebp-24],ebx
	jle	_263
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,[ebp-8]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	add	ebx,[ebp-8]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_264
_263
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,[ebp-12]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,[ebp-12]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
_264
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_flmpacker_insert
	jmp	_64_leave
_257
	mov	eax,0
	jmp	_64_leave
_64_leave
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_flmimagealike
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-8],eax
	mov	ebx,[ebp-8]
	cmp	[ebp-4],ebx
	jz	_265
	mov	eax,0
	jmp	_65_leave
_265
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-16],eax
	mov	ebx,[ebp-16]
	cmp	[ebp-12],ebx
	jz	_266
	mov	eax,0
	jmp	_65_leave
_266
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,12
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-20],0
	jmp	_267
_268
	mov	[ebp-24],0
	jmp	_269
_270
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	[ebp-28],eax
	sub	esp,20
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	[ebp-32],eax
	mov	ebx,[ebp-32]
	cmp	[ebp-28],ebx
	jz	_271
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	eax,0
	jmp	_65_leave
_271
	add	[ebp-24],1
_269
	mov	ebx,[ebp-4]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_270
_67
	add	[ebp-20],1
_267
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_268
_66
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,12
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	eax,1
	jmp	_65_leave
	mov	eax,0
	jmp	_65_leave
_65_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_flmimagemeasurecontrast
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,72
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-4],255
	mov	[ebp-8],255
	mov	[ebp-12],255
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-20],eax
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-24],0
	jmp	_272
_273
	mov	[ebp-28],0
	jmp	_274
_275
	sub	esp,20
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	[ebp-32],eax
	mov	ebx,[ebp-32]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-36],ebx
	mov	ebx,[ebp-32]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-40],ebx
	mov	ebx,[ebp-32]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-44],ebx
	mov	ebx,[ebp-48]
	cmp	[ebp-36],ebx
	jle	_276
	mov	ebx,[ebp-36]
	mov	[ebp-48],ebx
_276
	mov	ebx,[ebp-52]
	cmp	[ebp-40],ebx
	jle	_277
	mov	ebx,[ebp-40]
	mov	[ebp-52],ebx
_277
	mov	ebx,[ebp-56]
	cmp	[ebp-44],ebx
	jle	_278
	mov	ebx,[ebp-44]
	mov	[ebp-56],ebx
_278
	mov	ebx,[ebp-4]
	cmp	[ebp-36],ebx
	jge	_279
	mov	ebx,[ebp-36]
	mov	[ebp-4],ebx
_279
	mov	ebx,[ebp-8]
	cmp	[ebp-40],ebx
	jge	_280
	mov	ebx,[ebp-40]
	mov	[ebp-8],ebx
_280
	mov	ebx,[ebp-12]
	cmp	[ebp-44],ebx
	jge	_281
	mov	ebx,[ebp-44]
	mov	[ebp-12],ebx
_281
	add	[ebp-28],1
_274
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-28],ebx
	jle	_275
_70
	add	[ebp-24],1
_272
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_273
_69
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	ebx,[ebp-48]
	sub	ebx,[ebp-4]
	mov	[ebp-60],ebx
	mov	ebx,[ebp-52]
	sub	ebx,[ebp-8]
	mov	[ebp-64],ebx
	mov	ebx,[ebp-56]
	sub	ebx,[ebp-12]
	mov	[ebp-68],ebx
	mov	eax,[ebp-64]
	cmp	[ebp-60],eax
	setg	al
	movzx	eax,al
	mov	[ebp-72],eax
	mov	ebx,[ebp-68]
	cmp	[ebp-60],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-72]
	and	eax,ebx
	and	eax,eax
	jz	_282
	mov	eax,[ebp-60]
	jmp	_68_leave
_282
	mov	eax,[ebp-60]
	cmp	[ebp-64],eax
	setg	al
	movzx	eax,al
	mov	[ebp-72],eax
	mov	ebx,[ebp-68]
	cmp	[ebp-64],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-72]
	and	eax,ebx
	and	eax,eax
	jz	_283
	mov	eax,[ebp-64]
	jmp	_68_leave
_283
	mov	eax,[ebp-68]
	jmp	_68_leave
	mov	eax,0
	jmp	_68_leave
_68_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_flmsetupsurface
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,92
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbFAbs
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,12
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbFAbs
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,16
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbFAbs
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-12],eax
	mov	eax,[ebp-12]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_284
	mov	ebx,0
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_285
_284
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-92],eax
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-92]
	and	eax,ebx
	and	eax,eax
	jz	_286
	mov	ebx,1
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_287
_286
	mov	ebx,2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
_287
_285
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[ebp-16],ebx
	cmp	[ebp-16],0
	jz	_289
	cmp	[ebp-16],1
	jz	_290
	cmp	[ebp-16],2
	jz	_291
	jmp	_288
_289
	mov	[ebp-20],0
	jmp	_292
_293
	mov	[ebp-24],0
	jmp	_294
_295
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	add	[ebp-24],1
_294
	cmp	[ebp-24],2
	jle	_295
_74
	add	[ebp-20],1
_292
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_293
_73
	jmp	_288
_290
	mov	[ebp-20],0
	jmp	_296
_297
	mov	[ebp-24],0
	jmp	_298
_299
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	add	[ebp-24],1
_298
	cmp	[ebp-24],2
	jle	_299
_76
	add	[ebp-20],1
_296
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_297
_75
	jmp	_288
_291
	mov	[ebp-20],0
	jmp	_300
_301
	mov	[ebp-24],0
	jmp	_302
_303
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	add	[ebp-24],1
_302
	cmp	[ebp-24],2
	jle	_303
_78
	add	[ebp-20],1
_300
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_301
_77
	jmp	_288
_288
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,36
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	mov	[ebp-20],0
	jmp	_304
_305
	mov	[ebp-24],0
	jmp	_306
_307
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,ebx
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_308
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebx],esi
_308
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,ebx
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_309
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],esi
_309
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,ebx
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_310
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],esi
_310
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	eax,[ebp-24]
	shl	eax,byte 2
	add	eax,ebx
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_311
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	[ebx],esi
_311
	add	[ebp-24],1
_306
	cmp	[ebp-24],2
	jle	_307
_80
	add	[ebp-20],1
_304
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_305
_79
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,36
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
	mov	[ebp-20],0
	jmp	_312
_313
	mov	[ebp-24],0
	jmp	_314
_315
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	edi,[ebp-24]
	shl	edi,byte 2
	add	edi,ebx
	mov	[edi],esi
	add	[ebp-24],1
_314
	cmp	[ebp-24],2
	jle	_315
_82
	add	[ebp-20],1
_312
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_313
_81
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	mov	edi,[edi]
	add	edi,16
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	mov	edi,[edi]
	add	edi,20
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[ebp-68],ebx
	cmp	[ebp-68],0
	jz	_317
	cmp	[ebp-68],1
	jz	_318
	cmp	[ebp-68],2
	jz	_319
	jmp	_316
_317
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,36
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-32],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-36],ebx
	mov	ebx,[ebp-72]
	mov	[ebp-40],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,36
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[ebp-44],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-48],ebx
	mov	ebx,[ebp-72]
	mov	[ebp-52],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,40
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-56],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	[ebp-60],ebx
	mov	ebx,[ebp-72]
	mov	[ebp-64],ebx
	jmp	_316
_318
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,36
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-32],ebx
	mov	ebx,[ebp-76]
	mov	[ebp-36],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-40],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,36
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[ebp-44],ebx
	mov	ebx,[ebp-76]
	mov	[ebp-48],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-52],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,40
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-56],ebx
	mov	ebx,[ebp-76]
	mov	[ebp-60],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	[ebp-64],ebx
	jmp	_316
_319
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,36
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-80],ebx
	mov	ebx,[ebp-80]
	mov	[ebp-32],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-36],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-40],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,36
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-80],ebx
	mov	ebx,[ebp-80]
	mov	[ebp-44],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[ebp-48],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[ebp-52],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,40
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	fchs
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-80],ebx
	mov	ebx,[ebp-80]
	mov	[ebp-56],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[ebp-60],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	[ebp-64],ebx
	jmp	_316
_316
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,48
	mov	[esi],ebx
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,52
	mov	[esi],ebx
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,56
	mov	[esi],ebx
	mov	ebx,[ebp-56]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,60
	mov	[esi],ebx
	mov	ebx,[ebp-60]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,64
	mov	[esi],ebx
	mov	ebx,[ebp-64]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,68
	mov	[esi],ebx
	mov	ebx,[ebp-32]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,72
	mov	[esi],ebx
	mov	ebx,[ebp-36]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,76
	mov	[esi],ebx
	mov	ebx,[ebp-40]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,80
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-84],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-88],ebx
	cmp	[ebp-84],2
	jge	_320
	mov	[ebp-84],2
_320
	cmp	[ebp-88],2
	jge	_321
	mov	[ebp-88],2
_321
	sub	esp,12
	mov	ebx,[ebp-88]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-84]
	mov	[esp],eax
	call	_fcreateimage
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,84
	mov	[ebx],eax
	mov	ebx,[ebp-84]
	imul	ebx,[ebp-88]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,88
	mov	[esi],ebx
	mov	eax,[ebp+20]
	jmp	_71_leave
	mov	eax,0
	jmp	_71_leave
_71_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_flmlightsurface
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,260
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	mov	[ebp-128],ebx
	mov	[ebp-132],ebx
	mov	[ebp-136],ebx
	mov	[ebp-140],ebx
	mov	[ebp-144],ebx
	mov	[ebp-148],ebx
	mov	[ebp-152],ebx
	mov	[ebp-156],ebx
	mov	[ebp-160],ebx
	mov	[ebp-164],ebx
	mov	[ebp-168],ebx
	mov	[ebp-172],ebx
	mov	[ebp-176],ebx
	mov	[ebp-180],ebx
	mov	[ebp-184],ebx
	mov	[ebp-188],ebx
	mov	[ebp-192],ebx
	mov	[ebp-196],ebx
	mov	[ebp-200],ebx
	mov	[ebp-204],ebx
	mov	[ebp-208],ebx
	mov	[ebp-212],ebx
	mov	[ebp-216],ebx
	mov	[ebp-220],ebx
	mov	[ebp-224],ebx
	mov	[ebp-228],ebx
	mov	[ebp-232],ebx
	mov	[ebp-236],ebx
	mov	[ebp-240],ebx
	mov	[ebp-244],ebx
	mov	[ebp-248],ebx
	mov	[ebp-252],ebx
	mov	[ebp-256],ebx
	mov	[ebp-4],0
	jmp	_322
_323
	mov	[ebp-8],0
	jmp	_324
_325
	sub	esp,20
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	[esp+12],1203982208
	mov	[esp+16],1203982208
	mov	[esp+8],1203982208
	mov	eax,[ebp-4]
	shl	eax,byte 2
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,60
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertexcoords
	add	[ebp-8],1
_324
	cmp	[ebp-8],2
	jle	_325
_86
	add	[ebp-4],1
_322
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_323
_85
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-16],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-20],eax
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[_vg_lmparams]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[_vg_lmparams]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[_vg_lmparams]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fclscolor
	call	_fcls
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fclscolor
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	[ebp-24],eax
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	[ebp-28],eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	sub	esp,8
	lea	eax,[ebp-40]
	mov	[esp],eax
	mov	[esp+4],_tlmlight
	call	__bbObjEachFirst
	and	eax,eax
	jz	_87
_326
	mov	[ebp-44],0
	jmp	_327
_328
	mov	[ebp-48],0
	jmp	_329
_330
	mov	ebx,[ebp-48]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-52],ebx
	mov	ebx,[ebp-44]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-56],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-60],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,52
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-64],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-68],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,64
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,68
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-80],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-60]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp-72]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-84],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,76
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp-76]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-88],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,80
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp-80]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-92],ebx
	sub	esp,20
	mov	ebx,[ebp-92]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-88]
	mov	[esp+8],esi
	mov	ebx,[ebp-84]
	mov	[esp+4],ebx
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_frotateentity
	sub	esp,24
	mov	[esp+16],1
	mov	[esp+20],1065353216
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,56
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,52
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,48
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_faligntovector
	sub	esp,24
	mov	[esp+16],3
	mov	[esp+20],1065353216
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,68
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,64
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,60
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_faligntovector
	mov	ebx,[ebp-40]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-96],ebx
	mov	ebx,[ebp-40]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-100],ebx
	mov	ebx,[ebp-40]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[ebp-104],ebx
	sub	esp,20
	mov	ebx,[ebp-40]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-40]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-40]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_frotateentity
	mov	ebx,[ebp-40]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	and	ebx,ebx
	jz	_331
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	[esp+8],-1082130432
	mov	[esp+4],0
	mov	[esp],0
	call	_ftformvector
	call	_ftformedx
	mov	ebx,1176255488
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-84]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-96],ebx
	call	_ftformedy
	mov	ebx,1176255488
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-88]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-100],ebx
	call	_ftformedz
	mov	ebx,1176255488
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-92]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],953267991
_331
	sub	esp,20
	mov	ebx,[ebp-104]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-100]
	mov	[esp+8],esi
	mov	ebx,[ebp-96]
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fpositionentity
	mov	ebx,[ebp-40]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_332
	sub	esp,8
	mov	eax,[ebp-24]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fentitydistance
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-108],eax
_332
	mov	eax,[ebp-108]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-40]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	mov	[ebp-260],eax
	mov	ebx,[ebp-108]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-260]
	and	eax,ebx
	and	eax,eax
	jz	_333
	mov	ebx,[ebp-84]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-96]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-112],ebx
	mov	ebx,[ebp-88]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-100]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-116],ebx
	mov	ebx,[ebp-92]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-104]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],0
	mov	[ebp-4],0
	jmp	_334
_335
	sub	esp,8
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	lea	eax,[ebp-128]
	mov	[esp],eax
	call	__bbObjStore
	mov	ebx,[ebp-128]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-132],ebx
	mov	ebx,[ebp-128]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-136],ebx
	mov	ebx,[ebp-128]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[ebp-140],ebx
	mov	ebx,[ebp-128]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-144],ebx
	mov	ebx,[ebp-128]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-148],ebx
	mov	ebx,[ebp-128]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[ebp-152],ebx
	mov	ebx,[ebp-128]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[ebp-156],ebx
	mov	ebx,[ebp-128]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[ebp-160],ebx
	mov	ebx,[ebp-128]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[ebp-164],ebx
	sub	esp,68
	mov	[esp+60],1
	mov	[esp+64],0
	mov	esi,[ebp-164]
	mov	[esp+56],esi
	mov	ebx,[ebp-160]
	mov	[esp+52],ebx
	mov	esi,[ebp-156]
	mov	[esp+48],esi
	mov	ebx,[ebp-152]
	mov	[esp+44],ebx
	mov	esi,[ebp-148]
	mov	[esp+40],esi
	mov	ebx,[ebp-144]
	mov	[esp+36],ebx
	mov	esi,[ebp-140]
	mov	[esp+32],esi
	mov	ebx,[ebp-136]
	mov	[esp+28],ebx
	mov	esi,[ebp-132]
	mov	[esp+24],esi
	mov	ebx,[ebp-120]
	mov	[esp+20],ebx
	mov	esi,[ebp-116]
	mov	[esp+16],esi
	mov	ebx,[ebp-112]
	mov	[esp+12],ebx
	mov	esi,[ebp-104]
	mov	[esp+8],esi
	mov	ebx,[ebp-100]
	mov	[esp+4],ebx
	mov	eax,[ebp-96]
	mov	[esp],eax
	call	_fray_intersect_triangle
	and	eax,eax
	jz	_336
	mov	ebx,[ebp-84]
	mov	[ebp-168],ebx
	mov	ebx,[ebp-88]
	mov	[ebp-172],ebx
	mov	ebx,[ebp-92]
	mov	[ebp-176],ebx
	sub	esp,36
	mov	ebx,[ebp-160]
	mov	[esp+28],ebx
	mov	esi,[ebp-164]
	mov	[esp+32],esi
	mov	esi,[ebp-156]
	mov	[esp+24],esi
	mov	ebx,[ebp-152]
	mov	[esp+20],ebx
	mov	esi,[ebp-148]
	mov	[esp+16],esi
	mov	ebx,[ebp-144]
	mov	[esp+12],ebx
	mov	esi,[ebp-140]
	mov	[esp+8],esi
	mov	ebx,[ebp-136]
	mov	[esp+4],ebx
	mov	eax,[ebp-132]
	mov	[esp],eax
	call	_fgettrianglearea
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-180],eax
	sub	esp,36
	mov	ebx,[ebp-172]
	mov	[esp+28],ebx
	mov	esi,[ebp-176]
	mov	[esp+32],esi
	mov	esi,[ebp-168]
	mov	[esp+24],esi
	mov	ebx,[ebp-164]
	mov	[esp+20],ebx
	mov	esi,[ebp-160]
	mov	[esp+16],esi
	mov	ebx,[ebp-156]
	mov	[esp+12],ebx
	mov	esi,[ebp-152]
	mov	[esp+8],esi
	mov	ebx,[ebp-148]
	mov	[esp+4],ebx
	mov	eax,[ebp-144]
	mov	[esp],eax
	call	_fgettrianglearea
	mov	ebx,[ebp-180]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-184],eax
	sub	esp,36
	mov	ebx,[ebp-172]
	mov	[esp+28],ebx
	mov	esi,[ebp-176]
	mov	[esp+32],esi
	mov	esi,[ebp-168]
	mov	[esp+24],esi
	mov	ebx,[ebp-140]
	mov	[esp+20],ebx
	mov	esi,[ebp-136]
	mov	[esp+16],esi
	mov	ebx,[ebp-132]
	mov	[esp+12],ebx
	mov	esi,[ebp-164]
	mov	[esp+8],esi
	mov	ebx,[ebp-160]
	mov	[esp+4],ebx
	mov	eax,[ebp-156]
	mov	[esp],eax
	call	_fgettrianglearea
	mov	ebx,[ebp-180]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-188],eax
	sub	esp,36
	mov	ebx,[ebp-172]
	mov	[esp+28],ebx
	mov	esi,[ebp-176]
	mov	[esp+32],esi
	mov	esi,[ebp-168]
	mov	[esp+24],esi
	mov	ebx,[ebp-152]
	mov	[esp+20],ebx
	mov	esi,[ebp-148]
	mov	[esp+16],esi
	mov	ebx,[ebp-144]
	mov	[esp+12],ebx
	mov	esi,[ebp-140]
	mov	[esp+8],esi
	mov	ebx,[ebp-136]
	mov	[esp+4],ebx
	mov	eax,[ebp-132]
	mov	[esp],eax
	call	_fgettrianglearea
	mov	ebx,[ebp-180]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-192],eax
	mov	ebx,[ebp-184]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-128]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-188]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-128]
	mov	edi,[edi]
	add	edi,24
	mov	edi,[edi]
	add	edi,4
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-192]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-128]
	mov	edi,[edi]
	add	edi,24
	mov	edi,[edi]
	add	edi,8
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-196],ebx
	mov	ebx,[ebp-184]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-128]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-188]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-128]
	mov	edi,[edi]
	add	edi,28
	mov	edi,[edi]
	add	edi,4
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-192]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-128]
	mov	edi,[edi]
	add	edi,28
	mov	edi,[edi]
	add	edi,8
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-200],ebx
	mov	ebx,[ebp-184]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-128]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-188]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-128]
	mov	edi,[edi]
	add	edi,32
	mov	edi,[edi]
	add	edi,4
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-192]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-128]
	mov	edi,[edi]
	add	edi,32
	mov	edi,[edi]
	add	edi,8
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-204],ebx
	sub	esp,4
	mov	eax,[ebp-196]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-196]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-200]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-200]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-204]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-204]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-208],eax
	mov	ebx,[ebp-196]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-208]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-196],ebx
	mov	ebx,[ebp-200]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-208]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-200],ebx
	mov	ebx,[ebp-204]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-208]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-204],ebx
	mov	[ebp-124],1
	jmp	_90
_336
	add	[ebp-4],1
_334
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_335
_90
	cmp	[ebp-124],0
	jnz	_337
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[ebp-196],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[ebp-200],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[ebp-204],ebx
_337
	mov	ebx,[ebp-96]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-84]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-108]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-212],ebx
	mov	ebx,[ebp-100]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-88]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-108]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-216],ebx
	mov	ebx,[ebp-104]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-92]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-108]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-220],ebx
	mov	ebx,[ebp-212]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-196]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-216]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-200]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-220]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-204]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-224],ebx
	mov	eax,[ebp-224]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_338
	sub	esp,32
	mov	ebx,[ebp-24]
	mov	[esp+24],ebx
	mov	esi,[ebp+24]
	mov	[esp+28],esi
	mov	esi,[ebp-28]
	mov	[esp+20],esi
	mov	ebx,[ebp-224]
	mov	[esp+16],ebx
	mov	esi,[ebp-108]
	mov	[esp+12],esi
	mov	ebx,[ebp-40]
	mov	[esp+8],ebx
	mov	esi,[ebp-44]
	mov	[esp+4],esi
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_flmlightprocess
_338
_333
	add	[ebp-48],1
_329
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-48],ebx
	jle	_330
_89
	add	[ebp-44],1
_327
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-44],ebx
	jle	_328
_88
	sub	esp,4
	lea	eax,[ebp-40]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_326
_87
	mov	[ebp-4],0
	jmp	_339
_340
	mov	[ebp-8],0
	jmp	_341
_342
	sub	esp,20
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	edi,[ebp-8]
	shl	edi,byte 2
	add	edi,ebx
	mov	edi,[edi]
	mov	[esp+16],edi
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	mov	edi,[ebp+20]
	mov	edi,[edi]
	add	edi,0
	mov	edi,[edi]
	add	ebx,edi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	edi,[ebp-8]
	shl	edi,byte 2
	add	edi,ebx
	mov	edi,[edi]
	mov	[esp+8],edi
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	ebx,esi
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,ebx
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	shl	eax,byte 2
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	add	eax,ebx
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,60
	mov	eax,[eax]
	mov	[esp],eax
	call	_fvertexcoords
	add	[ebp-8],1
_341
	cmp	[ebp-8],2
	jle	_342
_92
	add	[ebp-4],1
_339
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_340
_91
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_ffreeentity
	cmp	[ebp-12],2
	setg	al
	movzx	eax,al
	mov	[ebp-260],eax
	cmp	[ebp-16],2
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-260]
	and	eax,ebx
	and	eax,eax
	jz	_343
	sub	esp,4
	mov	[esp],1
	call	_ftformfilter
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_flmimagemeasurecontrast
	mov	[ebp-228],eax
	mov	ebx,[ebp-12]
	mov	[ebp-232],ebx
	mov	ebx,[ebp-16]
	mov	[ebp-236],ebx
	mov	[ebp-240],1
	cmp	[ebp-228],4
	setle	al
	movzx	eax,al
	cmp	[ebp-240],eax
	jz	_345
	cmp	[ebp-228],4
	setg	al
	movzx	eax,al
	mov	[ebp-260],eax
	cmp	[ebp-228],20
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-260]
	and	eax,ebx
	cmp	[ebp-240],eax
	jz	_346
	cmp	[ebp-228],20
	setg	al
	movzx	eax,al
	mov	[ebp-260],eax
	cmp	[ebp-228],80
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-260]
	and	eax,ebx
	cmp	[ebp-240],eax
	jz	_347
	jmp	_344
_345
	mov	[ebp-232],2
	mov	[ebp-236],2
	jmp	_344
_346
	mov	ebx,[ebp-232]
	sar	ebx,byte 2
	mov	[ebp-232],ebx
	mov	ebx,[ebp-236]
	sar	ebx,byte 2
	mov	[ebp-236],ebx
	jmp	_344
_347
	mov	ebx,[ebp-232]
	sar	ebx,byte 1
	mov	[ebp-232],ebx
	mov	ebx,[ebp-236]
	sar	ebx,byte 1
	mov	[ebp-236],ebx
	jmp	_344
_344
	cmp	[ebp-232],2
	jge	_348
	mov	[ebp-232],2
_348
	cmp	[ebp-236],2
	jge	_349
	mov	[ebp-236],2
_349
	mov	eax,[ebp-12]
	cmp	[ebp-232],eax
	setnz	al
	movzx	eax,al
	mov	[ebp-260],eax
	mov	ebx,[ebp-16]
	cmp	[ebp-236],ebx
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-260]
	or	eax,ebx
	and	eax,eax
	jz	_350
	sub	esp,12
	mov	ebx,[ebp-232]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-236]
	push	esi
	fild	[esp]
	pop	esi
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fresizeimage
_350
_343
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-244],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-248],eax
	sub	esp,12
	mov	ebx,[ebp-248]
	add	ebx,2
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-244]
	add	eax,2
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-252],eax
	sub	esp,12
	mov	eax,[ebp-252]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],255
	call	_fclscolor
	call	_fcls
	sub	esp,40
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+24],eax
	mov	[ebp-260],eax
	sub	esp,8
	mov	ebx,[ebp-252]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_fimagebuffer
	mov	ebx,eax
	mov	eax,[ebp-260]
	mov	[esp+28],ebx
	mov	[esp+20],1
	mov	[esp+16],1
	mov	ebx,[ebp-248]
	mov	[esp+12],ebx
	mov	esi,[ebp-244]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffreeimage
	mov	ebx,[ebp-252]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,84
	mov	[esi],ebx
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-244],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,84
	mov	eax,[eax]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-248],eax
	mov	[ebp-48],0
	jmp	_351
_352
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],0
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-256],eax
	sub	esp,16
	mov	ebx,[ebp-256]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,12
	mov	ebx,[ebp-248]
	sub	ebx,2
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-256],eax
	sub	esp,16
	mov	ebx,[ebp-256]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-248]
	sub	esi,1
	mov	[esp+4],esi
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-48],1
_351
	mov	ebx,[ebp-244]
	sub	ebx,1
	cmp	[ebp-48],ebx
	jle	_352
_94
	mov	[ebp-44],0
	jmp	_353
_354
	sub	esp,12
	mov	ebx,[ebp-44]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	[esp],1
	call	_freadpixelfast
	mov	[ebp-256],eax
	sub	esp,16
	mov	ebx,[ebp-256]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-44]
	mov	[esp+4],esi
	mov	[esp],0
	call	_fwritepixelfast
	sub	esp,12
	mov	ebx,[ebp-44]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-244]
	sub	eax,2
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-256],eax
	sub	esp,16
	mov	ebx,[ebp-256]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-44]
	mov	[esp+4],esi
	mov	eax,[ebp-244]
	sub	eax,1
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-44],1
_353
	mov	ebx,[ebp-248]
	sub	ebx,1
	cmp	[ebp-44],ebx
	jle	_354
_95
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	mov	ebx,[ebp-244]
	imul	ebx,[ebp-248]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,88
	mov	[esi],ebx
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	eax,0
	jmp	_84_leave
_84_leave
	mov	[ebp-260],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-260]
	mov	[ebp-260],eax
	sub	esp,4
	mov	esi,[ebp-128]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-260]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_flmlightprocess
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+28]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp+32]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp+32]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fdivrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_355
	mov	[ebp-8],0
_355
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_356
	mov	[ebp-8],1065353216
_356
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,998276406
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_357
	mov	[ebp-12],0
	mov	[ebp-16],0
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,52
	mov	ebx,[ebx]
	and	ebx,ebx
	jz	_358
	add	[ebp-16],1
	sub	esp,8
	mov	eax,[ebp+44]
	mov	[esp],eax
	mov	ebx,[ebp+40]
	mov	[esp+4],ebx
	call	_fentityvisible
	and	eax,eax
	jz	_359
	add	[ebp-12],1
_359
	mov	ebx,[_vg_lmparams]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	and	ebx,ebx
	jz	_360
	add	[ebp-16],1
	sub	esp,16
	mov	ebx,[ebp+48]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+48]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+8],0
	mov	eax,[ebp+40]
	mov	[esp],eax
	call	_fmoveentity
	sub	esp,8
	mov	eax,[ebp+44]
	mov	[esp],eax
	mov	ebx,[ebp+40]
	mov	[esp+4],ebx
	call	_fentityvisible
	and	eax,eax
	jz	_361
	add	[ebp-12],1
_361
	add	[ebp-16],1
	sub	esp,16
	mov	ebx,[ebp+48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	[esp+12],0
	mov	eax,[ebp+40]
	mov	[esp],eax
	call	_fmoveentity
	sub	esp,8
	mov	eax,[ebp+44]
	mov	[esp],eax
	mov	ebx,[ebp+40]
	mov	[esp+4],ebx
	call	_fentityvisible
	and	eax,eax
	jz	_362
	add	[ebp-12],1
_362
	add	[ebp-16],1
	sub	esp,16
	mov	ebx,[ebp+48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[ebp+40]
	mov	[esp],eax
	call	_fmoveentity
	sub	esp,8
	mov	eax,[ebp+44]
	mov	[esp],eax
	mov	ebx,[ebp+40]
	mov	[esp+4],ebx
	call	_fentityvisible
	and	eax,eax
	jz	_363
	add	[ebp-12],1
_363
	add	[ebp-16],1
	sub	esp,16
	mov	ebx,[ebp+48]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	[esp+12],0
	mov	eax,[ebp+40]
	mov	[esp],eax
	call	_fmoveentity
	sub	esp,8
	mov	eax,[ebp+44]
	mov	[esp],eax
	mov	ebx,[ebp+40]
	mov	[esp+4],ebx
	call	_fentityvisible
	and	eax,eax
	jz	_364
	add	[ebp-12],1
_364
_360
	jmp	_365
_358
	mov	[ebp-12],1
	mov	[ebp-16],1
_365
	cmp	[ebp-12],0
	jle	_366
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-8],esi
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	[ebp-20],eax
	mov	ebx,[ebp-20]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-24],ebx
	mov	ebx,[ebp-20]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-28],ebx
	mov	ebx,[ebp-20]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-32],ebx
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-24]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-24],esi
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-28],esi
	mov	ebx,[ebp+28]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-32],esi
	cmp	[ebp-24],255
	jle	_367
	mov	[ebp-24],255
_367
	cmp	[ebp-28],255
	jle	_368
	mov	[ebp-28],255
_368
	cmp	[ebp-32],255
	jle	_369
	mov	[ebp-32],255
_369
	mov	ebx,[ebp-32]
	mov	esi,[ebp-28]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-24]
	shl	esi,byte 16
	or	ebx,esi
	mov	[ebp-36],ebx
	sub	esp,16
	mov	ebx,[ebp-36]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fwritepixelfast
_366
_357
	mov	eax,0
	jmp	_96_leave
_96_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 32
	.align	16
_flmblurimage
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,88
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcopyimage
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-20],eax
	mov	[ebp-24],0
	jmp	_370
_371
	mov	[ebp-28],0
	jmp	_372
_373
	mov	ebx,[ebp-28]
	sub	ebx,[ebp+24]
	mov	[ebp-32],ebx
	mov	ebx,[ebp-24]
	sub	ebx,[ebp+24]
	mov	[ebp-36],ebx
	mov	ebx,[ebp-28]
	add	ebx,[ebp+24]
	mov	[ebp-40],ebx
	mov	ebx,[ebp-24]
	add	ebx,[ebp+24]
	mov	[ebp-44],ebx
	cmp	[ebp-32],0
	jge	_374
	mov	[ebp-32],0
_374
	cmp	[ebp-36],0
	jge	_375
	mov	[ebp-36],0
_375
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-40],ebx
	jle	_376
	mov	ebx,[ebp-16]
	sub	ebx,1
	mov	[ebp-40],ebx
_376
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-44],ebx
	jle	_377
	mov	ebx,[ebp-20]
	sub	ebx,1
	mov	[ebp-44],ebx
_377
	mov	[ebp-48],0
	mov	[ebp-52],0
	mov	[ebp-56],0
	mov	[ebp-60],0
	mov	ebx,[ebp-36]
	mov	[ebp-64],ebx
	jmp	_378
_379
	mov	ebx,[ebp-32]
	mov	[ebp-68],ebx
	jmp	_380
_381
	sub	esp,12
	mov	ebx,[ebp-64]
	mov	[esp+4],ebx
	mov	esi,[ebp-8]
	mov	[esp+8],esi
	mov	eax,[ebp-68]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	[ebp-72],eax
	mov	ebx,[ebp-72]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-76],ebx
	mov	ebx,[ebp-72]
	shr	ebx,byte 8
	mov	esi,255
	and	ebx,esi
	mov	[ebp-80],ebx
	mov	ebx,[ebp-72]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-84],ebx
	mov	ebx,[ebp-76]
	add	[ebp-48],ebx
	mov	ebx,[ebp-80]
	add	[ebp-52],ebx
	mov	ebx,[ebp-84]
	add	[ebp-56],ebx
	add	[ebp-60],1
	add	[ebp-68],1
_380
	mov	ebx,[ebp-40]
	cmp	[ebp-68],ebx
	jle	_381
_101
	add	[ebp-64],1
_378
	mov	ebx,[ebp-44]
	cmp	[ebp-64],ebx
	jle	_379
_100
	mov	eax,[ebp-48]
	mov	ecx,[ebp-60]
	cdq
	idiv	ecx
	mov	[ebp-48],eax
	mov	eax,[ebp-52]
	mov	ecx,[ebp-60]
	cdq
	idiv	ecx
	mov	[ebp-52],eax
	mov	eax,[ebp-56]
	mov	ecx,[ebp-60]
	cdq
	idiv	ecx
	mov	[ebp-56],eax
	cmp	[ebp-48],255
	jle	_382
	mov	[ebp-48],255
_382
	cmp	[ebp-52],255
	jle	_383
	mov	[ebp-52],255
_383
	cmp	[ebp-56],255
	jle	_384
	mov	[ebp-56],255
_384
	mov	ebx,[ebp-56]
	mov	esi,[ebp-52]
	shl	esi,byte 8
	or	ebx,esi
	mov	esi,[ebp-48]
	shl	esi,byte 16
	or	ebx,esi
	mov	[ebp-88],ebx
	sub	esp,16
	mov	ebx,[ebp-88]
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	mov	[esp+12],esi
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fwritepixelfast
	add	[ebp-28],1
_372
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-28],ebx
	jle	_373
_99
	add	[ebp-24],1
_370
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_371
_98
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreeimage
	mov	eax,0
	jmp	_97_leave
_97_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fgettrianglearea
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp+44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp+48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,[ebp+52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-12]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-4]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-8]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	sub	esp,4
	mov	eax,[ebp-28]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	jmp	_102_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_102_leave
_102_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 36
	.align	16
_fgettrianglenormal
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp+44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp+48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,[ebp+52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-12]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-4]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-8]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	sub	esp,4
	mov	eax,[ebp-28]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	mov	eax,[ebp-40]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_385
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	jmp	_386
_385
	mov	[ebp-28],0
	mov	[ebp-32],0
	mov	[ebp-36],1065353216
_386
	mov	ebx,[ebp-28]
	mov	[_vg_trinormalx],ebx
	mov	ebx,[ebp-32]
	mov	[_vg_trinormaly],ebx
	mov	ebx,[ebp-36]
	mov	[_vg_trinormalz],ebx
	mov	eax,0
	jmp	_103_leave
_103_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 36
	.align	16
_ftrianglenormalx
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[_vg_trinormalx]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_104_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_104_leave
_104_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_ftrianglenormaly
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[_vg_trinormaly]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_105_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_105_leave
_105_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_ftrianglenormalz
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[_vg_trinormalz]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_106_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_106_leave
_106_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreateluvs
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fwritefile
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcountsurfaces
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	_fwriteint
	mov	[ebp-8],1
	jmp	_387
_388
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-12],eax
	sub	esp,16
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fsurfacefingerprint
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	_fwritestring
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcountvertices
	mov	[ebp-20],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fwriteint
	mov	[ebp-24],0
	jmp	_389
_390
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritefloat
	mov	ebx,eax
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritefloat
	mov	ebx,eax
	add	[ebp-24],1
_389
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_390
_109
	add	[ebp-8],1
_387
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	cmp	[ebp-8],eax
	jle	_388
_108
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_391
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	_fwritestring
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fclosefile
	mov	eax,0
	jmp	_107_leave
_107_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-16]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_floadluvs
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_freadfile
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadint
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	cmp	[ebp-8],eax
	jz	_392
	sub	esp,8
	mov	eax,_393
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fdebuglog
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fclosefile
	mov	eax,0
	jmp	_110_leave
_392
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadstring
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_395
_394
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	_ffindsurffingerprint
	mov	[ebp-16],eax
	mov	ebx,[ebp-16]
	and	ebx,ebx
	jz	_396
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadint
	mov	[ebp-20],eax
	mov	[ebp-24],0
	jmp	_397
_398
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,24
	mov	[esp+16],0
	mov	esi,[ebp+28]
	mov	[esp+20],esi
	mov	esi,[ebp-32]
	mov	[esp+12],esi
	mov	ebx,[ebp-28]
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-24],1
_397
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_398
_112
	jmp	_399
_396
	sub	esp,24
	mov	eax,_400
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_401
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fdebuglog
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadint
	mov	[ebp-20],eax
	mov	[ebp-24],0
	jmp	_402
_403
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadfloat
	push	eax
	fstp	[esp]
	pop	eax
	add	[ebp-24],1
_402
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_403
_113
_399
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadstring
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrStore
_395
	sub	esp,12
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_404
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_394
_111
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fclosefile
	mov	eax,0
	jmp	_110_leave
_110_leave
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-36]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_ffindsurffingerprint
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-4],1
	jmp	_405
_406
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-8],eax
	sub	esp,16
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fsurfacefingerprint
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_407
	mov	eax,[ebp-8]
	jmp	_114_leave
_407
	add	[ebp-4],1
_405
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	cmp	[ebp-4],eax
	jle	_406
_115
	mov	eax,0
	jmp	_114_leave
	mov	eax,0
	jmp	_114_leave
_114_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsurfacefingerprint
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_408
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fgetsurfacebrush
	mov	[ebp-8],eax
	mov	ebx,[ebp-8]
	and	ebx,ebx
	jz	_409
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fgetbrushtexture
	mov	[ebp-12],eax
	mov	ebx,[ebp-12]
	and	ebx,ebx
	jz	_410
	sub	esp,24
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_ftexturename
	mov	[esp],eax
	call	_fstrippath
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_411
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_ffreetexture
_410
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreebrush
_409
	sub	esp,36
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcounttriangles
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_412
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcountvertices
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_116_leave
	sub	esp,4
	mov	eax,_413
	mov	[esp],eax
	call	__bbStrConst
	jmp	_116_leave
_116_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_funweld
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,60
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-4],1
	jmp	_414
_415
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcounttriangles
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,15
	imul	eax,[ebp-12]
	shl	eax,byte 2
	mov	[esp],eax
	call	_fcreatebank
	mov	[ebp-16],eax
	mov	[ebp-20],0
	jmp	_416
_417
	mov	ebx,[ebp-20]
	imul	ebx,15
	shl	ebx,byte 2
	mov	[ebp-24],ebx
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-28],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-48],eax
	sub	esp,12
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	esi,[ebp-32]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,4
	mov	[esp+4],ebx
	mov	esi,[ebp-36]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,8
	mov	[esp+4],ebx
	mov	esi,[ebp-40]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,12
	mov	[esp+4],ebx
	mov	esi,[ebp-44]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,16
	mov	[esp+4],ebx
	mov	esi,[ebp-48]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-28],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-48],eax
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,20
	mov	[esp+4],ebx
	mov	esi,[ebp-32]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,24
	mov	[esp+4],ebx
	mov	esi,[ebp-36]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,28
	mov	[esp+4],ebx
	mov	esi,[ebp-40]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,32
	mov	[esp+4],ebx
	mov	esi,[ebp-44]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,36
	mov	[esp+4],ebx
	mov	esi,[ebp-48]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-28],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-48],eax
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,40
	mov	[esp+4],ebx
	mov	esi,[ebp-32]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,44
	mov	[esp+4],ebx
	mov	esi,[ebp-36]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,48
	mov	[esp+4],ebx
	mov	esi,[ebp-40]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,52
	mov	[esp+4],ebx
	mov	esi,[ebp-44]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,56
	mov	[esp+4],ebx
	mov	esi,[ebp-48]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokefloat
	add	[ebp-20],1
_416
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_417
_119
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fclearsurface
	mov	[ebp-20],0
	jmp	_418
_419
	mov	ebx,[ebp-20]
	imul	ebx,15
	shl	ebx,byte 2
	mov	[ebp-24],ebx
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,4
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,8
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,12
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,16
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-48],eax
	sub	esp,28
	mov	ebx,[ebp-48]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-44]
	mov	[esp+16],esi
	mov	ebx,[ebp-40]
	mov	[esp+12],ebx
	mov	esi,[ebp-36]
	mov	[esp+8],esi
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-52],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,20
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,24
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,28
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,32
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,36
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-48],eax
	sub	esp,28
	mov	ebx,[ebp-48]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-44]
	mov	[esp+16],esi
	mov	ebx,[ebp-40]
	mov	[esp+12],ebx
	mov	esi,[ebp-36]
	mov	[esp+8],esi
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-56],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,40
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,44
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-36],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,48
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,52
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	add	ebx,56
	mov	[esp+4],ebx
	call	_fpeekfloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-48],eax
	sub	esp,28
	mov	ebx,[ebp-48]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-44]
	mov	[esp+16],esi
	mov	ebx,[ebp-40]
	mov	[esp+12],ebx
	mov	esi,[ebp-36]
	mov	[esp+8],esi
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-60],eax
	sub	esp,16
	mov	ebx,[ebp-56]
	mov	[esp+8],ebx
	mov	esi,[ebp-60]
	mov	[esp+12],esi
	mov	esi,[ebp-52]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddtriangle
	add	[ebp-20],1
_418
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_419
_120
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_ffreebank
	add	[ebp-4],1
_414
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	cmp	[ebp-4],eax
	jle	_415
_118
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fupdatenormals
	mov	eax,[ebp+20]
	jmp	_117_leave
	mov	eax,0
	jmp	_117_leave
_117_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fweld
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,4
	mov	eax,_atxv
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,3
	mov	esi,_atxv
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atxv
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-4],1
	jmp	_420
_421
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-8],eax
	mov	[ebp-12],0
	jmp	_422
_423
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	[ebx],eax
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_ttris
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,20
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,40
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,44
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,48
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,52
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,56
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,60
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,64
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,68
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,72
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,76
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_atxv]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,80
	mov	[ebx],eax
	add	[ebp-12],1
_422
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcounttriangles
	sub	eax,1
	cmp	[ebp-12],eax
	jle	_423
_123
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fclearsurface
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],_ttris
	call	__bbObjEachFirst
	and	eax,eax
	jz	_124
_424
	sub	esp,32
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[esp+24],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+28],esi
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,16
	mov	esi,[esi]
	mov	[esp+20],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+16],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffindvert
	mov	[ebp-20],eax
	cmp	[ebp-20],-1
	jnz	_425
	sub	esp,28
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-20],eax
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertextexcoords
	mov	ebx,[ebp-24]
	mov	[ebp-20],ebx
	add	[ebp-24],1
_425
	sub	esp,32
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	[esp+24],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	mov	[esp+28],esi
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,44
	mov	esi,[esi]
	mov	[esp+20],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,40
	mov	ebx,[ebx]
	mov	[esp+16],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,36
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,28
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffindvert
	mov	[ebp-28],eax
	cmp	[ebp-28],-1
	jnz	_426
	sub	esp,28
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-28],eax
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertextexcoords
	mov	ebx,[ebp-24]
	mov	[ebp-28],ebx
	add	[ebp-24],1
_426
	sub	esp,32
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,76
	mov	ebx,[ebx]
	mov	[esp+24],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,80
	mov	esi,[esi]
	mov	[esp+28],esi
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,72
	mov	esi,[esi]
	mov	[esp+20],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,68
	mov	ebx,[ebx]
	mov	[esp+16],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,64
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,56
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffindvert
	mov	[ebp-32],eax
	cmp	[ebp-32],-1
	jnz	_427
	sub	esp,28
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,68
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,64
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,60
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddvertex
	mov	[ebp-32],eax
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-16]
	mov	esi,[esi]
	add	esi,80
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-16]
	mov	ebx,[ebx]
	add	ebx,76
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fvertextexcoords
	mov	ebx,[ebp-24]
	mov	[ebp-32],ebx
	add	[ebp-24],1
_427
	sub	esp,16
	mov	ebx,[ebp-28]
	mov	[esp+8],ebx
	mov	esi,[ebp-32]
	mov	[esp+12],esi
	mov	esi,[ebp-20]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_faddtriangle
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_424
_124
	sub	esp,4
	mov	eax,_ttris
	mov	[esp],eax
	call	__bbObjDeleteEach
	mov	[ebp-24],0
	add	[ebp-4],1
_420
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	cmp	[ebp-4],eax
	jle	_421
_122
	mov	eax,0
	jmp	_121_leave
_121_leave
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_ffindvert
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-4],981668463
	mov	[ebp-8],0
	jmp	_428
_429
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fvertexx
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_430
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fvertexy
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_431
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fvertexz
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_432
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_433
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	mov	ebx,[ebp+40]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_434
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	mov	ebx,[ebp+44]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_435
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	mov	ebx,[ebp+48]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_436
	mov	eax,[ebp-8]
	jmp	_125_leave
_436
_435
_434
_433
_432
_431
_430
	add	[ebp-8],1
_428
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,1
	cmp	[ebp-8],eax
	jle	_429
_126
	mov	eax,-1
	jmp	_125_leave
	mov	eax,0
	jmp	_125_leave
_125_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 32
	.align	16
_flmexample
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,52
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[ebp-4],eax
	sub	esp,20
	mov	[esp+12],1099956224
	mov	[esp+16],0
	mov	[esp+8],1099956224
	mov	[esp+4],1099431936
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,4
	mov	[esp],0
	call	_fcreatecube
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fflipmesh
	sub	esp,16
	mov	[esp+8],1065353216
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fpositionmesh
	sub	esp,16
	mov	[esp+8],1097859072
	mov	[esp+12],1101004800
	mov	[esp+4],1101004800
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fscalemesh
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fentitypickmode
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_437
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fnameentity
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpointentity
	sub	esp,8
	mov	[esp],10
	mov	[esp+4],0
	call	_fcreatesphere
	mov	[ebp-12],eax
	sub	esp,16
	mov	[esp+8],1082130432
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fpositionmesh
	sub	esp,16
	mov	[esp+8],1073741824
	mov	[esp+12],1073741824
	mov	[esp+4],1073741824
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fscalemesh
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fentitypickmode
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_438
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fnameentity
	sub	esp,12
	mov	[esp+4],1112014848
	mov	[esp+8],1112014848
	mov	[esp],1112014848
	call	_fambientlight
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],0
	call	_fcreatelight
	mov	[ebp-16],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1106247680
	mov	[esp+4],1110704128
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_frotateentity
	call	_fmillisecs
	mov	[ebp-20],eax
	jmp	_440
_439
	call	_fmillisecs
	mov	[ebp-24],eax
	mov	ebx,[ebp-24]
	sub	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1148846080
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	mov	ebx,[ebp-24]
	mov	[ebp-20],ebx
	mov	ebx,1092616192
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	sub	esp,20
	mov	[esp],205
	call	_fkeydown
	mov	[ebp-48],eax
	sub	esp,4
	mov	[esp],203
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-48]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	[esp],200
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[ebp-48],eax
	sub	esp,4
	mov	[esp],208
	mov	eax,esi
	call	_fkeydown
	mov	esi,eax
	mov	eax,[ebp-48]
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fmoveentity
	mov	ebx,eax
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	and	eax,eax
	jz	_441
	mov	[ebp-36],1061997773
	sub	esp,20
	call	_fmouseyspeed
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],0
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fturnentity
	mov	ebx,eax
	sub	esp,20
	call	_fmousexspeed
	push	eax
	fild	[esp]
	pop	eax
	fchs
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],1
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fturnentity
	jmp	_442
_441
	call	_fmousexspeed
	call	_fmouseyspeed
_442
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_443
	sub	esp,12
	call	_fmousex
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-48],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-48]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcamerapick
	mov	ebx,eax
	mov	[ebp-40],ebx
	mov	ebx,[ebp-40]
	and	ebx,ebx
	jz	_444
	sub	esp,16
	mov	[esp+8],40
	mov	[esp+12],0
	mov	[esp+4],40
	mov	[esp],40
	call	_fbeginlightmap
	sub	esp,48
	mov	[esp+40],1065353216
	mov	[esp+44],0
	mov	[esp+36],0
	mov	[esp+32],1077936128
	mov	[esp+28],1
	mov	[esp+24],0
	mov	[esp+20],1132396544
	mov	[esp+16],1130037248
	mov	[esp+12],1130037248
	mov	[esp+8],-1056964608
	mov	[esp+4],1077936128
	mov	[esp],-1056859750
	call	_fcreatelmlight
	sub	esp,48
	mov	[esp+40],1065353216
	mov	[esp+44],0
	mov	[esp+36],0
	mov	[esp+32],1077936128
	mov	[esp+28],1
	mov	[esp+24],0
	mov	[esp+20],1130037248
	mov	[esp+16],1132396544
	mov	[esp+12],1132396544
	mov	[esp+8],1078355558
	mov	[esp+4],1077936128
	mov	[esp],1090519040
	call	_fcreatelmlight
	sub	esp,12
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_446
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_445
	sub	esp,32
	mov	eax,_447
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fentityname
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+16],eax
	mov	[esp+12],1
	mov	[esp+8],1024
	mov	[esp+4],1045220557
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_flightmapmesh
	mov	[ebp-44],eax
	jmp	_448
_445
	sub	esp,32
	mov	eax,_449
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fentityname
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+16],eax
	mov	[esp+12],1
	mov	[esp+8],1024
	mov	[esp+4],1017370378
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_flightmapmesh
	mov	[ebp-44],eax
_448
	mov	ebx,[ebp-44]
	and	ebx,ebx
	jz	_450
	sub	esp,28
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_451
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[ebp-48],eax
	sub	esp,8
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fentityname
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	[ebp-52],eax
	sub	esp,4
	mov	esi,_452
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-52]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+12],ebx
	mov	ebx,[ebp-44]
	mov	[esp+4],ebx
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fsavelightmap
	sub	esp,16
	mov	[esp+8],4
	sub	esp,4
	mov	eax,_453
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+12],eax
	mov	esi,[ebp-44]
	mov	[esp+4],esi
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fapplylightmap
_450
	call	_fendlightmap
_444
_443
	sub	esp,4
	mov	[esp],60
	call	_fkeyhit
	and	eax,eax
	jz	_454
	sub	esp,12
	call	_fmousex
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-48],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-48]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcamerapick
	mov	ebx,eax
	mov	[ebp-40],ebx
	mov	ebx,[ebp-40]
	and	ebx,ebx
	jz	_455
	sub	esp,28
	mov	eax,[ebp-40]
	mov	[esp],eax
	call	_fentityname
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_456
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[ebp-48],eax
	sub	esp,8
	mov	[ebp-52],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fentityname
	mov	ebx,eax
	mov	eax,[ebp-52]
	mov	[esp],ebx
	mov	[ebp-52],eax
	sub	esp,4
	mov	esi,_457
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-52]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+8],ebx
	mov	[esp+12],4
	mov	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	_floadlightmap
	mov	ebx,eax
_455
_454
	sub	esp,4
	mov	[esp],1065353216
	call	_fupdateworld
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	sub	esp,4
	mov	[esp],1
	call	_fflip
_440
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_439
_128
	call	_fendgraphics
	mov	eax,0
	jmp	_127_leave
_127_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fray_intersect_triangle
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,84
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	ebx,[ebp+68]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+44]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp+72]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+48]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+76]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+52]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp+56]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+44]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp+60]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+48]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,[ebp+64]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+52]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+40]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	mov	ebx,[ebp+40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+32]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp+36]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-32]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-36]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	eax,[ebp-40]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	mov	[ebp-84],eax
	cmp	[ebp+84],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-84]
	and	ebx,eax
	and	ebx,ebx
	jz	_458
	mov	eax,0
	jmp	_129_leave
_458
	mov	eax,[ebp-40]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,-1222130260
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-84],eax
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,925353388
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-84]
	and	eax,ebx
	and	eax,eax
	jz	_459
	mov	eax,0
	jmp	_129_leave
_459
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+44]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+48]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-52],ebx
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+52]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-56],ebx
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-32]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-36]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-44]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-60],esi
	mov	eax,[ebp-60]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	[ebp-84],eax
	mov	ebx,[ebp-60]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-84]
	or	eax,ebx
	and	eax,eax
	jz	_460
	mov	eax,0
	jmp	_129_leave
_460
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-56]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-64],ebx
	mov	ebx,[ebp-56]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-48]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-68],ebx
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-52]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+36]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-68]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp+40]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-72]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-44]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-76],esi
	mov	eax,[ebp-76]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	[ebp-84],eax
	mov	ebx,[ebp-60]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-76]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-84]
	or	eax,ebx
	and	eax,eax
	jz	_461
	mov	eax,0
	jmp	_129_leave
_461
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-68]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-72]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-44]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-80],esi
	mov	eax,[ebp-80]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_462
	mov	eax,0
	jmp	_129_leave
_462
	mov	eax,[ebp-80]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-84],eax
	cmp	[ebp+80],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-84]
	and	ebx,eax
	and	ebx,ebx
	jz	_463
	mov	eax,0
	jmp	_129_leave
_463
	mov	eax,1
	jmp	_129_leave
	mov	eax,0
	jmp	_129_leave
_129_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 68
	.align	16
_fstrippath
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	mov	[ebp-4],eax
	jmp	_464
_465
	sub	esp,20
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,_467
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_466
	sub	esp,12
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-12]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fright
	jmp	_130_leave
_466
	add	[ebp-4],-1
_464
	cmp	[ebp-4],1
	jge	_465
_131
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_130_leave
	sub	esp,4
	mov	eax,_468
	mov	[esp],eax
	call	__bbStrConst
	jmp	_130_leave
_130_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[ebp-12],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	4
_vg_lmparams	.dd	0
	.align	4
_vg_trinormalx	.dd	0
	.align	4
_vg_trinormaly	.dd	0
	.align	4
_vg_trinormalz	.dd	0
	.align	4
_atxv	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_3	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_4	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_5	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_6	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_7	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_8	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_9	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_10	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_11	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_12	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_13	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_14	.dd	6
	.dd	3
	.dd	__bbIntType
	.align	4
_tlmtriangle	.dd	5
_132	.dd	0
	.dd	_132
	.dd	_132
	.dd	0
	.dd	-1
_133	.dd	0
	.dd	_133
	.dd	_133
	.dd	0
	.dd	-1
	.dd	17
	.dd	_3
	.dd	_4
	.dd	_5
	.dd	_6
	.dd	_7
	.dd	_8
	.dd	_9
	.dd	_10
	.dd	_11
	.dd	_12
	.dd	_13
	.dd	_14
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	_tlmsurface
	.align	4
_15	.dd	6
	.dd	257
	.dd	_tlmtriangle
	.align	4
_tlmsurface	.dd	5
_134	.dd	0
	.dd	_134
	.dd	_134
	.dd	0
	.dd	-1
_135	.dd	0
	.dd	_135
	.dd	_135
	.dd	0
	.dd	-1
	.dd	23
	.dd	_15
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
_tlmsortedsurface	.dd	5
_136	.dd	0
	.dd	_136
	.dd	_136
	.dd	0
	.dd	-1
_137	.dd	0
	.dd	_137
	.dd	_137
	.dd	0
	.dd	-1
	.dd	1
	.dd	_tlmsurface
	.align	4
_16	.dd	6
	.dd	2
	.dd	_tlmimgnode
	.align	4
_tlmimgnode	.dd	5
_138	.dd	0
	.dd	_138
	.dd	_138
	.dd	0
	.dd	-1
_139	.dd	0
	.dd	_139
	.dd	_139
	.dd	0
	.dd	-1
	.dd	6
	.dd	_16
	.dd	_tlmsurface
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
_tlmparams	.dd	5
_140	.dd	0
	.dd	_140
	.dd	_140
	.dd	0
	.dd	-1
_141	.dd	0
	.dd	_141
	.dd	_141
	.dd	0
	.dd	-1
	.dd	4
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
_17	.dd	6
	.dd	3
	.dd	__bbFltType
	.align	4
_tlmlight	.dd	5
_142	.dd	0
	.dd	_142
	.dd	_142
	.dd	0
	.dd	-1
_143	.dd	0
	.dd	_143
	.dd	_143
	.dd	0
	.dd	-1
	.dd	14
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	_17
	.dd	__bbFltType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
_tlmentity	.dd	5
_144	.dd	0
	.dd	_144
	.dd	_144
	.dd	0
	.dd	-1
_145	.dd	0
	.dd	_145
	.dd	_145
	.dd	0
	.dd	-1
	.dd	5
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.align	4
_ttris	.dd	5
_146	.dd	0
	.dd	_146
	.dd	_146
	.dd	0
	.dd	-1
_147	.dd	0
	.dd	_147
	.dd	_147
	.dd	0
	.dd	-1
	.dd	22
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
_154	.db	"Terrain",0
_157	.db	"Mesh",0
_160	.db	"",0
_167	.db	"Mesh",0
_171	.db	"Terrain",0
_202	.db	"Percentage : 0%",0
_203	.db	"Time       : 0s  (0s to go)",0
_207	.db	"Percentage : ",0
_208	.db	"%",0
_209	.db	"Time       : ",0
_210	.db	"s  (",0
_211	.db	"s to go)",0
_217	.db	"Percentage : 0%",0
_218	.db	"Time       : 0s  (0s to go)",0
_234	.db	"Percentage : ",0
_235	.db	"%",0
_236	.db	"Time       : ",0
_237	.db	"s  (",0
_238	.db	"s to go)",0
_247	.db	"Lightmap doesn't fit into the maxmapsize, increase the lumelsize or increase the maxmapsize",0
_391	.db	"",0
_393	.db	"Wrong number of surfaces",0
_400	.db	"Surface fingerprint ",0
_401	.db	" not found",0
_404	.db	"",0
_408	.db	"",0
_411	.db	"|",0
_412	.db	",",0
_413	.db	"",0
_437	.db	"cube1",0
_438	.db	"cube2",0
_446	.db	"cube1",0
_447	.db	"Lightmapping ",0
_449	.db	"Lightmapping ",0
_451	.db	"_lm.bmp",0
_452	.db	".luv",0
_453	.db	"",0
_456	.db	"_lm.bmp",0
_457	.db	".luv",0
_467	.db	"\",0
_468	.db	"",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

