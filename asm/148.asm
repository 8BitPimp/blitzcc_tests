
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],1
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics
	sub	esp,4
	call	_ffrontbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	sub	esp,4
	mov	eax,_atraces
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,50
	mov	esi,_atraces
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atraces
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_atracecounts
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,50
	mov	esi,_atracecounts
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atracecounts
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-4],0
	jmp	_12
_13
	sub	esp,32
	call	_fgraphicswidth
	mov	[esp],eax
	mov	[esp+4],1
	call	_frand
	mov	[esp+8],eax
	mov	[ebp-24],eax
	sub	esp,8
	mov	[ebp-28],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-28]
	sub	ebx,17
	mov	[esp],ebx
	mov	[esp+4],1
	mov	eax,ebx
	call	_frand
	mov	ebx,eax
	mov	eax,[ebp-24]
	add	ebx,17
	mov	[esp+12],ebx
	mov	[ebp-24],eax
	sub	esp,8
	mov	[ebp-28],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-28]
	sub	ebx,17
	mov	[esp],ebx
	mov	[esp+4],1
	mov	eax,ebx
	call	_frand
	mov	ebx,eax
	mov	eax,[ebp-24]
	add	ebx,17
	mov	[esp+4],ebx
	sub	esp,8
	call	_fgraphicswidth
	mov	[esp],eax
	mov	[esp+4],1
	call	_frand
	mov	[esp],eax
	call	_fspawntrace
	mov	[esp+4],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_atraces]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjStore
	mov	ebx,eax
	sub	esp,4
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_atraces]
	mov	eax,[eax]
	mov	[esp],eax
	call	_ftracestepsneeded
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_atracecounts]
	mov	[ebx],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],3
	mov	[esp+16],0
	mov	[esp+8],3
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_atraces]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,1
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_atraces]
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	sub	eax,1
	mov	[esp],eax
	call	_frect
	sub	esp,20
	mov	[esp+12],5
	mov	[esp+16],0
	mov	[esp+8],5
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_atraces]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	sub	ebx,2
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_atraces]
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	sub	eax,2
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],3
	mov	[esp+16],0
	mov	[esp+8],3
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_atraces]
	mov	ebx,[ebx]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	sub	ebx,1
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_atraces]
	mov	eax,[eax]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	sub	eax,1
	mov	[esp],eax
	call	_frect
	add	[ebp-4],1
_12
	cmp	[ebp-4],49
	jle	_13
_3
	sub	esp,4
	mov	[esp],30
	call	_fcreatetimer
	mov	[ebp-8],eax
	mov	[ebp-12],0
_14
	sub	esp,4
	mov	[esp],1
	call	_fvwait
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fwaittimer
	sub	esp,4
	call	_ffrontbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-16],1
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],_ttbresenheminfo
	call	__bbObjEachFirst
	and	eax,eax
	jz	_5
_15
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fprocesstrace
	cmp	eax,0
	jnz	_16
	mov	[ebp-16],0
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],128
	mov	[esp],128
	call	_fcolor
	sub	esp,8
	mov	eax,[ebp-20]
	mov	eax,[eax]
	add	eax,16
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fplot
	jmp	_17
_16
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fkilltrace
_17
	sub	esp,4
	lea	eax,[ebp-20]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_15
_5
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],16
	mov	[esp+16],1
	call	_fgraphicswidth
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	cmp	[ebp-16],1
	jnz	_18
	sub	esp,40
	mov	eax,_19
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_20
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fvwait
	jmp	_21
_18
	add	[ebp-12],1
	sub	esp,40
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_23
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
_21
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	and	eax,eax
	jz	_14
_4
	call	_fend
	ret
_2_leave
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fspawntrace
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_ttbresenheminfo
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	sub	ebx,[ebp+28]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	sub	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	sub	esp,4
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,24
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbAbs
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbAbs
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	cmp	ebx,0
	jge	_26
	mov	ebx,1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
	jmp	_27
_26
	mov	ebx,-1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	[esi],ebx
_27
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	cmp	ebx,0
	jge	_28
	mov	ebx,1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
	jmp	_29
_28
	mov	ebx,-1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,44
	mov	[esi],ebx
_29
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,36
	mov	esi,[esi]
	cmp	ebx,esi
	jle	_30
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,64
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,68
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	shl	ebx,byte 1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,48
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	sub	ebx,esi
	shl	ebx,byte 1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,52
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	sub	ebx,esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,56
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,60
	mov	[esi],ebx
	jmp	_31
_30
	mov	ebx,1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,64
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,68
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	shl	ebx,byte 1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,48
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,36
	mov	esi,[esi]
	sub	ebx,esi
	shl	ebx,byte 1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,52
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,36
	mov	esi,[esi]
	sub	ebx,esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,56
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,60
	mov	[esi],ebx
_31
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,72
	mov	[esi],ebx
	mov	eax,[ebp-4]
	jmp	_6_leave
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_ftracestepsneeded
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_32
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,68
	mov	eax,[eax]
	jmp	_7_leave
_32
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fprocesstrace
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_33
	mov	[ebp-4],0
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,68
	mov	esi,[esi]
	cmp	ebx,esi
	jl	_34
	mov	[ebp-4],1
_34
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,72
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,64
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_35
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	cmp	ebx,0
	jge	_36
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,48
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,56
	mov	[esi],ebx
	jmp	_37
_36
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,56
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,44
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,60
	mov	[esi],ebx
_37
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],esi
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	jmp	_38
_35
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	cmp	ebx,0
	jge	_39
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,48
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,56
	mov	[esi],ebx
	jmp	_40
_39
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,56
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	add	ebx,esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,60
	mov	[esi],ebx
_40
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,60
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,44
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp+20]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	add	esi,ebx
	mov	ebx,[ebp+20]
	mov	ebx,[ebx]
	add	ebx,20
	mov	[ebx],esi
_38
	mov	eax,[ebp-4]
	jmp	_8_leave
	jmp	_41
_33
	mov	eax,1
	jmp	_8_leave
_41
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_ftracexpos
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_42
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,16
	mov	eax,[eax]
	jmp	_9_leave
_42
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_ftraceypos
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_43
	mov	eax,[ebp+20]
	mov	eax,[eax]
	add	eax,20
	mov	eax,[eax]
	jmp	_10_leave
_43
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fkilltrace
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	__bbObjCompare
	cmp	eax,0
	jz	_44
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	__bbObjDelete
	mov	[ebp+20],0
_44
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	4
_atraces	.dd	0
	.dd	5
	.dd	1
	.dd	0
	.align	4
_atracecounts	.dd	0
	.dd	1
	.dd	1
	.dd	0
_19	.db	"Lines all drawn [biggest was ",0
_20	.db	" steps]",0
_22	.db	"Processing step (",0
_23	.db	")",0
	.align	4
_ttbresenheminfo	.dd	5
_24	.dd	0
	.dd	_24
	.dd	_24
	.dd	0
	.dd	-1
_25	.dd	0
	.dd	_25
	.dd	_25
	.dd	0
	.dd	-1
	.dd	19
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

