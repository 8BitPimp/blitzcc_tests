
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,64
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	sub	esp,4
	mov	eax,_ab
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,2
	mov	esi,_ab
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ab
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_atxv
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,3
	mov	esi,_atxv
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_atxv
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_avt
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_avt
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_avt
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics3d
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[ebp-4],eax
	sub	esp,20
	mov	[esp+12],-1063256064
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	mov	[esp],64
	mov	[esp+4],0
	call	_fcreatesphere
	mov	[ebp-8],eax
	sub	esp,16
	mov	[esp+8],1124073472
	mov	[esp+12],1124073472
	mov	[esp+4],1124073472
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fentitycolor
	sub	esp,16
	mov	[esp+8],1110704128
	mov	[esp+12],0
	mov	[esp+4],1110704128
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_frotatemesh
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],16
	call	_fentityfx
	sub	esp,12
	mov	[esp+4],2
	mov	[esp+8],1
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fentitypickmode
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],0
	call	_fcreatelight
	mov	[ebp-12],eax
	sub	esp,20
	mov	[esp+12],1077936128
	mov	[esp+16],0
	mov	[esp+8],-1063256064
	mov	[esp+4],1084227584
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],1132396544
	call	_fcreatebrush
	mov	ebx,0
	shl	ebx,byte 2
	add	ebx,[_ab]
	mov	[ebx],eax
	sub	esp,12
	mov	[esp+4],1132396544
	mov	[esp+8],0
	mov	[esp],0
	call	_fcreatebrush
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_ab]
	mov	[ebx],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],1132396544
	mov	[esp],0
	call	_fcreatebrush
	mov	ebx,2
	shl	ebx,byte 2
	add	ebx,[_ab]
	mov	[ebx],eax
	mov	[ebp-16],1
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_27
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrStore
	call	_l_2count
	jmp	_29
_28
	sub	esp,4
	mov	[esp],78
	call	_fkeyhit
	mov	[ebp-64],eax
	cmp	[ebp-24],2
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-64]
	and	eax,ebx
	and	eax,eax
	jz	_30
	add	[ebp-24],1
_30
	sub	esp,4
	mov	[esp],74
	call	_fkeyhit
	mov	[ebp-64],eax
	cmp	[ebp-24],0
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-64]
	and	eax,ebx
	and	eax,eax
	jz	_31
	sub	[ebp-24],1
_31
	sub	esp,4
	mov	[esp],1
	call	_fmousehit
	and	eax,eax
	jz	_32
	sub	esp,12
	call	_fmousex
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp+4],eax
	mov	[ebp-64],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-64]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fcamerapick
	mov	ebx,eax
	mov	[ebp-28],ebx
	cmp	[ebp-28],0
	jz	_33
	call	_fpickedsurface
	mov	[ebp-28],eax
	call	_fpickedtriangle
	mov	[ebp-32],eax
	sub	esp,16
	mov	ebx,[ebp-32]
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,[_ab]
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	esi,[ebp-28]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fpainttriangle
_33
	mov	[ebp-16],0
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_34
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrStore
	call	_l_2count
_32
	sub	esp,4
	mov	[esp],2
	call	_fmousehit
	cmp	eax,1
	jnz	_35
	cmp	[ebp-16],1
	jnz	_36
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_funweld
	mov	[ebp-16],0
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_37
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_38
_36
	call	_fmillisecs
	mov	[ebp-36],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fweld
	mov	[ebp-16],1
	sub	esp,8
	lea	eax,[ebp-20]
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_39
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrStore
	call	_fmillisecs
	sub	eax,[ebp-36]
	mov	[ebp-40],eax
_38
	call	_l_2count
_35
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1036831949
	mov	[esp+4],0
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fturnentity
	sub	esp,4
	mov	[esp],1065353216
	call	_fupdateworld
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	[esp+12],5
	mov	[esp+16],0
	mov	[esp+8],5
	call	_fmousey
	mov	[esp+4],eax
	mov	[ebp-64],eax
	mov	eax,ebx
	call	_fmousex
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	_foval
	mov	ebx,eax
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,40
	mov	eax,_40
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_41
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_42
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],15
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_43
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],30
	mov	[esp],10
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_44
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],45
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_45
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	lea	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],60
	mov	[esp],10
	call	_ftext
	sub	esp,64
	mov	eax,_46
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_47
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,[ebp-48]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_48
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],80
	mov	[esp],10
	call	_ftext
	sub	esp,32
	mov	eax,_49
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],100
	mov	[esp],10
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
_29
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_28
_3
	call	_fend
_l_2count
	mov	[ebp-48],0
	mov	[ebp-52],0
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcountsurfaces
	mov	[ebp-44],eax
	mov	[ebp-56],1
	jmp	_50
_51
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-56]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-60],eax
	sub	esp,4
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	_fcountvertices
	add	[ebp-48],eax
	sub	esp,4
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	_fcounttriangles
	add	[ebp-52],eax
	add	[ebp-56],1
_50
	mov	ebx,[ebp-44]
	cmp	[ebp-56],ebx
	jle	_51
_4
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fupdatenormals
	ret
	ret
_2_leave
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_funweld
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_ttris
	call	__bbObjEachFirst
	and	eax,eax
	jz	_6
_54
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_54
_6
	mov	[ebp-8],1
	jmp	_55
_56
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-12],eax
	mov	[ebp-16],0
	jmp	_57
_58
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-20],eax
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-24],eax
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-28],eax
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_ttris
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,40
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,44
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,48
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,52
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,56
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,60
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,64
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,68
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,72
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,76
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,80
	mov	[ebx],eax
	add	[ebp-16],1
_57
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcounttriangles
	sub	eax,1
	cmp	[ebp-16],eax
	jle	_58
_8
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fclearsurface
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_ttris
	call	__bbObjEachFirst
	and	eax,eax
	jz	_9
_59
	sub	esp,28
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-32]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-32],1
	sub	esp,28
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-32]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-32],1
	sub	esp,28
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,68
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,64
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,60
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,80
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,76
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-32]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-32],1
	sub	esp,16
	mov	ebx,[ebp-32]
	sub	ebx,2
	mov	[esp+8],ebx
	mov	esi,[ebp-32]
	sub	esi,1
	mov	[esp+12],esi
	mov	esi,[ebp-32]
	sub	esi,3
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_faddtriangle
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_59
_9
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_ttris
	call	__bbObjEachFirst
	and	eax,eax
	jz	_10
_60
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_60
_10
	mov	[ebp-32],0
	add	[ebp-8],1
_55
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	cmp	[ebp-8],eax
	jle	_56
_7
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fpainttriangle
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+32]
	mov	[esp+4],ebx
	call	_ffindsurface
	mov	[ebp-4],eax
	cmp	[ebp-4],0
	jnz	_61
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+32]
	mov	[esp+4],ebx
	call	_fcreatesurface
	mov	[ebp-4],eax
_61
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcountvertices
	mov	[ebp-8],eax
	mov	[ebp-12],0
	jmp	_62
_63
	sub	esp,20
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexx
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	sub	esp,20
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexy
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	sub	esp,20
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexz
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	sub	esp,24
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexu
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	sub	esp,24
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	[esp+8],0
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexv
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	sub	esp,24
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexu
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	sub	esp,24
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fvertexv
	mov	ebx,eax
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],1065353216
	mov	[esp+16],0
	mov	ebx,[ebp-24]
	mov	[esp+12],ebx
	mov	esi,[ebp-20]
	mov	[esp+8],esi
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],0
	mov	esi,[ebp-32]
	mov	[esp+12],esi
	mov	ebx,[ebp-28]
	mov	[esp+8],ebx
	mov	esi,[ebp-8]
	add	esi,[ebp-12]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fvertextexcoords
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-40]
	mov	[esp+12],esi
	mov	ebx,[ebp-36]
	mov	[esp+8],ebx
	mov	esi,[ebp-8]
	add	esi,[ebp-12]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-12],1
_62
	cmp	[ebp-12],2
	jle	_63
_12
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcountvertices
	sub	eax,3
	mov	[ebp-8],eax
	sub	esp,16
	mov	ebx,[ebp-8]
	add	ebx,1
	mov	[esp+8],ebx
	mov	esi,[ebp-8]
	add	esi,2
	mov	[esp+12],esi
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_faddtriangle
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	call	_fremovetri
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fupdatenormals
	mov	eax,0
	jmp	_11_leave
_11_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fremovetri
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_ttris
	call	__bbObjEachFirst
	and	eax,eax
	jz	_14
_64
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_64
_14
	mov	[ebp-8],0
	jmp	_65
_66
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-12],eax
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-16],eax
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-20],eax
	mov	ebx,[ebp+24]
	cmp	[ebp-8],ebx
	jz	_67
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_ttris
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,40
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,44
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,48
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,52
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,56
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,60
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,64
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,68
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,72
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,76
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,80
	mov	[ebx],eax
_67
	add	[ebp-8],1
_65
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcounttriangles
	sub	eax,1
	cmp	[ebp-8],eax
	jle	_66
_15
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fclearsurface
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_ttris
	call	__bbObjEachFirst
	and	eax,eax
	jz	_16
_68
	sub	esp,28
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-24],1
	sub	esp,28
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-24],1
	sub	esp,28
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,68
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,64
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,60
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,80
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,76
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvertextexcoords
	add	[ebp-24],1
	sub	esp,16
	mov	ebx,[ebp-24]
	sub	ebx,2
	mov	[esp+8],ebx
	mov	esi,[ebp-24]
	sub	esi,1
	mov	[esp+12],esi
	mov	esi,[ebp-24]
	sub	esi,3
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_faddtriangle
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_68
_16
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_ttris
	call	__bbObjEachFirst
	and	eax,eax
	jz	_17
_69
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_69
_17
	mov	eax,0
	jmp	_13_leave
_13_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fweld
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,56
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,_70
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[ebp-56],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-56]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	[esp],eax
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	mov	[ebp-4],eax
	mov	[ebp-8],1
	jmp	_71
_72
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],_ttris
	call	__bbObjEachFirst
	and	eax,eax
	jz	_20
_73
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_73
_20
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fcounttriangles
	mov	[ebp-20],eax
	sub	esp,4
	mov	eax,_avt
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-20]
	imul	ebx,3
	mov	esi,_avt
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_avt
	mov	[esp],eax
	call	__bbDimArray
	sub	[ebp-20],1
	mov	[ebp-24],0
	jmp	_74
_75
	sub	esp,12
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-28],eax
	sub	esp,12
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-32],eax
	sub	esp,12
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	[esp+8],2
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_ftrianglevertex
	mov	[ebp-36],eax
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,_ttris
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	[esp+4],ebx
	call	__bbObjStore
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,0
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,4
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,12
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,16
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,20
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,24
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,28
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,32
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,36
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,40
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,44
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,48
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,52
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,56
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,60
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,64
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,68
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,72
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertexu
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,76
	mov	[ebx],eax
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertexv
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,80
	mov	[ebx],eax
	add	[ebp-24],1
_74
	mov	ebx,[ebp-20]
	cmp	[ebp-24],ebx
	jle	_75
_21
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fclearsurface
	mov	[ebp-40],0
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],_ttris
	call	__bbObjEachFirst
	and	eax,eax
	jz	_22
_76
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-40]
	mov	[esp+12],esi
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffindvert
	mov	[ebp-44],eax
	cmp	[ebp-44],-1
	jnz	_77
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1148846080
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1232348160
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1315859240
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_avt]
	mov	[esi],ebx
	sub	esp,28
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,16
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,4
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,24
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-40]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertextexcoords
	mov	ebx,[ebp-40]
	mov	[ebp-44],ebx
	add	[ebp-40],1
_77
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-40]
	mov	[esp+12],esi
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,28
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffindvert
	mov	[ebp-48],eax
	cmp	[ebp-48],-1
	jnz	_78
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1148846080
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1232348160
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,36
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1315859240
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_avt]
	mov	[esi],ebx
	sub	esp,28
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,44
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,40
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,36
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,32
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,52
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,48
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-40]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertextexcoords
	mov	ebx,[ebp-40]
	mov	[ebp-48],ebx
	add	[ebp-40],1
_78
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,64
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-40]
	mov	[esp+12],esi
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,60
	mov	esi,[esi]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,56
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffindvert
	mov	[ebp-52],eax
	cmp	[ebp-52],-1
	jnz	_79
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1148846080
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,60
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1232348160
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,64
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1315859240
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_avt]
	mov	[esi],ebx
	sub	esp,28
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,72
	mov	ebx,[ebx]
	mov	[esp+20],ebx
	mov	[esp+24],1065353216
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,68
	mov	esi,[esi]
	mov	[esp+16],esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,64
	mov	ebx,[ebx]
	mov	[esp+12],ebx
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,60
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,56
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_faddvertex
	sub	esp,24
	mov	[esp+16],0
	mov	[esp+20],1
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,80
	mov	esi,[esi]
	mov	[esp+12],esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,76
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	esi,[ebp-40]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fvertextexcoords
	mov	ebx,[ebp-40]
	mov	[ebp-52],ebx
	add	[ebp-40],1
_79
	sub	esp,16
	mov	ebx,[ebp-48]
	mov	[esp+8],ebx
	mov	esi,[ebp-52]
	mov	[esp+12],esi
	mov	esi,[ebp-44]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_faddtriangle
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_76
_22
	add	[ebp-8],1
_71
	mov	ebx,[ebp-4]
	cmp	[ebp-8],ebx
	jle	_72
_19
	sub	esp,4
	mov	eax,_avt
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_avt
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_avt
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],_ttris
	call	__bbObjEachFirst
	and	eax,eax
	jz	_23
_80
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjDelete
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_80
_23
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	[ebp-56],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-56]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_ffindvert
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1148846080
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1232348160
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1315859240
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	[ebp-8],0
	jmp	_81
_82
	mov	ebx,[ebp-8]
	mov	[ebp-12],ebx
	jmp	_83
_84
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_avt]
	mov	ebx,[ebx]
	cmp	ebx,[ebp-4]
	jnz	_85
	mov	eax,[ebp-12]
	jmp	_24_leave
_85
	add	[ebp-12],10
_83
	mov	ebx,[ebp+32]
	cmp	[ebp-12],ebx
	jle	_84
_26
	add	[ebp-8],1
_81
	cmp	[ebp-8],9
	jle	_82
_25
	mov	eax,-1
	jmp	_24_leave
	mov	eax,0
	jmp	_24_leave
_24_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	4
_ab	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_atxv	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_avt	.dd	0
	.dd	1
	.dd	1
	.dd	0
_27	.db	"weld",0
_34	.db	"unweld",0
_37	.db	"unweld",0
_39	.db	"weld",0
_40	.db	"Brush                    : ",0
_41	.db	" of 2.",0
_42	.db	"Use + or - on Keypad     : Change Brush",0
_43	.db	"click mouse left button  : color with brush on triangle",0
_44	.db	"click mouse right button : weld/unweld",0
_45	.db	"weld/unweld status       : ",0
_46	.db	"statistics               : surf = ",0
_47	.db	" vetrices = ",0
_48	.db	" triangles = ",0
_49	.db	"weld computation time    : ",0
	.align	4
_ttris	.dd	5
_52	.dd	0
	.dd	_52
	.dd	_52
	.dd	0
	.dd	-1
_53	.dd	0
	.dd	_53
	.dd	_53
	.dd	0
	.dd	-1
	.dd	22
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbFltType
	.dd	__bbIntType
_70	.db	"Optimising Please Wait..",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

