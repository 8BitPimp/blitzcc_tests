
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,156
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	mov	[ebp-128],ebx
	mov	[ebp-132],ebx
	mov	[ebp-136],ebx
	mov	[ebp-140],ebx
	mov	[ebp-144],ebx
	mov	[ebp-148],ebx
	mov	[ebp-4],2
	mov	[ebp-8],0
	cmp	[ebp-8],0
	jnz	_10
	mov	[ebp-12],640
	mov	[ebp-16],480
	jmp	_11
_10
	mov	[ebp-12],800
	mov	[ebp-16],600
_11
	sub	esp,12
	mov	eax,_12
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-152],eax
	sub	esp,4
	mov	ebx,_13
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-152]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,16
	mov	[esp+8],16
	mov	esi,[ebp-4]
	mov	[esp+12],esi
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-20],256
	sub	esp,4
	mov	eax,_acol
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-20]
	mov	esi,_acol
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_acol
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],0
	mov	[esp+16],0
	mov	[esp+12],1130758144
	mov	[esp+8],1130758144
	mov	[esp+4],0
	mov	eax,[ebp-20]
	sub	eax,1
	mov	[esp],eax
	call	_fdrawgradientline
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	[ebp-24],0
	jmp	_14
_15
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_freadpixelfast
	shl	eax,byte 3
	mov	ebx,16777215
	and	eax,ebx
	mov	ebx,[ebp-24]
	shl	ebx,byte 2
	add	ebx,[_acol]
	mov	[ebx],eax
	add	[ebp-24],1
_14
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_15
_3
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
_l_2reset
	mov	[ebp-28],1054615798
	mov	[ebp-32],1054615798
	mov	[ebp-36],1078984704
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
_l_2redraw
	call	_fcls
	mov	[ebp-44],0
	jmp	_16
_17
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	ebx,[ebp-44]
	mov	esi,[ebp-16]
	sar	esi,byte 1
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-48],esi
	mov	[ebp-52],0
	jmp	_18
_19
	mov	ebx,[ebp-52]
	mov	esi,[ebp-12]
	sar	esi,byte 1
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-12]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-56],esi
	mov	[ebp-60],0
	mov	[ebp-64],0
	mov	[ebp-68],0
	jmp	_20
_21
	mov	ebx,[ebp-60]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-60]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-64]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fsubp	st(1)
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	sub	esp,4
	mov	eax,[ebp-60]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-64]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	mov	ebx,[ebp-72]
	mov	[ebp-60],ebx
	mov	ebx,[ebp-76]
	mov	[ebp-64],ebx
	mov	eax,[ebp-60]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-60]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-64]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,1128792064
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_22
	jmp	_6
_22
	add	[ebp-68],1
_20
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-68],ebx
	jle	_21
_6
	sub	esp,4
	mov	eax,[ebp-68]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-80],eax
	mov	ebx,[ebp-80]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-84],ebx
	sub	esp,16
	mov	ebx,[ebp-84]
	shl	ebx,byte 2
	add	ebx,[_acol]
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-44]
	mov	[esp+4],esi
	mov	eax,[ebp-52]
	mov	[esp],eax
	call	_fwritepixelfast
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	and	eax,eax
	jz	_23
	call	_fend
_23
	add	[ebp-52],1
_18
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-52],ebx
	jle	_19
_5
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	cmp	[ebp-4],2
	jge	_24
	sub	esp,4
	mov	[esp],1
	call	_fflip
_24
	sub	esp,4
	mov	[esp],1
	call	_fflip
	add	[ebp-44],1
_16
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-44],ebx
	jle	_17
_4
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-88],eax
	sub	esp,40
	mov	eax,[ebp-88]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+28],eax
	mov	[ebp-152],eax
	mov	eax,ebx
	call	_fbackbuffer
	mov	ebx,eax
	mov	eax,[ebp-152]
	mov	[esp+24],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	jmp	_26
_25
	call	_fcls
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-88]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,8
	call	_fmousex
	mov	[esp],eax
	mov	[ebp-152],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-152]
	mov	[esp+4],ebx
	call	_fplot
	sub	esp,40
	call	_fmousex
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	mov	[ebp-152],eax
	sub	esp,4
	mov	ebx,_27
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-152]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-152],eax
	sub	esp,4
	mov	[ebp-156],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-156]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-152]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	cmp	[ebp-92],0
	jnz	_28
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_29
	mov	[ebp-92],1
	call	_fmousex
	mov	[ebp-96],eax
	call	_fmousey
	mov	[ebp-100],eax
_29
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	and	eax,eax
	jz	_30
	call	_fcls
	sub	esp,4
	mov	[esp],1
	call	_fflip
	mov	[ebp-92],0
	jmp	_l_2reset
_30
	jmp	_31
_28
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_32
	call	_fmousex
	mov	[ebp-104],eax
	call	_fmousey
	mov	[ebp-108],eax
	call	_fmousex
	mov	[ebp-112],eax
	call	_fmousey
	mov	[ebp-116],eax
	mov	eax,[ebp-112]
	cmp	[ebp-96],eax
	setg	al
	movzx	eax,al
	mov	[ebp-152],eax
	mov	ebx,[ebp-116]
	cmp	[ebp-100],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-152]
	and	eax,ebx
	and	eax,eax
	jz	_33
	mov	ebx,[ebp-96]
	sub	ebx,[ebp-112]
	mov	esi,[ebp-100]
	sub	esi,[ebp-116]
	cmp	ebx,esi
	jle	_34
	mov	ebx,[ebp-100]
	mov	esi,[ebp-96]
	sub	esi,[ebp-112]
	imul	esi,3
	sar	esi,byte 2
	sub	ebx,esi
	mov	[ebp-108],ebx
	jmp	_35
_34
	mov	eax,[ebp-100]
	sub	eax,[ebp-116]
	shl	eax,byte 2
	mov	ecx,3
	cdq
	idiv	ecx
	mov	ebx,[ebp-96]
	sub	ebx,eax
	mov	[ebp-104],ebx
_35
_33
	mov	eax,[ebp-112]
	cmp	[ebp-96],eax
	setle	al
	movzx	eax,al
	mov	[ebp-152],eax
	mov	ebx,[ebp-116]
	cmp	[ebp-100],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-152]
	and	eax,ebx
	and	eax,eax
	jz	_36
	mov	ebx,[ebp-112]
	sub	ebx,[ebp-96]
	mov	esi,[ebp-100]
	sub	esi,[ebp-116]
	cmp	ebx,esi
	jle	_37
	mov	ebx,[ebp-96]
	sub	ebx,[ebp-112]
	imul	ebx,3
	sar	ebx,byte 2
	add	ebx,[ebp-100]
	mov	[ebp-108],ebx
	jmp	_38
_37
	mov	eax,[ebp-100]
	sub	eax,[ebp-116]
	shl	eax,byte 2
	mov	ecx,3
	cdq
	idiv	ecx
	add	eax,[ebp-96]
	mov	[ebp-104],eax
_38
_36
	mov	eax,[ebp-112]
	cmp	[ebp-96],eax
	setg	al
	movzx	eax,al
	mov	[ebp-152],eax
	mov	ebx,[ebp-116]
	cmp	[ebp-100],ebx
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-152]
	and	eax,ebx
	and	eax,eax
	jz	_39
	mov	ebx,[ebp-96]
	sub	ebx,[ebp-112]
	mov	esi,[ebp-116]
	sub	esi,[ebp-100]
	cmp	ebx,esi
	jle	_40
	mov	ebx,[ebp-96]
	sub	ebx,[ebp-112]
	imul	ebx,3
	sar	ebx,byte 2
	add	ebx,[ebp-100]
	mov	[ebp-108],ebx
	jmp	_41
_40
	mov	eax,[ebp-100]
	sub	eax,[ebp-116]
	shl	eax,byte 2
	mov	ecx,3
	cdq
	idiv	ecx
	add	eax,[ebp-96]
	mov	[ebp-104],eax
_41
_39
	mov	eax,[ebp-112]
	cmp	[ebp-96],eax
	setle	al
	movzx	eax,al
	mov	[ebp-152],eax
	mov	ebx,[ebp-116]
	cmp	[ebp-100],ebx
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-152]
	and	eax,ebx
	and	eax,eax
	jz	_42
	mov	ebx,[ebp-112]
	sub	ebx,[ebp-96]
	mov	esi,[ebp-116]
	sub	esi,[ebp-100]
	cmp	ebx,esi
	jle	_43
	mov	ebx,[ebp-100]
	mov	esi,[ebp-96]
	sub	esi,[ebp-112]
	imul	esi,3
	sar	esi,byte 2
	sub	ebx,esi
	mov	[ebp-108],ebx
	jmp	_44
_43
	mov	eax,[ebp-100]
	sub	eax,[ebp-116]
	shl	eax,byte 2
	mov	ecx,3
	cdq
	idiv	ecx
	mov	ebx,[ebp-96]
	sub	ebx,eax
	mov	[ebp-104],ebx
_44
_42
	mov	ebx,[ebp-96]
	mov	[ebp-120],ebx
	mov	ebx,[ebp-100]
	mov	[ebp-124],ebx
	sub	esp,4
	mov	eax,[ebp-104]
	sub	eax,[ebp-96]
	mov	[esp],eax
	call	__bbAbs
	mov	[ebp-128],eax
	sub	esp,4
	mov	eax,[ebp-108]
	sub	eax,[ebp-100]
	mov	[esp],eax
	call	__bbAbs
	mov	[ebp-132],eax
	mov	ebx,[ebp-96]
	cmp	[ebp-104],ebx
	jge	_45
	mov	ebx,[ebp-104]
	mov	[ebp-120],ebx
_45
	mov	ebx,[ebp-100]
	cmp	[ebp-108],ebx
	jge	_46
	mov	ebx,[ebp-108]
	mov	[ebp-124],ebx
_46
	sub	esp,20
	mov	ebx,[ebp-132]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-128]
	mov	[esp+8],esi
	mov	ebx,[ebp-124]
	mov	[esp+4],ebx
	mov	eax,[ebp-120]
	mov	[esp],eax
	call	_frect
	jmp	_47
_32
	mov	[ebp-92],0
	sub	esp,4
	mov	eax,[ebp-96]
	sub	eax,[ebp-104]
	mov	[esp],eax
	call	__bbAbs
	cmp	eax,4
	setg	al
	movzx	eax,al
	mov	[ebp-152],eax
	mov	[ebp-156],eax
	sub	esp,4
	mov	ebx,[ebp-100]
	sub	ebx,[ebp-108]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbAbs
	mov	ebx,eax
	mov	eax,[ebp-156]
	cmp	ebx,3
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-152]
	and	eax,ebx
	and	eax,eax
	jz	_48
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-128]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-12]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-136],ebx
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-132]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-140],ebx
	mov	ebx,[ebp-128]
	sar	ebx,byte 1
	add	ebx,[ebp-120]
	mov	esi,[ebp-12]
	sar	esi,byte 1
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-12]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-144],esi
	mov	ebx,[ebp-132]
	sar	ebx,byte 1
	add	ebx,[ebp-124]
	mov	esi,[ebp-16]
	sar	esi,byte 1
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-148],esi
	mov	ebx,[ebp-136]
	mov	[ebp-36],ebx
	mov	ebx,[ebp-140]
	mov	[ebp-40],ebx
	mov	ebx,[ebp-144]
	mov	[ebp-28],ebx
	mov	ebx,[ebp-148]
	mov	[ebp-32],ebx
	call	_fcls
	sub	esp,4
	mov	[esp],1
	call	_fflip
	jmp	_l_2redraw
_48
_47
_31
	sub	esp,4
	mov	[esp],1
	call	_fflip
_26
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_25
_7
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawgradientline
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+36]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-4],esi
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+40]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-8],esi
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+44]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-12],esi
	mov	[ebp-16],0
	jmp	_49
_50
	sub	esp,12
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp+24]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-16]
	mov	[esp+8],ebx
	mov	[esp+12],5
	mov	[esp+4],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fline
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+24],ebx
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+28],ebx
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+32],ebx
	add	[ebp-16],1
_49
	mov	ebx,[ebp+20]
	cmp	[ebp-16],ebx
	jle	_50
_9
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 28
_12	.db	"Burning Ship Fractal",0
_13	.db	"",0
	.align	4
_acol	.dd	0
	.dd	1
	.dd	1
	.dd	0
_27	.db	"-",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

