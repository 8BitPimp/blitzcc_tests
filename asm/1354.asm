
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,80
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	sub	esp,4
	mov	eax,_3
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-36],eax
	sub	esp,4
	mov	eax,_4
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-40],eax
	sub	esp,4
	mov	eax,_5
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-44],eax
	sub	esp,4
	mov	eax,_6
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-48],eax
	sub	esp,4
	mov	eax,_7
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-52],eax
	sub	esp,4
	mov	eax,_8
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-56],eax
	sub	esp,4
	mov	eax,_9
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-60],eax
	mov	[_vgw],640
	mov	[_vgh],480
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	esi,[_vgh]
	mov	[esp+4],esi
	mov	eax,[_vgw]
	mov	[esp],eax
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fhidepointer
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],16
	sub	esp,4
	mov	eax,_14
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetfont
	mov	[ebp-8],-1090519040
	mov	[ebp-12],1045220557
	mov	[ebp-16],0
	mov	[ebp-20],0
	mov	[ebp-24],1097859072
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],1084227584
	jmp	_16
_15
	call	_fmousex
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	mov	ebx,[_vgh]
	call	_fmousey
	sub	ebx,eax
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	mov	[ebp-80],eax
	sub	esp,4
	mov	[esp],2
	mov	eax,ebx
	call	_fmousedown
	mov	ebx,eax
	mov	eax,[ebp-80]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,1036831949
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	mov	eax,[ebp-24]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_17
	mov	[ebp-24],0
_17
	sub	esp,20
	mov	ebx,[ebp-28]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-24]
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fcalcgunangle
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,0
	add	ebx,[ebp-36]
	mov	[ebx],eax
	sub	esp,20
	mov	ebx,[ebp-28]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-24]
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fcalcgunangle
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,4
	add	ebx,[ebp-36]
	mov	[ebx],eax
	call	_fcls
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],0
	mov	esi,[_vgh]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,[ebp-20]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,[ebp-32]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
	mov	[ebp-64],0
	jmp	_18
_19
	sub	esp,16
	mov	eax,[ebp-64]
	shl	eax,byte 2
	add	eax,[ebp-36]
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp],eax
	call	_fupper
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,_21
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_20
	mov	ebx,0
	mov	esi,[ebp-64]
	shl	esi,byte 2
	add	esi,[ebp-40]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-64]
	shl	esi,byte 2
	add	esi,[ebp-44]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-64]
	shl	esi,byte 2
	add	esi,[ebp-48]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-64]
	shl	esi,byte 2
	add	esi,[ebp-52]
	mov	[esi],ebx
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-64]
	shl	eax,byte 2
	add	eax,[ebp-36]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcos
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	shl	esi,byte 2
	add	esi,[ebp-56]
	mov	[esi],ebx
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-64]
	shl	eax,byte 2
	add	eax,[ebp-36]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fsin
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	shl	esi,byte 2
	add	esi,[ebp-60]
	mov	[esi],ebx
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	eax,255
	imul	eax,[ebp-64]
	mov	[esp],eax
	call	_fcolor
	mov	[ebp-68],1065353216
	jmp	_22
_23
	mov	ebx,[ebp-64]
	shl	ebx,byte 2
	add	ebx,[ebp-56]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	shl	esi,byte 2
	add	esi,[ebp-48]
	mov	[esi],ebx
	mov	ebx,[ebp-28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1056964608
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	sub	esp,8
	mov	eax,[ebp-68]
	mov	[esp],eax
	mov	[esp+4],1073741824
	call	__bbFPow
	fmulp	st(1)
	mov	esi,[ebp-64]
	shl	esi,byte 2
	add	esi,[ebp-60]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-68]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	ebx,[ebp-64]
	shl	ebx,byte 2
	add	ebx,[ebp-52]
	mov	[ebx],esi
	sub	esp,16
	mov	ebx,[_vgh]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	shl	esi,byte 2
	add	esi,[ebp-44]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[_vgh]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,[ebp-64]
	shl	edi,byte 2
	add	edi,[ebp-52]
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	edi,[ebp-64]
	shl	edi,byte 2
	add	edi,[ebp-48]
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	push	edi
	fistp	[esp]
	pop	edi
	mov	[esp+8],edi
	mov	eax,[ebp-64]
	shl	eax,byte 2
	add	eax,[ebp-40]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	mov	ebx,[ebp-64]
	shl	ebx,byte 2
	add	ebx,[ebp-48]
	mov	ebx,[ebx]
	mov	esi,[ebp-64]
	shl	esi,byte 2
	add	esi,[ebp-40]
	mov	[esi],ebx
	mov	ebx,[ebp-64]
	shl	ebx,byte 2
	add	ebx,[ebp-52]
	mov	ebx,[ebx]
	mov	esi,[ebp-64]
	shl	esi,byte 2
	add	esi,[ebp-44]
	mov	[esi],ebx
	mov	ebx,[ebp-68]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-68],ebx
_22
	mov	eax,[ebp-68]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1148846080
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_23
_12
_20
	add	[ebp-64],1
_18
	cmp	[ebp-64],1
	jle	_19
_11
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	mov	[ebp-72],0
	mov	[ebp-76],0
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_24
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[ebp-76]
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_ftext
	call	_ffontheight
	add	[ebp-76],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_25
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	ebx,[ebp-76]
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_ftext
	call	_ffontheight
	add	[ebp-76],eax
	sub	esp,32
	mov	eax,_26
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	ebx,[ebp-76]
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_ftext
	call	_ffontheight
	add	[ebp-76],eax
	sub	esp,32
	mov	eax,_27
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	ebx,[ebp-76]
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_ftext
	call	_ffontheight
	add	[ebp-76],eax
	sub	esp,32
	mov	eax,_28
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	ebx,[ebp-76]
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_ftext
	call	_ffontheight
	add	[ebp-76],eax
	sub	esp,32
	mov	eax,_29
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	ebx,[ebp-76]
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_ftext
	call	_ffontheight
	add	[ebp-76],eax
	sub	esp,32
	mov	eax,_30
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,0
	add	ebx,[ebp-36]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	ebx,[ebp-76]
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_ftext
	call	_ffontheight
	add	[ebp-76],eax
	sub	esp,32
	mov	eax,_31
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-80],eax
	sub	esp,4
	mov	ebx,4
	add	ebx,[ebp-36]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	ebx,[ebp-76]
	mov	[esp+4],ebx
	mov	eax,[ebp-72]
	mov	[esp],eax
	call	_ftext
	call	_ffontheight
	add	[ebp-76],eax
	sub	esp,4
	mov	[esp],1
	call	_fflip
_16
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_15
_10
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreefont
	call	_fendgraphics
	call	_fend
	ret
_2_leave
	mov	[ebp-80],eax
	sub	esp,8
	mov	ebx,[ebp-56]
	mov	[esp],ebx
	mov	[esp+4],_8
	mov	eax,ebx
	call	__bbVecFree
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,8
	mov	esi,[ebp-60]
	mov	[esp],esi
	mov	[esp+4],_9
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,8
	mov	esi,[ebp-52]
	mov	[esp],esi
	mov	[esp+4],_7
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,8
	mov	ebx,[ebp-48]
	mov	[esp],ebx
	mov	[esp+4],_6
	mov	eax,ebx
	call	__bbVecFree
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,8
	mov	esi,[ebp-44]
	mov	[esp],esi
	mov	[esp+4],_5
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,8
	mov	ebx,[ebp-40]
	mov	[esp],ebx
	mov	[esp+4],_4
	mov	eax,ebx
	call	__bbVecFree
	mov	ebx,eax
	mov	eax,[ebp-80]
	mov	[ebp-80],eax
	sub	esp,8
	mov	esi,[ebp-36]
	mov	[esp],esi
	mov	[esp+4],_3
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-80]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcalcgunangle
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1056964608
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+32],ebx
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	cmp	[ebp+36],0
	jle	_32
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1082130432
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,1082130432
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	jmp	_33
_32
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1082130432
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	faddp	st(1)
	mov	ebx,1082130432
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	fchs
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
_33
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-12]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	fdivp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-24],esi
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fsqr
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-28],eax
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-28]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	sub	esp,8
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	call	_fatan2
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_13_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_13_leave
_13_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	4
_vgw	.dd	0
	.align	4
_vgh	.dd	0
_14	.db	"Courier",0
	.align	4
_3	.dd	6
	.dd	2
	.dd	__bbFltType
	.align	4
_4	.dd	6
	.dd	2
	.dd	__bbFltType
	.align	4
_5	.dd	6
	.dd	2
	.dd	__bbFltType
	.align	4
_6	.dd	6
	.dd	2
	.dd	__bbFltType
	.align	4
_7	.dd	6
	.dd	2
	.dd	__bbFltType
	.align	4
_8	.dd	6
	.dd	2
	.dd	__bbFltType
	.align	4
_9	.dd	6
	.dd	2
	.dd	__bbFltType
_21	.db	"NAN",0
_24	.db	"Move mouse to change target position.",0
_25	.db	"Mouse left/right button to change speed.",0
_26	.db	"X = ",0
_27	.db	"Y = ",0
_28	.db	"Speed = ",0
_29	.db	"Acceleration = ",0
_30	.db	"Grazing angle = ",0
_31	.db	"Curved angle = ",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

