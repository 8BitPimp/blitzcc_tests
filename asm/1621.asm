
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,160
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	mov	[ebp-128],ebx
	mov	[ebp-132],ebx
	mov	[ebp-136],ebx
	mov	[ebp-140],ebx
	mov	[ebp-144],ebx
	mov	[ebp-148],ebx
	mov	[ebp-152],ebx
	mov	[ebp-4],2
	mov	[ebp-8],0
	cmp	[ebp-8],0
	jnz	_12
	mov	[ebp-12],640
	mov	[ebp-16],480
	jmp	_13
_12
	mov	[ebp-12],800
	mov	[ebp-16],600
_13
	sub	esp,12
	mov	eax,_14
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-156],eax
	sub	esp,4
	mov	ebx,_15
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-156]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,16
	mov	[esp+8],16
	mov	esi,[ebp-4]
	mov	[esp+12],esi
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-20],24
	sub	esp,4
	mov	eax,_acol
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-20]
	mov	esi,_acol
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_acol
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,28
	mov	[esp+20],0
	mov	[esp+24],0
	mov	[esp+16],0
	mov	[esp+12],1128792064
	mov	[esp+8],1128792064
	mov	[esp+4],0
	mov	eax,[ebp-20]
	sub	eax,1
	mov	[esp],eax
	call	_fdrawgradientline
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	[ebp-24],0
	jmp	_16
_17
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	ebx,[ebp-24]
	shl	ebx,byte 2
	add	ebx,[_acol]
	mov	[ebx],eax
	add	[ebp-24],1
_16
	mov	ebx,[ebp-20]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_17
_3
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	mov	[ebp-28],500
	mov	[ebp-32],500
	mov	[ebp-36],1077516698
_l_2reset
	sub	esp,4
	mov	eax,[ebp-36]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1082130432
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,[ebp-16]
	push	ebx
	fild	[esp]
	pop	ebx
	fdivrp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],0
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],1065353216
	mov	[ebp-56],0
	mov	[ebp-60],0
_l_2redraw
	mov	ebx,[ebp-36]
	mov	[ebp-64],ebx
	mov	ebx,1082130432
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-60]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1065353216
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	fmulp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-64],esi
	mov	[ebp-68],1053609165
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-32]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	mov	eax,[ebp-72]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,878100373
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_18
	mov	[ebp-72],878100373
_18
	mov	[ebp-76],0
	mov	[ebp-80],0
	mov	[ebp-84],0
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fclscolor
	call	_fcls
	sub	esp,32
	mov	eax,_19
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-156],eax
	sub	esp,4
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-156]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	jmp	_21
_20
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	[ebp-88],1
	jmp	_22
_23
	mov	[ebp-24],1
	jmp	_24
_25
	mov	ebx,[ebp-68]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-68]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-68],ebx
	add	[ebp-24],1
_24
	mov	ebx,[ebp-28]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_25
_6
	add	[ebp-76],1
	mov	[ebp-24],1
	jmp	_26
_27
	mov	ebx,[ebp-68]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-68]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-68],ebx
	sub	esp,8
	mov	eax,[ebp-76]
	mov	[esp],eax
	mov	[esp+4],15
	call	__bbMod
	add	eax,1
	mov	[ebp-92],eax
	add	[ebp-76],1
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-44]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-80],ebx
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-84],ebx
	cmp	[ebp-80],0
	setge	al
	movzx	eax,al
	mov	[ebp-156],eax
	mov	ebx,[ebp-12]
	cmp	[ebp-80],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-156]
	and	eax,ebx
	mov	[ebp-156],eax
	cmp	[ebp-84],0
	mov	eax,ebx
	setge	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-156]
	and	eax,ebx
	mov	[ebp-156],eax
	mov	ebx,[ebp-16]
	cmp	[ebp-84],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-156]
	and	eax,ebx
	and	eax,eax
	jz	_28
	sub	esp,16
	mov	ebx,[ebp-92]
	shl	ebx,byte 2
	add	ebx,[_acol]
	mov	ebx,[ebx]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-84]
	mov	[esp+4],esi
	mov	eax,[ebp-80]
	mov	[esp],eax
	call	_fwritepixelfast
_28
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	and	eax,eax
	jz	_29
	call	_fend
_29
	add	[ebp-24],1
_26
	mov	ebx,[ebp-32]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_27
_7
	cmp	[ebp-84],-20
	jge	_30
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1092616192
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-64],esi
	jmp	_31
_30
	mov	ebx,[ebp-64]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-72]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-64],ebx
_31
	mov	[ebp-24],1
	jmp	_32
_33
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	mov	esi,[ebp-24]
	imul	esi,[ebp-24]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	eax,[ebp-16]
	sar	eax,byte 2
	add	eax,[ebp-84]
	push	eax
	fild	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_34
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-24]
	imul	esi,[ebp-24]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-64]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-64],esi
_34
	add	[ebp-24],1
_32
	cmp	[ebp-24],8
	jle	_33
_8
	add	[ebp-88],1
_22
	cmp	[ebp-88],16
	jle	_23
_5
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	cmp	[ebp-4],2
	jge	_35
	sub	esp,4
	mov	[esp],1
	call	_fflip
_35
	sub	esp,4
	mov	[esp],1
	call	_fflip
	mov	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-84],ebx
	jle	_36
	jmp	_4
_36
_21
	mov	eax,[ebp-64]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1082130432
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	and	eax,eax
	jnz	_20
_4
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-96],eax
	sub	esp,40
	mov	eax,[ebp-96]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+28],eax
	mov	[ebp-156],eax
	mov	eax,ebx
	call	_fbackbuffer
	mov	ebx,eax
	mov	eax,[ebp-156]
	mov	[esp+24],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	jmp	_38
_37
	call	_fcls
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-96]
	mov	[esp],eax
	call	_fdrawimage
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolor
	sub	esp,8
	call	_fmousex
	mov	[esp],eax
	mov	[ebp-156],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-156]
	mov	[esp+4],ebx
	call	_fplot
	sub	esp,40
	call	_fmousex
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	mov	[ebp-156],eax
	sub	esp,4
	mov	ebx,_39
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-156]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-156],eax
	sub	esp,4
	mov	[ebp-160],eax
	mov	eax,ebx
	call	_fmousey
	mov	ebx,eax
	mov	eax,[ebp-160]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-156]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],112
	call	_ftext
	cmp	[ebp-100],0
	jnz	_40
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_41
	mov	[ebp-100],1
	call	_fmousex
	mov	[ebp-104],eax
	call	_fmousey
	mov	[ebp-108],eax
_41
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	and	eax,eax
	jz	_42
	call	_fcls
	sub	esp,4
	mov	[esp],1
	call	_fflip
	mov	[ebp-100],0
	jmp	_l_2reset
_42
	jmp	_43
_40
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_44
	call	_fmousex
	mov	[ebp-112],eax
	call	_fmousey
	mov	[ebp-116],eax
	call	_fmousex
	mov	[ebp-120],eax
	call	_fmousey
	mov	[ebp-124],eax
	mov	eax,[ebp-120]
	cmp	[ebp-104],eax
	setg	al
	movzx	eax,al
	mov	[ebp-156],eax
	mov	ebx,[ebp-124]
	cmp	[ebp-108],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-156]
	and	eax,ebx
	and	eax,eax
	jz	_45
	mov	ebx,[ebp-104]
	sub	ebx,[ebp-120]
	mov	esi,[ebp-108]
	sub	esi,[ebp-124]
	cmp	ebx,esi
	jle	_46
	mov	ebx,[ebp-108]
	mov	esi,[ebp-104]
	sub	esi,[ebp-120]
	imul	esi,3
	sar	esi,byte 2
	sub	ebx,esi
	mov	[ebp-116],ebx
	jmp	_47
_46
	mov	eax,[ebp-108]
	sub	eax,[ebp-124]
	shl	eax,byte 2
	mov	ecx,3
	cdq
	idiv	ecx
	mov	ebx,[ebp-104]
	sub	ebx,eax
	mov	[ebp-112],ebx
_47
_45
	mov	eax,[ebp-120]
	cmp	[ebp-104],eax
	setle	al
	movzx	eax,al
	mov	[ebp-156],eax
	mov	ebx,[ebp-124]
	cmp	[ebp-108],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-156]
	and	eax,ebx
	and	eax,eax
	jz	_48
	mov	ebx,[ebp-120]
	sub	ebx,[ebp-104]
	mov	esi,[ebp-108]
	sub	esi,[ebp-124]
	cmp	ebx,esi
	jle	_49
	mov	ebx,[ebp-104]
	sub	ebx,[ebp-120]
	imul	ebx,3
	sar	ebx,byte 2
	add	ebx,[ebp-108]
	mov	[ebp-116],ebx
	jmp	_50
_49
	mov	eax,[ebp-108]
	sub	eax,[ebp-124]
	shl	eax,byte 2
	mov	ecx,3
	cdq
	idiv	ecx
	add	eax,[ebp-104]
	mov	[ebp-112],eax
_50
_48
	mov	eax,[ebp-120]
	cmp	[ebp-104],eax
	setg	al
	movzx	eax,al
	mov	[ebp-156],eax
	mov	ebx,[ebp-124]
	cmp	[ebp-108],ebx
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-156]
	and	eax,ebx
	and	eax,eax
	jz	_51
	mov	ebx,[ebp-104]
	sub	ebx,[ebp-120]
	mov	esi,[ebp-124]
	sub	esi,[ebp-108]
	cmp	ebx,esi
	jle	_52
	mov	ebx,[ebp-104]
	sub	ebx,[ebp-120]
	imul	ebx,3
	sar	ebx,byte 2
	add	ebx,[ebp-108]
	mov	[ebp-116],ebx
	jmp	_53
_52
	mov	eax,[ebp-108]
	sub	eax,[ebp-124]
	shl	eax,byte 2
	mov	ecx,3
	cdq
	idiv	ecx
	add	eax,[ebp-104]
	mov	[ebp-112],eax
_53
_51
	mov	eax,[ebp-120]
	cmp	[ebp-104],eax
	setle	al
	movzx	eax,al
	mov	[ebp-156],eax
	mov	ebx,[ebp-124]
	cmp	[ebp-108],ebx
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-156]
	and	eax,ebx
	and	eax,eax
	jz	_54
	mov	ebx,[ebp-120]
	sub	ebx,[ebp-104]
	mov	esi,[ebp-124]
	sub	esi,[ebp-108]
	cmp	ebx,esi
	jle	_55
	mov	ebx,[ebp-108]
	mov	esi,[ebp-104]
	sub	esi,[ebp-120]
	imul	esi,3
	sar	esi,byte 2
	sub	ebx,esi
	mov	[ebp-116],ebx
	jmp	_56
_55
	mov	eax,[ebp-108]
	sub	eax,[ebp-124]
	shl	eax,byte 2
	mov	ecx,3
	cdq
	idiv	ecx
	mov	ebx,[ebp-104]
	sub	ebx,eax
	mov	[ebp-112],ebx
_56
_54
	mov	ebx,[ebp-104]
	mov	[ebp-128],ebx
	mov	ebx,[ebp-108]
	mov	[ebp-132],ebx
	sub	esp,4
	mov	eax,[ebp-112]
	sub	eax,[ebp-104]
	mov	[esp],eax
	call	__bbAbs
	mov	[ebp-136],eax
	sub	esp,4
	mov	eax,[ebp-116]
	sub	eax,[ebp-108]
	mov	[esp],eax
	call	__bbAbs
	mov	[ebp-140],eax
	mov	ebx,[ebp-104]
	cmp	[ebp-112],ebx
	jge	_57
	mov	ebx,[ebp-112]
	mov	[ebp-128],ebx
_57
	mov	ebx,[ebp-108]
	cmp	[ebp-116],ebx
	jge	_58
	mov	ebx,[ebp-116]
	mov	[ebp-132],ebx
_58
	sub	esp,20
	mov	ebx,[ebp-140]
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[ebp-136]
	mov	[esp+8],esi
	mov	ebx,[ebp-132]
	mov	[esp+4],ebx
	mov	eax,[ebp-128]
	mov	[esp],eax
	call	_frect
	jmp	_59
_44
	mov	[ebp-100],0
	sub	esp,4
	mov	eax,[ebp-104]
	sub	eax,[ebp-112]
	mov	[esp],eax
	call	__bbAbs
	cmp	eax,4
	setg	al
	movzx	eax,al
	mov	[ebp-156],eax
	mov	[ebp-160],eax
	sub	esp,4
	mov	ebx,[ebp-108]
	sub	ebx,[ebp-116]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbAbs
	mov	ebx,eax
	mov	eax,[ebp-160]
	cmp	ebx,3
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-156]
	and	eax,ebx
	and	eax,eax
	jz	_60
	mov	ebx,[ebp-128]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-56]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-56],esi
	mov	ebx,[ebp-132]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-60]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-60],esi
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-140]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-52],ebx
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-140]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-144],ebx
	mov	ebx,[ebp-144]
	mov	[ebp-40],ebx
	mov	ebx,[ebp-56]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-148],ebx
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-60]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-52]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-152],ebx
	mov	ebx,[ebp-148]
	mov	[ebp-44],ebx
	mov	ebx,[ebp-152]
	mov	[ebp-48],ebx
	call	_fcls
	sub	esp,4
	mov	[esp],1
	call	_fflip
	jmp	_l_2redraw
_60
_59
_43
	sub	esp,4
	mov	[esp],1
	call	_fflip
_38
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jz	_37
_9
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawgradientline
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+36]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-4],esi
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+40]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-8],esi
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+44]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-12],esi
	mov	[ebp-16],0
	jmp	_61
_62
	sub	esp,12
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	eax,[ebp+24]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-16]
	mov	[esp+8],ebx
	mov	[esp+12],5
	mov	[esp+4],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fline
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+24],ebx
	mov	ebx,[ebp+28]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+28],ebx
	mov	ebx,[ebp+32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp+32],ebx
	add	[ebp-16],1
_61
	mov	ebx,[ebp+20]
	cmp	[ebp-16],ebx
	jle	_62
_11
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 28
_14	.db	"Logistic Equation Bifurcation Diagram",0
_15	.db	"",0
	.align	4
_acol	.dd	0
	.dd	1
	.dd	1
	.dd	0
_19	.db	"scale=",0
_39	.db	"-",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

