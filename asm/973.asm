
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,12
	mov	eax,_26
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_27
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	_fapptitle
	mov	[_vsw],800
	mov	[_vsh],600
	mov	[_vcd],32
	sub	esp,16
	mov	ebx,[_vcd]
	mov	[esp+8],ebx
	mov	[esp+12],2
	mov	esi,[_vsh]
	mov	[esp+4],esi
	mov	eax,[_vsw]
	mov	[esp],eax
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	eax,_avecs
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_avecs
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_avecs
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_apal
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_apal
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_apal
	mov	[esp],eax
	call	__bbDimArray
	mov	[_vmaskred],16711680
	mov	[_vmaskgrn],65280
	mov	[_vmaskblu],255
	sub	esp,20
	mov	[esp+12],1
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],40
	sub	esp,4
	mov	eax,_28
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-4],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],18
	sub	esp,4
	mov	eax,_29
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[ebp-8],eax
	call	_fcls
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	ebx,[_vsh]
	sub	ebx,1
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vsw]
	sub	esi,1
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_30
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	mov	[ebp-16],eax
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringheight
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	mov	ebx,[_vsw]
	sub	ebx,[ebp-16]
	shr	ebx,byte 1
	mov	[ebp-24],ebx
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_ftext
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_31
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],46
	mov	[esp],350
	call	_ftext
	sub	esp,16
	mov	ebx,[ebp-16]
	mov	[esp+8],ebx
	mov	esi,[ebp-20]
	mov	[esp+12],esi
	mov	[esp+4],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fgetimg
	sub	esp,20
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	esi,[ebp-20]
	mov	[esp+16],esi
	mov	[esp+8],100
	mov	[esp+4],10
	mov	[esp],0
	call	_frotateimg
	sub	esp,20
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	esi,[ebp-20]
	mov	[esp+16],esi
	mov	esi,100
	add	esi,[ebp-20]
	mov	[esp+8],esi
	mov	ebx,10
	add	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp],90
	call	_frotateimg
	sub	esp,20
	mov	ebx,100
	add	ebx,[ebp-16]
	mov	esi,[ebp-20]
	shl	esi,byte 1
	add	ebx,esi
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	edi,[ebp-20]
	mov	[esp+16],edi
	mov	esi,10
	add	esi,[ebp-16]
	mov	[esp+4],esi
	mov	[esp],180
	call	_frotateimg
	sub	esp,20
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	esi,[ebp-20]
	mov	[esp+16],esi
	mov	esi,100
	add	esi,[ebp-16]
	add	esi,[ebp-20]
	mov	[esp+8],esi
	mov	[esp+4],10
	mov	[esp],270
	call	_frotateimg
	sub	esp,32
	mov	[esp+24],0
	mov	[esp+28],0
	mov	[esp+20],255
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	[esp+8],100
	mov	[esp+4],210
	mov	[esp],0
	call	_fmaskimg
	sub	esp,32
	mov	[esp+24],0
	mov	[esp+28],0
	mov	[esp+20],255
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	ebx,100
	add	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	esi,210
	add	esi,[ebp-16]
	mov	[esp+4],esi
	mov	[esp],90
	call	_fmaskimg
	sub	esp,32
	mov	ebx,100
	add	ebx,[ebp-16]
	mov	esi,[ebp-20]
	shl	esi,byte 1
	add	ebx,esi
	mov	[esp+8],ebx
	mov	[esp+24],0
	mov	[esp+28],0
	mov	[esp+20],255
	mov	esi,[ebp-20]
	mov	[esp+16],esi
	mov	edi,[ebp-16]
	mov	[esp+12],edi
	mov	esi,210
	add	esi,[ebp-16]
	mov	[esp+4],esi
	mov	[esp],180
	call	_fmaskimg
	sub	esp,32
	mov	[esp+24],0
	mov	[esp+28],0
	mov	[esp+20],255
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	ebx,100
	add	ebx,[ebp-16]
	add	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	[esp+4],210
	mov	[esp],270
	call	_fmaskimg
	sub	esp,44
	mov	[esp+36],255
	mov	[esp+40],0
	mov	[esp+32],255
	mov	[esp+28],255
	mov	[esp+24],255
	mov	[esp+20],255
	mov	esi,[ebp-20]
	mov	[esp+16],esi
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	[esp+8],100
	mov	[esp+4],410
	mov	[esp],0
	call	_freplacecolor
	sub	esp,44
	mov	[esp+36],255
	mov	[esp+40],0
	mov	[esp+32],255
	mov	[esp+28],255
	mov	[esp+24],255
	mov	[esp+20],255
	mov	esi,[ebp-20]
	mov	[esp+16],esi
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	esi,100
	add	esi,[ebp-20]
	mov	[esp+8],esi
	mov	ebx,410
	add	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp],90
	call	_freplacecolor
	sub	esp,44
	mov	ebx,100
	add	ebx,[ebp-16]
	mov	esi,[ebp-20]
	shl	esi,byte 1
	add	ebx,esi
	mov	[esp+8],ebx
	mov	[esp+36],255
	mov	[esp+40],0
	mov	[esp+32],255
	mov	[esp+28],255
	mov	[esp+24],255
	mov	[esp+20],255
	mov	edi,[ebp-20]
	mov	[esp+16],edi
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	esi,410
	add	esi,[ebp-16]
	mov	[esp+4],esi
	mov	[esp],180
	call	_freplacecolor
	sub	esp,44
	mov	[esp+36],255
	mov	[esp+40],0
	mov	[esp+32],255
	mov	[esp+28],255
	mov	[esp+24],255
	mov	[esp+20],255
	mov	esi,[ebp-20]
	mov	[esp+16],esi
	mov	ebx,[ebp-16]
	mov	[esp+12],ebx
	mov	esi,100
	add	esi,[ebp-16]
	add	esi,[ebp-20]
	mov	[esp+8],esi
	mov	[esp+4],410
	mov	[esp],270
	call	_freplacecolor
	sub	esp,56
	mov	[esp+48],255
	mov	[esp+52],32
	mov	[esp+44],255
	mov	[esp+40],255
	mov	[esp+36],255
	mov	[esp+32],255
	mov	[esp+28],0
	mov	[esp+24],0
	mov	[esp+20],255
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	[esp+8],100
	mov	[esp+4],610
	mov	[esp],0
	call	_fmaskandreplace
	sub	esp,56
	mov	[esp+48],192
	mov	[esp+52],32
	mov	[esp+44],255
	mov	[esp+40],255
	mov	[esp+36],255
	mov	[esp+32],255
	mov	[esp+28],0
	mov	[esp+24],0
	mov	[esp+20],255
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	ebx,100
	add	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	esi,610
	add	esi,[ebp-16]
	mov	[esp+4],esi
	mov	[esp],90
	call	_fmaskandreplace
	sub	esp,56
	mov	ebx,100
	add	ebx,[ebp-16]
	mov	esi,[ebp-20]
	shl	esi,byte 1
	add	ebx,esi
	mov	[esp+8],ebx
	mov	[esp+48],224
	mov	[esp+52],64
	mov	[esp+44],200
	mov	[esp+40],255
	mov	[esp+36],255
	mov	[esp+32],255
	mov	[esp+28],0
	mov	[esp+24],0
	mov	[esp+20],255
	mov	esi,[ebp-20]
	mov	[esp+16],esi
	mov	edi,[ebp-16]
	mov	[esp+12],edi
	mov	esi,610
	add	esi,[ebp-16]
	mov	[esp+4],esi
	mov	[esp],180
	call	_fmaskandreplace
	sub	esp,56
	mov	[esp+48],255
	mov	[esp+52],32
	mov	[esp+44],192
	mov	[esp+40],255
	mov	[esp+36],255
	mov	[esp+32],255
	mov	[esp+28],0
	mov	[esp+24],0
	mov	[esp+20],255
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	ebx,100
	add	ebx,[ebp-16]
	add	ebx,[ebp-20]
	mov	[esp+8],ebx
	mov	[esp+4],610
	mov	[esp],270
	call	_fmaskandreplace
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_32
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],365
	mov	[esp],20
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_33
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],365
	mov	[esp],220
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_34
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],388
	mov	[esp],220
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_35
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],365
	mov	[esp],420
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_36
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],388
	mov	[esp],420
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_37
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],365
	mov	[esp],620
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_38
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],388
	mov	[esp],620
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_39
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],411
	mov	[esp],620
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_40
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],570
	mov	[esp],10
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitmouse
	call	_fflushmouse
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	ebx,[_vsh]
	sub	ebx,1
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vsw]
	sub	esi,1
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_41
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	mov	[ebp-16],eax
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringheight
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	mov	ebx,[_vsw]
	sub	ebx,[ebp-16]
	shr	ebx,byte 1
	mov	[ebp-24],ebx
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_42
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],46
	mov	[esp],40
	call	_ftext
	sub	esp,16
	mov	ebx,[ebp-16]
	mov	[esp+8],ebx
	mov	esi,[ebp-20]
	mov	[esp+12],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_fgetimg
	sub	esp,24
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	[esp+20],2
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	[esp+8],0
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	[esp],0
	call	_fmagnify
	sub	esp,24
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	[esp+20],2
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 1
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	shl	esi,byte 1
	add	esi,[ebp-24]
	sub	esi,2
	mov	[esp+4],esi
	mov	[esp],90
	call	_fmagnify
	sub	esp,24
	mov	ebx,[ebp-16]
	shl	ebx,byte 1
	mov	esi,[ebp-20]
	shl	esi,byte 2
	add	ebx,esi
	sub	ebx,2
	mov	[esp+8],ebx
	mov	esi,[ebp-20]
	mov	[esp+16],esi
	mov	[esp+20],2
	mov	edi,[ebp-16]
	mov	[esp+12],edi
	mov	esi,[ebp-16]
	shl	esi,byte 1
	add	esi,[ebp-24]
	mov	[esp+4],esi
	mov	[esp],180
	call	_fmagnify
	sub	esp,24
	mov	ebx,[ebp-16]
	shl	ebx,byte 1
	mov	esi,[ebp-20]
	shl	esi,byte 1
	add	ebx,esi
	mov	[esp+8],ebx
	mov	esi,[ebp-20]
	mov	[esp+16],esi
	mov	[esp+20],2
	mov	edi,[ebp-16]
	mov	[esp+12],edi
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	[esp],270
	call	_fmagnify
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_43
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],289
	mov	eax,[ebp-24]
	add	eax,175
	mov	[esp],eax
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_44
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],570
	mov	[esp],10
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitmouse
	call	_fflushmouse
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolor
	sub	esp,20
	mov	ebx,[_vsh]
	sub	ebx,1
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vsw]
	sub	esi,1
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,_45
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringwidth
	sub	eax,5
	mov	[ebp-16],eax
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fstringheight
	mov	[ebp-20],eax
	mov	ebx,[_vsw]
	sub	ebx,[ebp-16]
	shr	ebx,byte 1
	mov	[ebp-24],ebx
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	ebx,[ebp-20]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_ftext
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_46
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],100
	call	_ftext
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_47
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],570
	mov	[esp],10
	call	_ftext
	sub	esp,16
	mov	ebx,[ebp-16]
	mov	[esp+8],ebx
	mov	esi,[ebp-20]
	mov	[esp+12],esi
	mov	[esp+4],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fgetimg
	sub	esp,32
	mov	ebx,[ebp-20]
	mov	[esp+24],ebx
	mov	[esp+28],5
	mov	esi,[ebp-16]
	mov	[esp+20],esi
	mov	[esp+16],1135869952
	mov	[esp+12],1127481344
	mov	[esp+8],275
	mov	[esp+4],320
	mov	[esp],400
	call	_fcurveimg
	sub	esp,32
	mov	ebx,[ebp-20]
	mov	[esp+24],ebx
	mov	[esp+28],4
	mov	esi,[ebp-16]
	mov	[esp+20],esi
	mov	[esp+16],1132920832
	mov	[esp+12],1132920832
	mov	[esp+8],225
	mov	[esp+4],320
	mov	[esp],400
	call	_fcurveimg
	sub	esp,32
	mov	ebx,[ebp-20]
	mov	[esp+24],ebx
	mov	[esp+28],4
	mov	esi,[ebp-16]
	mov	[esp+20],esi
	mov	[esp+16],1130430464
	mov	[esp+12],0
	mov	[esp+8],175
	mov	[esp+4],320
	mov	[esp],400
	call	_fcurveimg
	sub	esp,32
	mov	ebx,[ebp-20]
	mov	[esp+24],ebx
	mov	[esp+28],3
	mov	esi,[ebp-16]
	mov	[esp+20],esi
	mov	[esp+16],1132920832
	mov	[esp+12],1119092736
	mov	[esp+8],125
	mov	[esp+4],320
	mov	[esp],400
	call	_fcurveimg
	sub	esp,32
	mov	ebx,[ebp-20]
	mov	[esp+24],ebx
	mov	[esp+28],2
	mov	esi,[ebp-16]
	mov	[esp+20],esi
	mov	[esp+16],1134395392
	mov	[esp+12],1121976320
	mov	[esp+8],75
	mov	[esp+4],320
	mov	[esp],400
	call	_fcurveimg
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitmouse
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreefont
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreefont
	call	_fend
	ret
_2_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fgetimg
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,4
	mov	eax,_avecs
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp+28]
	imul	ebx,[ebp+32]
	shl	ebx,byte 1
	mov	esi,_avecs
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_avecs
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	[ebp-4],-2
	mov	[ebp-8],-1
	mov	[ebp-12],-1
	mov	ebx,[ebp+24]
	mov	[ebp-16],ebx
	jmp	_48
_49
	mov	[ebp-20],0
	mov	ebx,[ebp+20]
	mov	[ebp-24],ebx
	jmp	_50
_51
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[ebp-28],eax
	cmp	[_vcd],16
	jnz	_52
	mov	ebx,[ebp-28]
	mov	esi,16317688
	and	ebx,esi
	mov	[ebp-28],ebx
_52
	add	[ebp-20],1
	mov	eax,[ebp+20]
	cmp	[ebp-24],eax
	setz	al
	movzx	eax,al
	mov	[ebp-36],eax
	mov	ebx,[ebp-12]
	cmp	[ebp-28],ebx
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	or	eax,ebx
	and	eax,eax
	jz	_53
	mov	ebx,[ebp-28]
	mov	[ebp-12],ebx
	mov	[ebp-32],1
	add	[ebp-4],2
	add	[ebp-8],2
	mov	ebx,[ebp-32]
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_avecs]
	mov	[esi],ebx
	mov	ebx,[ebp-28]
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_avecs]
	mov	[esi],ebx
	jmp	_54
_53
	add	[ebp-32],1
	mov	ebx,[ebp-32]
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_avecs]
	mov	[esi],ebx
_54
	add	[ebp-24],1
_50
	mov	ebx,[ebp+20]
	add	ebx,[ebp+28]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_51
_5
	add	[ebp-16],1
_48
	mov	ebx,[ebp+24]
	add	ebx,[ebp+32]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_49
_4
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_frotateimg
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,52
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-52],eax
	cmp	[ebp+20],90
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	mov	[ebp-52],eax
	cmp	[ebp+20],180
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	mov	[ebp-52],eax
	cmp	[ebp+20],270
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	and	eax,eax
	jz	_55
	mov	ebx,[ebp+20]
	add	ebx,90
	mov	[ebp-4],ebx
	mov	[ebp-8],0
	mov	[ebp-12],1
	jmp	_56
_57
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-12]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-12]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	mov	[ebp-24],0
	jmp	_59
_58
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	[ebp-28],ebx
	mov	ebx,[ebp-28]
	add	[ebp-24],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskred]
	and	ebx,esi
	shr	ebx,byte 16
	mov	[ebp-32],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskgrn]
	and	ebx,esi
	shr	ebx,byte 8
	mov	[ebp-36],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskblu]
	and	ebx,esi
	mov	[ebp-40],ebx
	cmp	[_vcd],16
	jnz	_60
	mov	ebx,[ebp-32]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp-32],ebx
	mov	ebx,[ebp-36]
	shr	ebx,byte 2
	shl	ebx,byte 2
	mov	[ebp-36],ebx
	mov	ebx,[ebp-40]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp-40],ebx
_60
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	esi,[ebp-40]
	mov	[esp+8],esi
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fcolor
	sub	esp,4
	mov	eax,[ebp+20]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	eax,[ebp+20]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-48],eax
	sub	esp,16
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	add	[ebp-8],2
	mov	ebx,[ebp-44]
	mov	[ebp-16],ebx
	mov	ebx,[ebp-48]
	mov	[ebp-20],ebx
_59
	mov	ebx,[ebp+32]
	cmp	[ebp-24],ebx
	jl	_58
_8
	add	[ebp-12],1
_56
	mov	ebx,[ebp+36]
	cmp	[ebp-12],ebx
	jle	_57
_7
_55
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fmaskimg
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,52
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-52],eax
	cmp	[ebp+20],90
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	mov	[ebp-52],eax
	cmp	[ebp+20],180
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	mov	[ebp-52],eax
	cmp	[ebp+20],270
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	and	eax,eax
	jz	_61
	cmp	[_vcd],16
	jnz	_62
	mov	ebx,[ebp+40]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp+40],ebx
	mov	ebx,[ebp+44]
	shr	ebx,byte 2
	shl	ebx,byte 2
	mov	[ebp+44],ebx
	mov	ebx,[ebp+48]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp+48],ebx
_62
	mov	ebx,[ebp+20]
	add	ebx,90
	mov	[ebp-4],ebx
	mov	[ebp-8],0
	mov	[ebp-12],1
	jmp	_63
_64
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-12]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-12]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	mov	[ebp-24],0
	jmp	_66
_65
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	[ebp-28],ebx
	mov	ebx,[ebp-28]
	add	[ebp-24],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskred]
	and	ebx,esi
	shr	ebx,byte 16
	mov	[ebp-32],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskgrn]
	and	ebx,esi
	shr	ebx,byte 8
	mov	[ebp-36],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskblu]
	and	ebx,esi
	mov	[ebp-40],ebx
	cmp	[_vcd],16
	jnz	_67
	mov	ebx,[ebp-32]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp-32],ebx
	mov	ebx,[ebp-36]
	shr	ebx,byte 2
	shl	ebx,byte 2
	mov	[ebp-36],ebx
	mov	ebx,[ebp-40]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp-40],ebx
_67
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	esi,[ebp-40]
	mov	[esp+8],esi
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fcolor
	sub	esp,4
	mov	eax,[ebp+20]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	eax,[ebp+20]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-48],eax
	mov	eax,[ebp-32]
	cmp	[ebp+40],eax
	setz	al
	movzx	eax,al
	mov	[ebp-52],eax
	mov	ebx,[ebp-36]
	cmp	[ebp+44],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	and	eax,ebx
	mov	[ebp-52],eax
	mov	ebx,[ebp-40]
	cmp	[ebp+48],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	and	eax,ebx
	and	eax,eax
	jz	_68
	add	[ebp-8],2
	jmp	_69
_68
	sub	esp,16
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	add	[ebp-8],2
_69
	mov	ebx,[ebp-44]
	mov	[ebp-16],ebx
	mov	ebx,[ebp-48]
	mov	[ebp-20],ebx
_66
	mov	ebx,[ebp+32]
	cmp	[ebp-24],ebx
	jl	_65
_11
	add	[ebp-12],1
_63
	mov	ebx,[ebp+36]
	cmp	[ebp-12],ebx
	jle	_64
_10
_61
	mov	eax,0
	jmp	_9_leave
_9_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 32
	.align	16
_freplacecolor
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,52
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-52],eax
	cmp	[ebp+20],90
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	mov	[ebp-52],eax
	cmp	[ebp+20],180
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	mov	[ebp-52],eax
	cmp	[ebp+20],270
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	and	eax,eax
	jz	_70
	cmp	[_vcd],16
	jnz	_71
	mov	ebx,[ebp+40]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp+40],ebx
	mov	ebx,[ebp+44]
	shr	ebx,byte 2
	shl	ebx,byte 2
	mov	[ebp+44],ebx
	mov	ebx,[ebp+48]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp+48],ebx
	mov	ebx,[ebp+52]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp+52],ebx
	mov	ebx,[ebp+56]
	shr	ebx,byte 2
	shl	ebx,byte 2
	mov	[ebp+56],ebx
	mov	ebx,[ebp+60]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp+60],ebx
_71
	mov	ebx,[ebp+20]
	add	ebx,90
	mov	[ebp-4],ebx
	mov	[ebp-8],0
	mov	[ebp-12],1
	jmp	_72
_73
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-12]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-12]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	mov	[ebp-24],0
	jmp	_75
_74
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	[ebp-28],ebx
	mov	ebx,[ebp-28]
	add	[ebp-24],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskred]
	and	ebx,esi
	shr	ebx,byte 16
	mov	[ebp-32],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskgrn]
	and	ebx,esi
	shr	ebx,byte 8
	mov	[ebp-36],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskblu]
	and	ebx,esi
	mov	[ebp-40],ebx
	cmp	[_vcd],16
	jnz	_76
	mov	ebx,[ebp-32]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp-32],ebx
	mov	ebx,[ebp-36]
	shr	ebx,byte 2
	shl	ebx,byte 2
	mov	[ebp-36],ebx
	mov	ebx,[ebp-40]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp-40],ebx
_76
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	esi,[ebp-40]
	mov	[esp+8],esi
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fcolor
	sub	esp,4
	mov	eax,[ebp+20]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	eax,[ebp+20]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-48],eax
	mov	eax,[ebp-32]
	cmp	[ebp+40],eax
	setz	al
	movzx	eax,al
	mov	[ebp-52],eax
	mov	ebx,[ebp-36]
	cmp	[ebp+44],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	and	eax,ebx
	mov	[ebp-52],eax
	mov	ebx,[ebp-40]
	cmp	[ebp+48],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	and	eax,ebx
	and	eax,eax
	jz	_77
	sub	esp,12
	mov	ebx,[ebp+56]
	mov	[esp+4],ebx
	mov	esi,[ebp+60]
	mov	[esp+8],esi
	mov	eax,[ebp+52]
	mov	[esp],eax
	call	_fcolor
_77
	sub	esp,16
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	add	[ebp-8],2
	mov	ebx,[ebp-44]
	mov	[ebp-16],ebx
	mov	ebx,[ebp-48]
	mov	[ebp-20],ebx
_75
	mov	ebx,[ebp+32]
	cmp	[ebp-24],ebx
	jl	_74
_14
	add	[ebp-12],1
_72
	mov	ebx,[ebp+36]
	cmp	[ebp-12],ebx
	jle	_73
_13
_70
	mov	eax,0
	jmp	_12_leave
_12_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 44
	.align	16
_fmaskandreplace
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,52
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-52],eax
	cmp	[ebp+20],90
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	mov	[ebp-52],eax
	cmp	[ebp+20],180
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	mov	[ebp-52],eax
	cmp	[ebp+20],270
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	or	eax,ebx
	and	eax,eax
	jz	_78
	cmp	[_vcd],16
	jnz	_79
	mov	ebx,[ebp+40]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp+40],ebx
	mov	ebx,[ebp+44]
	shr	ebx,byte 2
	shl	ebx,byte 2
	mov	[ebp+44],ebx
	mov	ebx,[ebp+48]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp+48],ebx
	mov	ebx,[ebp+52]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp+52],ebx
	mov	ebx,[ebp+56]
	shr	ebx,byte 2
	shl	ebx,byte 2
	mov	[ebp+56],ebx
	mov	ebx,[ebp+60]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp+60],ebx
	mov	ebx,[ebp+64]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp+64],ebx
	mov	ebx,[ebp+68]
	shr	ebx,byte 2
	shl	ebx,byte 2
	mov	[ebp+68],ebx
	mov	ebx,[ebp+72]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp+72],ebx
_79
	mov	ebx,[ebp+20]
	add	ebx,90
	mov	[ebp-4],ebx
	mov	[ebp-8],0
	mov	[ebp-12],1
	jmp	_80
_81
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-12]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-12]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	mov	[ebp-24],0
	jmp	_83
_82
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	[ebp-28],ebx
	mov	ebx,[ebp-28]
	add	[ebp-24],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskred]
	and	ebx,esi
	shr	ebx,byte 16
	mov	[ebp-32],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskgrn]
	and	ebx,esi
	shr	ebx,byte 8
	mov	[ebp-36],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskblu]
	and	ebx,esi
	mov	[ebp-40],ebx
	cmp	[_vcd],16
	jnz	_84
	mov	ebx,[ebp-32]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp-32],ebx
	mov	ebx,[ebp-36]
	shr	ebx,byte 2
	shl	ebx,byte 2
	mov	[ebp-36],ebx
	mov	ebx,[ebp-40]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp-40],ebx
_84
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	esi,[ebp-40]
	mov	[esp+8],esi
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fcolor
	sub	esp,4
	mov	eax,[ebp+20]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	eax,[ebp+20]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-48],eax
	mov	eax,[ebp-32]
	cmp	[ebp+52],eax
	setz	al
	movzx	eax,al
	mov	[ebp-52],eax
	mov	ebx,[ebp-36]
	cmp	[ebp+56],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	and	eax,ebx
	mov	[ebp-52],eax
	mov	ebx,[ebp-40]
	cmp	[ebp+60],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	and	eax,ebx
	and	eax,eax
	jz	_85
	sub	esp,12
	mov	ebx,[ebp+68]
	mov	[esp+4],ebx
	mov	esi,[ebp+72]
	mov	[esp+8],esi
	mov	eax,[ebp+64]
	mov	[esp],eax
	call	_fcolor
	sub	esp,16
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	add	[ebp-8],2
	jmp	_86
_85
	mov	eax,[ebp-32]
	cmp	[ebp+40],eax
	setz	al
	movzx	eax,al
	mov	[ebp-52],eax
	mov	ebx,[ebp-36]
	cmp	[ebp+44],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	and	eax,ebx
	mov	[ebp-52],eax
	mov	ebx,[ebp-40]
	cmp	[ebp+48],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-52]
	and	eax,ebx
	and	eax,eax
	jz	_87
	add	[ebp-8],2
	jmp	_88
_87
	sub	esp,16
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	add	[ebp-8],2
_88
_86
	mov	ebx,[ebp-44]
	mov	[ebp-16],ebx
	mov	ebx,[ebp-48]
	mov	[ebp-20],ebx
_83
	mov	ebx,[ebp+32]
	cmp	[ebp-24],ebx
	jl	_82
_17
	add	[ebp-12],1
_80
	mov	ebx,[ebp+36]
	cmp	[ebp-12],ebx
	jle	_81
_16
_78
	mov	eax,0
	jmp	_15_leave
_15_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 56
	.align	16
_fmagnify
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,56
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	cmp	[ebp+20],0
	setz	al
	movzx	eax,al
	mov	[ebp-56],eax
	cmp	[ebp+20],90
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-56]
	or	eax,ebx
	mov	[ebp-56],eax
	cmp	[ebp+20],180
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-56]
	or	eax,ebx
	mov	[ebp-56],eax
	cmp	[ebp+20],270
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-56]
	or	eax,ebx
	and	eax,eax
	jz	_89
	cmp	[ebp+40],0
	setg	al
	movzx	eax,al
	mov	[ebp-56],eax
	cmp	[ebp+40],33
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-56]
	and	eax,ebx
	and	eax,eax
	jz	_90
	mov	ebx,[ebp+20]
	add	ebx,90
	mov	[ebp-4],ebx
	mov	[ebp-8],0
	mov	[ebp-12],1
	jmp	_92
_91
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp-12]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp-4]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-12]
	sub	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-20],eax
	mov	[ebp-24],0
	jmp	_94
_93
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	[ebp-28],ebx
	mov	ebx,[ebp-28]
	add	[ebp-24],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskred]
	and	ebx,esi
	shr	ebx,byte 16
	mov	[ebp-32],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskgrn]
	and	ebx,esi
	shr	ebx,byte 8
	mov	[ebp-36],ebx
	mov	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskblu]
	and	ebx,esi
	mov	[ebp-40],ebx
	cmp	[_vcd],16
	jnz	_95
	mov	ebx,[ebp-32]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp-32],ebx
	mov	ebx,[ebp-36]
	shr	ebx,byte 2
	shl	ebx,byte 2
	mov	[ebp-36],ebx
	mov	ebx,[ebp-40]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp-40],ebx
_95
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	esi,[ebp-40]
	mov	[esp+8],esi
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fcolor
	mov	ebx,[ebp+20]
	mov	[ebp-44],ebx
	cmp	[ebp-44],0
	jz	_97
	cmp	[ebp-44],90
	jz	_98
	cmp	[ebp-44],180
	jz	_99
	cmp	[ebp-44],270
	jz	_100
	jmp	_96
_97
	mov	ebx,[ebp+40]
	imul	ebx,[ebp-28]
	mov	[ebp-48],ebx
	mov	ebx,[ebp+40]
	mov	[ebp-52],ebx
	sub	esp,20
	mov	ebx,[ebp-52]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-48]
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_frect
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-48]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	jmp	_96
_98
	mov	ebx,[ebp+40]
	mov	[ebp-48],ebx
	mov	ebx,[ebp+40]
	imul	ebx,[ebp-28]
	mov	[ebp-52],ebx
	sub	esp,20
	mov	ebx,[ebp-52]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-48]
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_frect
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	jmp	_96
_99
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+40]
	imul	esi,[ebp-28]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp+40]
	imul	ebx,[ebp-28]
	mov	[ebp-48],ebx
	mov	ebx,[ebp+40]
	mov	[ebp-52],ebx
	sub	esp,20
	mov	ebx,[ebp-52]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-48]
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_frect
	jmp	_96
_100
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+40]
	imul	esi,[ebp-28]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,[ebp+40]
	mov	[ebp-48],ebx
	mov	ebx,[ebp+40]
	imul	ebx,[ebp-28]
	mov	[ebp-52],ebx
	sub	esp,20
	mov	ebx,[ebp-52]
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-48]
	mov	[esp+8],esi
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_frect
	jmp	_96
_96
	add	[ebp-8],2
_94
	mov	ebx,[ebp+32]
	cmp	[ebp-24],ebx
	jl	_93
_20
	mov	ebx,[ebp+40]
	add	[ebp-12],ebx
_92
	mov	ebx,[ebp+36]
	imul	ebx,[ebp+40]
	cmp	[ebp-12],ebx
	jl	_91
_19
_90
_89
	mov	eax,0
	jmp	_18_leave
_18_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	16
_fcurveimg
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,56
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	cmp	[ebp+48],1
	jle	_101
	mov	ebx,[ebp+48]
	sar	ebx,byte 1
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
_101
	mov	ebx,[ebp+36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+40]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],0
	mov	[ebp-16],1
	jmp	_102
_103
	mov	[ebp-20],0
	mov	ebx,[ebp+32]
	mov	[ebp-24],ebx
	jmp	_105
_104
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	[ebp-28],ebx
	mov	ebx,[ebp-28]
	add	[ebp-20],ebx
	mov	ebx,[ebp-12]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskred]
	and	ebx,esi
	shr	ebx,byte 16
	mov	[ebp-32],ebx
	mov	ebx,[ebp-12]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskgrn]
	and	ebx,esi
	shr	ebx,byte 8
	mov	[ebp-36],ebx
	mov	ebx,[ebp-12]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_avecs]
	mov	ebx,[ebx]
	mov	esi,[_vmaskblu]
	and	ebx,esi
	mov	[ebp-40],ebx
	cmp	[_vcd],16
	jnz	_106
	mov	ebx,[ebp-32]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp-32],ebx
	mov	ebx,[ebp-36]
	shr	ebx,byte 2
	shl	ebx,byte 2
	mov	[ebp-36],ebx
	mov	ebx,[ebp-40]
	shr	ebx,byte 3
	shl	ebx,byte 3
	mov	[ebp-40],ebx
_106
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	esi,[ebp-40]
	mov	[esp+8],esi
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fcolor
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	mov	ebx,[ebp-24]
	mov	[ebp-48],ebx
	jmp	_108
_107
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fcos
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-52],eax
	sub	esp,4
	mov	eax,[ebp-48]
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-56],eax
	cmp	[ebp+48],1
	jle	_109
	sub	esp,20
	mov	ebx,[ebp-56]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+48]
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	edi,[ebp+48]
	mov	[esp+8],edi
	mov	eax,[ebp-52]
	push	eax
	fild	[esp]
	pop	eax
	mov	esi,[ebp-4]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_frect
	jmp	_110
_109
	sub	esp,8
	mov	eax,[ebp-52]
	mov	[esp],eax
	mov	ebx,[ebp-56]
	mov	[esp+4],ebx
	call	_fplot
_110
	mov	ebx,[ebp-48]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
_108
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-44]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	eax,[ebp-48]
	push	eax
	fld	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	and	eax,eax
	jnz	_107
_25
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-44]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	add	[ebp-12],2
_105
	mov	ebx,[ebp+40]
	cmp	[ebp-20],ebx
	jl	_104
_24
	sub	[ebp+28],1
	add	[ebp-16],1
_102
	mov	ebx,[ebp+44]
	cmp	[ebp-16],ebx
	jle	_103
_23
	mov	eax,0
	jmp	_22_leave
_22_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 32
_26	.db	"Blitz Run Length Encoded Vector Images",0
_27	.db	"",0
	.align	4
_vsw	.dd	0
	.align	4
_vsh	.dd	0
	.align	4
_vcd	.dd	0
	.align	4
_avecs	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_apal	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_vmaskred	.dd	0
	.align	4
_vmaskgrn	.dd	0
	.align	4
_vmaskblu	.dd	0
_28	.db	"Arial",0
_29	.db	"Arial",0
_30	.db	"Rotate text",0
_31	.db	"(Original Image)",0
_32	.db	"Example of rotated text",0
_33	.db	"Example of masking",0
_34	.db	"the red from image",0
_35	.db	"Example of replacing",0
_36	.db	"white with yellow",0
_37	.db	"Example of masking",0
_38	.db	"red and replacing",0
_39	.db	"the white",0
_40	.db	"click to continue",0
_41	.db	"Zoom 1x-32x",0
_42	.db	"(Original Image)",0
_43	.db	"(this is 2x)",0
_44	.db	"click to continue",0
_45	.db	"Curved Text Example ",0
_46	.db	"(Original Image)",0
_47	.db	"click to exit",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

