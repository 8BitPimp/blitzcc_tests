
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,152
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-96],ebx
	mov	[ebp-100],ebx
	mov	[ebp-104],ebx
	mov	[ebp-108],ebx
	mov	[ebp-112],ebx
	mov	[ebp-116],ebx
	mov	[ebp-120],ebx
	mov	[ebp-124],ebx
	mov	[ebp-128],ebx
	mov	[ebp-132],ebx
	mov	[ebp-136],ebx
	mov	[ebp-140],ebx
	mov	[ebp-144],ebx
	mov	[_vss_bpsample],16
	mov	[_vss_maxchans],50
	mov	[_vss_buffersize],1000
	mov	[_vss_maxenvs],30
	mov	[_vss_sndtype],8
	mov	[_vss_lfocount],2
	sub	esp,4
	mov	eax,_ass_sounds
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_sounds
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_sounds
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_volume
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_volume
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_volume
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_schan
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_schan
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_schan
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_slength
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_slength
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_slength
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_started
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_started
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_started
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_actualvol
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_actualvol
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_actualvol
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_attackdone
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_attackdone
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_attackdone
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_decaydone
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_decaydone
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_decaydone
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_attack
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_attack
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_attack
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_decay
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_decay
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_decay
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_sustain
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_sustain
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_sustain
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_release
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_release
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_release
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_currentpitch
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_currentpitch
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_currentpitch
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_envelope
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_envelope
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_envelope
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_defattack
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxenvs]
	mov	esi,_ass_defattack
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_defattack
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_defdecay
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxenvs]
	mov	esi,_ass_defdecay
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_defdecay
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_defsustain
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxenvs]
	mov	esi,_ass_defsustain
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_defsustain
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_defrelease
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxenvs]
	mov	esi,_ass_defrelease
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_defrelease
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_attackchange
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxenvs]
	mov	esi,_ass_attackchange
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_attackchange
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_decaychange
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxenvs]
	mov	esi,_ass_decaychange
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_decaychange
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_sustainchange
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxenvs]
	mov	esi,_ass_sustainchange
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_sustainchange
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_releasechange
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxenvs]
	mov	esi,_ass_releasechange
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_releasechange
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_lfoattack
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_lfocount]
	mov	esi,_ass_lfoattack
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vss_maxenvs]
	mov	esi,_ass_lfoattack
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_lfoattack
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_lfodecay
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_lfocount]
	mov	esi,_ass_lfodecay
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vss_maxenvs]
	mov	esi,_ass_lfodecay
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_lfodecay
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_lfosustain
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_lfocount]
	mov	esi,_ass_lfosustain
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vss_maxenvs]
	mov	esi,_ass_lfosustain
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_lfosustain
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_lforelease
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_lfocount]
	mov	esi,_ass_lforelease
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vss_maxenvs]
	mov	esi,_ass_lforelease
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_lforelease
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_lfo
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_lfocount]
	mov	esi,_ass_lfo
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_lfo
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_lfo
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_lfofreq
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_lfocount]
	mov	esi,_ass_lfofreq
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vss_maxenvs]
	mov	esi,_ass_lfofreq
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_lfofreq
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_lfocounter
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_lfocounter
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_lfocounter
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_bufferchan
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_bufferchan
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vss_buffersize]
	mov	esi,_ass_bufferchan
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_bufferchan
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_buffervol
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_buffervol
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vss_buffersize]
	mov	esi,_ass_buffervol
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_buffervol
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_bufferenv
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_bufferenv
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vss_buffersize]
	mov	esi,_ass_bufferenv
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_bufferenv
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_bufferpitch
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_bufferpitch
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vss_buffersize]
	mov	esi,_ass_bufferpitch
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_bufferpitch
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_bufferlength
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_bufferlength
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vss_buffersize]
	mov	esi,_ass_bufferlength
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_bufferlength
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_bufferpointer
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_bufferpointer
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_bufferpointer
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_buffercount
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_buffercount
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_buffercount
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_chancheck
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_chancheck
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_chancheck
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_channelloop
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_channelloop
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_channelloop
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_samplecnt
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_maxchans]
	mov	esi,_ass_samplecnt
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_samplecnt
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_soundbank
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_sndtype]
	mov	esi,_ass_soundbank
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_soundbank
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ass_samplecntbank
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vss_sndtype]
	mov	esi,_ass_samplecntbank
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ass_samplecntbank
	mov	[esp],eax
	call	__bbDimArray
	mov	[_vforcesoundupdate],0
	mov	[_vss_stimer],1120403456
	call	_fmillisecs
	mov	[_vaudiotimer],eax
	mov	[_vupdateperiod],1065353216
	sub	esp,4
	mov	eax,_awavdata
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,0
	mov	esi,_awavdata
	add	esi,12
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,_awavdata
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_awavdata
	mov	[esp],eax
	call	__bbDimArray
	call	_finitsoundsystem
	mov	[_vupdateperiod],1097859072
	mov	[ebp-4],1
	jmp	_183
_184
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fsoundshape
	add	[ebp-4],1
_183
	mov	ebx,[_vss_maxchans]
	cmp	[ebp-4],ebx
	jle	_184
_3
	mov	[_vnxtchan],1
	mov	[_vscx],1142947840
	mov	[_vscy],1139802112
	mov	[_vscx],1145569280
	mov	[_vscy],1142292480
	mov	[_vtopbit],50
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	esi,[_vscy]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fgraphics
	sub	esp,4
	mov	[esp],80
	call	_fcreatetimer
	mov	[_vgametimer],eax
	mov	ebx,[_vtopbit]
	mov	[_vbasey],ebx
	sub	esp,4
	mov	[esp],0
	call	_ftformfilter
	mov	[_vmaxx],40
	mov	[_vmaxy],30
	mov	[_vmaxx],31
	mov	[_vmaxy],23
	mov	[_vcamx],0
	mov	[_vcamy],0
	mov	ebx,[_vscx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vmaxx]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vszx],ebx
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vtopbit]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[_vmaxy]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vszy],ebx
	mov	[_vszx],1107296256
	mov	[_vszy],1107296256
	sub	[_vmaxx],1
	sub	[_vmaxy],1
	mov	[_vtextcnt],8
	sub	esp,4
	mov	eax,_acharimg
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,256
	mov	esi,_acharimg
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vtextcnt]
	mov	esi,_acharimg
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_acharimg
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_amap
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxx]
	add	ebx,1
	mov	esi,_amap
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vmaxy]
	add	ebx,1
	mov	esi,_amap
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amap
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_amap2
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxx]
	add	ebx,1
	mov	esi,_amap2
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vmaxy]
	add	ebx,1
	mov	esi,_amap2
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amap2
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_amap3
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxx]
	add	ebx,1
	mov	esi,_amap3
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vmaxy]
	add	ebx,1
	mov	esi,_amap3
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amap3
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_amap4
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxx]
	add	ebx,1
	mov	esi,_amap4
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vmaxy]
	add	ebx,1
	mov	esi,_amap4
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amap4
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aalive
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxx]
	add	ebx,1
	mov	esi,_aalive
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[_vmaxy]
	add	ebx,1
	mov	esi,_aalive
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aalive
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_amapc
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,4
	mov	esi,_amapc
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amapc
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_amapd
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,4
	mov	esi,_amapd
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amapd
	mov	[esp],eax
	call	__bbDimArray
	mov	ebx,1
	mov	esi,1
	shl	esi,byte 2
	add	esi,[_amapc]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,1
	shl	esi,byte 2
	add	esi,[_amapd]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,2
	shl	esi,byte 2
	add	esi,[_amapc]
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,2
	shl	esi,byte 2
	add	esi,[_amapd]
	mov	[esi],ebx
	mov	ebx,-1
	mov	esi,3
	shl	esi,byte 2
	add	esi,[_amapc]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,3
	shl	esi,byte 2
	add	esi,[_amapd]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,4
	shl	esi,byte 2
	add	esi,[_amapc]
	mov	[esi],ebx
	mov	ebx,-1
	mov	esi,4
	shl	esi,byte 2
	add	esi,[_amapd]
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_astackx
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxx]
	imul	ebx,[_vmaxy]
	mov	esi,_astackx
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_astackx
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_astacky
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxx]
	imul	ebx,[_vmaxy]
	mov	esi,_astacky
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_astacky
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_astackc
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxx]
	imul	ebx,[_vmaxy]
	mov	esi,_astackc
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_astackc
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_astackd
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxx]
	imul	ebx,[_vmaxy]
	mov	esi,_astackd
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_astackd
	mov	[esp],eax
	call	__bbDimArray
	mov	[_vmushlife],7
	mov	[_vimages],8
	sub	esp,4
	mov	eax,_aimg
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vimages]
	mov	esi,_aimg
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aimg
	mov	[esp],eax
	call	__bbDimArray
	mov	[_vmaxplayers],16
	mov	[_vplayers],1
	sub	esp,4
	mov	eax,_aplayertype
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_aplayertype
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aplayertype
	mov	[esp],eax
	call	__bbDimArray
	mov	ebx,1
	mov	esi,1
	shl	esi,byte 2
	add	esi,[_aplayertype]
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_apx
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_apx
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_apx
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_apy
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_apy
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_apy
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_apc
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_apc
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_apc
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_apd
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_apd
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_apd
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_afr
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_afr
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_afr
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aok2move
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_aok2move
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aok2move
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ascore
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_ascore
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ascore
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_alives
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_alives
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_alives
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aenergy
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_aenergy
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aenergy
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_asx
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_asx
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_asx
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_asy
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_asy
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_asy
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adiecounter
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_adiecounter
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adiecounter
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adead
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_adead
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adead
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_amushs
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_amushs
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amushs
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aplayername
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_aplayername
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aplayername
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_alastupdate
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_alastupdate
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_alastupdate
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-4],1
	jmp	_185
_186
	sub	esp,20
	mov	eax,_187
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_aplayername]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	add	[ebp-4],1
_185
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-4],ebx
	jle	_186
_4
	sub	esp,4
	mov	eax,_aupkey
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_aupkey
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aupkey
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adownkey
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_adownkey
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adownkey
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aleftkey
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_aleftkey
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aleftkey
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_arightkey
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_arightkey
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_arightkey
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adropkey
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_adropkey
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adropkey
	mov	[esp],eax
	call	__bbDimArray
	mov	ebx,203
	mov	esi,1
	shl	esi,byte 2
	add	esi,[_aleftkey]
	mov	[esi],ebx
	mov	ebx,205
	mov	esi,1
	shl	esi,byte 2
	add	esi,[_arightkey]
	mov	[esi],ebx
	mov	ebx,200
	mov	esi,1
	shl	esi,byte 2
	add	esi,[_aupkey]
	mov	[esi],ebx
	mov	ebx,208
	mov	esi,1
	shl	esi,byte 2
	add	esi,[_adownkey]
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ared
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_ared
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ared
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_agreen
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_agreen
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_agreen
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ablue
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_ablue
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ablue
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_apdx
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_apdx
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_apdx
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_apdy
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_apdy
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_apdy
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_acfx
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_acfx
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_acfx
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_acfy
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_acfy
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_acfy
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_actx
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_actx
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_actx
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_acty
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_acty
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_acty
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_aplayerimg
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[_vmaxplayers]
	mov	esi,_aplayerimg
	add	esi,12
	mov	[esi],ebx
	mov	ebx,2
	mov	esi,_aplayerimg
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_aplayerimg
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-8],0
	jmp	_188
_189
	mov	ebx,0
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_ared]
	mov	[esi],ebx
	mov	ebx,255
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_agreen]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_ablue]
	mov	[esi],ebx
	add	[ebp-8],1
_188
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-8],ebx
	jle	_189
_5
	call	__bbReadInt
	mov	[ebp-12],eax
	mov	[ebp-8],1
	jmp	_190
_191
	call	__bbReadInt
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_ared]
	mov	[ebx],eax
	call	__bbReadInt
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_agreen]
	mov	[ebx],eax
	call	__bbReadInt
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_ablue]
	mov	[ebx],eax
	add	[ebp-8],1
_190
	mov	ebx,[ebp-12]
	cmp	[ebp-8],ebx
	jle	_191
_6
	mov	[_vhatred],100
	mov	[_vhatgreen],200
	mov	[_vhatblue],0
	mov	[_vtxsize],1098907648
	mov	[_vtxscale],1073741824
	mov	[_vtxxdis],1056964608
	call	_fsetuptext
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	[_vlevel],1
_l_2restart
	call	_fsetupmusic
_192
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	cmp	eax,0
	jnz	_192
_7
	mov	[_vlevel],1
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-24],0
	call	_fcls
	sub	esp,4
	mov	[esp],100
	call	_fcreatelevel
	mov	[_vcamx],0
	mov	[_vcamy],0
	mov	[ebp-28],0
_193
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	sub	esp,4
	mov	[esp],200
	call	_fkeyhit
	mov	[ebp-148],eax
	sub	esp,4
	mov	[esp],208
	mov	eax,ebx
	call	_fkeyhit
	mov	ebx,eax
	mov	eax,[ebp-148]
	sub	eax,ebx
	sub	[ebp-36],eax
	cmp	[ebp-36],0
	jge	_194
	mov	[ebp-36],2
_194
	cmp	[ebp-36],2
	jle	_195
	mov	[ebp-36],0
_195
	mov	ebx,[ebp-36]
	shl	ebx,byte 5
	add	ebx,[ebp-32]
	mov	[ebp-40],ebx
	sub	esp,20
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1092616192
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,_196
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftext2
	sub	esp,20
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1090519040
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1109917696
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,_197
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftext2
	sub	esp,20
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1090519040
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1115684864
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,_198
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftext2
	sub	esp,20
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1077936128
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[ebp-148],eax
	sub	esp,4
	mov	esi,_199
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-148]
	mov	[esp+8],esi
	mov	ebx,[ebp-40]
	mov	[esp+4],ebx
	call	_ftext2
	sub	esp,20
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1075838976
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[ebp-148],eax
	sub	esp,4
	mov	esi,_200
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-148]
	mov	[esp+8],esi
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	call	_ftext2
	mov	[ebp-44],0
	sub	esp,4
	mov	[esp],57
	call	_fkeyhit
	mov	[ebp-48],eax
	mov	ebx,[ebp-48]
	cmp	[ebp-36],0
	setz	al
	movzx	eax,al
	and	ebx,eax
	and	ebx,ebx
	jz	_201
	mov	[ebp-44],1
_201
	mov	ebx,[ebp-48]
	cmp	[ebp-36],1
	setz	al
	movzx	eax,al
	and	ebx,eax
	and	ebx,ebx
	jz	_202
	add	[ebp-52],1
	cmp	[ebp-52],1
	jle	_203
	mov	[ebp-52],0
_203
_202
	mov	ebx,[ebp-48]
	cmp	[ebp-36],2
	setz	al
	movzx	eax,al
	and	ebx,eax
	and	ebx,ebx
	jz	_204
	mov	[ebp-28],1
_204
	cmp	[ebp-52],0
	jnz	_205
	mov	[_vscrollmode],0
	sub	esp,8
	lea	eax,[ebp-56]
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,_206
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_207
_205
	mov	[_vscrollmode],1
	sub	esp,8
	lea	eax,[ebp-56]
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,_208
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+4],ebx
	call	__bbStrStore
_207
	sub	esp,20
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1075838976
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[ebp-148],eax
	sub	esp,4
	lea	esi,[ebp-56]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-148]
	mov	[esp+8],esi
	mov	ebx,[ebp-32]
	add	ebx,32
	mov	[esp+4],ebx
	call	_ftext2
	sub	esp,20
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1075838976
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[ebp-148],eax
	sub	esp,4
	mov	esi,_209
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-148]
	mov	[esp+8],esi
	mov	ebx,[ebp-32]
	add	ebx,64
	mov	[esp+4],ebx
	call	_ftext2
	call	_fupdatesound
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fcls
	mov	ebx,[ebp-44]
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	or	ebx,eax
	cmp	[ebp-28],1
	setz	al
	movzx	eax,al
	or	ebx,eax
	and	ebx,ebx
	jz	_193
_8
	cmp	[_vscrollmode],0
	jnz	_210
	mov	ebx,[_vscx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vmaxx]
	add	esi,1
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vszx],ebx
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vbasey]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[_vmaxy]
	add	esi,1
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vszy],ebx
	jmp	_211
_210
	mov	ebx,[ebp-16]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vszx],ebx
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vszy],ebx
_211
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	mov	[ebp-148],eax
	cmp	[ebp-28],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	or	eax,ebx
	and	eax,eax
	jz	_212
	call	_fend
_212
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],4
	call	_frand
	mov	[_vinv],eax
	mov	[ebp-8],0
	jmp	_213
_214
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fcreategfx
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aimg]
	mov	[ebx],eax
	add	[ebp-8],1
_213
	mov	ebx,[_vimages]
	cmp	[ebp-8],ebx
	jle	_214
_9
	mov	ebx,3
	shl	ebx,byte 2
	add	ebx,[_aimg]
	mov	ebx,[ebx]
	mov	esi,0
	shl	esi,byte 2
	add	esi,[_aimg]
	mov	[esi],ebx
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[ebp-8],1
	jmp	_215
_216
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_ared]
	mov	ebx,[ebx]
	mov	[_vhatred],ebx
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_agreen]
	mov	ebx,[ebx]
	mov	[_vhatgreen],ebx
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_ablue]
	mov	ebx,[ebx]
	mov	[_vhatblue],ebx
	cmp	[ebp-8],1
	jnz	_217
	mov	[ebp-60],1
	jmp	_218
_217
	sub	esp,8
	mov	[esp],2
	mov	[esp+4],3
	call	_frand
	mov	[ebp-60],eax
_218
	sub	esp,8
	mov	[esp],255
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	call	_fcreategfx
	mov	ebx,_aplayerimg
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 0
	add	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aplayerimg]
	mov	[ebx],eax
	sub	esp,8
	mov	[esp],256
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	call	_fcreategfx
	mov	ebx,_aplayerimg
	add	ebx,12
	mov	ebx,[ebx]
	shl	ebx,byte 1
	add	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_aplayerimg]
	mov	[ebx],eax
	add	[ebp-8],1
_215
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-8],ebx
	jle	_216
_10
	mov	[ebp-4],1
	jmp	_219
_220
	mov	ebx,1
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aplayertype]
	mov	[esi],ebx
	mov	ebx,3
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_alives]
	mov	[esi],ebx
	add	[ebp-4],1
_219
	mov	ebx,[_vplayers]
	cmp	[ebp-4],ebx
	jle	_220
_11
	mov	ebx,[_vplayers]
	add	ebx,1
	mov	[ebp-4],ebx
	jmp	_221
_222
	mov	ebx,3
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_alives]
	mov	[esi],ebx
	add	[ebp-4],1
_221
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-4],ebx
	jle	_222
_12
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
_l_2nextlevel
	sub	esp,4
	mov	eax,_tboulder
	mov	[esp],eax
	call	__bbObjDeleteEach
	sub	esp,4
	mov	eax,[_vlevel]
	mov	[esp],eax
	call	_fcreatelevel
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fdrawmap
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fdrawmap
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fmillisecs
	add	eax,5000
	mov	[_vstarting],eax
	mov	[_vgamestarted],0
	mov	[ebp-64],0
	mov	[ebp-68],0
	mov	[ebp-72],0
	mov	eax,[_vmaxx]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[_vscx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	[ebp-148],eax
	mov	ebx,[_vmaxy]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vscy]
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	and	eax,ebx
	and	eax,eax
	jz	_223
	mov	[_vscrollmode],0
	jmp	_224
_223
	mov	[_vscrollmode],1
_224
	mov	[ebp-76],0
_225
	mov	[_vupdbuffer],0
	call	_fmillisecs
	sub	eax,[ebp-80]
	cmp	eax,33
	jle	_226
	mov	[_vupdbuffer],1
	call	_fmillisecs
	mov	[ebp-80],eax
_226
	call	_fspread
	cmp	[_vgamestarted],0
	jnz	_227
	call	_fdrawmap
_227
	cmp	[_vgamestarted],0
	setz	al
	movzx	eax,al
	mov	[ebp-148],eax
	mov	[ebp-152],eax
	mov	eax,ebx
	call	_fmillisecs
	mov	ebx,eax
	mov	eax,[ebp-152]
	cmp	[_vstarting],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	and	eax,ebx
	and	eax,eax
	jz	_228
	mov	[_vgamestarted],1
	call	_fdrawmap
_228
	call	_fdfloor
	mov	ebx,[_vcamx]
	mov	[ebp-84],ebx
	mov	ebx,[_vcamy]
	mov	[ebp-88],ebx
	mov	ebx,[_vscx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-84]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-84],esi
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-88]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-88],esi
	mov	ebx,[ebp-84]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-84],ebx
	mov	ebx,[ebp-88]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-88],ebx
	mov	ebx,[_vscrollmode]
	and	ebx,ebx
	jz	_229
	sub	esp,8
	mov	eax,[ebp-84]
	mov	[esp],eax
	mov	ebx,[ebp-88]
	mov	[esp+4],ebx
	call	_fdrawmapfrom
_229
	cmp	[ebp-68],1
	setz	al
	movzx	eax,al
	mov	[ebp-148],eax
	cmp	[_vscrollmode],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	and	eax,ebx
	mov	[ebp-148],eax
	cmp	[ebp-92],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	or	eax,ebx
	and	eax,eax
	jz	_230
	mov	ebx,[_vmaxx]
	sar	ebx,byte 1
	sub	ebx,7
	mov	[ebp-96],ebx
	jmp	_231
_232
	mov	ebx,[_vmaxy]
	sar	ebx,byte 1
	sub	ebx,5
	mov	[ebp-100],ebx
	jmp	_233
_234
	sub	esp,8
	mov	eax,[ebp-96]
	mov	[esp],eax
	mov	ebx,[ebp-100]
	mov	[esp+4],ebx
	call	_fdrawtile
	add	[ebp-100],1
_233
	mov	ebx,[_vmaxy]
	sar	ebx,byte 1
	add	ebx,2
	cmp	[ebp-100],ebx
	jle	_234
_15
	add	[ebp-96],1
_231
	mov	ebx,[_vmaxx]
	sar	ebx,byte 1
	add	ebx,7
	cmp	[ebp-96],ebx
	jle	_232
_14
_230
	mov	[ebp-92],0
	call	_fdrawplayers
	mov	ebx,[_vgamestarted]
	and	ebx,ebx
	jz	_235
	call	_fupdateplayers
_235
	mov	[ebp-4],1
	jmp	_236
_237
	call	_fmillisecs
	cmp	[_vstarting],eax
	setg	al
	movzx	eax,al
	mov	[ebp-148],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_aplayertype]
	mov	ebx,[ebx]
	cmp	ebx,1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	and	eax,ebx
	and	eax,eax
	jz	_238
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apx]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-104],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apy]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-108],ebx
	sub	esp,20
	mov	ebx,[ebp-108]
	add	ebx,[_vbasey]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],1
	mov	[esp+16],0
	sub	esp,4
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_aplayername]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	eax,[ebp-104]
	mov	[esp],eax
	call	_ftext2
_238
	mov	[ebp-92],1
	add	[ebp-4],1
_236
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-4],ebx
	jle	_237
_16
	call	_fupdateboulders
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vbasey]
	sub	ebx,1
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vscx]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolour
	mov	[ebp-92],0
	cmp	[_vgamestarted],0
	jnz	_239
	sub	esp,28
	mov	eax,_240
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,[_vlevel]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,_241
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,20
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vbasey]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vtxsize]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	lea	eax,[ebp-112]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftext2
	sub	esp,12
	mov	eax,[_vstarting]
	mov	[ebp-148],eax
	mov	eax,ebx
	call	_fmillisecs
	mov	ebx,eax
	mov	eax,[ebp-148]
	sub	eax,ebx
	mov	ecx,1000
	cdq
	idiv	ecx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	lea	ebx,[ebp-112]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	lea	eax,[ebp-112]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,_243
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_242
	sub	esp,8
	lea	eax,[ebp-112]
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,_244
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+4],ebx
	call	__bbStrStore
_242
	sub	esp,12
	lea	eax,[ebp-112]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,_246
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_245
	sub	esp,8
	lea	eax,[ebp-112]
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,_247
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+4],ebx
	call	__bbStrStore
_245
	sub	esp,20
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vbasey]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	lea	eax,[ebp-112]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+8],eax
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftext2
	mov	[ebp-92],1
_239
	mov	[ebp-116],1
	mov	[ebp-120],1065353216
	jmp	_248
_249
	mov	ebx,[ebp-120]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	shl	ebx,byte 2
	add	ebx,[_alives]
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_250
	sub	esp,20
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1082130432
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[ebp-116]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1056964608
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[esp+12],1
	mov	[esp+16],1
	mov	[ebp-148],eax
	sub	esp,4
	mov	esi,[ebp-120]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	shl	esi,byte 2
	add	esi,[_aplayername]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-148]
	mov	[esp+8],esi
	mov	[esp+4],10
	call	_ftext2
	sub	esp,20
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1082130432
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[ebp-116]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1048576000
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,8
	mov	[ebp-152],eax
	sub	esp,4
	mov	ebx,_251
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-152]
	mov	[esp],ebx
	mov	[ebp-152],eax
	sub	esp,4
	mov	esi,[ebp-120]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	shl	esi,byte 2
	add	esi,[_alives]
	mov	esi,[esi]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrFromInt
	mov	esi,eax
	mov	eax,[ebp-152]
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+8],ebx
	mov	[esp+12],1
	mov	[esp+16],1
	mov	[esp+4],32
	call	_ftext2
	sub	esp,20
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1082130432
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[ebp-116]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1063675494
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,8
	mov	[ebp-152],eax
	sub	esp,4
	mov	ebx,[ebp-120]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	shl	ebx,byte 2
	add	ebx,[_ascore]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-152]
	mov	[esp],ebx
	mov	[esp+4],6
	mov	eax,ebx
	call	_fconstr
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],1
	mov	[esp+4],32
	call	_ftext2
	add	[ebp-116],1
_250
	mov	ebx,[ebp-120]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-120],ebx
_248
	mov	eax,[ebp-120]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[_vmaxplayers]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_249
_17
	mov	[ebp-124],0
	mov	[ebp-128],0
	mov	[ebp-4],1
	jmp	_252
_253
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_alives]
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_254
	add	[ebp-124],1
	cmp	[ebp-76],0
	jnz	_255
	mov	[ebp-128],1
_255
_254
	add	[ebp-4],1
_252
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-4],ebx
	jle	_253
_18
	mov	[ebp-132],0
	cmp	[ebp-124],1
	jnz	_256
	cmp	[ebp-128],1
	jnz	_257
	mov	[ebp-136],1
	jmp	_258
_259
	mov	ebx,[ebp-136]
	shl	ebx,byte 2
	add	ebx,[_ascore]
	mov	ebx,[ebx]
	cmp	ebx,[ebp-132]
	jle	_260
	mov	ebx,[ebp-136]
	mov	[ebp-76],ebx
	mov	ebx,[ebp-136]
	shl	ebx,byte 2
	add	ebx,[_ascore]
	mov	ebx,[ebx]
	mov	[ebp-132],ebx
_260
	add	[ebp-136],1
_258
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-136],ebx
	jle	_259
_19
_257
_256
	cmp	[ebp-124],2
	jge	_261
	sub	esp,32
	mov	eax,[ebp-76]
	shl	eax,byte 2
	add	eax,[_aplayername]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,_262
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],1
	mov	[esp+16],1
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vbasey]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftext2
	mov	[ebp-92],1
_261
	cmp	[ebp-68],1
	setz	al
	movzx	eax,al
	mov	[ebp-148],eax
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_alives]
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	and	eax,ebx
	mov	[ebp-148],eax
	cmp	[ebp-76],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	and	eax,ebx
	mov	[ebp-148],eax
	cmp	[ebp-124],0
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	and	eax,ebx
	and	eax,eax
	jz	_263
	sub	esp,20
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vbasey]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,_264
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftext2
	mov	[ebp-92],1
_263
	cmp	[ebp-68],1
	setz	al
	movzx	eax,al
	mov	[ebp-148],eax
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_alives]
	mov	ebx,[ebx]
	cmp	ebx,1
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	and	eax,ebx
	and	eax,eax
	jz	_265
	sub	esp,20
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vbasey]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,_266
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	eax,[_vscx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftext2
	mov	[ebp-92],1
	mov	[_vgamestarted],1
_265
	cmp	[_vupdbuffer],1
	jnz	_267
	sub	esp,4
	mov	[esp],0
	call	_fflip
	sub	esp,32
	call	_ffrontbuffer
	mov	[esp+24],eax
	mov	[ebp-148],eax
	mov	eax,ebx
	call	_fbackbuffer
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[esp+28],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	esi,[_vscx]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
_267
_268
	call	_fupdatesound
	call	_fmillisecs
	sub	eax,[ebp-140]
	cmp	eax,16
	setg	al
	movzx	eax,al
	mov	[ebp-148],eax
	sub	esp,4
	mov	[esp],1
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-148]
	or	eax,ebx
	and	eax,eax
	jz	_268
_20
	call	_fmillisecs
	mov	[ebp-140],eax
	cmp	[_vmushrooms],0
	setz	al
	movzx	eax,al
	mov	[ebp-148],eax
	cmp	[ebp-68],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	and	eax,ebx
	and	eax,eax
	jz	_269
	mov	[ebp-68],1
	call	_fmillisecs
	add	eax,5000
	mov	[ebp-144],eax
_269
	mov	eax,1
	shl	eax,byte 2
	add	eax,[_alives]
	mov	eax,[eax]
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-148],eax
	cmp	[ebp-68],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	and	eax,ebx
	and	eax,eax
	jz	_270
	mov	[ebp-68],1
	call	_fmillisecs
	add	eax,5000
	mov	[ebp-144],eax
	call	_fstopsound
	call	_fdiefx
_270
	cmp	[ebp-124],1
	setz	al
	movzx	eax,al
	mov	[ebp-148],eax
	cmp	[ebp-68],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	and	eax,ebx
	and	eax,eax
	jz	_271
	mov	[ebp-68],1
	call	_fmillisecs
	add	eax,5000
	mov	[ebp-144],eax
	call	_fstopsound
	call	_fwinfx
_271
	cmp	[ebp-68],1
	setz	al
	movzx	eax,al
	mov	[ebp-148],eax
	mov	[ebp-152],eax
	mov	eax,ebx
	call	_fmillisecs
	mov	ebx,eax
	mov	eax,[ebp-152]
	cmp	[ebp-144],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	and	eax,ebx
	mov	[ebp-148],eax
	sub	esp,4
	mov	[esp],1
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-148]
	or	ebx,eax
	and	ebx,ebx
	jz	_225
_13
	mov	eax,1
	shl	eax,byte 2
	add	eax,[_alives]
	mov	eax,[eax]
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-148],eax
	cmp	[ebp-124],2
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-148]
	or	eax,ebx
	and	eax,eax
	jz	_272
	jmp	_l_2restart
_272
	add	[_vlevel],1
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	and	eax,eax
	jz	_273
	jmp	_l_2restart
_273
	jmp	_l_2nextlevel
	call	_fend
_l_2music1
	ret
_2_leave
	mov	[ebp-148],eax
	sub	esp,4
	mov	ebx,[ebp-56]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-148]
	mov	[ebp-148],eax
	sub	esp,4
	mov	esi,[ebp-112]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-148]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcolour
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp+20]
	mov	[ebp-4],ebx
	mov	ebx,[ebp+24]
	mov	[ebp-8],ebx
	mov	ebx,[ebp+28]
	mov	[ebp-12],ebx
	mov	[_vinv],4
	cmp	[_vinv],1
	jnz	_278
	mov	ebx,[ebp+28]
	mov	[ebp-4],ebx
	mov	ebx,[ebp+24]
	mov	[ebp-8],ebx
	mov	ebx,[ebp+20]
	mov	[ebp-12],ebx
_278
	cmp	[_vinv],2
	jnz	_279
	mov	ebx,[ebp+24]
	mov	[ebp-4],ebx
	mov	ebx,[ebp+28]
	mov	[ebp-8],ebx
	mov	ebx,[ebp+20]
	mov	[ebp-12],ebx
_279
	cmp	[_vinv],3
	jnz	_280
	mov	ebx,[ebp+20]
	mov	[ebp-4],ebx
	mov	ebx,[ebp+28]
	mov	[ebp-8],ebx
	mov	ebx,[ebp+24]
	mov	[ebp-12],ebx
_280
	cmp	[_vinv],4
	jnz	_281
	mov	ebx,[ebp+20]
	mov	[ebp-4],ebx
	mov	ebx,[ebp+24]
	mov	[ebp-8],ebx
	mov	ebx,[ebp+28]
	mov	[ebp-12],ebx
_281
	sub	esp,8
	mov	[esp],1061158912
	mov	[esp+4],1069547520
	call	_frnd
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	mov	eax,[ebp-4]
	sub	eax,128
	mov	ebx,[ebp-8]
	sub	ebx,128
	add	eax,ebx
	mov	ebx,[ebp-12]
	sub	ebx,120
	add	eax,ebx
	neg	eax
	mov	ecx,3
	cdq
	idiv	ecx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1069547520
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1124073472
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-16],esi
	cmp	[ebp-4],255
	jle	_282
	mov	[ebp-4],255
_282
	cmp	[ebp-8],255
	jle	_283
	mov	[ebp-8],255
_283
	cmp	[ebp-12],255
	jle	_284
	mov	[ebp-12],255
_284
	cmp	[ebp-4],0
	jge	_285
	mov	[ebp-4],0
_285
	cmp	[ebp-8],0
	jge	_286
	mov	[ebp-8],0
_286
	cmp	[ebp-12],0
	jge	_287
	mov	[ebp-12],0
_287
	sub	esp,12
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcolor
	mov	eax,0
	jmp	_21_leave
_21_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fdrawmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	call	_fdfloor
	mov	[ebp-4],0
	jmp	_288
_289
	mov	[ebp-8],0
	jmp	_290
_291
	call	_fupdatesound
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fdrawtile
	add	[ebp-8],1
_290
	mov	ebx,[_vmaxy]
	cmp	[ebp-8],ebx
	jle	_291
_24
	add	[ebp-4],1
_288
	mov	ebx,[_vmaxx]
	cmp	[ebp-4],ebx
	jle	_289
_23
	mov	eax,0
	jmp	_22_leave
_22_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawmapfrom
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	cmp	[_vcammvx],0
	setnz	al
	movzx	eax,al
	mov	[ebp-36],eax
	cmp	[_vcammvy],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	or	eax,ebx
	and	eax,eax
	jz	_292
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vbasey]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vscy],ebx
	mov	ebx,[_vscx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[_vscx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-4]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-12],esi
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-8]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-16],esi
	mov	ebx,[_vscx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-4],esi
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-8],esi
	mov	ebx,[_vscx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-12],esi
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-16],esi
	sub	esp,32
	mov	[esp+24],0
	mov	[esp+28],0
	mov	esi,[_vcammvy]
	add	esi,[_vbasey]
	mov	[esp+20],esi
	mov	ebx,[_vcammvx]
	mov	[esp+16],ebx
	mov	esi,[_vscy]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[_vscx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vbasey]
	mov	[esp+4],esi
	mov	[esp],0
	call	_fcopyrect
	mov	ebx,[_vcammvx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	mov	ebx,[_vcammvy]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_293
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	__bbFSgn
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-28],eax
_293
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_294
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	__bbFSgn
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-28],eax
_294
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1077936128
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-36],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbFAbs
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	or	eax,ebx
	and	eax,eax
	jz	_295
	mov	[_vcammvx],0
	mov	[_vcammvy],0
_295
	cmp	[_vcammvx],0
	jle	_296
	mov	ebx,[ebp-4]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	sub	[ebp-8],1
	add	[ebp-16],1
_296
	cmp	[_vcammvx],0
	jge	_297
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	sub	[ebp-8],1
	add	[ebp-16],1
_297
	cmp	[_vcammvy],0
	jle	_298
	mov	ebx,[ebp-8]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	sub	[ebp-8],1
_298
	cmp	[_vcammvy],0
	jge	_299
	mov	ebx,[ebp-16]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
_299
	mov	ebx,[ebp-4]
	sub	ebx,1
	mov	[ebp-20],ebx
	jmp	_300
_301
	mov	ebx,[ebp-8]
	sub	ebx,1
	mov	[ebp-24],ebx
	jmp	_302
_303
	cmp	[ebp-20],-1
	setg	al
	movzx	eax,al
	mov	[ebp-36],eax
	mov	ebx,[_vmaxx]
	add	ebx,1
	cmp	[ebp-20],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	and	eax,ebx
	mov	[ebp-36],eax
	cmp	[ebp-24],-1
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	and	eax,ebx
	mov	[ebp-36],eax
	mov	ebx,[_vmaxy]
	add	ebx,1
	cmp	[ebp-24],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	and	eax,ebx
	and	eax,eax
	jz	_304
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fdrawtile
	jmp	_305
_304
_305
	add	[ebp-24],1
_302
	mov	ebx,[ebp-16]
	cmp	[ebp-24],ebx
	jle	_303
_27
	add	[ebp-20],1
_300
	mov	ebx,[ebp-12]
	cmp	[ebp-20],ebx
	jle	_301
_26
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vbasey]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vscy],ebx
	mov	[_vcammvx],0
	mov	[_vcammvy],0
_292
	mov	eax,0
	jmp	_25_leave
_25_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fupdateplayers
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,92
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-4],1
	jmp	_306
_307
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_adead]
	mov	ebx,[ebx]
	and	ebx,ebx
	jz	_308
	jmp	_l_28dontupdateplayer
_308
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apx]
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apy]
	mov	ebx,[ebx]
	mov	[ebp-12],ebx
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_309
	mov	[ebp-8],0
_309
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[_vmaxx]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_310
	mov	ebx,[_vmaxx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
_310
	mov	eax,[ebp-12]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_311
	mov	[ebp-12],0
_311
	mov	eax,[ebp-12]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[_vmaxy]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_312
	mov	ebx,[_vmaxy]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
_312
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	esi,[esi]
	and	esi,esi
	jz	_313
	sub	esp,16
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-4]
	mov	[esp+8],esi
	mov	[esp+12],25
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_faddboulder
_313
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	esi,[esi]
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apd]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	esi,eax
	and	esi,esi
	jz	_314
	sub	esp,16
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp-4]
	mov	[esp+8],esi
	mov	[esp+12],1
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_faddboulder
_314
	call	_fmillisecs
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_alastupdate]
	mov	ebx,[ebx]
	sub	eax,ebx
	cmp	eax,50000
	setg	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_aok2move]
	mov	ebx,[ebx]
	cmp	ebx,1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	or	eax,ebx
	and	eax,eax
	jz	_315
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_aplayertype]
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_316
	mov	[_vignoreboulders],1
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apc]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	or	eax,ebx
	and	eax,eax
	jz	_317
	mov	[ebp-16],0
	mov	[ebp-20],-1
	jmp	_318
_319
	mov	[ebp-24],-1
	jmp	_320
_321
	cmp	[ebp-20],0
	setz	al
	movzx	eax,al
	mov	[ebp-88],eax
	cmp	[ebp-24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	or	eax,ebx
	mov	[ebp-88],eax
	cmp	[ebp-20],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	cmp	[ebp-24],0
	mov	eax,esi
	setnz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-88]
	or	ebx,esi
	and	eax,ebx
	and	eax,eax
	jz	_322
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-24]
	push	edi
	fild	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	edi,_amap3
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_323
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apc]
	mov	[esi],ebx
	mov	ebx,[ebp-24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	[esi],ebx
	mov	[ebp-16],1
_323
_322
	add	[ebp-24],1
_320
	cmp	[ebp-24],1
	jle	_321
_31
	add	[ebp-20],1
_318
	cmp	[ebp-20],1
	jle	_319
_30
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],1120403456
	call	_frnd
	mov	ebx,1114636288
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-88],eax
	cmp	[ebp-16],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	or	eax,ebx
	and	eax,eax
	jz	_324
	jmp	_l_28dontdoanythingai
_324
_317
	mov	[ebp-28],500
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apc]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apx]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apy]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-24]
	push	edi
	fild	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	edi,_amap3
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	ebx,[ebx]
	cmp	ebx,4
	jnz	_325
	jmp	_l_28nochangecd
_325
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apc]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	[esi],ebx
	mov	[ebp-32],0
	mov	[ebp-36],0
	mov	[ebp-20],-30
	jmp	_326
_327
	mov	[ebp-24],-30
	jmp	_328
_329
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	sub	esp,4
	mov	eax,[ebp-40]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-44]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbFAbs
	mov	ebx,eax
	mov	eax,[ebp-88]
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-48],eax
	cmp	[ebp-40],0
	jge	_330
	mov	[ebp-40],0
	jmp	_331
_330
	mov	ebx,[_vmaxx]
	cmp	[ebp-40],ebx
	jle	_332
	mov	ebx,[_vmaxx]
	mov	[ebp-40],ebx
_332
_331
	cmp	[ebp-44],0
	jge	_333
	mov	[ebp-44],0
	jmp	_334
_333
	mov	ebx,[_vmaxy]
	cmp	[ebp-44],ebx
	jle	_335
	mov	ebx,[_vmaxy]
	mov	[ebp-44],ebx
_335
_334
	mov	eax,_amap3
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-44]
	add	eax,[ebp-40]
	shl	eax,byte 2
	add	eax,[_amap3]
	mov	eax,[eax]
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	ebx,[ebp-28]
	cmp	[ebp-48],ebx
	mov	eax,ebx
	setle	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	and	eax,eax
	jz	_336
	mov	[ebp-52],1
	mov	[ebp-56],1
	jmp	_337
_338
	mov	[ebp-60],1
	jmp	_339
_340
	sub	esp,8
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-56]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-60]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fmapok
	cmp	eax,0
	jnz	_341
	mov	[ebp-52],0
_341
	add	[ebp-60],1
_339
	mov	ebx,[ebp-24]
	cmp	[ebp-60],ebx
	jle	_340
_35
	add	[ebp-56],1
_337
	mov	ebx,[ebp-20]
	cmp	[ebp-56],ebx
	jle	_338
_34
	cmp	[ebp-52],1
	jnz	_342
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	__bbSgn
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apc]
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	__bbSgn
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	[ebx],eax
	mov	ebx,[ebp-48]
	mov	[ebp-28],ebx
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	cmp	[ebp-48],3
	jge	_343
	mov	[ebp-32],0
	mov	[ebp-36],0
_343
_342
_336
	add	[ebp-24],1
_328
	cmp	[ebp-24],30
	jle	_329
_33
	add	[ebp-20],1
_326
	cmp	[ebp-20],30
	jle	_327
_32
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],100
	call	_frand
	cmp	eax,95
	jle	_344
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apc]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	[esi],ebx
_344
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apc]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	and	eax,eax
	jz	_345
	mov	[ebp-20],-1
	jmp	_346
_347
	mov	[ebp-24],-1
	jmp	_348
_349
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	sub	esp,4
	mov	eax,[ebp-40]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbFAbs
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-44]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbFAbs
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-48],eax
	cmp	[ebp-40],0
	jge	_350
	mov	[ebp-40],0
	jmp	_351
_350
	mov	ebx,[_vmaxx]
	cmp	[ebp-40],ebx
	jle	_352
	mov	ebx,[_vmaxx]
	mov	[ebp-40],ebx
_352
_351
	cmp	[ebp-44],0
	jge	_353
	mov	[ebp-44],0
	jmp	_354
_353
	mov	ebx,[_vmaxy]
	cmp	[ebp-44],ebx
	jle	_355
	mov	ebx,[_vmaxy]
	mov	[ebp-44],ebx
_355
_354
	sub	esp,8
	mov	eax,[ebp-40]
	mov	[esp],eax
	mov	ebx,[ebp-44]
	mov	[esp+4],ebx
	call	_fmapok
	and	eax,eax
	jz	_356
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	__bbSgn
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apc]
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	__bbSgn
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	[ebx],eax
	mov	ebx,[ebp-48]
	mov	[ebp-28],ebx
_356
	add	[ebp-24],1
_348
	cmp	[ebp-24],1
	jle	_349
_37
	add	[ebp-20],1
_346
	cmp	[ebp-20],1
	jle	_347
_36
_345
_l_28nochangecd
	sub	esp,16
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apc]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fokahead
	mov	[ebp-64],eax
	cmp	[ebp-64],0
	setl	al
	movzx	eax,al
	mov	[ebp-88],eax
	cmp	[ebp-64],-3
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	and	eax,eax
	jz	_357
	mov	[ebp-68],1
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apc]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	sub	esp,8
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_ffindbestdirection
	cmp	[_vdirx],0
	setnz	al
	movzx	eax,al
	mov	[ebp-88],eax
	cmp	[_vdiry],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	or	eax,ebx
	and	eax,eax
	jz	_358
	mov	ebx,[_vdirx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apc]
	mov	[esi],ebx
	mov	ebx,[_vdiry]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	[esi],ebx
_358
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apc]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	and	eax,eax
	jz	_359
	mov	[ebp-20],-10
	jmp	_360
_361
	mov	[ebp-24],-10
	jmp	_362
_363
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	cmp	[ebp-40],0
	jge	_364
	mov	[ebp-40],0
	jmp	_365
_364
	mov	ebx,[_vmaxx]
	cmp	[ebp-40],ebx
	jle	_366
	mov	ebx,[_vmaxx]
	mov	[ebp-40],ebx
_366
_365
	cmp	[ebp-44],0
	jge	_367
	mov	[ebp-44],0
	jmp	_368
_367
	mov	ebx,[_vmaxy]
	cmp	[ebp-44],ebx
	jle	_369
	mov	ebx,[_vmaxy]
	mov	[ebp-44],ebx
_369
_368
	cmp	[ebp-20],0
	setnz	al
	movzx	eax,al
	mov	[ebp-88],eax
	cmp	[ebp-24],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	or	eax,ebx
	mov	[ebp-88],eax
	cmp	[ebp-20],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	cmp	[ebp-24],0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-88]
	or	ebx,esi
	and	eax,ebx
	and	eax,eax
	jz	_370
	mov	ebx,_amap2
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-44]
	add	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_amap2]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_371
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	__bbSgn
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apc]
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	__bbSgn
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	[ebx],eax
	mov	ebx,[ebp-48]
	mov	[ebp-28],ebx
_371
_370
	add	[ebp-24],1
_362
	cmp	[ebp-24],10
	jle	_363
_39
	add	[ebp-20],1
_360
	cmp	[ebp-20],10
	jle	_361
_38
_359
_357
_l_28justmove
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apc]
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbFSgn
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apd]
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbFSgn
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	mov	[ebp-80],1
	jmp	_372
_373
	mov	eax,[ebp-40]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-80]
	shl	ebx,byte 2
	add	ebx,[_apx]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	ebx,[ebp-44]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-80]
	shl	esi,byte 2
	add	esi,[_apy]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	and	eax,eax
	jz	_374
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apc]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apc]
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	[esi],ebx
_374
	add	[ebp-80],1
_372
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-80],ebx
	jle	_373
_40
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aok2move]
	mov	[esi],ebx
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apc]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	and	eax,eax
	jz	_375
	sub	esp,8
	mov	[esp],2
	mov	[esp+4],1
	call	_frand
	cmp	eax,1
	jnz	_376
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apc]
	mov	[esi],ebx
	jmp	_377
_376
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	[esi],ebx
_377
_375
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apc]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-4]
	shl	edi,byte 2
	add	edi,[_apd]
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	edi,_amap
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	mov	[ebp-84],ebx
	cmp	[ebp-84],3
	setnz	al
	movzx	eax,al
	mov	[ebp-88],eax
	cmp	[ebp-84],2
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	and	eax,eax
	jz	_378
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apc]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	[esi],ebx
_378
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apc]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	mov	[ebp-88],eax
	mov	[ebp-92],eax
	sub	esp,8
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apc]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-4]
	shl	edi,byte 2
	add	edi,[_apd]
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fmapok
	mov	ebx,eax
	mov	eax,[ebp-92]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	or	eax,ebx
	and	eax,eax
	jz	_379
	sub	esp,8
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_ffindbestdirection
	cmp	[_vdirx],0
	setnz	al
	movzx	eax,al
	mov	[ebp-88],eax
	cmp	[_vdiry],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	or	eax,ebx
	and	eax,eax
	jz	_380
	mov	ebx,[_vdirx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apc]
	mov	[esi],ebx
	mov	ebx,[_vdiry]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	[esi],ebx
_380
_379
_l_28dontdoanythingai
	mov	[_vignoreboulders],0
	jmp	_381
_316
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apc]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-72],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-76],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apc]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	[esi],ebx
	sub	esp,4
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_aleftkey]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fkeydown
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_arightkey]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-88]
	sub	eax,ebx
	neg	eax
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apc]
	mov	[ebx],eax
	sub	esp,4
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_adownkey]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fkeydown
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_aupkey]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-88]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	[ebx],eax
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apc]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	and	eax,eax
	jz	_382
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apc]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-72]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	and	eax,eax
	jz	_383
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	[esi],ebx
_383
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apd]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-76]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	and	eax,eax
	jz	_384
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apc]
	mov	[esi],ebx
_384
_382
_381
	mov	[_vignoreboulders],0
	sub	esp,4
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apc]
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbFSgn
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-20],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apx]
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apy]
	mov	ebx,[ebx]
	mov	[ebp-12],ebx
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	eax,ebx
	shl	eax,byte 2
	add	eax,[_amap4]
	mov	eax,[eax]
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	[ebp-92],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbAbs
	mov	ebx,eax
	mov	eax,[ebp-92]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	and	eax,eax
	jz	_385
	sub	esp,16
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	[esp+12],10
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_faddboulder
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vmaxx]
	sub	esi,2
	push	esi
	fild	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	and	eax,eax
	jz	_386
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 1
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	eax,ebx
	shl	eax,byte 2
	add	eax,[_amap4]
	mov	eax,[eax]
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-88],eax
	sub	esp,8
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	shl	esi,byte 1
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fmapok
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	eax,ebx
	and	eax,eax
	jz	_387
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	edi,_amap4
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_amap4]
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-20]
	shl	edi,byte 1
	push	edi
	fild	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	edi,[ebp-12]
	push	edi
	fld	[esp]
	pop	edi
	push	edi
	fistp	[esp]
	pop	edi
	mov	edx,_amap4
	add	edx,12
	mov	edx,[edx]
	imul	edi,edx
	add	esi,edi
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	[esi],ebx
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	edi,_amap4
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_amap4]
	mov	esi,0
	mov	[ebx],esi
	sub	esp,16
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 1
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+8],ebx
	mov	[esp+12],10
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_faddboulder
	sub	esp,8
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 1
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fmapok
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-88],eax
	mov	[ebp-92],eax
	sub	esp,8
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	imul	esi,3
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp],ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fmapok
	mov	ebx,eax
	mov	eax,[ebp-92]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-88]
	and	ebx,eax
	and	ebx,ebx
	jz	_388
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	shl	esi,byte 1
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	edi,_amap3
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	esi,0
	mov	[ebx],esi
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-20]
	shl	esi,byte 1
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	edi,_amap2
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_amap2]
	mov	esi,0
	mov	[ebx],esi
_388
_387
_386
_385
	sub	esp,8
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apx]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apc]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apy]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fmapok
	cmp	eax,0
	jnz	_389
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apc]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	[esi],ebx
_389
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apx]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apx]
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apy]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apy]
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apx]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apc]
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbFSgn
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apx]
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apy]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apd]
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbFSgn
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apy]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aok2move]
	mov	[esi],ebx
	call	_fmillisecs
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_alastupdate]
	mov	[ebx],eax
_315
_l_28dontupdateplayer
	add	[ebp-4],1
_306
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-4],ebx
	jle	_307
_29
	mov	eax,0
	jmp	_28_leave
_28_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawplayers
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,44
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-4],1
	jmp	_390
_391
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apx]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apy]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,_amap3
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-20]
	add	ebx,[ebp-16]
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	ebx,[ebx]
	cmp	ebx,4
	jnz	_392
	mov	ebx,0
	mov	esi,_amap3
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-20]
	add	esi,[ebp-16]
	shl	esi,byte 2
	add	esi,[_amap3]
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ascore]
	mov	ebx,[ebx]
	add	ebx,10
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ascore]
	mov	[esi],ebx
	cmp	[ebp-4],1
	jnz	_393
	sub	esp,4
	mov	[esp],1
	call	_fcollectsfx
_393
_392
	mov	ebx,[ebp-16]
	sub	ebx,1
	mov	[ebp-8],ebx
	jmp	_394
_395
	mov	ebx,[ebp-20]
	sub	ebx,1
	mov	[ebp-12],ebx
	jmp	_396
_397
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fdrawtile
	add	[ebp-12],1
_396
	mov	ebx,[ebp-20]
	add	ebx,1
	cmp	[ebp-12],ebx
	jle	_397
_44
	add	[ebp-8],1
_394
	mov	ebx,[ebp-16]
	add	ebx,1
	cmp	[ebp-8],ebx
	jle	_395
_43
	add	[ebp-4],1
_390
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-4],ebx
	jle	_391
_42
	mov	[ebp-4],1
	jmp	_398
_399
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_alives]
	mov	ebx,[ebx]
	cmp	ebx,1
	jge	_400
	mov	ebx,10
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_adiecounter]
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_adead]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apx]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apy]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apdx]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apdy]
	mov	[esi],ebx
_400
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_adiecounter]
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_401
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_adiecounter]
	mov	ebx,[ebx]
	sub	ebx,1
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_adiecounter]
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_adiecounter]
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_402
	sub	esp,12
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_asx]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_asy]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpositionplayer
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_adead]
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_asy]
	mov	ebx,[ebx]
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_asx]
	mov	esi,[esi]
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	ebx,0
	mov	[esi],ebx
	call	_fdrawmap
_402
	jmp	_l_41nxtplay
_401
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_adead]
	mov	ebx,[ebx]
	cmp	ebx,1
	jnz	_403
	jmp	_l_41nxtplay
_403
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apx]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apy]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apx]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apdx]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apy]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apdy]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1098907648
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_404
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	__bbFSgn
	mov	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-24],eax
_404
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_405
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	__bbFSgn
	mov	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-28],eax
_405
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	[ebp-40],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,[ebp-28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbFAbs
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-40]
	and	eax,ebx
	and	eax,eax
	jz	_406
	mov	ebx,1
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_aok2move]
	mov	[esi],ebx
_406
	mov	[ebp-36],0
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_407
	mov	ebx,[ebp-16]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apdx]
	mov	[esi],ebx
	mov	[ebp-24],0
_407
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	__bbFAbs
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_408
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apdy]
	mov	[esi],ebx
	mov	[ebp-28],0
_408
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apdx]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apdx]
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apdy]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-28]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apdy]
	mov	[esi],ebx
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apc]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	mov	[ebp-40],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apd]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-40]
	or	eax,ebx
	and	eax,eax
	jz	_409
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_afr]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1036831949
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_afr]
	mov	[esi],ebx
_409
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_afr]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1072902963
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_410
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_afr]
	mov	[esi],ebx
_410
	cmp	[_vupdbuffer],1
	jnz	_411
	sub	esp,20
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_afr]
	mov	eax,[eax]
	mov	[esp],eax
	call	_ffloor
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,_aplayerimg
	add	ebx,12
	mov	ebx,[ebx]
	imul	eax,ebx
	add	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_aplayerimg]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apdy]
	mov	ebx,[ebx]
	sub	ebx,[_vcamy]
	add	ebx,[_vbasey]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apdx]
	mov	esi,[esi]
	sub	esi,[_vcamx]
	mov	[esp+4],esi
	call	_fdrawimage
_411
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apdx]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_apdy]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	edi,_amap4
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_amap4]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_412
	mov	ebx,[ebp-16]
	sub	ebx,1
	mov	[ebp-8],ebx
	jmp	_413
_414
	mov	ebx,[ebp-20]
	sub	ebx,1
	mov	[ebp-12],ebx
	jmp	_415
_416
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fdrawtile
	add	[ebp-12],1
_415
	mov	ebx,[ebp-20]
	add	ebx,1
	cmp	[ebp-12],ebx
	jle	_416
_47
	add	[ebp-8],1
_413
	mov	ebx,[ebp-16]
	add	ebx,1
	cmp	[ebp-8],ebx
	jle	_414
_46
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fdie
_412
_l_41nxtplay
	add	[ebp-4],1
_398
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-4],ebx
	jle	_399
_45
	mov	eax,0
	jmp	_41_leave
_41_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcreategfx
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,68
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	sub	esp,12
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-4],eax
	call	_fgraphicsbuffer
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	cmp	[ebp+20],1
	jnz	_417
	sub	esp,12
	mov	[esp+4],220
	mov	[esp+8],50
	mov	[esp],0
	call	_fcolour
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],0
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolour
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-56],ebx
	mov	[ebp-28],0
	mov	[ebp-32],0
	jmp	_418
_419
	sub	esp,8
	mov	eax,[ebp-28]
	add	eax,1
	mov	[esp],eax
	mov	[esp+4],2
	call	__bbMod
	mov	[ebp-28],eax
	sub	esp,16
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	[esp],0
	call	_fline
	mov	[ebp-60],0
	jmp	_420
_421
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1090519040
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-64],esi
	sub	esp,16
	mov	ebx,[ebp-60]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-64]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-56]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,[ebp-32]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-60]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1082130432
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[ebp-64]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	add	[ebp-60],1
_420
	cmp	[ebp-60],4
	jle	_421
_50
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
_418
	mov	eax,[ebp-32]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_419
_49
_417
	cmp	[ebp+20],2
	jnz	_422
	sub	esp,12
	mov	[esp+4],100
	mov	[esp+8],0
	mov	[esp],150
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolour
	mov	[ebp-32],0
	jmp	_423
_424
	sub	esp,16
	mov	eax,[_vszx]
	mov	[esp],eax
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,8
	mov	ebx,[_vszy]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-68]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fplot
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
_423
	mov	eax,[ebp-32]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_424
_51
_422
	cmp	[ebp+20],3
	jnz	_425
	sub	esp,12
	mov	[esp+4],170
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],100
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolour
	mov	[ebp-32],0
	jmp	_426
_427
	sub	esp,16
	mov	eax,[_vszx]
	mov	[esp],eax
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,8
	mov	ebx,[_vszy]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-68]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fplot
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
_426
	mov	eax,[ebp-32]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1112014848
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_427
_52
_425
	cmp	[ebp+20],4
	jnz	_428
	mov	[ebp-52],0
	jmp	_429
_430
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-40],ebx
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	sub	esp,12
	mov	ebx,1132331008
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,1128792064
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-52]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp],0
	call	_fcolour
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-48],ebx
	sub	esp,20
	mov	ebx,[ebp-40]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-48]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	edi,[ebp-20]
	push	edi
	fld	[esp]
	pop	edi
	push	edi
	fistp	[esp]
	pop	edi
	mov	[esp+8],edi
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp-20]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	eax,[ebp-44]
	push	eax
	fld	[esp]
	pop	eax
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1028443341
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-52],ebx
_429
	mov	eax,[ebp-52]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_430
_53
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1092616192
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	edi,[_vszx]
	push	edi
	fld	[esp]
	pop	edi
	push	edi
	fistp	[esp]
	pop	edi
	mov	[esp+8],edi
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],120
	mov	[esp+8],0
	mov	[esp],140
	call	_fcolour
	sub	esp,20
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1090519040
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_frect
	sub	esp,20
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1090519040
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_foval
_428
	cmp	[ebp+20],5
	jnz	_431
	sub	esp,12
	mov	[esp+4],70
	mov	[esp+8],0
	mov	[esp],224
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolour
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-56],ebx
	mov	[ebp-28],0
	mov	[ebp-32],0
	jmp	_432
_433
	sub	esp,8
	mov	eax,[ebp-28]
	add	eax,1
	mov	[esp],eax
	mov	[esp+4],2
	call	__bbMod
	mov	[ebp-28],eax
	sub	esp,16
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	[esp],0
	call	_fline
	mov	[ebp-60],0
	jmp	_434
_435
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1090519040
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-28]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp-64],esi
	sub	esp,16
	mov	ebx,[ebp-60]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-64]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-56]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,[ebp-32]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-60]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1082130432
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[ebp-64]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	add	[ebp-60],1
_434
	cmp	[ebp-60],4
	jle	_435
_55
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-56]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
_432
	mov	eax,[ebp-32]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_433
_54
_431
	cmp	[ebp+20],6
	jnz	_436
	mov	[ebp-52],1065353216
	jmp	_437
_438
	sub	esp,12
	mov	ebx,1132396544
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolour
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	sub	esp,16
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-16]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	esi,[ebp-16]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-12],esi
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp-16],esi
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,-1138501878
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-52],ebx
_437
	mov	eax,[ebp-52]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_438
_56
	sub	esp,12
	mov	[esp+4],10
	mov	[esp+8],10
	mov	[esp],10
	call	_fcolour
	sub	esp,16
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_fline
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+4],0
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	sub	esp,20
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1065353216
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
_436
	cmp	[ebp+20],7
	jnz	_439
	sub	esp,12
	mov	[esp+4],60
	mov	[esp+8],200
	mov	[esp],50
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_frect
	sub	esp,12
	mov	[esp+4],100
	mov	[esp+8],255
	mov	[esp],100
	call	_fcolour
	mov	[ebp-32],0
	jmp	_440
_441
	sub	esp,16
	mov	eax,[_vszx]
	mov	[esp],eax
	mov	[esp+4],0
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	[ebp-68],eax
	sub	esp,8
	mov	ebx,[_vszy]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_frnd
	mov	ebx,eax
	mov	eax,[ebp-68]
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fplot
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
_440
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	eax,[ebp-32]
	push	eax
	fld	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_441
_57
_439
	cmp	[ebp+20],8
	jnz	_442
	sub	esp,12
	mov	[esp+4],200
	mov	[esp+8],0
	mov	[esp],200
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1065353216
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,1066192077
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	[esp+4],0
	mov	[esp],0
	call	_foval
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1065353216
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,1067030938
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	[esp+4],0
	mov	[esp],0
	call	_foval
_442
	cmp	[ebp+20],255
	jnz	_443
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1086324736
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1075838976
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1082130432
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
	sub	esp,20
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1094713344
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1090519040
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	mov	edx,1073741824
	push	edx
	fld	[esp]
	pop	edx
	fdivp	st(1)
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],0
	mov	[esp+4],0
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
	mov	[ebp-20],1065353216
	mov	[ebp-24],1073741824
	sub	esp,12
	mov	ebx,[_vhatgreen]
	mov	[esp+4],ebx
	mov	esi,[_vhatblue]
	mov	[esp+8],esi
	mov	eax,[_vhatred]
	mov	[esp],eax
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1094713344
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1090519040
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	mov	edx,1073741824
	push	edx
	fld	[esp]
	pop	edx
	fdivp	st(1)
	faddp	st(1)
	mov	edi,[ebp-24]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-20]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	fsubp	st(1)
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
	sub	esp,12
	mov	[esp+4],250
	mov	[esp+8],200
	mov	[esp],0
	call	_fcolour
	cmp	[ebp+24],2
	jnz	_444
	sub	esp,12
	mov	[esp+4],120
	mov	[esp+8],0
	mov	[esp],80
	call	_fcolour
_444
	cmp	[ebp+24],3
	jnz	_445
	sub	esp,12
	mov	[esp+4],200
	mov	[esp+8],10
	mov	[esp],200
	call	_fcolour
_445
	sub	esp,20
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1086324736
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1075838976
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1082130432
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-24]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,[ebp-20]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolour
	sub	esp,16
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1086324736
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+8],0
	call	_fline
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolour
	sub	esp,20
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1077936128
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1094713344
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1090519040
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1090519040
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_foval
	sub	esp,20
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1077936128
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1094713344
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1090519040
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1090519040
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_foval
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolour
	sub	esp,16
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1094713344
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1084227584
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1084227584
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	mov	edx,1086324736
	push	edx
	fld	[esp]
	pop	edx
	fdivp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	fsubrp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1084227584
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1074580685
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1074580685
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1074580685
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	mov	edx,1094713344
	push	edx
	fld	[esp]
	pop	edx
	fdivp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1074580685
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	fsubrp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
_443
	cmp	[ebp+20],256
	jnz	_446
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1086324736
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1075838976
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],0
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1082130432
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
	sub	esp,20
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1094713344
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1090519040
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	mov	edx,1073741824
	push	edx
	fld	[esp]
	pop	edx
	fdivp	st(1)
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],0
	mov	[esp+4],0
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
	mov	[ebp-20],1065353216
	mov	[ebp-24],1073741824
	sub	esp,12
	mov	ebx,[_vhatgreen]
	mov	[esp+4],ebx
	mov	esi,[_vhatblue]
	mov	[esp+8],esi
	mov	eax,[_vhatred]
	mov	[esp],eax
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1094713344
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1090519040
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	mov	edx,1073741824
	push	edx
	fld	[esp]
	pop	edx
	fdivp	st(1)
	faddp	st(1)
	mov	edi,[ebp-24]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	esi,0
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[ebp-20]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	fsubp	st(1)
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
	sub	esp,12
	mov	[esp+4],250
	mov	[esp+8],200
	mov	[esp],0
	call	_fcolour
	cmp	[ebp+24],2
	jnz	_447
	sub	esp,12
	mov	[esp+4],120
	mov	[esp+8],0
	mov	[esp],80
	call	_fcolour
_447
	cmp	[ebp+24],3
	jnz	_448
	sub	esp,12
	mov	[esp+4],200
	mov	[esp+8],10
	mov	[esp],200
	call	_fcolour
_448
	sub	esp,20
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1086324736
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1075838976
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	mov	esi,[ebp-24]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1082130432
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-24]
	push	edi
	fld	[esp]
	pop	edi
	fsubp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,[ebp-20]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-20]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_foval
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolour
	sub	esp,16
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1086324736
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+8],0
	call	_fline
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolour
	sub	esp,20
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1077936128
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1094713344
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1090519040
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1090519040
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_foval
	sub	esp,20
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1077936128
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1094713344
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1090519040
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1090519040
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+16],1
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+4],esi
	call	_foval
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolour
	sub	esp,16
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1084227584
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1084227584
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	mov	edx,1094713344
	push	edx
	fld	[esp]
	pop	edx
	fdivp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	fsubrp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1094713344
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1074580685
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1074580685
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
	sub	esp,16
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1074580685
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fsubrp	st(1)
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	mov	edx,1084227584
	push	edx
	fld	[esp]
	pop	edx
	fdivp	st(1)
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	ebx,[_vszy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,1077936128
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	edi,1073741824
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1074580685
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	mov	eax,[_vszx]
	push	eax
	fld	[esp]
	pop	eax
	fsubrp	st(1)
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,1086324736
	push	edi
	fld	[esp]
	pop	edi
	fdivp	st(1)
	faddp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fline
_446
	sub	esp,4
	mov	eax,[ebp-8]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsetbuffer
	mov	eax,[ebp-4]
	jmp	_48_leave
	mov	eax,0
	jmp	_48_leave
_48_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsetmap
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	cmp	[ebp+32],1
	jnz	_449
	mov	ebx,[ebp+28]
	mov	esi,_amap
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp+24]
	add	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_amap]
	mov	[esi],ebx
	mov	ebx,[_vmaxx]
	sub	ebx,[ebp+20]
	mov	esi,_amap
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp+24]
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	esi,[ebp+28]
	mov	[ebx],esi
	mov	ebx,[_vmaxy]
	sub	ebx,[ebp+24]
	mov	esi,_amap
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[_vmaxx]
	sub	esi,[ebp+20]
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap]
	mov	ebx,[ebp+28]
	mov	[esi],ebx
	mov	ebx,[_vmaxy]
	sub	ebx,[ebp+24]
	mov	esi,_amap
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	esi,[ebp+28]
	mov	[ebx],esi
_449
	cmp	[ebp+32],2
	jnz	_450
	mov	ebx,[ebp+28]
	mov	esi,_amap2
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp+24]
	add	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_amap2]
	mov	[esi],ebx
	mov	ebx,[_vmaxx]
	sub	ebx,[ebp+20]
	mov	esi,_amap2
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp+24]
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_amap2]
	mov	esi,[ebp+28]
	mov	[ebx],esi
	mov	ebx,[_vmaxy]
	sub	ebx,[ebp+24]
	mov	esi,_amap2
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[_vmaxx]
	sub	esi,[ebp+20]
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap2]
	mov	ebx,[ebp+28]
	mov	[esi],ebx
	mov	ebx,[_vmaxy]
	sub	ebx,[ebp+24]
	mov	esi,_amap2
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap2]
	mov	esi,[ebp+28]
	mov	[ebx],esi
_450
	cmp	[ebp+32],3
	jnz	_451
	mov	ebx,[ebp+28]
	mov	esi,_amap3
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp+24]
	add	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_amap3]
	mov	[esi],ebx
	mov	ebx,[_vmaxx]
	sub	ebx,[ebp+20]
	mov	esi,_amap3
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp+24]
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	esi,[ebp+28]
	mov	[ebx],esi
	mov	ebx,[_vmaxy]
	sub	ebx,[ebp+24]
	mov	esi,_amap3
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[_vmaxx]
	sub	esi,[ebp+20]
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap3]
	mov	ebx,[ebp+28]
	mov	[esi],ebx
	mov	ebx,[_vmaxy]
	sub	ebx,[ebp+24]
	mov	esi,_amap3
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	esi,[ebp+28]
	mov	[ebx],esi
_451
	mov	eax,0
	jmp	_58_leave
_58_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fcreatelevel
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,100
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[_vmushrooms],0
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fseedrnd
	mov	[ebp-12],0
	jmp	_452
_453
	mov	[ebp-16],0
	jmp	_454
_455
	mov	ebx,3
	mov	esi,_amap
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_amap]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,_amap2
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_amap2]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,_amap3
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_amap3]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	[esi],ebx
	cmp	[ebp-12],0
	setz	al
	movzx	eax,al
	mov	[ebp-96],eax
	mov	ebx,[_vmaxx]
	cmp	[ebp-12],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	or	eax,ebx
	mov	[ebp-96],eax
	cmp	[ebp-16],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	or	eax,ebx
	mov	[ebp-96],eax
	mov	ebx,[_vmaxy]
	cmp	[ebp-16],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	or	eax,ebx
	and	eax,eax
	jz	_456
	mov	ebx,6
	mov	esi,_amap
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_amap]
	mov	[esi],ebx
_456
	add	[ebp-16],1
_454
	mov	ebx,[_vmaxy]
	cmp	[ebp-16],ebx
	jle	_455
_61
	add	[ebp-12],1
_452
	mov	ebx,[_vmaxx]
	cmp	[ebp-12],ebx
	jle	_453
_60
	sub	esp,8
	mov	[esp],2
	mov	ebx,[_vmaxx]
	sub	ebx,2
	mov	[esp+4],ebx
	call	_frand
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],2
	mov	ebx,[_vmaxy]
	sub	ebx,2
	mov	[esp+4],ebx
	call	_frand
	mov	[ebp-16],eax
	mov	[ebp-20],0
	mov	[ebp-24],0
	mov	[ebp-28],0
	mov	[ebp-32],3
	jmp	_457
_458
	cmp	[ebp-32],3
	jnz	_459
	mov	[ebp-36],7
	mov	[ebp-40],1000
_459
	cmp	[ebp-32],2
	jnz	_460
	mov	[ebp-36],1
	mov	[ebp-40],500
_460
	cmp	[ebp-32],1
	jnz	_461
	mov	[ebp-36],5
	mov	[ebp-40],500
_461
	cmp	[ebp-32],0
	jnz	_462
	mov	[ebp-36],3
	sub	esp,8
	mov	eax,[ebp+20]
	mov	ecx,3
	cdq
	idiv	ecx
	add	eax,5
	mov	[esp+4],eax
	mov	[esp],3
	mov	eax,ebx
	call	_frand
	mov	ebx,eax
	push	ebx
	fild	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[_vmaxx]
	imul	eax,[_vmaxy]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsqr
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-40],eax
	mov	ebx,[ebp-12]
	mov	[ebp-4],ebx
	mov	ebx,[ebp-16]
	mov	[ebp-8],ebx
_462
	mov	eax,[_vmaxx]
	imul	eax,[_vmaxy]
	mov	ecx,200
	cdq
	idiv	ecx
	add	eax,1
	mov	[ebp-44],eax
	mov	[ebp-48],0
	mov	[ebp-52],1
	jmp	_463
_464
	sub	esp,8
	mov	[esp],1
	mov	ebx,[ebp-44]
	mov	[esp+4],ebx
	call	_frand
	mov	ebx,[ebp-44]
	sar	ebx,byte 1
	cmp	eax,ebx
	setz	al
	movzx	eax,al
	mov	[ebp-96],eax
	cmp	[ebp-48],4
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	and	eax,ebx
	and	eax,eax
	jz	_465
	mov	[ebp-20],1
_465
	cmp	[ebp-32],0
	setnz	al
	movzx	eax,al
	mov	[ebp-96],eax
	cmp	[ebp-32],3
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	and	eax,ebx
	and	eax,eax
	jz	_466
	mov	eax,_amap
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-16]
	add	eax,[ebp-12]
	shl	eax,byte 2
	add	eax,[_amap]
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-96],eax
	mov	ebx,_amap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-16]
	add	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	cmp	ebx,5
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	or	eax,ebx
	and	eax,eax
	jz	_467
	sub	esp,16
	mov	[esp+8],3
	mov	[esp+12],1
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fsetmap
	mov	ebx,[ebp-24]
	sub	[ebp-12],ebx
	mov	ebx,[ebp-28]
	sub	[ebp-16],ebx
	sub	esp,16
	mov	[esp+8],3
	mov	[esp+12],1
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fsetmap
	mov	[ebp-20],1
	mov	ebx,[ebp-24]
	add	[ebp-12],ebx
	mov	ebx,[ebp-28]
	add	[ebp-16],ebx
_467
	mov	ebx,[ebp-24]
	add	[ebp-12],ebx
	mov	ebx,[ebp-28]
	add	[ebp-16],ebx
	cmp	[ebp-12],0
	setg	al
	movzx	eax,al
	mov	[ebp-96],eax
	mov	ebx,[_vmaxx]
	cmp	[ebp-12],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	and	eax,ebx
	mov	[ebp-96],eax
	cmp	[ebp-16],0
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	and	eax,ebx
	mov	[ebp-96],eax
	mov	ebx,[_vmaxy]
	cmp	[ebp-16],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	and	eax,ebx
	and	eax,eax
	jz	_468
	mov	eax,_amap
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-16]
	add	eax,[ebp-12]
	shl	eax,byte 2
	add	eax,[_amap]
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-96],eax
	mov	ebx,_amap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-16]
	add	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	cmp	ebx,5
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	or	eax,ebx
	and	eax,eax
	jz	_469
	mov	[ebp-20],1
_469
_468
	mov	ebx,[ebp-24]
	add	[ebp-12],ebx
	mov	ebx,[ebp-28]
	add	[ebp-16],ebx
	mov	ebx,[ebp-24]
	sub	[ebp-12],ebx
	mov	ebx,[ebp-28]
	sub	[ebp-16],ebx
	mov	ebx,[ebp-24]
	sub	[ebp-12],ebx
	mov	ebx,[ebp-28]
	sub	[ebp-16],ebx
_466
	add	[ebp-48],1
	cmp	[ebp-20],1
	jnz	_470
	mov	[ebp-48],0
_471
	sub	esp,8
	mov	[esp],-1
	mov	[esp+4],1
	call	_frand
	mov	[ebp-24],eax
	sub	esp,8
	mov	[esp],-1
	mov	[esp+4],1
	call	_frand
	mov	[ebp-28],eax
	cmp	[ebp-24],0
	setz	al
	movzx	eax,al
	mov	[ebp-96],eax
	cmp	[ebp-28],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	and	eax,ebx
	mov	[ebp-96],eax
	cmp	[ebp-24],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	[ebp-96],eax
	cmp	[ebp-28],0
	mov	eax,esi
	setnz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-96]
	and	ebx,esi
	or	eax,ebx
	and	eax,eax
	jz	_472
	mov	[ebp-24],0
	mov	[ebp-28],0
_472
	mov	ebx,[ebp-12]
	add	ebx,[ebp-24]
	mov	[ebp-56],ebx
	mov	ebx,[ebp-16]
	add	ebx,[ebp-28]
	mov	[ebp-60],ebx
	cmp	[ebp-56],1
	jge	_473
	mov	[ebp-56],1
	jmp	_474
_473
	mov	ebx,[_vmaxx]
	cmp	[ebp-56],ebx
	jle	_475
	mov	ebx,[_vmaxx]
	mov	[ebp-56],ebx
_475
_474
	cmp	[ebp-60],1
	jge	_476
	mov	[ebp-60],1
	jmp	_477
_476
	mov	ebx,[_vmaxy]
	cmp	[ebp-60],ebx
	jle	_478
	mov	ebx,[_vmaxy]
	mov	[ebp-60],ebx
_478
_477
	mov	ebx,_amap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-60]
	add	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	mov	[ebp-64],ebx
	cmp	[ebp-24],0
	setnz	al
	movzx	eax,al
	mov	[ebp-96],eax
	cmp	[ebp-28],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	or	eax,ebx
	and	eax,eax
	jz	_471
_64
	mov	[ebp-20],0
_470
	cmp	[ebp-12],1
	jge	_479
	mov	ebx,[_vmaxx]
	sub	ebx,1
	mov	[ebp-12],ebx
_479
	cmp	[ebp-16],1
	jge	_480
	mov	ebx,[_vmaxy]
	sub	ebx,1
	mov	[ebp-16],ebx
_480
	mov	ebx,[_vmaxx]
	sub	ebx,1
	cmp	[ebp-12],ebx
	jle	_481
	mov	[ebp-12],1
_481
	mov	ebx,[_vmaxy]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_482
	mov	[ebp-16],1
_482
	sub	esp,16
	mov	ebx,[ebp-36]
	mov	[esp+8],ebx
	mov	[esp+12],1
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fsetmap
	cmp	[ebp-36],3
	jnz	_483
	sub	esp,16
	mov	ebx,[ebp-36]
	mov	[esp+8],ebx
	mov	[esp+12],2
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fsetmap
_483
	cmp	[ebp-36],3
	jz	_484
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fsetmap
_484
	mov	ebx,[ebp-24]
	add	[ebp-12],ebx
	mov	ebx,[ebp-28]
	add	[ebp-16],ebx
	add	[ebp-52],1
_463
	mov	ebx,[ebp-40]
	cmp	[ebp-52],ebx
	jle	_464
_63
	add	[ebp-32],-1
_457
	cmp	[ebp-32],0
	jge	_458
_62
	mov	[ebp-68],1
	jmp	_485
_486
_487
	sub	esp,8
	mov	[esp],1
	mov	ebx,[_vmaxx]
	mov	[esp+4],ebx
	call	_frand
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],1
	mov	ebx,[_vmaxy]
	mov	[esp+4],ebx
	call	_frand
	mov	[ebp-16],eax
	mov	ebx,_amap2
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-16]
	add	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_amap2]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_487
_66
	sub	esp,16
	mov	[esp+8],4
	mov	[esp+12],3
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fsetmap
	add	[ebp-68],1
_485
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-68],ebx
	jle	_486
_65
	call	_fcls
	mov	[ebp-12],0
	jmp	_488
_489
	mov	[ebp-16],0
	jmp	_490
_491
	mov	ebx,_amap2
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-16]
	add	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_amap2]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_492
	mov	ebx,2
	mov	esi,_amap
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_amap]
	mov	[esi],ebx
_492
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fdrawtile
	add	[ebp-16],1
_490
	mov	ebx,[_vmaxy]
	cmp	[ebp-16],ebx
	jle	_491
_68
	add	[ebp-12],1
_488
	mov	ebx,[_vmaxx]
	cmp	[ebp-12],ebx
	jle	_489
_67
	mov	[ebp-72],1
	mov	[ebp-68],1
	jmp	_493
_494
	mov	[ebp-76],4
	mov	ebx,[ebp-68]
	add	ebx,[ebp-76]
	cmp	ebx,[_vmaxplayers]
	jle	_495
	sub	esp,8
	mov	eax,[_vmaxplayers]
	mov	[esp],eax
	mov	[esp+4],4
	call	__bbMod
	add	eax,1
	mov	[ebp-76],eax
_495
_496
	sub	esp,8
	mov	[esp],1
	mov	ebx,[_vmaxx]
	sar	ebx,byte 1
	sub	ebx,2
	mov	[esp+4],ebx
	call	_frand
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],1
	mov	ebx,[_vmaxy]
	sar	ebx,byte 1
	sub	ebx,2
	mov	[esp+4],ebx
	call	_frand
	mov	[ebp-16],eax
	mov	[ebp-80],1
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fmapok
	cmp	eax,0
	jnz	_497
	mov	[ebp-80],0
_497
	mov	[ebp-84],1
	jmp	_498
_499
	mov	eax,[ebp-12]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-84]
	shl	ebx,byte 2
	add	ebx,[_apx]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	[ebp-96],eax
	mov	ebx,[ebp-16]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-84]
	shl	esi,byte 2
	add	esi,[_apy]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	and	eax,ebx
	and	eax,eax
	jz	_500
	mov	[ebp-80],0
_500
	add	[ebp-84],1
_498
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-84],ebx
	jle	_499
_71
	mov	ebx,_amap2
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-16]
	add	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_amap2]
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_501
	mov	[ebp-80],0
_501
	cmp	[ebp-80],1
	jnz	_496
_70
	mov	ebx,[ebp-12]
	mov	esi,[ebp-72]
	shl	esi,byte 2
	add	esi,[_asx]
	mov	[esi],ebx
	mov	ebx,[ebp-16]
	mov	esi,[ebp-72]
	shl	esi,byte 2
	add	esi,[_asy]
	mov	[esi],ebx
	add	[ebp-72],1
	mov	ebx,[_vmaxplayers]
	add	ebx,1
	cmp	[ebp-72],ebx
	jge	_502
	mov	ebx,[_vmaxx]
	sub	ebx,[ebp-12]
	mov	esi,[ebp-72]
	shl	esi,byte 2
	add	esi,[_asx]
	mov	[esi],ebx
	mov	ebx,[ebp-16]
	mov	esi,[ebp-72]
	shl	esi,byte 2
	add	esi,[_asy]
	mov	[esi],ebx
	add	[ebp-72],1
_502
	mov	ebx,[_vmaxplayers]
	add	ebx,1
	cmp	[ebp-72],ebx
	jge	_503
	mov	ebx,[ebp-12]
	mov	esi,[ebp-72]
	shl	esi,byte 2
	add	esi,[_asx]
	mov	[esi],ebx
	mov	ebx,[_vmaxy]
	sub	ebx,[ebp-16]
	mov	esi,[ebp-72]
	shl	esi,byte 2
	add	esi,[_asy]
	mov	[esi],ebx
	add	[ebp-72],1
_503
	mov	ebx,[_vmaxplayers]
	add	ebx,1
	cmp	[ebp-72],ebx
	jge	_504
	mov	ebx,[_vmaxx]
	sub	ebx,[ebp-12]
	mov	esi,[ebp-72]
	shl	esi,byte 2
	add	esi,[_asx]
	mov	[esi],ebx
	mov	ebx,[_vmaxy]
	sub	ebx,[ebp-16]
	mov	esi,[ebp-72]
	shl	esi,byte 2
	add	esi,[_asy]
	mov	[esi],ebx
	add	[ebp-72],1
_504
	add	[ebp-68],1
_493
	mov	ebx,[_vmaxplayers]
	sar	ebx,byte 2
	cmp	[ebp-68],ebx
	jle	_494
_69
	mov	[ebp-68],1
	jmp	_505
_506
	mov	ebx,0
	mov	esi,[ebp-68]
	shl	esi,byte 2
	add	esi,[_apx]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-68]
	shl	esi,byte 2
	add	esi,[_apy]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-68]
	shl	esi,byte 2
	add	esi,[_apdx]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-68]
	shl	esi,byte 2
	add	esi,[_apdy]
	mov	[esi],ebx
	mov	ebx,[ebp-68]
	shl	ebx,byte 2
	add	ebx,[_alives]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_507
	mov	ebx,[ebp-68]
	shl	ebx,byte 2
	add	ebx,[_asx]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	shl	esi,byte 2
	add	esi,[_apx]
	mov	[esi],ebx
	mov	ebx,[ebp-68]
	shl	ebx,byte 2
	add	ebx,[_asy]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	shl	esi,byte 2
	add	esi,[_apy]
	mov	[esi],ebx
	mov	ebx,[ebp-68]
	shl	ebx,byte 2
	add	ebx,[_asx]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	shl	esi,byte 2
	add	esi,[_apdx]
	mov	[esi],ebx
	mov	ebx,[ebp-68]
	shl	ebx,byte 2
	add	ebx,[_asy]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp-68]
	shl	esi,byte 2
	add	esi,[_apdy]
	mov	[esi],ebx
_507
	add	[ebp-68],1
_505
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-68],ebx
	jle	_506
_72
	mov	ebx,[ebp+20]
	shl	ebx,byte 1
	mov	[ebp-88],ebx
	cmp	[ebp-88],1024
	jle	_508
	mov	[ebp-88],1024
_508
	mov	[ebp-68],1
	jmp	_509
_510
	call	_fmillisecs
	mov	[ebp-92],eax
_511
	sub	esp,8
	mov	[esp],1
	mov	ebx,[_vmaxx]
	mov	[esp+4],ebx
	call	_frand
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],1
	mov	ebx,[_vmaxy]
	mov	[esp+4],ebx
	call	_frand
	mov	[ebp-16],eax
	mov	[ebp-80],1
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fmapok
	cmp	eax,0
	jz	_512
	mov	[ebp-80],0
_512
	mov	ebx,[ebp-16]
	sub	ebx,1
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_amap4]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_513
	mov	[ebp-80],0
_513
	sub	esp,8
	mov	eax,[ebp-12]
	sub	eax,1
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fmapok
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-96],eax
	mov	[ebp-100],eax
	sub	esp,8
	mov	ebx,[ebp-12]
	add	ebx,1
	mov	[esp],ebx
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fmapok
	mov	ebx,eax
	mov	eax,[ebp-100]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	and	eax,ebx
	and	eax,eax
	jz	_514
	mov	[ebp-80],0
_514
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fmapok
	cmp	eax,0
	jnz	_515
	mov	[ebp-80],0
_515
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	add	ebx,1
	mov	[esp+4],ebx
	call	_fmapok
	cmp	eax,0
	jnz	_516
	mov	[ebp-80],0
_516
	mov	eax,[ebp-12]
	sub	eax,1
	mov	ebx,_amap4
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-16]
	add	eax,ebx
	shl	eax,byte 2
	add	eax,[_amap4]
	mov	eax,[eax]
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-96],eax
	mov	ebx,[ebp-12]
	add	ebx,1
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_amap4]
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	or	eax,ebx
	and	eax,eax
	jz	_517
	mov	[ebp-80],0
_517
	mov	[ebp-84],1
	jmp	_518
_519
	mov	eax,[ebp-12]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-84]
	shl	ebx,byte 2
	add	ebx,[_apx]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	[ebp-96],eax
	mov	ebx,[ebp-16]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[ebp-84]
	shl	esi,byte 2
	add	esi,[_apy]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	and	eax,ebx
	and	eax,eax
	jz	_520
	mov	[ebp-80],0
_520
	add	[ebp-84],1
_518
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-84],ebx
	jle	_519
_75
	cmp	[ebp-80],1
	setz	al
	movzx	eax,al
	mov	[ebp-96],eax
	sub	esp,4
	mov	[esp],1
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-96]
	or	eax,ebx
	mov	[ebp-96],eax
	mov	[ebp-100],eax
	mov	eax,ebx
	call	_fmillisecs
	mov	ebx,eax
	mov	eax,[ebp-100]
	sub	ebx,[ebp-92]
	cmp	ebx,200
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-96]
	or	eax,ebx
	and	eax,eax
	jz	_511
_74
	call	_fmillisecs
	sub	eax,[ebp-92]
	cmp	eax,200
	jge	_521
	mov	ebx,8
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	[esi],ebx
	mov	ebx,[_vmaxx]
	sub	ebx,[ebp-12]
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	ebx,esi
	shl	ebx,byte 2
	add	ebx,[_amap4]
	mov	esi,8
	mov	[ebx],esi
	jmp	_522
_521
	mov	[ebp-68],10250
_522
	add	[ebp-68],1
_509
	mov	ebx,[ebp-88]
	cmp	[ebp-68],ebx
	jle	_510
_73
	mov	eax,0
	jmp	_59_leave
_59_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fspread
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,44
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[_vmushrooms],0
	mov	[ebp-4],1
	jmp	_523
_524
	mov	[ebp-8],1
	jmp	_525
_526
	mov	eax,_amap4
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-8]
	add	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_amap4]
	mov	eax,[eax]
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-44],eax
	mov	ebx,_amap3
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	and	eax,ebx
	and	eax,eax
	jz	_527
	mov	ebx,0
	mov	esi,_amap3
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-8]
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_amap3]
	mov	[esi],ebx
_527
	mov	ebx,_amap3
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_528
	add	[_vmushrooms],1
_528
	add	[ebp-8],1
_525
	mov	ebx,[_vmaxy]
	sub	ebx,1
	cmp	[ebp-8],ebx
	jle	_526
_78
	add	[ebp-4],1
_523
	mov	ebx,[_vmaxx]
	sub	ebx,1
	cmp	[ebp-4],ebx
	jle	_524
_77
	mov	[ebp-20],0
	mov	[ebp-24],1
	jmp	_529
_530
	mov	ebx,[ebp-24]
	shl	ebx,byte 2
	add	ebx,[_alives]
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_531
	add	[ebp-20],1
_531
	add	[ebp-24],1
_529
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-24],ebx
	jle	_530
_79
	mov	[ebp-24],1
	jmp	_532
_533
	sub	esp,8
	mov	[esp],1
	mov	ebx,[_vmaxx]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_frand
	mov	[ebp-4],eax
	sub	esp,8
	mov	[esp],1
	mov	ebx,[_vmaxy]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_frand
	mov	[ebp-8],eax
	mov	ebx,_amap3
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	ebx,[ebx]
	cmp	ebx,4
	jnz	_534
_535
	sub	esp,8
	mov	[esp],-1
	mov	[esp+4],1
	call	_frand
	mov	[ebp-28],eax
	sub	esp,8
	mov	[esp],-1
	mov	[esp+4],1
	call	_frand
	mov	[ebp-32],eax
	cmp	[ebp-28],0
	setz	al
	movzx	eax,al
	mov	[ebp-44],eax
	cmp	[ebp-32],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	and	eax,ebx
	mov	[ebp-44],eax
	cmp	[ebp-28],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[ebp-44],eax
	cmp	[ebp-32],0
	mov	eax,esi
	setnz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-44]
	and	ebx,esi
	or	eax,ebx
	and	eax,eax
	jz	_536
	mov	[ebp-28],0
	mov	[ebp-32],0
_536
	cmp	[ebp-28],0
	setnz	al
	movzx	eax,al
	mov	[ebp-44],eax
	cmp	[ebp-32],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	or	eax,ebx
	and	eax,eax
	jz	_535
_81
	mov	ebx,[ebp-4]
	add	ebx,[ebp-28]
	mov	[ebp-12],ebx
	mov	ebx,[ebp-8]
	add	ebx,[ebp-32]
	mov	[ebp-16],ebx
	mov	ebx,_amap3
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-16]
	add	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	ebx,[ebx]
	cmp	ebx,4
	jnz	_537
	mov	ebx,[_vmushlife]
	mov	esi,_aalive
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_aalive]
	mov	[esi],ebx
_537
	mov	eax,_amap
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-16]
	add	eax,[ebp-12]
	shl	eax,byte 2
	add	eax,[_amap]
	mov	eax,[eax]
	cmp	eax,3
	setz	al
	movzx	eax,al
	mov	[ebp-44],eax
	mov	ebx,_amap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-16]
	add	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	cmp	ebx,2
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	or	eax,ebx
	and	eax,eax
	jz	_538
	sub	esp,8
	mov	[esp],100
	mov	[esp+4],1
	call	_frand
	cmp	eax,0
	jle	_539
	mov	[ebp-36],1
	mov	[ebp-40],1
	jmp	_540
_541
	mov	eax,[ebp-40]
	shl	eax,byte 2
	add	eax,[_apx]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	[ebp-44],eax
	mov	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apy]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	and	eax,ebx
	and	eax,eax
	jz	_542
	mov	[ebp-36],0
_542
	mov	eax,[ebp-40]
	shl	eax,byte 2
	add	eax,[_apx]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apc]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	[ebp-44],eax
	mov	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apy]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	and	eax,ebx
	and	eax,eax
	jz	_543
	mov	[ebp-36],0
_543
	mov	eax,[ebp-40]
	shl	eax,byte 2
	add	eax,[_apx]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apc]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fsubp	st(1)
	mov	ebx,[ebp-12]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	[ebp-44],eax
	mov	ebx,[ebp-40]
	shl	ebx,byte 2
	add	ebx,[_apy]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	shl	esi,byte 2
	add	esi,[_apd]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	and	eax,ebx
	and	eax,eax
	jz	_544
	mov	[ebp-36],0
_544
	add	[ebp-40],1
_540
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-40],ebx
	jle	_541
_82
	cmp	[ebp-36],1
	jnz	_545
	mov	ebx,4
	mov	esi,_amap3
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_amap3]
	mov	[esi],ebx
	call	_fmillisecs
	mov	[_vlastspread],eax
	mov	ebx,[_vmushlife]
	mov	esi,_aalive
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_aalive]
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fdrawtile
_545
_539
_538
_534
	add	[ebp-24],1
_532
	mov	ebx,[ebp-20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1060320051
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vmaxx]
	sar	esi,byte 4
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	cmp	[ebp-24],esi
	jle	_533
_80
	mov	eax,0
	jmp	_76_leave
_76_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdrawtileo
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	cmp	[_vupdbuffer],1
	jnz	_546
	mov	ebx,_amap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+24]
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_547
	sub	esp,16
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vcamx]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[_vcamy]
	push	edi
	fild	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,[_vbasey]
	push	edi
	fild	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,_amap
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp+24]
	add	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_amap]
	mov	eax,[eax]
	shl	eax,byte 2
	add	eax,[_aimg]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawblock
_547
	mov	ebx,_amap3
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+24]
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_548
	sub	esp,16
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vcamx]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[_vcamy]
	push	edi
	fild	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,[_vbasey]
	push	edi
	fild	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,_amap3
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp+24]
	add	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_amap3]
	mov	eax,[eax]
	shl	eax,byte 2
	add	eax,[_aimg]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
_548
	mov	ebx,_amap4
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+24]
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap4]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_549
	sub	esp,16
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vcamx]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[_vcamy]
	push	edi
	fild	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,[_vbasey]
	push	edi
	fild	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,8
	shl	eax,byte 2
	add	eax,[_aimg]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
_549
_546
	mov	eax,0
	jmp	_83_leave
_83_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdrawtile
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vcamx]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vcamy]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	eax,[ebp-4]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	[ebp-12],eax
	mov	ebx,[ebp-4]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vscx]
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	mov	[ebp-12],eax
	mov	ebx,[ebp-8]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	mov	[ebp-12],eax
	mov	ebx,[ebp-8]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vscy]
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	mov	[ebp-12],eax
	cmp	[_vupdbuffer],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	and	eax,eax
	jz	_550
	cmp	[ebp+20],-1
	setg	al
	movzx	eax,al
	mov	[ebp-12],eax
	mov	ebx,[_vmaxx]
	add	ebx,1
	cmp	[ebp+20],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	mov	[ebp-12],eax
	cmp	[ebp+24],-1
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	mov	[ebp-12],eax
	mov	ebx,[_vmaxy]
	add	ebx,1
	cmp	[ebp+24],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-12]
	and	eax,ebx
	and	eax,eax
	jz	_551
	mov	ebx,_amap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+24]
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_552
	sub	esp,16
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vcamx]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[_vcamy]
	push	edi
	fild	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,[_vbasey]
	push	edi
	fild	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,_amap
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp+24]
	add	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_amap]
	mov	eax,[eax]
	shl	eax,byte 2
	add	eax,[_aimg]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawblock
_552
	mov	ebx,_amap3
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+24]
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_553
	sub	esp,16
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vcamx]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[_vcamy]
	push	edi
	fild	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,[_vbasey]
	push	edi
	fild	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,_amap3
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp+24]
	add	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_amap3]
	mov	eax,[eax]
	shl	eax,byte 2
	add	eax,[_aimg]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
_553
	mov	ebx,_amap4
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+24]
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap4]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_554
	sub	esp,16
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vcamx]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	mov	edi,[_vszy]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[_vcamy]
	push	edi
	fild	[esp]
	pop	edi
	fsubp	st(1)
	mov	edi,[_vbasey]
	push	edi
	fild	[esp]
	pop	edi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,8
	shl	eax,byte 2
	add	eax,[_aimg]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
_554
_551
_550
	mov	eax,0
	jmp	_84_leave
_84_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fdfloor
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,1
	shl	ebx,byte 2
	add	ebx,[_adead]
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_555
	mov	ebx,[_vscx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1
	shl	esi,byte 2
	add	esi,[_apdx]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[_vcamx],esi
	mov	ebx,[_vscy]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1
	shl	esi,byte 2
	add	esi,[_apdy]
	mov	esi,[esi]
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[_vcamy],esi
	cmp	[_vcamx],0
	jge	_556
	mov	[_vcamx],0
_556
	cmp	[_vcamy],0
	jge	_557
	mov	[_vcamy],0
_557
	mov	ebx,[_vmaxx]
	add	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vscx]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	eax,[_vcamx]
	push	eax
	fild	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_558
	mov	ebx,[_vmaxx]
	add	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vscx]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[_vcamx],ebx
_558
	mov	ebx,[_vmaxy]
	add	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vscy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[_vbasey]
	push	edi
	fild	[esp]
	pop	edi
	fsubp	st(1)
	fsubp	st(1)
	mov	eax,[_vcamy]
	push	eax
	fild	[esp]
	pop	eax
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_559
	mov	ebx,[_vmaxy]
	add	ebx,1
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[_vscy]
	push	esi
	fld	[esp]
	pop	esi
	mov	edi,[_vbasey]
	push	edi
	fild	[esp]
	pop	edi
	fsubp	st(1)
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[_vcamy],ebx
_559
	mov	ebx,[_vcamx]
	sub	ebx,[_vocamx]
	neg	ebx
	mov	[_vcammvx],ebx
	mov	ebx,[_vcamy]
	sub	ebx,[_vocamy]
	neg	ebx
	mov	[_vcammvy],ebx
	mov	ebx,[_vcamx]
	mov	[_vocamx],ebx
	mov	ebx,[_vcamy]
	mov	[_vocamy],ebx
_555
	mov	eax,0
	jmp	_85_leave
_85_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fmapok
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[_vignoreboulders],0
	jnz	_560
	mov	[ebp-4],1
	jmp	_561
_562
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apx]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apy]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_563
	mov	eax,0
	jmp	_86_leave
_563
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_apdx]
	mov	eax,[eax]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[_vszx]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	cmp	eax,[ebp+20]
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_apdy]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	cmp	ebx,[ebp+24]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	and	eax,ebx
	and	eax,eax
	jz	_564
	mov	eax,0
	jmp	_86_leave
_564
	add	[ebp-4],1
_561
	mov	ebx,[_vmaxplayers]
	cmp	[ebp-4],ebx
	jle	_562
_87
_560
	cmp	[_vignoreboulders],0
	jnz	_565
	mov	ebx,_amap4
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+24]
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap4]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_566
	mov	eax,0
	jmp	_86_leave
_566
_565
	cmp	[ebp+20],1
	setl	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[_vmaxx]
	sub	ebx,1
	cmp	[ebp+20],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	mov	[ebp-8],eax
	cmp	[ebp+24],1
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	mov	[ebp-8],eax
	mov	ebx,[_vmaxy]
	sub	ebx,1
	cmp	[ebp+24],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_567
	mov	eax,0
	jmp	_86_leave
_567
	mov	eax,_amap
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp+24]
	add	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_amap]
	mov	eax,[eax]
	cmp	eax,3
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,_amap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+24]
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	cmp	ebx,2
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_568
	mov	eax,1
	jmp	_86_leave
_568
	mov	eax,0
	jmp	_86_leave
	mov	eax,0
	jmp	_86_leave
_86_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fmapok2
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+20],1
	setl	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,[_vmaxx]
	sub	ebx,1
	cmp	[ebp+20],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	mov	[ebp-8],eax
	cmp	[ebp+24],1
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	mov	[ebp-8],eax
	mov	ebx,[_vmaxy]
	sub	ebx,1
	cmp	[ebp+24],ebx
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_569
	mov	eax,0
	jmp	_88_leave
_569
	mov	eax,_amap
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp+24]
	add	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_amap]
	mov	eax,[eax]
	cmp	eax,3
	setz	al
	movzx	eax,al
	mov	[ebp-8],eax
	mov	ebx,_amap
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+24]
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap]
	mov	ebx,[ebx]
	cmp	ebx,2
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	eax,ebx
	and	eax,eax
	jz	_570
	mov	eax,1
	jmp	_88_leave
_570
	mov	eax,0
	jmp	_88_leave
	mov	eax,0
	jmp	_88_leave
_88_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_ffindpath
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-4],1
	jmp	_571
_572
	mov	[ebp-8],1
	jmp	_573
_574
	add	[ebp-8],1
_573
	mov	ebx,[_vmaxy]
	cmp	[ebp-8],ebx
	jle	_574
_91
	add	[ebp-4],1
_571
	mov	ebx,[_vmaxx]
	cmp	[ebp-4],ebx
	jle	_572
_90
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,_tpath
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	[ebp-16],0
	mov	[ebp-20],0
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],_tpath
	call	__bbObjEachFirst
	and	eax,eax
	jz	_92
_575
	cmp	[ebp-20],0
	jnz	_576
	sub	esp,20
	mov	ebx,[ebp+32]
	mov	[esp+12],ebx
	mov	esi,[ebp-16]
	mov	[esp+16],esi
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	ebx,[ebp-12]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcheckpath
	mov	[ebp-20],eax
	add	[ebp-16],1
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjDelete
_576
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_575
_92
	mov	eax,[ebp-20]
	jmp	_89_leave
	mov	eax,0
	jmp	_89_leave
_89_leave
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fcheckpath
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-4],-1
	jmp	_577
_578
	mov	[ebp-8],-1
	jmp	_579
_580
	cmp	[ebp-4],0
	setz	al
	movzx	eax,al
	mov	[ebp-16],eax
	cmp	[ebp-8],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	or	eax,ebx
	mov	[ebp-16],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbAbs
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[ebp-20],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbAbs
	mov	esi,eax
	mov	eax,[ebp-20]
	cmp	ebx,esi
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	and	eax,ebx
	and	eax,eax
	jz	_581
	mov	ebx,[ebp+24]
	add	ebx,[ebp-8]
	mov	esi,_amap
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	eax,[ebp+20]
	add	eax,[ebp-4]
	add	eax,ebx
	shl	eax,byte 2
	add	eax,[_amap]
	mov	eax,[eax]
	cmp	eax,2
	setz	al
	movzx	eax,al
	mov	[ebp-16],eax
	mov	ebx,[ebp+24]
	add	ebx,[ebp-8]
	mov	esi,_amap
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp+20]
	add	esi,[ebp-4]
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap]
	mov	esi,[esi]
	cmp	esi,3
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-16]
	or	eax,esi
	mov	[ebp-16],eax
	mov	ebx,[ebp+24]
	add	ebx,[ebp-8]
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp+20]
	add	esi,[ebp-4]
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	esi,[esi]
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-16]
	and	eax,esi
	and	eax,eax
	jz	_582
	mov	ebx,[ebp+24]
	add	ebx,[ebp-8]
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp+20]
	add	esi,[ebp-4]
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	ebx,[ebp+36]
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	add	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	add	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fdrawtile
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_tpath
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	add	ebx,[ebp-4]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	add	ebx,[ebp-8]
	mov	esi,[ebp-12]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
_582
_581
	add	[ebp-8],1
_579
	cmp	[ebp-8],1
	jle	_580
_95
	add	[ebp-4],1
_577
	cmp	[ebp-4],1
	jle	_578
_94
	mov	eax,[ebp+28]
	cmp	[ebp+20],eax
	setz	al
	movzx	eax,al
	mov	[ebp-16],eax
	mov	ebx,[ebp+32]
	cmp	[ebp+24],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-16]
	and	eax,ebx
	and	eax,eax
	jz	_583
	mov	eax,1
	jmp	_93_leave
_583
	mov	eax,0
	jmp	_93_leave
_93_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fpositionplayer
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_apx]
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_apy]
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszx]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_apdx]
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,[_vszy]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_apdy]
	mov	[esi],ebx
	mov	eax,0
	jmp	_96_leave
_96_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fdie
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,1
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_adead]
	mov	[esi],ebx
	mov	ebx,60
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_adiecounter]
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_alives]
	mov	ebx,[ebx]
	sub	ebx,1
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_alives]
	mov	[esi],ebx
	call	_fdiefx
	mov	eax,0
	jmp	_97_leave
_97_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fdiefx
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,4
	mov	[esp],3
	call	_fflushchannel
	mov	[ebp-4],1065353216
	jmp	_584
_585
	sub	esp,20
	mov	[esp+12],15
	mov	[esp+16],-1
	mov	[esp+8],220
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp],3
	call	_fsound
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,-1093874483
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
_584
	mov	eax,[ebp-4]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_585
_99
	mov	eax,0
	jmp	_98_leave
_98_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fwinfx
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,4
	mov	[esp],3
	call	_fflushchannel
	sub	esp,4
	mov	[esp],4
	call	_fflushchannel
	sub	esp,4
	mov	[esp],5
	call	_fflushchannel
	mov	[ebp-4],1065353216
	jmp	_586
_587
	sub	esp,20
	mov	[esp+12],15
	mov	[esp+16],3
	mov	[esp+8],220
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp],3
	call	_fsound
	sub	esp,20
	mov	[esp+12],15
	mov	[esp+16],3
	mov	[esp+8],232
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp],4
	call	_fsound
	sub	esp,20
	mov	[esp+12],15
	mov	[esp+16],3
	mov	[esp+8],240
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp],5
	call	_fsound
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,-1093874483
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
_586
	mov	eax,[ebp-4]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_587
_101
	mov	eax,0
	jmp	_100_leave
_100_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fokahead
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-4],-1000
	mov	ebx,[ebp+28]
	add	[ebp+20],ebx
	mov	ebx,[ebp+32]
	add	[ebp+24],ebx
	mov	[ebp-8],0
	mov	[ebp-12],1
	jmp	_588
_589
	cmp	[ebp+20],0
	jge	_590
	mov	[ebp+20],0
	jmp	_591
_590
	mov	ebx,[_vmaxx]
	cmp	[ebp+20],ebx
	jle	_592
	mov	ebx,[_vmaxx]
	mov	[ebp+20],ebx
_592
_591
	cmp	[ebp+24],0
	jge	_593
	mov	[ebp+24],0
	jmp	_594
_593
	mov	ebx,[_vmaxy]
	cmp	[ebp+24],ebx
	jle	_595
	mov	ebx,[_vmaxy]
	mov	[ebp+24],ebx
_595
_594
	mov	ebx,_amap3
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+24]
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_596
	mov	[ebp-4],1
	mov	ebx,[ebp-8]
	add	ebx,9000
	mov	[ebp-16],ebx
	mov	ebx,[_vmaxx]
	add	ebx,1
	mov	[ebp-12],ebx
_596
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fmapok
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-28],eax
	cmp	[ebp-4],1
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	and	eax,ebx
	mov	[ebp-28],eax
	cmp	[ebp-12],5
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	and	eax,ebx
	and	eax,eax
	jz	_597
	mov	[ebp-4],2
	mov	ebx,[ebp-8]
	mov	[ebp-16],ebx
	mov	ebx,[_vmaxx]
	add	ebx,1
	mov	[ebp-12],ebx
_597
	mov	[ebp-20],-1
	jmp	_598
_599
	mov	[ebp-24],-1
	jmp	_600
_601
	cmp	[ebp-20],0
	setz	al
	movzx	eax,al
	mov	[ebp-28],eax
	cmp	[ebp-24],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	or	eax,ebx
	mov	[ebp-28],eax
	cmp	[ebp-20],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	cmp	[ebp-24],0
	mov	eax,esi
	setnz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-28]
	or	ebx,esi
	and	eax,ebx
	and	eax,eax
	jz	_602
	sub	esp,8
	mov	eax,[ebp+20]
	add	eax,[ebp-20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	add	ebx,[ebp-24]
	mov	[esp+4],ebx
	call	_fmapok
	and	eax,eax
	jz	_603
	add	[ebp-8],1
_603
_602
	add	[ebp-24],1
_600
	cmp	[ebp-24],1
	jle	_601
_105
	add	[ebp-20],1
_598
	cmp	[ebp-20],1
	jle	_599
_104
	add	[ebp-8],1
	mov	ebx,[ebp+28]
	add	[ebp+20],ebx
	mov	ebx,[ebp+32]
	add	[ebp+24],ebx
	add	[ebp-12],1
_588
	mov	ebx,[_vmaxx]
	cmp	[ebp-12],ebx
	jle	_589
_103
	cmp	[ebp-4],1
	jnz	_604
	mov	ebx,[ebp-16]
	mov	[ebp-4],ebx
_604
	cmp	[ebp-4],2
	jnz	_605
	mov	ebx,[ebp-16]
	neg	ebx
	mov	[ebp-4],ebx
_605
	mov	eax,[ebp-4]
	jmp	_102_leave
	mov	eax,0
	jmp	_102_leave
_102_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fdistancehead
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-4],-1000
	mov	ebx,[ebp+28]
	add	[ebp+20],ebx
	mov	ebx,[ebp+32]
	add	[ebp+24],ebx
	mov	[ebp-8],0
	mov	[ebp-12],1
	jmp	_606
_607
	cmp	[ebp+20],0
	jge	_608
	mov	[ebp+20],0
	jmp	_609
_608
	mov	ebx,[_vmaxx]
	cmp	[ebp+20],ebx
	jle	_610
	mov	ebx,[_vmaxx]
	mov	[ebp+20],ebx
_610
_609
	cmp	[ebp+24],0
	jge	_611
	mov	[ebp+24],0
	jmp	_612
_611
	mov	ebx,[_vmaxy]
	cmp	[ebp+24],ebx
	jle	_613
	mov	ebx,[_vmaxy]
	mov	[ebp+24],ebx
_613
_612
	mov	ebx,_amap3
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+24]
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap3]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_614
	mov	ebx,[ebp-8]
	add	ebx,1024
	mov	[ebp-16],ebx
	mov	[ebp-4],1
	mov	ebx,[_vmaxx]
	add	ebx,1
	mov	[ebp-12],ebx
_614
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fmapok
	cmp	eax,0
	jz	_615
	mov	ebx,[ebp-8]
	mov	[ebp-16],ebx
	mov	[ebp-4],1
	mov	ebx,[_vmaxx]
	add	ebx,1
	mov	[ebp-12],ebx
_615
	add	[ebp-8],1
	mov	ebx,[ebp+28]
	add	[ebp+20],ebx
	mov	ebx,[ebp+32]
	add	[ebp+24],ebx
	add	[ebp-12],1
_606
	mov	ebx,[_vmaxx]
	cmp	[ebp-12],ebx
	jle	_607
_107
	cmp	[ebp-4],1
	jnz	_616
	mov	ebx,[ebp-16]
	mov	[ebp-4],ebx
_616
	mov	eax,[ebp-4]
	jmp	_106_leave
	mov	eax,0
	jmp	_106_leave
_106_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_ffinddirection
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-12],0
	mov	ebx,[_vdirx]
	mov	[ebp-16],ebx
	mov	ebx,[_vdiry]
	mov	[ebp-20],ebx
	mov	[ebp-24],-1
	jmp	_617
_618
	mov	[ebp-28],-1
	jmp	_619
_620
	cmp	[ebp-24],0
	setz	al
	movzx	eax,al
	mov	[ebp-36],eax
	cmp	[ebp-28],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	or	eax,ebx
	mov	[ebp-36],eax
	cmp	[ebp-28],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	cmp	[ebp-24],0
	mov	eax,esi
	setnz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-36]
	or	ebx,esi
	and	eax,ebx
	and	eax,eax
	jz	_621
	sub	esp,16
	mov	ebx,[ebp-24]
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdistancehead
	mov	[ebp-32],eax
	mov	ebx,[ebp-12]
	cmp	[ebp-32],ebx
	jl	_622
	mov	ebx,[ebp-32]
	mov	[ebp-12],ebx
	mov	ebx,[ebp-24]
	imul	ebx,[ebp-12]
	mov	[_vdirx],ebx
	mov	ebx,[ebp-28]
	imul	ebx,[ebp-12]
	mov	[_vdiry],ebx
_622
_621
	add	[ebp-28],1
_619
	cmp	[ebp-28],1
	jle	_620
_110
	add	[ebp-24],1
_617
	cmp	[ebp-24],1
	jle	_618
_109
	cmp	[_vdirx],0
	setz	al
	movzx	eax,al
	mov	[ebp-36],eax
	cmp	[_vdiry],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	and	eax,ebx
	and	eax,eax
	jz	_623
	mov	[ebp-12],0
	mov	[ebp-24],-1
	jmp	_624
_625
	mov	[ebp-28],-1
	jmp	_626
_627
	cmp	[ebp-24],0
	setz	al
	movzx	eax,al
	mov	[ebp-36],eax
	cmp	[ebp-28],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	or	eax,ebx
	mov	[ebp-36],eax
	cmp	[ebp-28],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[ebp-36],eax
	cmp	[ebp-24],0
	mov	eax,esi
	setnz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-36]
	or	ebx,esi
	and	eax,ebx
	and	eax,eax
	jz	_628
	sub	esp,16
	mov	ebx,[ebp-24]
	mov	[esp+8],ebx
	mov	esi,[ebp-28]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fdistancehead
	mov	[ebp-32],eax
	mov	ebx,[ebp-12]
	cmp	[ebp-32],ebx
	jl	_629
	mov	ebx,[ebp-32]
	mov	[ebp-12],ebx
	mov	ebx,[ebp-24]
	imul	ebx,[ebp-12]
	mov	[_vdirx],ebx
	mov	ebx,[ebp-28]
	imul	ebx,[ebp-12]
	mov	[_vdiry],ebx
_629
_628
	add	[ebp-28],1
_626
	cmp	[ebp-28],1
	jle	_627
_112
	add	[ebp-24],1
_624
	cmp	[ebp-24],1
	jle	_625
_111
	cmp	[_vdirx],0
	setz	al
	movzx	eax,al
	mov	[ebp-36],eax
	cmp	[_vdiry],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-36]
	and	eax,ebx
	and	eax,eax
	jz	_630
	mov	ebx,[ebp-16]
	mov	[_vdirx],ebx
	mov	ebx,[ebp-20]
	mov	[_vdiry],ebx
_630
_623
	mov	eax,0
	jmp	_108_leave
_108_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_ffindbestdirection
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,48
	mov	ebx,0
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	sub	esp,4
	mov	eax,_114
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,_115
	mov	[esp],eax
	call	__bbVecAlloc
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	add	ebx,1
	mov	[esp+4],ebx
	call	_fmapok
	and	eax,eax
	jz	_631
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	add	ebx,1
	mov	[esp+4],ebx
	call	_ffinddirection
	mov	ebx,[_vdirx]
	mov	esi,4
	add	esi,[ebp-4]
	mov	[esi],ebx
	mov	ebx,[_vdiry]
	mov	esi,4
	add	esi,[ebp-8]
	mov	[esi],ebx
_631
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fmapok
	and	eax,eax
	jz	_632
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_ffinddirection
	mov	ebx,[_vdirx]
	mov	esi,8
	add	esi,[ebp-4]
	mov	[esi],ebx
	mov	ebx,[_vdiry]
	mov	esi,8
	add	esi,[ebp-8]
	mov	[esi],ebx
_632
	sub	esp,8
	mov	eax,[ebp+20]
	add	eax,1
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fmapok
	and	eax,eax
	jz	_633
	sub	esp,8
	mov	eax,[ebp+20]
	add	eax,1
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_ffinddirection
	mov	ebx,[_vdirx]
	mov	esi,12
	add	esi,[ebp-4]
	mov	[esi],ebx
	mov	ebx,[_vdiry]
	mov	esi,12
	add	esi,[ebp-8]
	mov	[esi],ebx
_633
	sub	esp,8
	mov	eax,[ebp+20]
	sub	eax,1
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fmapok
	and	eax,eax
	jz	_634
	sub	esp,8
	mov	eax,[ebp+20]
	sub	eax,1
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_ffinddirection
	mov	ebx,[_vdirx]
	mov	esi,16
	add	esi,[ebp-4]
	mov	[esi],ebx
	mov	ebx,[_vdiry]
	mov	esi,16
	add	esi,[ebp-8]
	mov	[esi],ebx
_634
	mov	[ebp-12],0
	mov	[ebp-16],0
	mov	[ebp-20],1
	jmp	_635
_636
	sub	esp,4
	mov	eax,[ebp-20]
	shl	eax,byte 2
	add	eax,[ebp-4]
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbAbs
	cmp	eax,[ebp-24]
	setg	al
	movzx	eax,al
	mov	[ebp-44],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[ebp-8]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbAbs
	mov	ebx,eax
	mov	eax,[ebp-48]
	cmp	ebx,[ebp-28]
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	or	eax,ebx
	and	eax,eax
	jz	_637
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[ebp-4]
	mov	ebx,[ebx]
	mov	[ebp-16],ebx
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[ebp-8]
	mov	ebx,[ebx]
	mov	[ebp-12],ebx
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	__bbAbs
	mov	[ebp-24],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	__bbAbs
	mov	[ebp-28],eax
	mov	ebx,[ebp-20]
	mov	[ebp-32],ebx
_637
	add	[ebp-20],1
_635
	cmp	[ebp-20],4
	jle	_636
_116
	cmp	[ebp-32],1
	jnz	_638
	mov	[ebp-16],0
	mov	[ebp-12],1
_638
	cmp	[ebp-32],2
	jnz	_639
	mov	[ebp-16],0
	mov	[ebp-12],-1
_639
	cmp	[ebp-32],3
	jnz	_640
	mov	[ebp-16],1
	mov	[ebp-12],0
_640
	cmp	[ebp-32],4
	jnz	_641
	mov	[ebp-16],-1
	mov	[ebp-12],0
_641
	sub	esp,8
	mov	eax,_642
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fwritefile
	mov	[ebp-36],eax
	mov	[ebp-20],1
	jmp	_643
_644
	mov	eax,[ebp-20]
	shl	eax,byte 2
	add	eax,[ebp-4]
	mov	eax,[eax]
	cmp	eax,0
	setnz	al
	movzx	eax,al
	mov	[ebp-44],eax
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[ebp-8]
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	or	eax,ebx
	and	eax,eax
	jz	_645
	mov	[ebp-40],1
_645
	sub	esp,28
	mov	eax,[ebp-20]
	shl	eax,byte 2
	add	eax,[ebp-4]
	mov	eax,[eax]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_646
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[ebp-8]
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	add	[ebp-20],1
_643
	cmp	[ebp-20],4
	jle	_644
_117
	sub	esp,28
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,_647
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-44],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	sub	esp,4
	mov	eax,[ebp-36]
	mov	[esp],eax
	call	_fclosefile
	mov	ebx,[ebp-16]
	mov	[_vdirx],ebx
	mov	ebx,[ebp-12]
	mov	[_vdiry],ebx
	jmp	_l_113exitbit
	mov	[ebp-16],-1
	jmp	_648
_649
	mov	[ebp-12],-1
	jmp	_650
_651
	cmp	[ebp-16],0
	setz	al
	movzx	eax,al
	mov	[ebp-44],eax
	cmp	[ebp-12],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	or	eax,ebx
	mov	[ebp-44],eax
	cmp	[ebp-12],0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[ebp-44],eax
	cmp	[ebp-16],0
	mov	eax,esi
	setnz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-44]
	or	ebx,esi
	and	eax,ebx
	and	eax,eax
	jz	_652
	sub	esp,8
	mov	eax,[ebp+20]
	add	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	add	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fmapok
	cmp	eax,0
	jz	_653
_653
_652
	add	[ebp-12],1
_650
	cmp	[ebp-12],1
	jle	_651
_119
	add	[ebp-16],1
_648
	cmp	[ebp-16],1
	jle	_649
_118
_l_113exitbit
	mov	eax,0
	jmp	_113_leave
_113_leave
	mov	[ebp-44],eax
	sub	esp,8
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	[esp+4],_114
	mov	eax,ebx
	call	__bbVecFree
	mov	ebx,eax
	mov	eax,[ebp-44]
	mov	[ebp-44],eax
	sub	esp,8
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	[esp+4],_115
	mov	eax,esi
	call	__bbVecFree
	mov	esi,eax
	mov	eax,[ebp-44]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsetuptext
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-4],32
	jmp	_654
_655
	sub	esp,12
	mov	ebx,[_vtxsize]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[_vtxsize]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcreateimage
	mov	ebx,_acharimg
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,0
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_acharimg]
	mov	[ebx],eax
	call	_fgraphicsbuffer
	mov	[ebp-8],eax
	sub	esp,12
	mov	eax,_acharimg
	add	eax,12
	mov	eax,[eax]
	imul	eax,0
	add	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_acharimg]
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	[esp+4],128
	mov	[esp+8],128
	mov	[esp],128
	call	_fcolour
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fcolour
	mov	[ebp-12],-1
	jmp	_656
_657
	mov	[ebp-16],-1
	jmp	_658
_659
	sub	esp,20
	mov	ebx,[_vtxsize]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fchr
	mov	[esp+8],eax
	mov	eax,[_vtxsize]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-12]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftext
	add	[ebp-16],1
_658
	cmp	[ebp-16],1
	jle	_659
_123
	add	[ebp-12],1
_656
	cmp	[ebp-12],1
	jle	_657
_122
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolour
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolour
	sub	esp,20
	mov	ebx,[_vtxsize]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp+12],1
	mov	[esp+16],1
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fchr
	mov	[esp+8],eax
	mov	eax,[_vtxsize]
	push	eax
	fld	[esp]
	pop	eax
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ftext
	sub	esp,12
	mov	ebx,[_vtxscale]
	mov	[esp+4],ebx
	mov	esi,[_vtxscale]
	mov	[esp+8],esi
	mov	eax,_acharimg
	add	eax,12
	mov	eax,[eax]
	imul	eax,0
	add	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_acharimg]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fscaleimage
	sub	esp,4
	mov	eax,_acharimg
	add	eax,12
	mov	eax,[eax]
	imul	eax,0
	add	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_acharimg]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fmidhandle
	mov	[ebp-20],1
	jmp	_660
_661
	sub	esp,4
	mov	eax,_acharimg
	add	eax,12
	mov	eax,[eax]
	imul	eax,0
	add	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_acharimg]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fcopyimage
	mov	ebx,_acharimg
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-20]
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_acharimg]
	mov	[ebx],eax
	sub	esp,4
	mov	eax,_acharimg
	add	eax,12
	mov	eax,[eax]
	imul	eax,0
	add	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_acharimg]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fmidhandle
	sub	esp,8
	mov	ebx,[_vtextcnt]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp-20]
	sub	esi,1
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	mov	ebx,1082130432
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,_acharimg
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-20]
	add	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_acharimg]
	mov	eax,[eax]
	mov	[esp],eax
	call	_frotateimage
	add	[ebp-20],1
_660
	mov	ebx,[_vtextcnt]
	cmp	[ebp-20],ebx
	jle	_661
_124
	add	[ebp-4],1
_654
	cmp	[ebp-4],128
	jle	_655
_121
	mov	ebx,[_vtxsize]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vtxscale]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vtxsize],ebx
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fsetbuffer
	mov	eax,0
	jmp	_120_leave
_120_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_ftext2
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	cmp	[ebp+32],1
	jnz	_662
	mov	ebx,[_vtxsize]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vtxxdis]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	push	eax
	fild	[esp]
	pop	eax
	fmulp	st(1)
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	fsubrp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp+20],ebx
_662
	cmp	[ebp+36],1
	jnz	_663
	mov	ebx,[_vtxsize]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	fsubrp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp+24],esi
_663
	mov	ebx,[_vtxsize]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vtxxdis]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp+20],esi
	mov	ebx,[_vtxsize]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fistp	[esp]
	pop	esi
	mov	[ebp+24],esi
	mov	[ebp-4],1
	jmp	_664
_665
	sub	esp,20
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fasc
	mov	[ebp-8],eax
	cmp	[ebp-8],32
	setg	al
	movzx	eax,al
	mov	[ebp-28],eax
	cmp	[ebp-8],128
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-28]
	and	eax,ebx
	and	eax,eax
	jz	_666
	sub	esp,4
	call	_fmillisecs
	mov	ebx,[ebp-4]
	imul	ebx,500
	add	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,1073741824
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-24],eax
	mov	ebx,[ebp-24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vtextcnt]
	sub	esi,1
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-24],ebx
	sub	esp,16
	mov	ebx,[_vtxsize]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[_vtxxdis]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-4]
	sub	esi,1
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	ebx,[ebp+20]
	push	ebx
	fild	[esp]
	pop	ebx
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	esi,[ebp+24]
	mov	[esp+8],esi
	mov	[esp+12],0
	mov	eax,[ebp-24]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	esi,_acharimg
	add	esi,12
	mov	esi,[esi]
	imul	eax,esi
	add	eax,[ebp-8]
	shl	eax,byte 2
	add	eax,[_acharimg]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fdrawimage
_666
	add	[ebp-4],1
_664
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jle	_665
_126
	mov	eax,0
	jmp	_125_leave
_125_leave
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-28]
	mov	[ebp-28],eax
	sub	esp,4
	mov	esi,[ebp-12]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-28]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_faddboulder
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-8],1
	mov	ebx,[ebp+20]
	sub	ebx,1
	mov	[ebp-12],ebx
	jmp	_667
_668
	mov	ebx,[ebp+24]
	sub	ebx,1
	mov	[ebp-16],ebx
	jmp	_669
_670
	cmp	[ebp-12],-1
	setg	al
	movzx	eax,al
	mov	[ebp-20],eax
	mov	ebx,[_vmaxx]
	add	ebx,1
	cmp	[ebp-12],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	mov	[ebp-20],eax
	cmp	[ebp-16],-1
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	mov	[ebp-20],eax
	mov	ebx,[_vmaxy]
	add	ebx,1
	cmp	[ebp-16],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	and	eax,eax
	jz	_671
	mov	eax,[ebp+20]
	cmp	[ebp-12],eax
	setz	al
	movzx	eax,al
	mov	[ebp-20],eax
	mov	ebx,[ebp+24]
	cmp	[ebp-16],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	or	eax,ebx
	mov	[ebp-20],eax
	mov	ebx,[ebp+20]
	cmp	[ebp-12],ebx
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[ebp-20],eax
	mov	esi,[ebp+24]
	cmp	[ebp-16],esi
	mov	eax,esi
	setnz	al
	movzx	eax,al
	mov	esi,eax
	mov	eax,[ebp-20]
	or	ebx,esi
	and	eax,ebx
	mov	[ebp-20],eax
	mov	ebx,_amap4
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-16]
	add	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_amap4]
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	ebx,eax
	and	ebx,ebx
	jz	_672
	mov	ebx,0
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-16]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	[esi],ebx
_672
_671
	add	[ebp-16],1
_669
	mov	ebx,[ebp+24]
	add	ebx,1
	cmp	[ebp-16],ebx
	jle	_670
_129
	add	[ebp-12],1
_667
	mov	ebx,[ebp+20]
	add	ebx,1
	cmp	[ebp-12],ebx
	jle	_668
_128
	mov	eax,[ebp+24]
	add	eax,1
	mov	ebx,_amap4
	add	ebx,12
	mov	ebx,[ebx]
	imul	eax,ebx
	add	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_amap4]
	mov	eax,[eax]
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-20],eax
	mov	[ebp-24],eax
	sub	esp,8
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	esi,[ebp+24]
	add	esi,1
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fmapok2
	mov	ebx,eax
	mov	eax,[ebp-24]
	cmp	ebx,0
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	and	eax,eax
	jz	_673
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tboulder
	call	__bbObjEachFirst
	and	eax,eax
	jz	_130
_674
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	cmp	eax,[ebp+20]
	setz	al
	movzx	eax,al
	mov	[ebp-20],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	cmp	ebx,[ebp+24]
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	and	eax,ebx
	and	eax,eax
	jz	_675
	mov	[ebp-8],0
_675
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_674
_130
	cmp	[ebp-8],1
	jnz	_676
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_tboulder
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,16
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	mov	ebx,_amap4
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+24]
	add	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_amap4]
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,32
	mov	[esi],ebx
_676
_673
	mov	eax,0
	jmp	_127_leave
_127_leave
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fupdateboulders
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,24
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	ebx,[_vupdbuffer]
	mov	[ebp-8],ebx
	mov	[_vupdbuffer],1
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_tboulder
	call	__bbObjEachFirst
	and	eax,eax
	jz	_132
_677
	mov	[ebp-12],0
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[ebp-16],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[ebp-20],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	add	eax,ebx
	shl	eax,byte 2
	add	eax,[_amap4]
	mov	eax,[eax]
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_678
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	jmp	_l_131nxtn
_678
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,1
	mov	[esp+4],ebx
	call	_fmapok
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_679
	jmp	_l_131nxtn
_679
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_680
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fdrawtile
_680
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	cmp	ebx,0
	jle	_681
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,24
	mov	ebx,[ebx]
	sub	ebx,1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	jmp	_l_131nxtn
_681
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,28
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_682
	mov	ebx,1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,28
	mov	[esi],ebx
	sub	esp,4
	mov	[esp],2
	call	_fflushchannel
	sub	esp,20
	mov	[esp+12],20
	mov	[esp+16],-1
	mov	[esp+8],180
	mov	[esp+4],1065353216
	mov	[esp],2
	call	_fsound
_682
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_683
	mov	ebx,10
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	add	eax,ebx
	shl	eax,byte 2
	add	eax,[_amap4]
	mov	eax,[eax]
	cmp	eax,0
	setz	al
	movzx	eax,al
	mov	[ebp-24],eax
	sub	esp,8
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,8
	mov	ebx,[ebx]
	mov	[esp],ebx
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	esi,[esi]
	add	esi,1
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fmapok2
	mov	ebx,eax
	mov	eax,[ebp-24]
	and	eax,ebx
	and	eax,eax
	jz	_684
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	ebx,0
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fdrawtile
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,1
	mov	[esp+4],ebx
	call	_fdrawtile
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,12
	mov	[esi],ebx
	jmp	_685
_684
	mov	ebx,1
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,20
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	ebx,0
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fdrawtile
	mov	ebx,256
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,24
	mov	[esi],ebx
_685
_683
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_686
	sub	esp,8
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fdrawtile
_686
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,20
	mov	ebx,[ebx]
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,24
	mov	eax,[eax]
	cmp	eax,0
	setz	al
	movzx	eax,al
	and	ebx,eax
	and	ebx,ebx
	jz	_687
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fmapok
	and	eax,eax
	jz	_688
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,0
	mov	esi,[esi]
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,32
	mov	ebx,[ebx]
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	esi,_amap4
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	mov	esi,[ebp-4]
	mov	esi,[esi]
	add	esi,8
	mov	esi,[esi]
	add	esi,ebx
	shl	esi,byte 2
	add	esi,[_amap4]
	mov	ebx,0
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,12
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fdrawtile
	sub	esp,8
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,0
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,4
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fdrawtile
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	mov	[ebp-12],1
_688
_687
_l_131nxtn
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_677
_132
	mov	ebx,[ebp-8]
	mov	[_vupdbuffer],ebx
	mov	eax,0
	jmp	_131_leave
_131_leave
	mov	[ebp-24],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-24]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcollectsfx
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fflushchannel
	sub	esp,20
	mov	[esp+12],6
	mov	[esp+16],-1
	mov	[esp+8],150
	mov	[esp+4],1065353216
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fsound
	mov	eax,0
	jmp	_133_leave
_133_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fmusic
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,4
	mov	eax,__DATA
	add	eax,200
	mov	[esp],eax
	call	__bbRestore
_689
	call	__bbReadInt
	mov	[ebp-4],eax
	cmp	[ebp-4],-1
	jz	_690
	cmp	[ebp-4],0
	jz	_691
	add	[ebp-4],5
_691
	call	__bbReadFloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-8],eax
	call	__bbReadInt
	mov	[ebp-12],eax
	call	__bbReadFloat
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-16],eax
	cmp	[ebp-4],6
	setz	al
	movzx	eax,al
	mov	[ebp-20],eax
	cmp	[ebp-4],7
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	or	eax,ebx
	mov	[ebp-20],eax
	cmp	[ebp-4],8
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-20]
	or	eax,ebx
	and	eax,eax
	jz	_692
	sub	[ebp-12],48
_692
	add	[ebp-12],48
	cmp	[ebp-4],9
	jnz	_693
	sub	[ebp-12],96
_693
	sub	esp,20
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1077936128
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	esi,[ebp-4]
	mov	[esp+16],esi
	mov	esi,[ebp-12]
	add	esi,48
	mov	[esp+8],esi
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsound
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1
	call	_floopchannel
_690
	cmp	[ebp-4],-1
	jnz	_689
_135
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	mov	eax,0
	jmp	_134_leave
_134_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsetupmusic
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	sub	esp,20
	mov	[esp+12],1036831949
	mov	[esp+16],-1110651699
	mov	[esp+8],-1119040307
	mov	[esp+4],1065353216
	mov	[esp],0
	call	_fadsr
	sub	esp,20
	mov	[esp+12],1036831949
	mov	[esp+16],-1110651699
	mov	[esp+8],-1119040307
	mov	[esp+4],1065353216
	mov	[esp],9
	call	_fadsr
	sub	esp,20
	mov	[esp+12],1045220557
	mov	[esp+16],-1110651699
	mov	[esp+8],-1119040307
	mov	[esp+4],1065353216
	mov	[esp],10
	call	_fadsr
	sub	esp,20
	mov	[esp+12],1065353216
	mov	[esp+16],-1110651699
	mov	[esp+8],0
	mov	[esp+4],1065353216
	mov	[esp],1
	call	_fadsr
	sub	esp,20
	mov	[esp+12],1056964608
	mov	[esp+16],-1130113270
	mov	[esp+8],-1119040307
	mov	[esp+4],1045220557
	mov	[esp],2
	call	_fadsr
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],1098907648
	mov	[esp+8],-1048576000
	mov	[esp+4],0
	mov	[esp],1
	call	_fpitchadsr
	sub	esp,20
	mov	[esp+12],-1082130432
	mov	[esp+16],-1073741824
	mov	[esp+8],-1082130432
	mov	[esp+4],-1065353216
	mov	[esp],2
	call	_fpitchadsr
	sub	esp,20
	mov	[esp+12],-1059061760
	mov	[esp+16],-1059061760
	mov	[esp+8],-1059061760
	mov	[esp+4],-1059061760
	mov	[esp],3
	call	_fpitchadsr
	sub	esp,20
	mov	[esp+12],1036831949
	mov	[esp+16],-1110651699
	mov	[esp+8],-1138501878
	mov	[esp+4],1065353216
	mov	[esp],3
	call	_fadsr
	sub	esp,4
	mov	[esp],1
	call	_fmusic
	sub	esp,8
	mov	[esp],5
	mov	[esp+4],1
	call	_fsoundshape
	sub	esp,8
	mov	[esp],6
	mov	[esp+4],1
	call	_fsoundshape
	sub	esp,8
	mov	[esp],7
	mov	[esp+4],1
	call	_fsoundshape
	sub	esp,8
	mov	[esp],3
	mov	[esp+4],2
	call	_fsoundshape
	sub	esp,8
	mov	[esp],2
	mov	[esp+4],2
	call	_fsoundshape
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],2
	call	_fsoundshape
	mov	[ebp-4],5
	jmp	_694
_695
	sub	esp,20
	mov	[esp+12],1056964608
	mov	[esp+16],-1082130432
	mov	[esp+8],-1119040307
	mov	[esp+4],1045220557
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fadsr
	add	[ebp-4],1
_694
	cmp	[ebp-4],8
	jle	_695
_137
	mov	eax,0
	jmp	_136_leave
_136_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fconstr
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,24
	mov	ebx,[ebp+24]
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	sub	ebx,eax
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_696
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fstring
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,16
	mov	eax,_697
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_698
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+8],ebx
	mov	[ebp-4],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freplace
	mov	ebx,eax
	jmp	_138_leave
	sub	esp,4
	mov	eax,_699
	mov	[esp],eax
	call	__bbStrConst
	jmp	_138_leave
_138_leave
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_finitsoundsystem
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	sub	esp,4
	mov	eax,_awavdata
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,1
	mov	esi,_awavdata
	add	esi,12
	mov	[esi],ebx
	mov	ebx,4096
	mov	esi,_awavdata
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_awavdata
	mov	[esp],eax
	call	__bbDimArray
	mov	[ebp-4],1
	mov	[_vss_channelcount],1
	mov	[ebp-8],0
	jmp	_700
_701
	mov	ebx,-31202
	mov	esi,_awavdata
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-8]
	add	esi,0
	shl	esi,byte 2
	add	esi,[_awavdata]
	mov	[esi],ebx
	add	[ebp-8],1
_700
	cmp	[ebp-8],10
	jle	_701
_140
	mov	ebx,-21841
	mov	esi,_awavdata
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 0
	add	esi,0
	shl	esi,byte 2
	add	esi,[_awavdata]
	mov	[esi],ebx
	mov	ebx,21841
	mov	esi,_awavdata
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 1
	add	esi,0
	shl	esi,byte 2
	add	esi,[_awavdata]
	mov	[esi],ebx
	mov	[ebp-20],1
	mov	[ebp-24],16
	mov	ebx,-21841
	mov	esi,_awavdata
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 0
	add	esi,0
	shl	esi,byte 2
	add	esi,[_awavdata]
	mov	[esi],ebx
	mov	ebx,-21841
	mov	esi,_awavdata
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 1
	add	esi,0
	shl	esi,byte 2
	add	esi,[_awavdata]
	mov	[esi],ebx
	mov	ebx,21841
	mov	esi,_awavdata
	add	esi,12
	mov	esi,[esi]
	imul	esi,3
	add	esi,0
	shl	esi,byte 2
	add	esi,[_awavdata]
	mov	[esi],ebx
	mov	ebx,21841
	mov	esi,_awavdata
	add	esi,12
	mov	esi,[esi]
	shl	esi,byte 2
	add	esi,0
	shl	esi,byte 2
	add	esi,[_awavdata]
	mov	[esi],ebx
	mov	[ebp-16],1
	jmp	_702
_703
	cmp	[ebp-16],3
	jnz	_704
	mov	[ebp-8],0
	jmp	_705
_706
	sub	esp,4
	mov	eax,[ebp-8]
	imul	eax,57
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,1199568128
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1077936128
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,_awavdata
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,0
	shl	ebx,byte 2
	add	ebx,[_awavdata]
	mov	[ebx],eax
	add	[ebp-8],1
_705
	cmp	[ebp-8],10
	jle	_706
_142
_704
	cmp	[ebp-16],4
	jnz	_707
	mov	[ebp-8],0
	jmp	_708
_709
	sub	esp,4
	mov	eax,[ebp-8]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-16]
	shl	ebx,byte 1
	push	ebx
	fild	[esp]
	pop	ebx
	fdivp	st(1)
	mov	ebx,1135869952
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,1199568128
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	mov	ebx,1077936128
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,_awavdata
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,0
	shl	ebx,byte 2
	add	ebx,[_awavdata]
	mov	[ebx],eax
	add	[ebp-8],1
_708
	mov	ebx,[ebp-16]
	shl	ebx,byte 1
	cmp	[ebp-8],ebx
	jle	_709
_143
_707
	mov	ebx,[ebp-16]
	shl	ebx,byte 2
	mov	[ebp-4],ebx
	sub	esp,36
	mov	eax,_710
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_711
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp+8],1
	mov	[esp+12],44100
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritewav
	mov	ebx,eax
	add	[ebp-16],1
_702
	mov	ebx,[_vss_sndtype]
	cmp	[ebp-16],ebx
	jle	_703
_141
	mov	[ebp-8],0
	jmp	_712
_713
	sub	esp,8
	mov	[esp],-956304384
	mov	[esp+4],1191179264
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,_awavdata
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,0
	shl	ebx,byte 2
	add	ebx,[_awavdata]
	mov	[ebx],eax
	sub	esp,8
	mov	[esp],-956304384
	mov	[esp+4],1191179264
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	ebx,_awavdata
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-8]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_awavdata]
	mov	[ebx],eax
	add	[ebp-8],1
_712
	cmp	[ebp-8],4096
	jle	_713
_144
	mov	[ebp-4],4096
	sub	esp,16
	mov	[esp+8],1
	mov	[esp+12],44100
	sub	esp,4
	mov	eax,_714
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritewav
	mov	ebx,eax
	mov	[ebp-8],0
	jmp	_715
_716
	sub	esp,24
	mov	eax,_717
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_718
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_floadsound
	mov	ebx,[ebp-8]
	shl	ebx,byte 2
	add	ebx,[_ass_soundbank]
	mov	[ebx],eax
	mov	ebx,[ebp-8]
	mov	[ebp-28],ebx
	cmp	[ebp-8],0
	jnz	_719
	mov	[ebp-28],5
_719
	mov	ebx,[ebp-28]
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_ass_samplecntbank]
	mov	[esi],ebx
	sub	esp,24
	mov	eax,_720
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_721
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fdeletefile
	sub	esp,4
	mov	eax,[ebp-8]
	shl	eax,byte 2
	add	eax,[_ass_soundbank]
	mov	eax,[eax]
	mov	[esp],eax
	call	_floopsound
	add	[ebp-8],1
_715
	mov	ebx,[_vss_sndtype]
	cmp	[ebp-8],ebx
	jle	_716
_145
	mov	[ebp-8],0
	jmp	_722
_723
	mov	ebx,[_vss_maxchans]
	sub	ebx,[ebp-8]
	mov	[ebp-28],ebx
	sub	esp,8
	mov	eax,[ebp-28]
	sub	eax,1
	mov	ecx,3
	cdq
	idiv	ecx
	mov	[esp],eax
	mov	ebx,[_vss_sndtype]
	mov	[esp+4],ebx
	call	__bbMod
	add	eax,1
	mov	[ebp-12],eax
	cmp	[ebp-8],0
	jnz	_724
	mov	[ebp-12],0
_724
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_ass_soundbank]
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_ass_sounds]
	mov	[esi],ebx
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_ass_samplecntbank]
	mov	ebx,[ebx]
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_ass_samplecnt]
	mov	[esi],ebx
	add	[ebp-8],1
_722
	mov	ebx,[_vss_maxchans]
	cmp	[ebp-8],ebx
	jle	_723
_146
	mov	[ebp-8],0
	jmp	_725
_726
	mov	ebx,1036831949
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_ass_defattack]
	mov	[esi],ebx
	mov	ebx,-1090519040
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_ass_defdecay]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_ass_defsustain]
	mov	[esi],ebx
	mov	ebx,-1110651699
	mov	esi,[ebp-8]
	shl	esi,byte 2
	add	esi,[_ass_defrelease]
	mov	[esi],ebx
	add	[ebp-8],1
_725
	mov	ebx,[_vss_maxenvs]
	cmp	[ebp-8],ebx
	jle	_726
_147
	mov	[ebp-8],0
	jmp	_727
_728
	add	[ebp-8],1
_727
	mov	ebx,[_vss_maxenvs]
	cmp	[ebp-8],ebx
	jle	_728
_148
	mov	eax,0
	jmp	_139_leave
_139_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsound
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	cmp	[ebp+36],-1
	jnz	_729
	mov	ebx,[ebp+20]
	mov	[ebp+36],ebx
_729
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ass_buffercount]
	mov	ebx,[ebx]
	mov	[ebp-4],ebx
	cmp	[ebp-4],0
	jge	_730
	mov	[ebp-4],0
_730
	mov	ebx,[ebp-4]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_buffercount]
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,_ass_buffervol
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_buffervol]
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,_ass_bufferpitch
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_bufferpitch]
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,_ass_bufferlength
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_bufferlength]
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,_ass_bufferenv
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_bufferenv]
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ass_buffercount]
	mov	ebx,[ebx]
	add	ebx,1
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_buffercount]
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ass_buffercount]
	mov	ebx,[ebx]
	mov	esi,[_vss_buffersize]
	sub	esi,1
	cmp	ebx,esi
	jle	_731
_732
	call	_fupdatesound
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ass_buffercount]
	mov	eax,[eax]
	mov	ebx,[_vss_buffersize]
	sub	ebx,1
	cmp	eax,ebx
	setl	al
	movzx	eax,al
	mov	[ebp-8],eax
	sub	esp,4
	mov	[esp],1
	mov	eax,ebx
	call	_fkeydown
	mov	ebx,eax
	mov	eax,[ebp-8]
	or	ebx,eax
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ass_buffercount]
	mov	eax,[eax]
	cmp	eax,0
	setz	al
	movzx	eax,al
	or	ebx,eax
	and	ebx,ebx
	jz	_732
_150
_731
	mov	eax,0
	jmp	_149_leave
_149_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fupdatesound
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	call	_fmillisecs
	sub	eax,[_vaudiotimer]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[_vupdateperiod]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_733
	call	_fmillisecs
	mov	[_vaudiotimer],eax
	call	_fmillisecs
	sub	eax,[_vaudiotimer]
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[_vupdateperiod]
	push	ebx
	fld	[esp]
	pop	ebx
	fdivp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-8],eax
	cmp	[ebp-8],2
	jle	_734
	mov	[ebp-8],0
_734
	mov	[ebp-4],0
	jmp	_735
_736
	mov	[ebp-12],1
	jmp	_737
_738
	call	_fdoupdatesound
	call	_fupdatesoundtimer
	add	[ebp-12],1
_737
	cmp	[ebp-12],1
	jle	_738
_153
	add	[ebp-4],1
_735
	mov	ebx,[ebp-8]
	cmp	[ebp-4],ebx
	jle	_736
_152
_733
	mov	eax,0
	jmp	_151_leave
_151_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdoupdatesound
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,60
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-16],0
	mov	[ebp-28],1065353216
	mov	[ebp-4],0
	jmp	_739
_740
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_lfocounter]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_lfocounter]
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_envelope]
	mov	ebx,[ebx]
	mov	[ebp-24],ebx
	mov	[ebp-16],1
	mov	[ebp-32],0
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_attackdone]
	mov	ebx,[ebx]
	mov	[ebp-36],ebx
	call	_fsoundtimer
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_started]
	mov	ebx,[ebx]
	sub	eax,ebx
	push	eax
	fild	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_slength]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	and	eax,eax
	jz	_741
	mov	[ebp-32],1
_741
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_buffercount]
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_schan]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_742
	cmp	[ebp-16],1
	jnz	_743
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fvolumemultiplier
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpitchlfo
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-44],eax
	cmp	[ebp-32],0
	setz	al
	movzx	eax,al
	mov	[ebp-60],eax
	cmp	[ebp-36],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-60]
	and	eax,ebx
	and	eax,eax
	jz	_744
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_volume]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_745
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_volume]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_attack]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_volume]
	mov	[esi],ebx
_745
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_volume]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	and	eax,eax
	jz	_746
	mov	ebx,1065353216
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_volume]
	mov	[esi],ebx
_746
	mov	[ebp-48],1
	jmp	_747
_748
	mov	eax,_ass_lfo
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-4]
	add	eax,[ebp-48]
	shl	eax,byte 2
	add	eax,[_ass_lfo]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_749
	mov	ebx,_ass_lfo
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-4]
	add	ebx,[ebp-48]
	shl	ebx,byte 2
	add	ebx,[_ass_lfo]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,_ass_lfoattack
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-24]
	add	esi,[ebp-48]
	shl	esi,byte 2
	add	esi,[_ass_lfoattack]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,_ass_lfo
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	esi,[ebp-48]
	shl	esi,byte 2
	add	esi,[_ass_lfo]
	mov	[esi],ebx
	jmp	_750
_749
	mov	ebx,1065353216
	mov	esi,_ass_lfo
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	esi,[ebp-48]
	shl	esi,byte 2
	add	esi,[_ass_lfo]
	mov	[esi],ebx
_750
	add	[ebp-48],1
_747
	mov	ebx,[_vss_lfocount]
	cmp	[ebp-48],ebx
	jle	_748
_156
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_volume]
	mov	ebx,[ebx]
	mov	[ebp-52],ebx
	sub	esp,8
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_actualvol]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fchannelvolume
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_currentpitch]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,[_ass_attackchange]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_currentpitch]
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_currentpitch]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_ffreq
	mov	[ebp-56],eax
	cmp	[ebp-56],10
	jle	_751
	sub	esp,8
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-56]
	mov	[esp+4],ebx
	call	_fchannelpitch
_751
_744
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_volume]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1065353216
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	and	eax,eax
	jz	_752
	mov	[ebp-36],1
	mov	ebx,1
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_attackdone]
	mov	[esi],ebx
_752
	cmp	[ebp-32],0
	setz	al
	movzx	eax,al
	mov	[ebp-60],eax
	cmp	[ebp-36],1
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-60]
	and	eax,ebx
	and	eax,eax
	jz	_753
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_volume]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_decay]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_volume]
	mov	[esi],ebx
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_volume]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_sustain]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_754
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_sustain]
	mov	ebx,[ebx]
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_volume]
	mov	[esi],ebx
	mov	ebx,1
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_decaydone]
	mov	[esi],ebx
_754
	mov	[ebp-48],1
	jmp	_755
_756
	mov	ebx,_ass_lfo
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-4]
	add	ebx,[ebp-48]
	shl	ebx,byte 2
	add	ebx,[_ass_lfo]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,_ass_lfodecay
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-24]
	add	esi,[ebp-48]
	shl	esi,byte 2
	add	esi,[_ass_lfodecay]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,_ass_lfo
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	esi,[ebp-48]
	shl	esi,byte 2
	add	esi,[_ass_lfo]
	mov	[esi],ebx
	mov	eax,_ass_lfo
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-4]
	add	eax,[ebp-48]
	shl	eax,byte 2
	add	eax,[_ass_lfo]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,_ass_lfosustain
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-48]
	shl	ebx,byte 2
	add	ebx,[_ass_lfosustain]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_757
	mov	ebx,_ass_lfosustain
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-48]
	shl	ebx,byte 2
	add	ebx,[_ass_lfosustain]
	mov	ebx,[ebx]
	mov	esi,_ass_lfo
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	esi,[ebp-48]
	shl	esi,byte 2
	add	esi,[_ass_lfo]
	mov	[esi],ebx
_757
	add	[ebp-48],1
_755
	mov	ebx,[_vss_lfocount]
	cmp	[ebp-48],ebx
	jle	_756
_157
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_volume]
	mov	ebx,[ebx]
	mov	[ebp-52],ebx
	sub	esp,8
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_actualvol]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fchannelvolume
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_currentpitch]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,[_ass_decaychange]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_currentpitch]
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_currentpitch]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_ffreq
	mov	[ebp-56],eax
	cmp	[ebp-56],10
	jle	_758
	sub	esp,8
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-56]
	mov	[esp+4],ebx
	call	_fchannelpitch
_758
_753
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_decaydone]
	mov	eax,[eax]
	cmp	eax,1
	setz	al
	movzx	eax,al
	mov	[ebp-60],eax
	cmp	[ebp-32],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-60]
	and	eax,ebx
	and	eax,eax
	jz	_759
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_currentpitch]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,[_ass_sustainchange]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_currentpitch]
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_volume]
	mov	ebx,[ebx]
	mov	[ebp-52],ebx
	sub	esp,8
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_actualvol]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fchannelvolume
	sub	esp,8
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_currentpitch]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_ffreq
	mov	[ebp-56],eax
	cmp	[ebp-56],10
	jle	_760
	sub	esp,8
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-56]
	mov	[esp+4],ebx
	call	_fchannelpitch
_760
_759
	cmp	[ebp-32],1
	jnz	_761
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_volume]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_release]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_volume]
	mov	[esi],ebx
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_volume]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_762
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_volume]
	mov	[esi],ebx
_762
	mov	[ebp-48],1
	jmp	_763
_764
	mov	ebx,_ass_lfo
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-4]
	add	ebx,[ebp-48]
	shl	ebx,byte 2
	add	ebx,[_ass_lfo]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,_ass_lforelease
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-24]
	add	esi,[ebp-48]
	shl	esi,byte 2
	add	esi,[_ass_lforelease]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,_ass_lfo
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	esi,[ebp-48]
	shl	esi,byte 2
	add	esi,[_ass_lfo]
	mov	[esi],ebx
	mov	eax,_ass_lfo
	add	eax,12
	mov	eax,[eax]
	imul	eax,[ebp-4]
	add	eax,[ebp-48]
	shl	eax,byte 2
	add	eax,[_ass_lfo]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	seta	al
	movzx	eax,al
	and	eax,eax
	jz	_765
	mov	ebx,0
	mov	esi,_ass_lfo
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-4]
	add	esi,[ebp-48]
	shl	esi,byte 2
	add	esi,[_ass_lfo]
	mov	[esi],ebx
_765
	add	[ebp-48],1
_763
	mov	ebx,[_vss_lfocount]
	cmp	[ebp-48],ebx
	jle	_764
_158
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_volume]
	mov	ebx,[ebx]
	mov	[ebp-52],ebx
	sub	esp,8
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-40]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_actualvol]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fchannelvolume
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_currentpitch]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-24]
	shl	esi,byte 2
	add	esi,[_ass_releasechange]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_currentpitch]
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_currentpitch]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_ffreq
	mov	[ebp-56],eax
	cmp	[ebp-56],10
	jle	_766
	sub	esp,8
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-56]
	mov	[esp+4],ebx
	call	_fchannelpitch
_766
_761
_743
_742
	cmp	[ebp-32],1
	setz	al
	movzx	eax,al
	mov	[ebp-60],eax
	cmp	[_vforcesoundupdate],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-60]
	and	eax,ebx
	and	eax,eax
	jz	_767
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_buffercount]
	mov	ebx,[ebx]
	mov	[ebp-8],ebx
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_buffercount]
	mov	eax,[eax]
	mov	ebx,[_vss_buffersize]
	add	ebx,1
	cmp	eax,ebx
	setl	al
	movzx	eax,al
	mov	[ebp-60],eax
	cmp	[ebp-8],0
	mov	eax,ebx
	setg	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-60]
	and	ebx,eax
	and	ebx,ebx
	jz	_768
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_channelloop]
	mov	ebx,[ebx]
	and	ebx,ebx
	jz	_769
	sub	esp,20
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_bufferpointer]
	mov	ebx,[ebx]
	mov	esi,_ass_bufferlength
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_bufferlength]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_bufferpointer]
	mov	esi,[esi]
	mov	edi,_ass_bufferenv
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_bufferenv]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+16],esi
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_bufferpointer]
	mov	esi,[esi]
	mov	edi,_ass_bufferpitch
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_bufferpitch]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_bufferpointer]
	mov	ebx,[ebx]
	mov	edi,_ass_buffervol
	add	edi,12
	mov	edi,[edi]
	imul	ebx,edi
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_buffervol]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_faddsound
	sub	esp,8
	mov	eax,[ebp-4]
	shl	eax,byte 2
	add	eax,[_ass_bufferpointer]
	mov	eax,[eax]
	add	eax,1
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	__bbMod
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_bufferpointer]
	mov	[ebx],eax
_769
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_channelloop]
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_770
	sub	esp,20
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_bufferpointer]
	mov	ebx,[ebx]
	mov	esi,_ass_bufferlength
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_bufferlength]
	mov	ebx,[ebx]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+12],ebx
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_bufferpointer]
	mov	esi,[esi]
	mov	edi,_ass_bufferenv
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_bufferenv]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+16],esi
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_bufferpointer]
	mov	esi,[esi]
	mov	edi,_ass_bufferpitch
	add	edi,12
	mov	edi,[edi]
	imul	esi,edi
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_bufferpitch]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_bufferpointer]
	mov	ebx,[ebx]
	mov	edi,_ass_buffervol
	add	edi,12
	mov	edi,[edi]
	imul	ebx,edi
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_buffervol]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_faddsound
	mov	[ebp-12],1
	jmp	_771
_772
	mov	ebx,[ebp-12]
	sub	ebx,1
	mov	esi,_ass_buffervol
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_buffervol]
	mov	esi,_ass_buffervol
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-12]
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_buffervol]
	mov	esi,[esi]
	mov	[ebx],esi
	mov	ebx,[ebp-12]
	sub	ebx,1
	mov	esi,_ass_bufferpitch
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_bufferpitch]
	mov	esi,_ass_bufferpitch
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-12]
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_bufferpitch]
	mov	esi,[esi]
	mov	[ebx],esi
	mov	ebx,[ebp-12]
	sub	ebx,1
	mov	esi,_ass_bufferlength
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_bufferlength]
	mov	esi,_ass_bufferlength
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-12]
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_bufferlength]
	mov	esi,[esi]
	mov	[ebx],esi
	mov	ebx,[ebp-12]
	sub	ebx,1
	mov	esi,_ass_bufferenv
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_bufferenv]
	mov	esi,_ass_bufferenv
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-12]
	add	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_bufferenv]
	mov	esi,[esi]
	mov	[ebx],esi
	add	[ebp-12],1
_771
	mov	ebx,[ebp-8]
	cmp	[ebp-12],ebx
	jle	_772
_159
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_buffercount]
	mov	ebx,[ebx]
	sub	ebx,1
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_buffercount]
	mov	[esi],ebx
	mov	ebx,[ebp-4]
	shl	ebx,byte 2
	add	ebx,[_ass_buffercount]
	mov	ebx,[ebx]
	cmp	ebx,0
	jge	_773
	mov	ebx,0
	mov	esi,[ebp-4]
	shl	esi,byte 2
	add	esi,[_ass_buffercount]
	mov	[esi],ebx
_773
_770
_768
_767
	add	[ebp-4],1
_739
	mov	ebx,[_vss_maxchans]
	cmp	[ebp-4],ebx
	jle	_740
_155
	mov	eax,0
	jmp	_154_leave
_154_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_ffreq
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	cmp	[ebp+20],0
	jge	_774
	add	[ebp+20],512
_774
	cmp	[ebp+20],512
	jle	_775
	sub	[ebp+20],512
_775
	mov	ebx,[ebp+20]
	add	ebx,200
	push	ebx
	fild	[esp]
	pop	ebx
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fpitchlfo
	faddp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	sub	esp,8
	mov	ebx,[ebp-4]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1082130432
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,1114112000
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,1094713344
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	[esp],1073741824
	call	__bbFPow
	mov	ebx,1138491392
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	cmp	[ebp-8],10
	jge	_776
	mov	[ebp-8],10
	jmp	_777
_776
	cmp	[ebp-8],48000
	jle	_778
	mov	[ebp-8],48000
_778
_777
	mov	eax,[ebp+24]
	shl	eax,byte 2
	add	eax,[_ass_samplecnt]
	mov	eax,[eax]
	imul	eax,[ebp-8]
	jmp	_160_leave
	mov	eax,0
	jmp	_160_leave
_160_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_flfovalue
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,[ebp+20]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fcos
	jmp	_161_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_161_leave
_161_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fvolumemultiplier
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ass_envelope]
	mov	ebx,[ebx]
	mov	esi,_ass_lfofreq
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	ebx,2
	shl	ebx,byte 2
	add	ebx,[_ass_lfofreq]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ass_lfocounter]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_flfovalue
	mov	ebx,_ass_lfo
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+20]
	add	ebx,2
	shl	ebx,byte 2
	add	ebx,[_ass_lfo]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	jmp	_162_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_162_leave
_162_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fpitchlfo
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ass_envelope]
	mov	ebx,[ebx]
	mov	esi,_ass_lfofreq
	add	esi,12
	mov	esi,[esi]
	imul	ebx,esi
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_ass_lfofreq]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ass_lfocounter]
	mov	eax,[eax]
	push	eax
	fld	[esp]
	pop	eax
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[esp],eax
	call	_flfovalue
	mov	ebx,_ass_lfo
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+20]
	add	ebx,1
	shl	ebx,byte 2
	add	ebx,[_ass_lfo]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fmulp	st(1)
	jmp	_163_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_163_leave
_163_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_faddsound
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	ebx,[_vss_maxchans]
	sub	ebx,[ebp+20]
	mov	[ebp-8],ebx
	cmp	[ebp+36],-1
	jnz	_779
	sub	esp,8
	mov	eax,_780
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_779
	mov	ebx,0
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_chancheck]
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ass_sounds]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_781
	mov	ebx,0
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_lfocounter]
	mov	[esi],ebx
	sub	esp,8
	mov	eax,[ebp+28]
	mov	[esp],eax
	mov	ebx,[ebp+20]
	mov	[esp+4],ebx
	call	_ffreq
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[ebp-4],eax
	mov	eax,[ebp-4]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,1120403456
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setb	al
	movzx	eax,al
	and	eax,eax
	jz	_782
	sub	esp,8
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ass_sounds]
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fsoundvolume
	sub	esp,4
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fchannelplaying
	cmp	eax,0
	jnz	_783
	mov	ebx,0
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_schan]
	mov	[esi],ebx
	jmp	_784
_783
	sub	esp,4
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fstopchannel
	mov	ebx,0
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_schan]
	mov	[esi],ebx
_784
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ass_schan]
	mov	ebx,[ebx]
	cmp	ebx,0
	jnz	_785
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ass_sounds]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_786
	sub	esp,4
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ass_sounds]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fplaysound
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ass_schan]
	mov	[ebx],eax
_786
_785
	sub	esp,8
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	call	_fchannelpitch
	sub	esp,8
	mov	ebx,[ebp+36]
	shl	ebx,byte 2
	add	ebx,[_ass_defattack]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fvolumemultiplier
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fchannelvolume
	sub	esp,8
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ass_sounds]
	mov	eax,[eax]
	mov	[esp],eax
	mov	[esp+4],1065353216
	call	_fsoundvolume
	mov	[ebp-12],1
	jmp	_787
_788
	mov	ebx,_ass_lfoattack
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp+20]
	add	ebx,[ebp-12]
	shl	ebx,byte 2
	add	ebx,[_ass_lfoattack]
	mov	ebx,[ebx]
	mov	esi,_ass_lfo
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp+20]
	add	esi,[ebp-12]
	shl	esi,byte 2
	add	esi,[_ass_lfo]
	mov	[esi],ebx
	add	[ebp-12],1
_787
	mov	ebx,[_vss_lfocount]
	cmp	[ebp-12],ebx
	jle	_788
_165
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_currentpitch]
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	shl	ebx,byte 2
	add	ebx,[_ass_defattack]
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_volume]
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_actualvol]
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_slength]
	mov	[esi],ebx
	call	_fsoundtimer
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ass_started]
	mov	[ebx],eax
	mov	ebx,[ebp+36]
	shl	ebx,byte 2
	add	ebx,[_ass_defattack]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1097859072
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vupdateperiod]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_attack]
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	shl	ebx,byte 2
	add	ebx,[_ass_defrelease]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1097859072
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vupdateperiod]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_release]
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	shl	ebx,byte 2
	add	ebx,[_ass_defsustain]
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_sustain]
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	shl	ebx,byte 2
	add	ebx,[_ass_defdecay]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1097859072
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[_vupdateperiod]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_decay]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_attackdone]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_decaydone]
	mov	[esi],ebx
	call	_fsoundtimer
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ass_chancheck]
	mov	[ebx],eax
	mov	ebx,[ebp+36]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_envelope]
	mov	[esi],ebx
_782
_781
	mov	[_vforcesoundupdate],1
	call	_fupdatesound
	mov	[_vforcesoundupdate],0
_l_164endbit
	mov	eax,0
	jmp	_164_leave
_164_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fupdatesoundtimer
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[_vss_stimer]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vss_stimer],ebx
	mov	eax,[_vss_stimer]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	jmp	_166_leave
	mov	eax,0
	jmp	_166_leave
_166_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsoundtimer
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	eax,[_vss_stimer]
	push	eax
	fld	[esp]
	pop	eax
	push	eax
	fistp	[esp]
	pop	eax
	jmp	_167_leave
	mov	eax,0
	jmp	_167_leave
_167_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_floopchannel
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+24]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_channelloop]
	mov	[esi],ebx
	mov	eax,0
	jmp	_168_leave
_168_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_flfoadsr
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+28]
	mov	esi,_ass_lfoattack
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp+20]
	add	esi,[ebp+24]
	shl	esi,byte 2
	add	esi,[_ass_lfoattack]
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,_ass_lfodecay
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp+20]
	add	esi,[ebp+24]
	shl	esi,byte 2
	add	esi,[_ass_lfodecay]
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	mov	esi,_ass_lfosustain
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp+20]
	add	esi,[ebp+24]
	shl	esi,byte 2
	add	esi,[_ass_lfosustain]
	mov	[esi],ebx
	mov	ebx,[ebp+40]
	mov	esi,_ass_lforelease
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp+20]
	add	esi,[ebp+24]
	shl	esi,byte 2
	add	esi,[_ass_lforelease]
	mov	[esi],ebx
	mov	eax,0
	jmp	_169_leave
_169_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 24
	.align	16
_flfo
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+28]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,_ass_lfofreq
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp+20]
	add	esi,[ebp+24]
	shl	esi,byte 2
	add	esi,[_ass_lfofreq]
	mov	[esi],ebx
	mov	eax,0
	jmp	_170_leave
_170_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fadsr
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+24]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_defattack]
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_defdecay]
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_defsustain]
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_defrelease]
	mov	[esi],ebx
	mov	eax,0
	jmp	_171_leave
_171_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fpitchadsr
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+24]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_attackchange]
	mov	[esi],ebx
	mov	ebx,[ebp+28]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_decaychange]
	mov	[esi],ebx
	mov	ebx,[ebp+32]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_sustainchange]
	mov	[esi],ebx
	mov	ebx,[ebp+36]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_releasechange]
	mov	[esi],ebx
	mov	eax,0
	jmp	_172_leave
_172_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 20
	.align	16
_fsoundshape
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	cmp	[ebp+24],-1
	setg	al
	movzx	eax,al
	mov	[ebp-4],eax
	mov	ebx,[_vss_sndtype]
	add	ebx,1
	cmp	[ebp+24],ebx
	mov	eax,ebx
	setl	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-4]
	and	eax,ebx
	and	eax,eax
	jz	_789
	mov	ebx,[ebp+24]
	shl	ebx,byte 2
	add	ebx,[_ass_soundbank]
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_sounds]
	mov	[esi],ebx
	mov	ebx,[ebp+24]
	shl	ebx,byte 2
	add	ebx,[_ass_samplecntbank]
	mov	ebx,[ebx]
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_samplecnt]
	mov	[esi],ebx
_789
	mov	eax,0
	jmp	_173_leave
_173_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fflushchannel
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,0
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_bufferpointer]
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_buffercount]
	mov	[esi],ebx
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ass_schan]
	mov	ebx,[ebx]
	cmp	ebx,0
	jz	_790
	sub	esp,4
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fchannelplaying
	and	eax,eax
	jz	_791
	sub	esp,4
	mov	eax,[ebp+20]
	shl	eax,byte 2
	add	eax,[_ass_schan]
	mov	eax,[eax]
	mov	[esp],eax
	call	_fstopchannel
	mov	ebx,0
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_schan]
	mov	[esi],ebx
_791
_790
	mov	ebx,[ebp+20]
	shl	ebx,byte 2
	add	ebx,[_ass_slength]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	shl	esi,byte 2
	add	esi,[_ass_started]
	mov	[esi],ebx
	mov	eax,0
	jmp	_174_leave
_174_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fstopsound
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	[ebp-4],0
	mov	[ebp-4],0
	jmp	_792
_793
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fflushchannel
	add	[ebp-4],1
_792
	mov	ebx,[_vss_maxchans]
	cmp	[ebp-4],ebx
	jle	_793
_176
	mov	eax,0
	jmp	_175_leave
_175_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fwritewav
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,48
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	ebx,[ebp+20]
	mov	[ebp-4],ebx
	mov	ebx,[_vss_bpsample]
	mov	[ebp-8],ebx
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fwritefile
	mov	[ebp-12],eax
	cmp	[ebp-12],0
	jnz	_794
	mov	eax,0
	jmp	_177_leave
_794
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_795
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fwritebinstring
	mov	ebx,[ebp+20]
	shl	ebx,byte 1
	imul	ebx,[ebp+28]
	add	ebx,36
	mov	[ebp-16],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fwriteint
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_796
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fwritebinstring
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_797
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fwritebinstring
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],16
	call	_fwriteint
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fwriteshort
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp+28]
	mov	[esp+4],ebx
	call	_fwriteshort
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp+32]
	mov	[esp+4],ebx
	call	_fwriteint
	mov	[ebp-8],16
	mov	ebx,[ebp+32]
	imul	ebx,[ebp+28]
	imul	ebx,[ebp-8]
	sar	ebx,byte 3
	mov	[ebp-20],ebx
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fwriteint
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp+28]
	imul	ebx,[ebp-8]
	sar	ebx,byte 3
	mov	[esp+4],ebx
	call	_fwriteshort
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fwriteshort
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_798
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	_fwritebinstring
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-4]
	imul	ebx,[ebp+28]
	imul	ebx,[ebp-8]
	sar	ebx,byte 3
	mov	[esp+4],ebx
	call	_fwriteint
	mov	[ebp-24],1
	jmp	_799
_800
	cmp	[_vss_bpsample],8
	jnz	_801
	mov	[ebp-28],128
_801
	cmp	[_vss_bpsample],16
	jnz	_802
	mov	ebx,[ebp-32]
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
_802
	cmp	[_vss_bpsample],32
	jnz	_803
	mov	ebx,[ebp-32]
	imul	ebx,255
	push	ebx
	fild	[esp]
	pop	ebx
	mov	esi,1073741824
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[ebp-28],ebx
_803
	mov	[ebp-36],0
	jmp	_804
_805
	mov	ebx,_awavdata
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-36]
	shl	ebx,byte 2
	add	ebx,[_awavdata]
	mov	ebx,[ebx]
	mov	[ebp-40],ebx
	mov	ebx,[ebp-28]
	sub	[ebp-40],ebx
	cmp	[ebp-40],0
	jge	_806
	mov	ebx,[ebp-28]
	shl	ebx,byte 1
	add	[ebp-40],ebx
_806
	cmp	[ebp-40],0
	jge	_807
	mov	[ebp-40],0
	jmp	_808
_807
	mov	ebx,[ebp-28]
	shl	ebx,byte 1
	shl	ebx,byte 1
	cmp	[ebp-40],ebx
	jle	_809
	mov	ebx,[ebp-28]
	shl	ebx,byte 1
	mov	[ebp-40],ebx
_809
_808
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,_awavdata
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-24]
	add	ebx,[ebp-36]
	shl	ebx,byte 2
	add	ebx,[_awavdata]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	call	_fwriteshort
	add	[ebp-36],1
_804
	mov	ebx,[ebp+28]
	sub	ebx,1
	cmp	[ebp-36],ebx
	jle	_805
_179
	add	[ebp-24],1
_799
	mov	ebx,[ebp+20]
	cmp	[ebp-24],ebx
	jle	_800
_178
	cmp	[ebp+28],1
	jnz	_810
	sub	esp,8
	lea	eax,[ebp-44]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_811
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_812
_810
	sub	esp,8
	lea	eax,[ebp-44]
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_813
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrStore
_812
	sub	esp,72
	mov	eax,_814
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_815
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,[_vss_bpsample]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_816
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,[ebp+32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_817
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	lea	ebx,[ebp-44]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,_818
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fss_debugprint
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fclosefile
	mov	eax,0
	jmp	_177_leave
_177_leave
	mov	[ebp-48],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-48]
	mov	[ebp-48],eax
	sub	esp,4
	mov	esi,[ebp-44]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-48]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fwritebinstring
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	mov	[ebp-4],1
	jmp	_819
_820
	sub	esp,24
	mov	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	call	_fasc
	mov	[esp+4],eax
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwritebyte
	mov	ebx,eax
	add	[ebp-4],1
_819
	sub	esp,8
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-4],eax
	jle	_820
_181
	mov	eax,0
	jmp	_180_leave
_180_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fss_debugprint
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fprint
	mov	eax,0
	jmp	_182_leave
_182_leave
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	4
_vss_channelcount	.dd	0
	.align	4
_vss_bpsample	.dd	0
	.align	4
_vss_maxchans	.dd	0
	.align	4
_vss_buffersize	.dd	0
	.align	4
_vss_maxenvs	.dd	0
	.align	4
_vss_sndtype	.dd	0
	.align	4
_vss_lfocount	.dd	0
	.align	4
_ass_sounds	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ass_volume	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_schan	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ass_slength	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_started	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ass_actualvol	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_attackdone	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ass_decaydone	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ass_attack	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_decay	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_sustain	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_release	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_currentpitch	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_envelope	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ass_defattack	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_defdecay	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_defsustain	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_defrelease	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_attackchange	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_decaychange	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_sustainchange	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_releasechange	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_lfoattack	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ass_lfodecay	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ass_lfosustain	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ass_lforelease	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ass_lfo	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ass_lfofreq	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ass_lfocounter	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ass_bufferchan	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ass_buffervol	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ass_bufferenv	.dd	0
	.dd	2
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ass_bufferpitch	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ass_bufferlength	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_ass_bufferpointer	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ass_buffercount	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ass_chancheck	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ass_channelloop	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ass_samplecnt	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ass_soundbank	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ass_samplecntbank	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_vforcesoundupdate	.dd	0
	.align	4
_vss_stimer	.dd	0
	.align	4
_vaudiotimer	.dd	0
	.align	4
_vupdateperiod	.dd	0
	.align	4
_awavdata	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_vnxtchan	.dd	0
	.align	4
_vdirx	.dd	0
	.align	4
_vdiry	.dd	0
	.align	4
_vignoreboulders	.dd	0
	.align	4
_vlastspread	.dd	0
	.align	4
_vscx	.dd	0
	.align	4
_vscy	.dd	0
	.align	4
_vtopbit	.dd	0
	.align	4
_vgametimer	.dd	0
	.align	4
_vbasey	.dd	0
	.align	4
_vmaxx	.dd	0
	.align	4
_vmaxy	.dd	0
	.align	4
_vscrollmode	.dd	0
	.align	4
_vcamx	.dd	0
	.align	4
_vocamx	.dd	0
	.align	4
_vcamy	.dd	0
	.align	4
_vocamy	.dd	0
	.align	4
_vcammvx	.dd	0
	.align	4
_vcammvy	.dd	0
	.align	4
_vszx	.dd	0
	.align	4
_vszy	.dd	0
	.align	4
_vtextcnt	.dd	0
	.align	4
_acharimg	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_amap	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_amap2	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_amap3	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_amap4	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_aalive	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_amapc	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_amapd	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_vstack	.dd	0
	.align	4
_astackx	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_astacky	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_astackc	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_astackd	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_vmushrooms	.dd	0
	.align	4
_vmushlife	.dd	0
	.align	4
_vimages	.dd	0
	.align	4
_aimg	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_vmaxplayers	.dd	0
	.align	4
_vplayers	.dd	0
	.align	4
_aplayertype	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_apx	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_apy	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_apc	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_apd	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_afr	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_aok2move	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ascore	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_alives	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aenergy	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_asx	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_asy	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_adiecounter	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_adead	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_amushs	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aplayername	.dd	0
	.dd	3
	.dd	1
	.dd	0
	.align	4
_alastupdate	.dd	0
	.dd	1
	.dd	1
	.dd	0
_187	.db	"Player",0
	.align	4
_aupkey	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_adownkey	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aleftkey	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_arightkey	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_adropkey	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ared	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_agreen	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_ablue	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_apdx	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_apdy	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_acfx	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_acfy	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_actx	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_acty	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_aplayerimg	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
	.align	4
_vhatred	.dd	0
	.align	4
_vhatgreen	.dd	0
	.align	4
_vhatblue	.dd	0
	.align	4
_vtxsize	.dd	0
	.align	4
_vtxscale	.dd	0
	.align	4
_vtxxdis	.dd	0
	.align	4
_vlevel	.dd	0
_196	.db	"ULTIMATE MUSHROOM COLLECTOR 2004",0
_197	.db	"Collect as many mushrooms as you can!",0
_198	.db	"Be the Last surviving player!",0
_199	.db	">>",0
_200	.db	"START",0
_206	.db	"Non-Scrolling",0
_208	.db	"Scrolling mode",0
_209	.db	"Quit",0
	.align	4
_vinv	.dd	0
	.align	4
_vstarting	.dd	0
	.align	4
_vgamestarted	.dd	0
	.align	4
_vupdbuffer	.dd	0
_240	.db	"Level ",0
_241	.db	"!!!",0
_243	.db	"4",0
_244	.db	"",0
_246	.db	"0",0
_247	.db	"GO!!!!",0
_251	.db	"x",0
_262	.db	" WINS!!!",0
_264	.db	"Level Complete!",0
_266	.db	"G A M E   O V E R ! ! !",0
	.align	4
_tpath	.dd	5
_274	.dd	0
	.dd	_274
	.dd	_274
	.dd	0
	.dd	-1
_275	.dd	0
	.dd	_275
	.dd	_275
	.dd	0
	.dd	-1
	.dd	2
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
_tboulder	.dd	5
_276	.dd	0
	.dd	_276
	.dd	_276
	.dd	0
	.dd	-1
_277	.dd	0
	.dd	_277
	.dd	_277
	.dd	0
	.dd	-1
	.dd	9
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbIntType
	.align	4
_114	.dd	6
	.dd	5
	.dd	__bbIntType
	.align	4
_115	.dd	6
	.dd	5
	.dd	__bbIntType
_642	.db	"temp.txt",0
_646	.db	",  ",0
_647	.db	", ",0
_696	.db	" ",0
_697	.db	" ",0
_698	.db	"0",0
_699	.db	"",0
_710	.db	"S",0
_711	.db	".wav",0
_714	.db	"S0.wav",0
_717	.db	"s",0
_718	.db	".wav",0
_720	.db	"s",0
_721	.db	".wav",0
_780	.db	"sound not buffered correctly!",0
_795	.db	"RIFF",0
_796	.db	"WAVE",0
_797	.db	"fmt ",0
_798	.db	"data",0
_811	.db	"Mono",0
_813	.db	"Stereo",0
_814	.db	"Created ",0
_815	.db	" as ",0
_816	.db	" bit, ",0
_817	.db	"hz, ",0
_818	.db	" wave file.",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	1
	.dd	4
	.dd	1
	.dd	100
	.dd	1
	.dd	200
	.dd	1
	.dd	0
	.dd	1
	.dd	255
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	255
	.dd	1
	.dd	100
	.dd	1
	.dd	0
	.dd	1
	.dd	255
	.dd	1
	.dd	100
	.dd	1
	.dd	255
	.dd	1
	.dd	0
	.dd	1
	.dd	50
	.dd	1
	.dd	50
	.dd	1
	.dd	150
	.dd	1
	.dd	255
	.dd	1
	.dd	0
	.dd	1
	.dd	255
	.dd	1
	.dd	100
	.dd	1
	.dd	255
	.dd	1
	.dd	50
	.dd	1
	.dd	1
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	52
	.dd	1
	.dd	10
	.dd	1
	.dd	2
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	68
	.dd	1
	.dd	10
	.dd	1
	.dd	3
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	80
	.dd	1
	.dd	10
	.dd	1
	.dd	1
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	52
	.dd	1
	.dd	10
	.dd	1
	.dd	2
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	68
	.dd	1
	.dd	10
	.dd	1
	.dd	3
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	80
	.dd	1
	.dd	10
	.dd	1
	.dd	1
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	52
	.dd	1
	.dd	10
	.dd	1
	.dd	2
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	72
	.dd	1
	.dd	10
	.dd	1
	.dd	3
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	80
	.dd	1
	.dd	10
	.dd	1
	.dd	1
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	52
	.dd	1
	.dd	10
	.dd	1
	.dd	2
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	72
	.dd	1
	.dd	10
	.dd	1
	.dd	3
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	80
	.dd	1
	.dd	10
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	100
	.dd	1
	.dd	10
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	100
	.dd	1
	.dd	10
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	92
	.dd	1
	.dd	5
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	88
	.dd	1
	.dd	5
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	80
	.dd	1
	.dd	10
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	72
	.dd	1
	.dd	10
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	80
	.dd	1
	.dd	10
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	88
	.dd	1
	.dd	10
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	80
	.dd	1
	.dd	10
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	100
	.dd	1
	.dd	10
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	100
	.dd	1
	.dd	10
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	92
	.dd	1
	.dd	5
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	88
	.dd	1
	.dd	5
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	80
	.dd	1
	.dd	5
	.dd	1
	.dd	5
	.dd	1
	.dd	1
	.dd	1
	.dd	80
	.dd	1
	.dd	45
	.dd	1
	.dd	4
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	52
	.dd	1
	.dd	5
	.dd	1
	.dd	4
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	80
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	5
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	50
	.dd	1
	.dd	15
	.dd	1
	.dd	0
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	150
	.dd	1
	.dd	10
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	10
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	5
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	5
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	20
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	150
	.dd	1
	.dd	10
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	50
	.dd	1
	.dd	10
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	5
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	50
	.dd	1
	.dd	15
	.dd	1
	.dd	0
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	150
	.dd	1
	.dd	10
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	10
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	5
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	1
	.dd	1
	.dd	1
	.dd	5
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	20
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	150
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	1
	.dd	0
	.dd	1
	.dd	150
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	150
	.dd	1
	.dd	5
	.dd	1
	.dd	0
	.dd	2
	.dd	1056964608
	.dd	1
	.dd	150
	.dd	1
	.dd	5
	.dd	1
	.dd	-1
	.dd	0

