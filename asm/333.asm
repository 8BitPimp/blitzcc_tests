
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	mov	eax,_10
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,_11
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,_12
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadimage_hb
	mov	[ebp-12],eax
	jmp	_14
_13
	call	_fmillisecs
	mov	[ebp-16],eax
	call	_fcls
	call	_fmousex
	mov	[ebp-20],eax
	call	_fmousey
	mov	[ebp-24],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fdrawblock
	sub	esp,12
	mov	ebx,[ebp-24]
	add	ebx,20
	mov	[esp+4],ebx
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp-20]
	add	eax,20
	mov	[esp],eax
	call	_fdrawblock_hb
	sub	esp,16
	mov	ebx,[ebp-24]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-20]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fdrawimage
	call	_fmillisecs
	mov	[ebp-28],eax
	mov	eax,1000
	mov	ecx,[ebp-28]
	sub	ecx,[ebp-16]
	add	ecx,1
	cdq
	idiv	ecx
	mov	[ebp-32],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+8],eax
	mov	[esp+4],10
	mov	[esp],10
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
_14
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_13
_3
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_floadimage_hb
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-8]
	imul	eax,[ebp-12]
	add	eax,2
	mov	[esp],eax
	call	_fcreatebank
	mov	[ebp-16],eax
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp-8]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokebyte
	sub	esp,12
	mov	[esp+4],1
	mov	esi,[ebp-12]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokebyte
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-20],2
	mov	[ebp-24],0
	jmp	_15
_16
	mov	[ebp-28],0
	jmp	_17
_18
	sub	esp,20
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_freadpixel
	mov	ebx,255
	and	eax,ebx
	mov	[ebp-32],eax
	sub	esp,12
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	esi,[ebp-32]
	mov	[esp+8],esi
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fpokebyte
	add	[ebp-20],1
	add	[ebp-28],1
_17
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-28],ebx
	jle	_18
_6
	add	[ebp-24],1
_15
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_16
_5
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreeimage
	mov	eax,[ebp-16]
	jmp	_4_leave
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fdrawblock_hb
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_flockbuffer
	sub	esp,8
	mov	eax,[ebp+28]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekbyte
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp+28]
	mov	[esp],eax
	mov	[esp+4],1
	call	_fpeekbyte
	mov	[ebp-8],eax
	mov	[ebp-12],2
	mov	[ebp-16],0
	jmp	_19
_20
	mov	[ebp-20],0
	jmp	_21
_22
	sub	esp,8
	mov	eax,[ebp+28]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fpeekbyte
	mov	[ebp-24],eax
	cmp	[ebp-24],0
	jnz	_23
	sub	esp,12
	mov	ebx,[ebp-20]
	add	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-16]
	add	eax,[ebp+20]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,-16843010
	and	eax,ebx
	shr	eax,byte 1
	mov	[ebp-28],eax
	sub	esp,16
	mov	ebx,[ebp-28]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp-20]
	add	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp-16]
	add	eax,[ebp+20]
	mov	[esp],eax
	call	_fwritepixelfast
_23
	add	[ebp-12],1
	add	[ebp-20],1
_21
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_22
_9
	add	[ebp-16],1
_19
	mov	ebx,[ebp-4]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_20
_8
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	eax,0
	jmp	_7_leave
_7_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
_10	.db	"bg.jpg",0
_11	.db	"player.png",0
_12	.db	"shadow.png",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

