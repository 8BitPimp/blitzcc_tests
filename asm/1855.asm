
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,12
	mov	eax,_5
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_6
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	_fapptitle
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	[esp+4],600
	mov	[esp],800
	call	_fgraphics
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	call	_fmillisecs
	mov	[esp],eax
	call	_fseedrnd
	jmp	_8
_7
	call	_fcls
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],799
	call	_frand
	mov	[ebp-4],eax
	sub	esp,8
	mov	[esp],60
	mov	[esp+4],599
	call	_frand
	mov	[ebp-8],eax
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],799
	call	_frand
	mov	[ebp-12],eax
	sub	esp,8
	mov	[esp],60
	mov	[esp+4],599
	call	_frand
	mov	[ebp-16],eax
	sub	esp,16
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fline
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],799
	call	_frand
	mov	[ebp-20],eax
	sub	esp,8
	mov	[esp],60
	mov	[esp+4],599
	call	_frand
	mov	[ebp-24],eax
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],799
	call	_frand
	mov	[ebp-28],eax
	sub	esp,8
	mov	[esp],60
	mov	[esp+4],599
	call	_frand
	mov	[ebp-32],eax
	sub	esp,16
	mov	ebx,[ebp-28]
	mov	[esp+8],ebx
	mov	esi,[ebp-32]
	mov	[esp+12],esi
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fline
	sub	esp,32
	mov	ebx,[ebp-28]
	mov	[esp+24],ebx
	mov	esi,[ebp-32]
	mov	[esp+28],esi
	mov	esi,[ebp-24]
	mov	[esp+20],esi
	mov	ebx,[ebp-20]
	mov	[esp+16],ebx
	mov	esi,[ebp-16]
	mov	[esp+12],esi
	mov	ebx,[ebp-12]
	mov	[esp+8],ebx
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_flinesintersect
	mov	[ebp-36],eax
	sub	esp,32
	mov	eax,_9
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	cmp	[ebp-36],1
	jnz	_10
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_11
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],20
	mov	[esp],10
	call	_ftext
	sub	esp,48
	mov	eax,_12
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[_vintersectx]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_13
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[_vintersecty]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],40
	mov	[esp],10
	call	_ftext
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],255
	call	_fcolor
	sub	esp,20
	mov	[esp+12],7
	mov	[esp+16],1
	mov	[esp+8],7
	mov	ebx,[_vintersecty]
	sub	ebx,3
	mov	[esp+4],ebx
	mov	eax,[_vintersectx]
	sub	eax,3
	mov	[esp],eax
	call	_foval
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	jmp	_14
_10
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_15
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],20
	mov	[esp],10
	call	_ftext
_14
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fwaitkey
_8
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	cmp	eax,0
	jz	_7
_3
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_flinesintersect
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	ebx,[ebp+44]
	sub	ebx,[ebp+36]
	mov	esi,[ebp+24]
	sub	esi,[ebp+40]
	imul	ebx,esi
	mov	esi,[ebp+48]
	sub	esi,[ebp+40]
	mov	edi,[ebp+20]
	sub	edi,[ebp+36]
	imul	esi,edi
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-4],ebx
	mov	ebx,[ebp+28]
	sub	ebx,[ebp+20]
	mov	esi,[ebp+24]
	sub	esi,[ebp+40]
	imul	ebx,esi
	mov	esi,[ebp+32]
	sub	esi,[ebp+24]
	mov	edi,[ebp+20]
	sub	edi,[ebp+36]
	imul	esi,edi
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-8],ebx
	mov	ebx,[ebp+48]
	sub	ebx,[ebp+40]
	mov	esi,[ebp+28]
	sub	esi,[ebp+20]
	imul	ebx,esi
	mov	esi,[ebp+44]
	sub	esi,[ebp+36]
	mov	edi,[ebp+32]
	sub	edi,[ebp+24]
	imul	esi,edi
	sub	ebx,esi
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-12],ebx
	mov	eax,[ebp-12]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setz	al
	movzx	eax,al
	and	eax,eax
	jz	_16
	mov	eax,0
	jmp	_4_leave
	jmp	_17
_16
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-16],ebx
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	eax,[ebp-16]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	mov	[ebp-32],eax
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-32]
	and	eax,ebx
	mov	[ebp-24],eax
	mov	eax,[ebp-20]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	mov	[ebp-32],eax
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1065353216
	push	esi
	fld	[esp]
	pop	esi
	mov	eax,ebx
	fucompp
	fnstsw	ax
	sahf
	setae	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-32]
	and	eax,ebx
	mov	[ebp-28],eax
	mov	ebx,[ebp-24]
	mov	esi,[ebp-28]
	and	ebx,esi
	and	ebx,ebx
	jz	_18
	sub	esp,4
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+28]
	sub	esi,[ebp+20]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp+20]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vintersectx],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	sub	esi,[ebp+24]
	push	esi
	fild	[esp]
	pop	esi
	fmulp	st(1)
	mov	eax,[ebp+24]
	push	eax
	fild	[esp]
	pop	eax
	faddp	st(1)
	mov	ebx,1056964608
	push	ebx
	fld	[esp]
	pop	ebx
	faddp	st(1)
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_ffloor
	push	eax
	fistp	[esp]
	pop	eax
	mov	[_vintersecty],eax
	mov	eax,1
	jmp	_4_leave
	jmp	_19
_18
	mov	eax,0
	jmp	_4_leave
_19
_17
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 32
_5	.db	"Line Intersection Function by Andy_A",0
_6	.db	"",0
	.align	4
_vintersectx	.dd	0
	.align	4
_vintersecty	.dd	0
_9	.db	"Result= ",0
_11	.db	"Intersection Coords",0
_12	.db	"   X=",0
_13	.db	" , Y=",0
_15	.db	"No Intersection",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

