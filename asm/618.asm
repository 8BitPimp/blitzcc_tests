
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	sub	esp,16
	mov	[esp+8],16
	mov	[esp+12],2
	mov	[esp+4],480
	mov	[esp],640
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	mov	eax,_18
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fsupportsbit256
	and	eax,eax
	jz	_17
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,8
	mov	eax,_19
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_20
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	jmp	_21
_17
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,8
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_23
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
_21
	sub	esp,8
	mov	eax,_24
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,24
	mov	eax,_25
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vtdif1]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_26
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,24
	mov	eax,_27
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vtdif2]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_28
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_29
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vchecksum1]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_30
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vchecksum2]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_31
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	call	_fwaitkey
	call	_fcls
	sub	esp,4
	mov	[esp],1
	call	_fflip
	call	_fcls
	sub	esp,8
	mov	eax,_33
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fsupportsbit256nobackbuffer
	and	eax,eax
	jz	_32
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,8
	mov	eax,_34
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_35
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	jmp	_36
_32
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,8
	mov	eax,_37
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_38
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
_36
	sub	esp,8
	mov	eax,_39
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	sub	esp,24
	mov	eax,_40
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vtdif1]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_41
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,24
	mov	eax,_42
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vtdif2]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_43
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_44
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vchecksum1]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,16
	mov	eax,_45
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,[_vchecksum2]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fprint
	sub	esp,8
	mov	eax,_46
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fprint
	call	_fwaitkey
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsupportsbit256
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,12
	mov	[esp+4],25
	mov	[esp+8],0
	mov	[esp],25
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_47
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,12
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_floadtexture
	mov	[ebp-4],eax
	cmp	[ebp-4],0
	jnz	_48
	sub	esp,24
	mov	eax,_49
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_50
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_48
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ftexturewidth
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ftextureheight
	mov	[ebp-12],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1
	mov	esi,[ebp-12]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcreatetexture
	mov	[ebp-16],eax
	sub	esp,40
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp+24],eax
	mov	[ebp-40],eax
	sub	esp,8
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_ftexturebuffer
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+28],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	mov	ebx,[ebp-12]
	mov	[esp+12],ebx
	mov	esi,[ebp-8]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreetexture
	sub	esp,12
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],256
	call	_floadtexture
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,12
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_51
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	call	_fmillisecs
	mov	[ebp-24],eax
	mov	[ebp-28],0
	jmp	_52
_53
	sub	esp,40
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp+28],eax
	mov	[ebp-40],eax
	mov	eax,ebx
	call	_fbackbuffer
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+24],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	mov	esi,[ebp-12]
	mov	[esp+12],esi
	mov	ebx,[ebp-8]
	mov	[esp+8],ebx
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_54
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	add	[ebp-28],1
_52
	cmp	[ebp-28],100
	jle	_53
_4
	call	_fmillisecs
	mov	[ebp-32],eax
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	[_vchecksum1],0
	mov	[ebp-36],0
	jmp	_55
_56
	mov	[ebp-28],0
	jmp	_57
_58
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	add	eax,[_vchecksum1]
	mov	ebx,268435455
	and	eax,ebx
	mov	[_vchecksum1],eax
	add	[ebp-28],1
_57
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-28],ebx
	jle	_58
_6
	add	[ebp-36],1
_55
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-36],ebx
	jle	_56
_5
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-24]
	mov	[_vtdif1],ebx
	sub	esp,12
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fmillisecs
	mov	[ebp-24],eax
	mov	[ebp-28],0
	jmp	_59
_60
	sub	esp,40
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp+28],eax
	mov	[ebp-40],eax
	mov	eax,ebx
	call	_fbackbuffer
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+24],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	mov	esi,[ebp-12]
	mov	[esp+12],esi
	mov	ebx,[ebp-8]
	mov	[esp+8],ebx
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_61
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	add	[ebp-28],1
_59
	cmp	[ebp-28],100
	jle	_60
_7
	call	_fmillisecs
	mov	[ebp-32],eax
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	[_vchecksum2],0
	mov	[ebp-36],0
	jmp	_62
_63
	mov	[ebp-28],0
	jmp	_64
_65
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	add	eax,[_vchecksum2]
	mov	ebx,268435455
	and	eax,ebx
	mov	[_vchecksum2],eax
	add	[ebp-28],1
_64
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-28],ebx
	jle	_65
_9
	add	[ebp-36],1
_62
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-36],ebx
	jle	_63
_8
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-24]
	mov	[_vtdif2],ebx
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_ffreetexture
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ffreetexture
	mov	eax,[_vtdif1]
	cmp	[_vtdif2],eax
	setg	al
	movzx	eax,al
	mov	[ebp-40],eax
	mov	ebx,[_vchecksum1]
	cmp	[_vchecksum2],ebx
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-40]
	or	eax,ebx
	and	eax,eax
	jz	_66
	mov	eax,0
	jmp	_3_leave
	jmp	_67
_66
	mov	eax,1
	jmp	_3_leave
_67
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fsupportsbit256nobackbuffer
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,12
	mov	[esp+4],25
	mov	[esp+8],0
	mov	[esp],25
	call	_fcolor
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_68
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,12
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_floadtexture
	mov	[ebp-4],eax
	cmp	[ebp-4],0
	jnz	_69
	sub	esp,24
	mov	eax,_70
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,_71
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fruntimeerror
_69
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ftexturewidth
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ftextureheight
	mov	[ebp-12],eax
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1
	mov	esi,[ebp-12]
	mov	[esp+4],esi
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fcreatetexture
	mov	[ebp-16],eax
	sub	esp,40
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp+24],eax
	mov	[ebp-40],eax
	sub	esp,8
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	[esp+4],0
	mov	eax,ebx
	call	_ftexturebuffer
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	[esp+28],ebx
	mov	[esp+20],0
	mov	[esp+16],0
	mov	ebx,[ebp-12]
	mov	[esp+12],ebx
	mov	esi,[ebp-8]
	mov	[esp+8],esi
	mov	[esp+4],0
	mov	[esp],0
	call	_fcopyrect
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreetexture
	sub	esp,12
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],256
	call	_floadtexture
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,12
	mov	eax,[ebp-16]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_72
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	call	_fmillisecs
	mov	[ebp-24],eax
	mov	[ebp-28],0
	jmp	_73
_74
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_75
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	add	[ebp-28],1
_73
	cmp	[ebp-28],1000
	jle	_74
_11
	call	_fmillisecs
	mov	[ebp-32],eax
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	[_vchecksum1],0
	mov	[ebp-36],0
	jmp	_76
_77
	mov	[ebp-28],0
	jmp	_78
_79
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	add	eax,[_vchecksum1]
	mov	ebx,268435455
	and	eax,ebx
	mov	[_vchecksum1],eax
	add	[ebp-28],1
_78
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-28],ebx
	jle	_79
_13
	add	[ebp-36],1
_76
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-36],ebx
	jle	_77
_12
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-24]
	mov	[_vtdif1],ebx
	sub	esp,12
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_ftexturebuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fmillisecs
	mov	[ebp-24],eax
	mov	[ebp-28],0
	jmp	_80
_81
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_82
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	add	[ebp-28],1
_80
	cmp	[ebp-28],1000
	jle	_81
_14
	call	_fmillisecs
	mov	[ebp-32],eax
	sub	esp,4
	mov	[esp],0
	call	_flockbuffer
	mov	[_vchecksum2],0
	mov	[ebp-36],0
	jmp	_83
_84
	mov	[ebp-28],0
	jmp	_85
_86
	sub	esp,12
	mov	ebx,[ebp-36]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	add	eax,[_vchecksum2]
	mov	ebx,268435455
	and	eax,ebx
	mov	[_vchecksum2],eax
	add	[ebp-28],1
_85
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-28],ebx
	jle	_86
_16
	add	[ebp-36],1
_83
	mov	ebx,[ebp-12]
	sub	ebx,1
	cmp	[ebp-36],ebx
	jle	_84
_15
	sub	esp,4
	mov	[esp],0
	call	_funlockbuffer
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-24]
	mov	[_vtdif2],ebx
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_ffreetexture
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ffreetexture
	mov	eax,[_vtdif1]
	cmp	[_vtdif2],eax
	setg	al
	movzx	eax,al
	mov	[ebp-40],eax
	mov	ebx,[_vchecksum1]
	cmp	[_vchecksum2],ebx
	mov	eax,ebx
	setnz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-40]
	or	eax,ebx
	and	eax,eax
	jz	_87
	mov	eax,0
	jmp	_10_leave
	jmp	_88
_87
	mov	eax,1
	jmp	_10_leave
_88
	mov	eax,0
	jmp	_10_leave
_10_leave
	mov	[ebp-40],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-40]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	4
_vtdif1	.dd	0
	.align	4
_vtdif2	.dd	0
	.align	4
_vchecksum1	.dd	0
	.align	4
_vchecksum2	.dd	0
_18	.db	"space.jpg",0
_19	.db	"Your Machine seems to support VRam resident Texture Operations properly",0
_20	.db	"if CopyRect from Backbuffer to that Texturebuffer is used as well",0
_22	.db	"Your Machine don't support VRam resident Texture Ops properly",0
_23	.db	"if CopyRect from Backbuffer to that Texturebuffer is used as well",0
_24	.db	"",0
_25	.db	"Time without Bit256: ",0
_26	.db	" ms",0
_27	.db	"Time with Bit256: ",0
_28	.db	" ms",0
_29	.db	"Checksum without: ",0
_30	.db	"Checksum with: ",0
_31	.db	"Press any key to continue",0
_33	.db	"space.jpg",0
_34	.db	"Your Machine seems to support VRam resident Texture Operations properly",0
_35	.db	"if CopyRect from Backbuffer to that Texturebuffer is NOT used!",0
_37	.db	"Your Machine don't support VRam resident Texture Ops properly",0
_38	.db	"if CopyRect from Backbuffer to that Texturebuffer is NOT used!",0
_39	.db	"",0
_40	.db	"Time without Bit256: ",0
_41	.db	" ms",0
_42	.db	"Time with Bit256: ",0
_43	.db	" ms",0
_44	.db	"Checksum without: ",0
_45	.db	"Checksum with: ",0
_46	.db	"Press any key to exit",0
_47	.db	"Testing Vram",0
_49	.db	"Bit256 Test-Texture ",0
_50	.db	" not found!",0
_51	.db	"Howdy",0
_54	.db	"Howdy",0
_61	.db	"Howdy",0
_68	.db	"Testing Vram",0
_70	.db	"Bit256 Test-Texture ",0
_71	.db	" not found!",0
_72	.db	"Howdy",0
_75	.db	"Howdy",0
_82	.db	"Howdy",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

