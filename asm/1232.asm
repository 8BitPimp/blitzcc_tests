
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,40
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	sub	esp,16
	mov	[esp+8],32
	mov	[esp+12],2
	mov	[esp+4],768
	mov	[esp],1024
	call	_fgraphics3d
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	mov	[_vnbrsurfaces],0
	sub	esp,4
	mov	eax,_asurfaces
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100
	mov	esi,_asurfaces
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_asurfaces
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_asx
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_asx
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_asx
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_asy
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_asy
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_asy
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_asz
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_asz
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_asz
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_asnx
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_asnx
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_asnx
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_asny
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_asny
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_asny
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_asnz
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_asnz
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_asnz
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_amx
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_amx
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amx
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_amy
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_amy
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amy
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_amz
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_amz
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amz
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_amnx
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_amnx
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amnx
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_amny
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_amny
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amny
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_amnz
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_amnz
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_amnz
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adx
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_adx
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adx
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_ady
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_ady
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_ady
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adz
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_adz
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adz
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adnx
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_adnx
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adnx
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adny
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_adny
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adny
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,4
	mov	eax,_adnz
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,100000
	mov	esi,_adnz
	add	esi,12
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_adnz
	mov	[esp],eax
	call	__bbDimArray
	mov	[_vvertices],0
	mov	[_vmaxvertices],0
	sub	esp,4
	mov	[esp],0
	call	_fcreatecamera
	mov	[_vcamera],eax
	sub	esp,20
	mov	[esp+12],-1027080192
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,12
	mov	[esp+4],1008981770
	mov	[esp+8],1203982336
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fcamerarange
	sub	esp,4
	mov	[esp],0
	call	_fcreatepivot
	mov	[_vpivot],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],0
	mov	[esp],0
	call	_fambientlight
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],0
	call	_fcreatelight
	mov	[_vlight1],eax
	sub	esp,16
	mov	[esp+8],1128792064
	mov	[esp+12],1128792064
	mov	[esp+4],1120403456
	mov	eax,[_vlight1]
	mov	[esp],eax
	call	_flightcolor
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],1116471296
	mov	eax,[_vlight1]
	mov	[esp],eax
	call	_flightconeangles
	sub	esp,20
	mov	[esp+12],-1021313024
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],1125515264
	mov	eax,[_vlight1]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	mov	eax,[_vlight1]
	mov	[esp],eax
	mov	[esp+4],1123024896
	call	_flightrange
	sub	esp,8
	mov	[esp],1
	mov	[esp+4],0
	call	_fcreatelight
	mov	[_vlight2],eax
	sub	esp,16
	mov	[esp+8],1128792064
	mov	[esp+12],1120403456
	mov	[esp+4],1128792064
	mov	eax,[_vlight2]
	mov	[esp],eax
	call	_flightcolor
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],1116471296
	mov	eax,[_vlight2]
	mov	[esp],eax
	call	_flightconeangles
	sub	esp,20
	mov	[esp+12],-1021313024
	mov	[esp+16],0
	mov	[esp+8],0
	mov	[esp+4],-1021968384
	mov	eax,[_vlight2]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	mov	eax,[_vlight2]
	mov	[esp],eax
	mov	[esp+4],1123024896
	call	_flightrange
	sub	esp,20
	mov	[esp+12],-1063256064
	mov	[esp+16],0
	mov	[esp+8],1082130432
	mov	[esp+4],-1073741824
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fpositionentity
	sub	esp,8
	call	_fgraphicswidth
	sar	eax,byte 1
	mov	[esp],eax
	mov	[ebp-40],eax
	mov	eax,ebx
	call	_fgraphicsheight
	mov	ebx,eax
	mov	eax,[ebp-40]
	sar	ebx,byte 1
	mov	[esp+4],ebx
	call	_fmovemouse
	mov	[_vtheend],0
	sub	esp,12
	mov	eax,_19
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	ebx,[_vpivot]
	mov	[esp+4],ebx
	call	_floadanimmesh
	mov	[ebp-4],eax
	sub	esp,12
	mov	eax,_20
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	ebx,[_vpivot]
	mov	[esp+4],ebx
	call	_floadanimmesh
	mov	[ebp-8],eax
	sub	esp,12
	mov	eax,_21
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	ebx,[_vpivot]
	mov	[esp+4],ebx
	call	_floadanimmesh
	mov	[ebp-12],eax
	sub	esp,12
	mov	eax,_22
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	ebx,[_vpivot]
	mov	[esp+4],ebx
	call	_floadanimmesh
	mov	[ebp-16],eax
	sub	esp,12
	mov	eax,_23
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	ebx,[_vpivot]
	mov	[esp+4],ebx
	call	_floadanimmesh
	mov	[ebp-20],eax
	sub	esp,12
	mov	eax,_24
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	ebx,[_vpivot]
	mov	[esp+4],ebx
	call	_floadanimmesh
	mov	[ebp-24],eax
	sub	esp,12
	mov	eax,_25
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	ebx,[_vpivot]
	mov	[esp+4],ebx
	call	_floadanimmesh
	mov	[ebp-28],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],1053609165
	call	_fentityshininess
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fhideentity
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fhideentity
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fhideentity
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fhideentity
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fhideentity
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fhideentity
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fhideentity
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_fhideentity
_26
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fshowentity
	sub	esp,8
	mov	[esp],1065353216
	mov	[esp+4],1086324736
	call	_frnd
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-32],eax
	mov	ebx,[ebp-32]
	mov	[ebp-36],ebx
	cmp	[ebp-36],1
	jz	_28
	cmp	[ebp-36],2
	jz	_29
	cmp	[ebp-36],3
	jz	_30
	cmp	[ebp-36],4
	jz	_31
	cmp	[ebp-36],5
	jz	_32
	cmp	[ebp-36],6
	jz	_33
	jmp	_27
_28
	sub	esp,16
	mov	[esp+8],1120403456
	mov	[esp+12],1065353216
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fmorph
	jmp	_27
_29
	sub	esp,16
	mov	[esp+8],1120403456
	mov	[esp+12],1065353216
	mov	esi,[ebp-12]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fmorph
	jmp	_27
_30
	sub	esp,16
	mov	[esp+8],1120403456
	mov	[esp+12],1065353216
	mov	esi,[ebp-16]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fmorph
	jmp	_27
_31
	sub	esp,16
	mov	[esp+8],1120403456
	mov	[esp+12],1065353216
	mov	esi,[ebp-20]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fmorph
	jmp	_27
_32
	sub	esp,16
	mov	[esp+8],1120403456
	mov	[esp+12],1065353216
	mov	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fmorph
	jmp	_27
_33
	sub	esp,16
	mov	[esp+8],1120403456
	mov	[esp+12],1065353216
	mov	esi,[ebp-28]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fmorph
	jmp	_27
_27
	mov	ebx,[_vtheend]
	and	ebx,ebx
	jz	_26
_3
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_ffreeentity
	sub	esp,4
	mov	eax,[ebp-28]
	mov	[esp],eax
	call	_ffreeentity
	call	_fend
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fcurvevalue
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	mov	ebx,[ebp+24]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+28]
	push	esi
	fild	[esp]
	pop	esi
	fdivp	st(1)
	mov	esi,[ebp+20]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[ebp+20],esi
	mov	ebx,[ebp+20]
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_5_leave
	mov	ebx,0
	push	ebx
	fld	[esp]
	pop	ebx
	jmp	_5_leave
_5_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fstoremesh
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	mov	[_vnbrsurfaces],eax
	mov	[ebp-4],0
	mov	[ebp-8],1
	jmp	_34
_35
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcountvertices
	mov	[ebp-16],eax
	sub	esp,8
	mov	eax,[ebp+24]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-20],eax
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fcountvertices
	mov	[ebp-24],eax
	mov	ebx,[ebp-24]
	cmp	[ebp-16],ebx
	jle	_36
	mov	ebx,[ebp-16]
	mov	[ebp-28],ebx
	jmp	_37
_36
	mov	ebx,[ebp-24]
	mov	[ebp-28],ebx
_37
	mov	ebx,[ebp-4]
	mov	[ebp-32],ebx
	jmp	_38
_39
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_asx]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_asy]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_asz]
	mov	[ebx],eax
	add	[ebp-32],1
_38
	mov	ebx,[ebp-4]
	add	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-32],ebx
	jle	_39
_8
	mov	ebx,[ebp-4]
	mov	[ebp-32],ebx
	jmp	_40
_41
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_adx]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexy
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_ady]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_adz]
	mov	[ebx],eax
	add	[ebp-32],1
_40
	mov	ebx,[ebp-4]
	add	ebx,[ebp-24]
	sub	ebx,1
	cmp	[ebp-32],ebx
	jle	_41
_9
	mov	ebx,[ebp-4]
	mov	[ebp-32],ebx
	jmp	_42
_43
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexnx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_asnx]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexny
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_asny]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-12]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexnz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_asnz]
	mov	[ebx],eax
	add	[ebp-32],1
_42
	mov	ebx,[ebp-4]
	add	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-32],ebx
	jle	_43
_10
	mov	ebx,[ebp-4]
	mov	[ebp-32],ebx
	jmp	_44
_45
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexnx
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_adnx]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexny
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_adny]
	mov	[ebx],eax
	sub	esp,8
	mov	eax,[ebp-20]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	call	_fvertexnz
	push	eax
	fstp	[esp]
	pop	eax
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_adnz]
	mov	[ebx],eax
	add	[ebp-32],1
_44
	mov	ebx,[ebp-4]
	add	ebx,[ebp-24]
	sub	ebx,1
	cmp	[ebp-32],ebx
	jle	_45
_11
	mov	ebx,[ebp-4]
	mov	[ebp-32],ebx
	jmp	_46
_47
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_adx]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	shl	esi,byte 2
	add	esi,[_asx]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	shl	esi,byte 2
	add	esi,[_amx]
	mov	[esi],ebx
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_ady]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	shl	esi,byte 2
	add	esi,[_asy]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	shl	esi,byte 2
	add	esi,[_amy]
	mov	[esi],ebx
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_adz]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	shl	esi,byte 2
	add	esi,[_asz]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	shl	esi,byte 2
	add	esi,[_amz]
	mov	[esi],ebx
	add	[ebp-32],1
_46
	mov	ebx,[ebp-4]
	add	ebx,[ebp-28]
	sub	ebx,1
	cmp	[ebp-32],ebx
	jle	_47
_12
	mov	ebx,[ebp-4]
	mov	[ebp-32],ebx
	jmp	_48
_49
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_adnx]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	shl	esi,byte 2
	add	esi,[_asnx]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	shl	esi,byte 2
	add	esi,[_amnx]
	mov	[esi],ebx
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_adny]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	shl	esi,byte 2
	add	esi,[_asny]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	shl	esi,byte 2
	add	esi,[_amny]
	mov	[esi],ebx
	mov	ebx,[ebp-32]
	shl	ebx,byte 2
	add	ebx,[_adnz]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	shl	esi,byte 2
	add	esi,[_asnz]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	mov	esi,[ebp+28]
	push	esi
	fld	[esp]
	pop	esi
	fdivp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	shl	esi,byte 2
	add	esi,[_amnz]
	mov	[esi],ebx
	add	[ebp-32],1
_48
	mov	ebx,[ebp-4]
	add	ebx,[ebp-28]
	sub	ebx,1
	cmp	[ebp-32],ebx
	jle	_49
_13
	mov	ebx,[ebp-28]
	add	[ebp-4],ebx
	add	[ebp-8],1
_34
	mov	ebx,[_vnbrsurfaces]
	cmp	[ebp-8],ebx
	jle	_35
_7
	mov	eax,[ebp-4]
	jmp	_6_leave
	mov	eax,0
	jmp	_6_leave
_6_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_ftransformmesh
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcountsurfaces
	mov	[_vnbrsurfaces],eax
	mov	[ebp-4],0
	mov	[ebp-8],1
	jmp	_50
_51
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fgetsurface
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcountvertices
	mov	[ebp-16],eax
	mov	ebx,[ebp-4]
	mov	[ebp-20],ebx
	jmp	_52
_53
	sub	esp,20
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_amy]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+24]
	push	esi
	fld	[esp]
	pop	esi
	fmulp	st(1)
	mov	esi,[ebp-20]
	shl	esi,byte 2
	add	esi,[_asy]
	mov	esi,[esi]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_amz]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp+24]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-20]
	shl	edi,byte 2
	add	edi,[_asz]
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+16],edi
	mov	ebx,[ebp-20]
	shl	ebx,byte 2
	add	ebx,[_amx]
	mov	ebx,[ebx]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	edi,[ebp+24]
	push	edi
	fld	[esp]
	pop	edi
	fmulp	st(1)
	mov	edi,[ebp-20]
	shl	edi,byte 2
	add	edi,[_asx]
	mov	edi,[edi]
	push	edi
	fld	[esp]
	pop	edi
	faddp	st(1)
	push	edi
	fstp	[esp]
	pop	edi
	mov	[esp+8],edi
	mov	ebx,[ebp-20]
	sub	ebx,[ebp-4]
	mov	[esp+4],ebx
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fvertexcoords
	add	[ebp-20],1
_52
	mov	ebx,[ebp-4]
	add	ebx,[ebp-16]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_53
_16
	mov	ebx,[ebp-16]
	add	[ebp-4],ebx
	add	[ebp-8],1
_50
	mov	ebx,[_vnbrsurfaces]
	cmp	[ebp-8],ebx
	jle	_51
_15
	mov	eax,0
	jmp	_14_leave
_14_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fmorph
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	ebx,[ebp+28]
	mov	[ebp-4],ebx
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	esi,[ebp-4]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fstoremesh
	mov	[_vmaxvertices],eax
	sub	esp,4
	mov	eax,[ebp+24]
	mov	[esp],eax
	call	_fhideentity
	mov	[ebp-8],1045220557
	call	_fmousexspeed
	sar	eax,byte 1
	mov	[ebp-12],eax
	call	_fmouseyspeed
	sar	eax,byte 1
	mov	[ebp-16],eax
	mov	[ebp-20],1065353216
	mov	[ebp-24],0
_54
	call	_fcls
	sub	esp,4
	mov	[esp],1
	call	_fkeydown
	and	eax,eax
	jz	_55
	mov	[_vtheend],1
_55
	sub	esp,4
	mov	[esp],1
	call	_fmousedown
	and	eax,eax
	jz	_56
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp-8]
	mov	[esp+12],esi
	mov	[esp+4],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fmoveentity
	jmp	_57
_56
	sub	esp,4
	mov	[esp],2
	call	_fmousedown
	and	eax,eax
	jz	_58
	sub	esp,16
	mov	[esp+8],0
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+12],esi
	mov	[esp+4],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fmoveentity
_58
_57
	sub	esp,4
	mov	[esp],200
	call	_fkeydown
	and	eax,eax
	jz	_59
	sub	esp,16
	mov	ebx,[ebp-8]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fmoveentity
_59
	sub	esp,4
	mov	[esp],208
	call	_fkeydown
	and	eax,eax
	jz	_60
	sub	esp,16
	mov	ebx,[ebp-8]
	push	ebx
	fld	[esp]
	pop	ebx
	fchs
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+4],0
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fmoveentity
_60
	sub	esp,4
	mov	[esp],203
	call	_fkeydown
	and	eax,eax
	jz	_61
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	esi,[ebp-8]
	push	esi
	fld	[esp]
	pop	esi
	fchs
	push	esi
	fstp	[esp]
	pop	esi
	mov	[esp+4],esi
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fmoveentity
_61
	sub	esp,4
	mov	[esp],205
	call	_fkeydown
	and	eax,eax
	jz	_62
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],0
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_fmoveentity
_62
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_ftransformmesh
	mov	[ebp-28],3
	call	_fmousexspeed
	sar	eax,byte 1
	mov	[ebp-12],eax
	call	_fmouseyspeed
	sar	eax,byte 1
	mov	[ebp-16],eax
	mov	ebx,[_vdest_cam_pitch]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-16]
	push	esi
	fild	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vdest_cam_pitch],ebx
	mov	ebx,[_vdest_cam_yaw]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-12]
	push	esi
	fild	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[_vdest_cam_yaw],ebx
	sub	esp,12
	mov	ebx,[_vcam_pitch]
	mov	[esp+4],ebx
	mov	esi,[ebp-28]
	mov	[esp+8],esi
	mov	eax,[_vdest_cam_pitch]
	mov	[esp],eax
	call	_fcurvevalue
	push	eax
	fstp	[esp]
	pop	eax
	mov	[_vcam_pitch],eax
	sub	esp,12
	mov	ebx,[_vcam_yaw]
	mov	[esp+4],ebx
	mov	esi,[ebp-28]
	mov	[esp+8],esi
	mov	eax,[_vdest_cam_yaw]
	mov	[esp],eax
	call	_fcurvevalue
	push	eax
	fstp	[esp]
	pop	eax
	mov	[_vcam_yaw],eax
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	esi,[_vcam_yaw]
	mov	[esp+8],esi
	mov	ebx,[_vcam_pitch]
	mov	[esp+4],ebx
	mov	eax,[_vcamera]
	mov	[esp],eax
	call	_frotateentity
	mov	ebx,[ebp-20]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp+32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-20],ebx
	mov	eax,[ebp-20]
	push	eax
	fld	[esp]
	pop	eax
	mov	ebx,[ebp-4]
	push	ebx
	fld	[esp]
	pop	ebx
	fucompp
	fnstsw	ax
	sahf
	setbe	al
	movzx	eax,al
	and	eax,eax
	jz	_63
	jmp	_18
_63
	sub	esp,4
	mov	[esp],1065353216
	call	_fupdateworld
	sub	esp,4
	mov	[esp],1065353216
	call	_frenderworld
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,_64
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+8],eax
	mov	[esp+4],20
	mov	[esp],0
	call	_ftext
	sub	esp,32
	mov	eax,_65
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[_vvertices]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],30
	mov	[esp],0
	call	_ftext
	sub	esp,32
	mov	eax,_66
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromFloat
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],40
	mov	[esp],0
	call	_ftext
	sub	esp,32
	mov	eax,_67
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[_vmaxvertices]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],50
	mov	[esp],0
	call	_ftext
	sub	esp,72
	mov	eax,[_vcamera]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityx
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_68
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_69
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	eax,[_vcamera]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityy
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_70
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,12
	mov	eax,[_vcamera]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fentityz
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	__bbStrFromFloat
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],60
	mov	[esp],0
	call	_ftext
	sub	esp,32
	call	_ftotalvidmem
	sar	eax,byte 10
	mov	[ebp-32],eax
	mov	eax,ebx
	call	_favailvidmem
	mov	ebx,eax
	mov	eax,[ebp-32]
	sar	ebx,byte 10
	sub	eax,ebx
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+4],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_71
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],70
	mov	[esp],0
	call	_ftext
	sub	esp,32
	mov	eax,_72
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	[ebp-36],eax
	mov	eax,ebx
	call	_favailvidmem
	mov	ebx,eax
	mov	eax,[ebp-36]
	sar	ebx,byte 10
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],80
	mov	[esp],0
	call	_ftext
	sub	esp,32
	mov	eax,_73
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	[ebp-36],eax
	mov	eax,ebx
	call	_ftotalvidmem
	mov	ebx,eax
	mov	eax,[ebp-36]
	sar	ebx,byte 10
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],90
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	mov	ebx,[_vtheend]
	and	ebx,ebx
	jz	_54
_18
	mov	eax,0
	jmp	_17_leave
_17_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	4
_vnbrsurfaces	.dd	0
	.align	4
_asurfaces	.dd	0
	.dd	1
	.dd	1
	.dd	0
	.align	4
_asx	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_asy	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_asz	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_asnx	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_asny	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_asnz	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_amx	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_amy	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_amz	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_amnx	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_amny	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_amnz	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_adx	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_ady	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_adz	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_adnx	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_adny	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_adnz	.dd	0
	.dd	2
	.dd	1
	.dd	0
	.align	4
_vvertices	.dd	0
	.align	4
_vmaxvertices	.dd	0
	.align	4
_vcamera	.dd	0
	.align	4
_vdest_cam_pitch	.dd	0
	.align	4
_vdest_cam_yaw	.dd	0
	.align	4
_vcam_pitch	.dd	0
	.align	4
_vcam_yaw	.dd	0
	.align	4
_vpivot	.dd	0
	.align	4
_vlight1	.dd	0
	.align	4
_vlight2	.dd	0
	.align	4
_vtheend	.dd	0
_19	.db	"orcx1.b3d",0
_20	.db	"orcx2.b3d",0
_21	.db	"orcx3.b3d",0
_22	.db	"orcx4.b3d",0
_23	.db	"orcx5.b3d",0
_24	.db	"orcx6.b3d",0
_25	.db	"orcx7.b3d",0
_64	.db	"Camera Movement",0
_65	.db	"Vertices:",0
_66	.db	"Frames#:",0
_67	.db	"Maxvertices:",0
_68	.db	"x:",0
_69	.db	"   y:",0
_70	.db	" z:",0
_71	.db	"Mem Used: ",0
_72	.db	"Mem FREE: ",0
_73	.db	"Mem Total: ",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

