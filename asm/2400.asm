
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,64
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,_11
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],2
	mov	[esp+4],768
	mov	[esp],1024
	call	_fgraphics
	call	_fgraphicswidth
	mov	[_vgw],eax
	call	_fgraphicsheight
	mov	[_vgh],eax
	sub	esp,12
	mov	[esp+4],0
	mov	[esp+8],255
	mov	[esp],255
	call	_fsetdrawbankmask
	sub	esp,12
	mov	[esp+4],96
	mov	[esp+8],128
	mov	[esp],64
	call	_fclscolor
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_floadimage
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fimageheight
	mov	[ebp-16],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fimagetobank
	mov	[ebp-20],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreeimage
_12
	call	_fcls
	call	_fmousex
	mov	[ebp-24],eax
	call	_fmousey
	mov	[ebp-28],eax
	sub	esp,4
	mov	[esp],203
	call	_fkeydown
	and	eax,eax
	jz	_13
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1036831949
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
_13
	sub	esp,4
	mov	[esp],205
	call	_fkeydown
	and	eax,eax
	jz	_14
	mov	ebx,[ebp-32]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1036831949
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-32],ebx
_14
	sub	esp,4
	mov	[esp],200
	call	_fkeydown
	and	eax,eax
	jz	_15
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1036831949
	push	esi
	fld	[esp]
	pop	esi
	fsubp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
_15
	sub	esp,4
	mov	[esp],208
	call	_fkeydown
	and	eax,eax
	jz	_16
	mov	ebx,[ebp-36]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,1036831949
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-36],ebx
_16
	mov	ebx,[ebp-40]
	cmp	[ebp-24],ebx
	jz	_17
	mov	ebx,[ebp-24]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
	mov	[ebp-32],0
	jmp	_18
_17
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-32]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-44],ebx
_18
	mov	ebx,[ebp-48]
	cmp	[ebp-28],ebx
	jz	_19
	mov	ebx,[ebp-28]
	push	ebx
	fild	[esp]
	pop	ebx
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-52],ebx
	mov	[ebp-36],0
	jmp	_20
_19
	mov	ebx,[ebp-52]
	push	ebx
	fld	[esp]
	pop	ebx
	mov	esi,[ebp-36]
	push	esi
	fld	[esp]
	pop	esi
	faddp	st(1)
	push	ebx
	fstp	[esp]
	pop	ebx
	mov	[ebp-52],ebx
_20
	mov	ebx,[ebp-24]
	mov	[ebp-40],ebx
	mov	ebx,[ebp-28]
	mov	[ebp-48],ebx
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_flockbuffer
	call	_fmillisecs
	mov	[ebp-56],eax
	sub	esp,28
	mov	[esp+20],1
	mov	[esp+24],1
	mov	esi,[ebp-16]
	mov	[esp+16],esi
	mov	ebx,[ebp-12]
	mov	[esp+12],ebx
	mov	esi,[ebp-52]
	push	esi
	fld	[esp]
	pop	esi
	push	esi
	fistp	[esp]
	pop	esi
	mov	[esp+8],esi
	mov	ebx,[ebp-44]
	push	ebx
	fld	[esp]
	pop	ebx
	push	ebx
	fistp	[esp]
	pop	ebx
	mov	[esp+4],ebx
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fdrawbank
	call	_fmillisecs
	sub	eax,[ebp-56]
	mov	[ebp-60],eax
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	sub	esp,4
	mov	eax,[ebp-60]
	mov	[esp],eax
	call	__bbStrFromInt
	mov	[esp+8],eax
	mov	[esp+4],20
	mov	[esp],20
	call	_ftext
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_12
_3
	call	_fend
	ret
_2_leave
	mov	[ebp-64],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-64]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fsetdrawbankmask
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	call	_fgraphicsbuffer
	mov	[ebp-4],eax
	sub	esp,12
	mov	[esp+4],1
	mov	[esp+8],1
	mov	[esp],1
	call	_fcreateimage
	mov	[ebp-8],eax
	sub	esp,12
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_fplot
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_fgetcolor
	call	_fcolorred
	mov	[ebp-12],eax
	call	_fcolorgreen
	mov	[ebp-16],eax
	call	_fcolorblue
	mov	[ebp-20],eax
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	esi,[ebp+28]
	mov	[esp+8],esi
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fcolor
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_fplot
	sub	esp,8
	mov	[esp],0
	mov	[esp+4],0
	call	_fgetcolor
	call	_fcolorred
	mov	[ebp+20],eax
	call	_fcolorgreen
	mov	[ebp+24],eax
	call	_fcolorblue
	mov	[ebp+28],eax
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_ffreeimage
	mov	ebx,[ebp+20]
	shl	ebx,byte 16
	mov	esi,[ebp+24]
	shl	esi,byte 8
	add	ebx,esi
	add	ebx,[ebp+28]
	mov	esi,-16777216
	or	ebx,esi
	mov	[_vdb_rgb],ebx
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	ebx,[ebp-16]
	mov	[esp+4],ebx
	mov	esi,[ebp-20]
	mov	[esp+8],esi
	mov	eax,[ebp-12]
	mov	[esp],eax
	call	_fcolor
	mov	eax,0
	jmp	_4_leave
_4_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 12
	.align	16
_fdrawbank
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,32
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	ebx,[ebp+40]
	and	ebx,ebx
	jz	_21
	mov	ebx,[ebp+32]
	sar	ebx,byte 1
	sub	[ebp+24],ebx
	mov	ebx,[ebp+36]
	sar	ebx,byte 1
	sub	[ebp+28],ebx
_21
	mov	ebx,[ebp-8]
	shl	ebx,byte 16
	mov	esi,[ebp-12]
	shl	esi,byte 8
	add	ebx,esi
	add	ebx,[ebp-16]
	mov	esi,-16777216
	or	ebx,esi
	mov	[ebp-4],ebx
	mov	[ebp-20],0
	jmp	_22
_23
	mov	ebx,[ebp+24]
	add	ebx,[ebp-20]
	cmp	ebx,[_vgw]
	jge	_24
	mov	ebx,[ebp+24]
	add	ebx,[ebp-20]
	cmp	ebx,-1
	jle	_25
	mov	[ebp-24],0
	jmp	_26
_27
	mov	ebx,[ebp+28]
	add	ebx,[ebp-24]
	cmp	ebx,[_vgh]
	jge	_28
	mov	ebx,[ebp+28]
	add	ebx,[ebp-24]
	cmp	ebx,-1
	jle	_29
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	call	_fpeekint
	mov	[ebp-28],eax
	mov	ebx,[_vdb_rgb]
	cmp	[ebp-28],ebx
	jz	_30
	sub	esp,16
	mov	ebx,[ebp-28]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+28]
	add	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp+24]
	add	eax,[ebp-20]
	mov	[esp],eax
	call	_fwritepixelfast
	jmp	_31
_30
	cmp	[ebp+44],0
	jnz	_32
	sub	esp,16
	mov	ebx,[ebp-28]
	mov	[esp+8],ebx
	mov	[esp+12],0
	mov	esi,[ebp+28]
	add	esi,[ebp-24]
	mov	[esp+4],esi
	mov	eax,[ebp+24]
	add	eax,[ebp-20]
	mov	[esp],eax
	call	_fwritepixelfast
_32
_31
	add	[ebp-32],4
	jmp	_33
_29
	mov	ebx,[ebp+28]
	neg	ebx
	add	ebx,[ebp-24]
	sub	ebx,1
	mov	[ebp-24],ebx
	mov	ebx,[ebp-24]
	shl	ebx,byte 2
	add	ebx,[ebp-32]
	add	ebx,4
	mov	[ebp-32],ebx
_33
	jmp	_34
_28
	mov	ebx,[ebp+36]
	sub	ebx,[ebp-24]
	shl	ebx,byte 2
	add	[ebp-32],ebx
	jmp	_7
_34
	add	[ebp-24],1
_26
	mov	ebx,[ebp+36]
	sub	ebx,1
	cmp	[ebp-24],ebx
	jle	_27
_7
	jmp	_35
_25
	mov	ebx,[ebp+36]
	sub	ebx,[ebp-24]
	shl	ebx,byte 2
	add	[ebp-32],ebx
_35
	jmp	_36
_24
	jmp	_6
_36
	add	[ebp-20],1
_22
	mov	ebx,[ebp+32]
	sub	ebx,1
	cmp	[ebp-20],ebx
	jle	_23
_6
	mov	eax,0
	jmp	_5_leave
_5_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 28
	.align	16
_fimagetobank
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,28
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	sub	esp,4
	mov	[esp],0
	call	_fcreatebank
	mov	[ebp-4],eax
	call	_fgraphicsbuffer
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	mov	[ebp-28],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fimageheight
	mov	ebx,eax
	mov	eax,[ebp-28]
	imul	eax,ebx
	mov	[ebp-12],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp-12]
	shl	ebx,byte 2
	mov	[esp+4],ebx
	call	_fresizebank
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-16],0
	jmp	_37
_38
	mov	[ebp-20],0
	jmp	_39
_40
	sub	esp,24
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	mov	[esp+8],0
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_freadpixelfast
	mov	[esp+8],eax
	mov	ebx,[ebp-24]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fpokeint
	add	[ebp-24],4
	add	[ebp-20],1
_39
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimageheight
	sub	eax,1
	cmp	[ebp-20],eax
	jle	_40
_10
	add	[ebp-16],1
_37
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fimagewidth
	sub	eax,1
	cmp	[ebp-16],eax
	jle	_38
_9
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fsetbuffer
	mov	eax,[ebp-4]
	jmp	_8_leave
	mov	eax,0
	jmp	_8_leave
_8_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
_11	.db	"boing.png",0
	.align	4
_vgw	.dd	0
	.align	4
_vgh	.dd	0
	.align	4
_vdb_rgb	.dd	0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

