
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,96
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	mov	[ebp-88],ebx
	mov	[ebp-92],ebx
	mov	[ebp-4],800
	mov	[ebp-8],600
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-96],eax
	sub	esp,4
	mov	ebx,_8
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,16
	mov	[esp+8],0
	mov	[esp+12],1
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fgraphics
	sub	esp,20
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+8],1
	mov	[esp+4],12
	sub	esp,4
	mov	eax,_9
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_floadfont
	mov	[_vfnt_verdana],eax
	sub	esp,4
	mov	eax,[_vfnt_verdana]
	mov	[esp],eax
	call	_fsetfont
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fopenmovie
	mov	[ebp-16],eax
	cmp	[ebp-16],0
	jnz	_10
	sub	esp,8
	mov	eax,_11
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_10
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fmovieplaying
	cmp	eax,0
	jnz	_12
	sub	esp,8
	mov	eax,_13
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	_fruntimeerror
_12
	mov	[ebp-20],12
	mov	[ebp-24],64
	mov	[ebp-28],48
	mov	[ebp-32],0
	mov	[ebp-36],0
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,4
	mov	eax,_apixcol
	mov	[esp],eax
	call	__bbUndimArray
	mov	ebx,[ebp-24]
	mov	esi,_apixcol
	add	esi,12
	mov	[esi],ebx
	mov	ebx,[ebp-28]
	mov	esi,_apixcol
	add	esi,16
	mov	[esi],ebx
	sub	esp,4
	mov	eax,_apixcol
	mov	[esp],eax
	call	__bbDimArray
	sub	esp,12
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	mov	[esp+8],1
	mov	eax,[ebp-24]
	mov	[esp],eax
	call	_fcreateimage
	mov	[ebp-40],eax
	mov	[ebp-44],2
	mov	[ebp-48],128
	mov	[ebp-52],1
_14
	sub	esp,12
	mov	eax,[ebp-40]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_fsetbuffer
	sub	esp,20
	mov	ebx,[ebp-24]
	mov	[esp+12],ebx
	mov	esi,[ebp-28]
	mov	[esp+16],esi
	mov	esi,[ebp-36]
	mov	[esp+8],esi
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fdrawmovie
	sub	esp,12
	mov	eax,[ebp-40]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_flockbuffer
	mov	[ebp-56],1
	jmp	_15
_16
	mov	[ebp-60],1
	jmp	_17
_18
	sub	esp,20
	mov	eax,[ebp-40]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp+8],eax
	mov	ebx,[ebp-60]
	mov	[esp+4],ebx
	mov	eax,[ebp-56]
	mov	[esp],eax
	call	_freadpixelfast
	mov	ebx,16777215
	and	eax,ebx
	mov	[ebp-64],eax
	mov	ebx,[ebp-64]
	shr	ebx,byte 16
	mov	esi,255
	and	ebx,esi
	mov	[ebp-68],ebx
	mov	ebx,[ebp-64]
	mov	esi,255
	and	ebx,esi
	mov	[ebp-72],ebx
	mov	ebx,[ebp-68]
	add	ebx,[ebp-72]
	sar	ebx,byte 1
	mov	[ebp-76],ebx
	mov	ebx,[ebp-76]
	mov	esi,_apixcol
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-60]
	add	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[_apixcol]
	mov	[esi],ebx
	add	[ebp-60],1
_17
	mov	ebx,[ebp-28]
	cmp	[ebp-60],ebx
	jle	_18
_5
	add	[ebp-56],1
_15
	mov	ebx,[ebp-24]
	cmp	[ebp-56],ebx
	jle	_16
_4
	sub	esp,12
	mov	eax,[ebp-40]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fimagebuffer
	mov	[esp],eax
	call	_funlockbuffer
	mov	ebx,[ebp-4]
	mov	esi,[ebp-24]
	imul	esi,[ebp-20]
	sub	ebx,esi
	sar	ebx,byte 1
	mov	[ebp-80],ebx
	mov	ebx,[ebp-8]
	mov	esi,[ebp-28]
	imul	esi,[ebp-20]
	sub	ebx,esi
	sar	ebx,byte 1
	mov	[ebp-84],ebx
	sub	esp,4
	call	_fbackbuffer
	mov	[esp],eax
	call	_fsetbuffer
	call	_fcls
	mov	[ebp-56],0
	jmp	_19
_20
	mov	[ebp-60],0
	jmp	_21
_22
	sub	esp,12
	mov	ebx,_apixcol
	add	ebx,12
	mov	ebx,[ebx]
	imul	ebx,[ebp-60]
	add	ebx,[ebp-56]
	shl	ebx,byte 2
	add	ebx,[_apixcol]
	mov	ebx,[ebx]
	mov	[esp+4],ebx
	mov	esi,_apixcol
	add	esi,12
	mov	esi,[esi]
	imul	esi,[ebp-60]
	add	esi,[ebp-56]
	shl	esi,byte 2
	add	esi,[_apixcol]
	mov	esi,[esi]
	mov	[esp+8],esi
	mov	[esp],0
	call	_fcolor
	sub	esp,4
	mov	eax,[ebp-52]
	imul	eax,[ebp-44]
	add	eax,[ebp-60]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-48]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-88],eax
	sub	esp,20
	mov	ebx,[ebp-20]
	add	ebx,4
	mov	[esp+12],ebx
	mov	[esp+16],1
	mov	esi,[ebp-20]
	add	esi,4
	mov	[esp+8],esi
	mov	ebx,[ebp-60]
	imul	ebx,[ebp-20]
	sub	ebx,[ebp-92]
	add	ebx,[ebp-84]
	mov	[esp+4],ebx
	mov	eax,[ebp-56]
	imul	eax,[ebp-20]
	add	eax,[ebp-88]
	add	eax,[ebp-80]
	mov	[esp],eax
	call	_frect
	add	[ebp-60],1
_21
	mov	ebx,[ebp-28]
	sub	ebx,1
	cmp	[ebp-60],ebx
	jle	_22
_7
	sub	esp,4
	mov	eax,[ebp-52]
	imul	eax,[ebp-44]
	add	eax,[ebp-56]
	push	eax
	fild	[esp]
	pop	eax
	push	eax
	fstp	[esp]
	pop	eax
	mov	[esp],eax
	call	_fsin
	mov	ebx,[ebp-48]
	push	ebx
	fild	[esp]
	pop	ebx
	fmulp	st(1)
	push	eax
	fistp	[esp]
	pop	eax
	mov	[ebp-92],eax
	add	[ebp-56],1
_19
	mov	ebx,[ebp-24]
	sub	ebx,1
	cmp	[ebp-56],ebx
	jle	_20
_6
	sub	esp,12
	mov	[esp+4],255
	mov	[esp+8],255
	mov	[esp],255
	call	_fcolor
	sub	esp,32
	mov	eax,_23
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-96],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],0
	mov	[esp],0
	call	_ftext
	sub	esp,32
	mov	eax,_24
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-96],eax
	sub	esp,4
	mov	ebx,[ebp-48]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[esp+16],0
	mov	[esp+4],12
	mov	[esp],0
	call	_ftext
	sub	esp,4
	mov	[esp],59
	call	_fkeydown
	and	eax,eax
	jz	_25
	sub	[ebp-20],1
_25
	cmp	[ebp-20],1
	jge	_26
	mov	[ebp-20],1
_26
	sub	esp,4
	mov	[esp],60
	call	_fkeydown
	and	eax,eax
	jz	_27
	add	[ebp-20],1
_27
	cmp	[ebp-20],64
	jle	_28
	mov	[ebp-20],64
_28
	sub	esp,4
	mov	[esp],61
	call	_fkeydown
	and	eax,eax
	jz	_29
	sub	[ebp-48],1
_29
	cmp	[ebp-48],1
	jge	_30
	mov	[ebp-48],1
_30
	sub	esp,4
	mov	[esp],62
	call	_fkeydown
	and	eax,eax
	jz	_31
	add	[ebp-48],1
_31
	cmp	[ebp-48],256
	jle	_32
	mov	[ebp-48],256
_32
	add	[ebp-52],1
	cmp	[ebp-52],359
	jle	_33
	mov	[ebp-52],1
_33
	sub	esp,4
	mov	[esp],1
	call	_fflip
	sub	esp,4
	mov	[esp],1
	call	_fkeyhit
	and	eax,eax
	jz	_14
_3
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_fclosemovie
	call	_fend
	ret
_2_leave
	mov	[ebp-96],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
_8	.db	"yourmovie.avi",0
	.align	4
_vfnt_verdana	.dd	0
_9	.db	"verdana",0
_11	.db	"Error - Movie not loaded!",0
_13	.db	"Error - Movie not playing!",0
	.align	4
_apixcol	.dd	0
	.dd	1
	.dd	2
	.dd	0
	.dd	0
_23	.db	"Steps = ",0
_24	.db	"Amp = ",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

