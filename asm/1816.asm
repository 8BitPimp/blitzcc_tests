
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	sub	esp,8
	mov	[esp],_vuseragent
	mov	[ebp-4],eax
	sub	esp,4
	mov	ebx,_38
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[_vresponsedelay],2000
	sub	esp,20
	mov	[esp],13
	call	_fchr
	mov	[esp],eax
	mov	[ebp-4],eax
	sub	esp,4
	mov	[esp],10
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-4]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	[esp],_vnewline
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fopenremotefile
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,96
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	mov	[ebp-44],ebx
	mov	[ebp-48],ebx
	mov	[ebp-52],ebx
	mov	[ebp-56],ebx
	mov	[ebp-60],ebx
	mov	[ebp-64],ebx
	mov	[ebp-68],ebx
	mov	[ebp-72],ebx
	mov	[ebp-76],ebx
	mov	[ebp-80],ebx
	mov	[ebp-84],ebx
	sub	esp,28
	mov	[esp+8],0
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_41
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	_flower
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,24
	mov	[esp+8],2
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_42
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,60
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_45
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	_fsectors
	sub	eax,1
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_44
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fsector
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_43
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_46
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,28
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	esi,_48
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[esp+4],esi
	call	_fsectors
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-88],eax
	sub	esp,4
	mov	esi,_47
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrConst
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[esp+4],esi
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fsector
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,32
	mov	[esp+8],3
	mov	[esp+12],1
	sub	esp,4
	mov	eax,_50
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp+4],ebx
	sub	esp,4
	mov	eax,_49
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fopentcpstream
	mov	[ebp-32],eax
	cmp	[ebp-32],0
	jnz	_51
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fopentcpstream
	mov	[ebp-32],eax
_51
	mov	ebx,[ebp-32]
	and	ebx,ebx
	jz	_52
	sub	esp,8
	lea	eax,[ebp-36]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_55
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_54
	sub	esp,12
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_56
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_54
	sub	esp,12
	lea	eax,[ebp-36]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_58
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_57
	jmp	_53
_54
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	eax,0
	jnz	_59
	sub	esp,28
	mov	eax,_60
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_61
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	jmp	_62
_59
	sub	esp,28
	mov	eax,_63
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_64
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
_62
	sub	esp,20
	mov	eax,_65
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	sub	esp,20
	mov	eax,_66
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_vuseragent
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	and	eax,eax
	jz	_67
	sub	esp,8
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_68
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,20
	mov	eax,_69
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	[ebp-92],eax
	sub	esp,4
	mov	[ebp-96],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-96]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-92]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrFromInt
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fwriteline
	mov	ebx,eax
_67
	sub	esp,8
	lea	eax,[ebp+32]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	and	eax,eax
	jz	_70
	sub	esp,8
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp+32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	_fwriteline
_70
	sub	esp,8
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_71
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,8
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_72
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,8
	lea	eax,[ebp+28]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	and	eax,eax
	jz	_73
	sub	esp,8
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	_fwriteline
_73
	call	_fmillisecs
	mov	[ebp-24],eax
_74
	call	_fmillisecs
	sub	eax,[ebp-24]
	cmp	eax,[_vresponsedelay]
	setge	al
	movzx	eax,al
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadavail
	mov	ebx,eax
	mov	eax,[ebp-88]
	or	eax,ebx
	and	eax,eax
	jz	_74
_5
	sub	esp,8
	lea	eax,[ebp-40]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadline
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,24
	mov	[esp+8],0
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_76
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_77
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrCompare
	mov	ebx,eax
	cmp	ebx,0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	sub	esp,24
	mov	[esp+8],0
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_78
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	esi,[ebp-40]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[esp],esi
	mov	eax,esi
	call	_fsector
	mov	esi,eax
	mov	[esp],esi
	sub	esp,4
	mov	eax,_79
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,esi
	call	__bbStrCompare
	mov	esi,eax
	cmp	esi,0
	mov	eax,esi
	setz	al
	movzx	eax,al
	mov	esi,eax
	or	ebx,esi
	and	ebx,ebx
	jz	_75
	sub	esp,20
	mov	[esp+8],1
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_80
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	[ebp-44],ebx
	cmp	[ebp-44],300
	jl	_81
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fclosetcpstream
	mov	eax,0
	jmp	_3_leave
_81
_75
	mov	[ebp-28],0
	sub	esp,4
	mov	[esp],0
	call	_fcreatebank
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],12
	call	_fcreatebank
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],4
	mov	esi,[ebp-32]
	mov	[esp+8],esi
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],8
	mov	[esp+8],-1
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,8
	lea	eax,[ebp-48]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_ttransporter
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-20]
	mov	esi,[ebp-48]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,[ebp-44]
	mov	esi,[ebp-48]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	sub	esp,36
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_83
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	_fsectors
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_82
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fsector
	mov	[esp+4],eax
	mov	ebx,[ebp-48]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-48]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_84
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
_85
	sub	esp,8
	lea	eax,[ebp-40]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadremoteline
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,36
	mov	[esp+8],1
	mov	[esp+12],1
	sub	esp,4
	mov	eax,_86
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp],ebx
	mov	[esp+4],2
	mov	[esp+8],-1
	mov	eax,ebx
	call	_fmid
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-52]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,24
	mov	[esp+8],0
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_87
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-56]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-56]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_90
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_89
	sub	esp,12
	lea	eax,[ebp-56]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_92
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_91
	sub	esp,12
	lea	eax,[ebp-56]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_94
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_93
	jmp	_88
_89
	mov	eax,[ebp-20]
	jmp	_3_leave
	jmp	_88
_91
	mov	[ebp-60],0
	jmp	_95
_96
	sub	esp,28
	mov	ebx,[ebp-60]
	mov	[esp+8],ebx
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_97
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	_ftrim
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-64]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,24
	mov	[esp+8],1
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_98
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-68]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,24
	mov	[esp+8],0
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_99
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-72]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,12
	lea	eax,[ebp-72]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_102
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jz	_101
	jmp	_100
_101
	sub	esp,8
	mov	eax,[ebp-48]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-68]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,24
	mov	eax,_103
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-48]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_104
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp],eax
	call	_fdebuglog
	jmp	_100
_100
	add	[ebp-60],1
_95
	sub	esp,12
	lea	eax,[ebp-52]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_105
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	_fsectors
	cmp	[ebp-60],eax
	jle	_96
_8
	jmp	_88
_93
	sub	esp,12
	mov	[esp+4],8
	sub	esp,8
	lea	eax,[ebp-52]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp+8],eax
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpokeint
	jmp	_88
_88
	jmp	_85
_6
	jmp	_53
_57
	sub	esp,4
	mov	[esp],1
	call	_fcreatebank
	mov	[ebp-16],eax
	sub	esp,4
	mov	[esp],16
	call	_fcreatebank
	mov	[ebp-20],eax
	sub	esp,12
	mov	[esp+4],0
	mov	esi,[ebp-16]
	mov	[esp+8],esi
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],4
	mov	esi,[ebp-32]
	mov	[esp+8],esi
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],8
	mov	[esp+8],-1
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,12
	mov	[esp+4],12
	mov	esi,[ebp-32]
	mov	[esp+8],esi
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,8
	lea	eax,[ebp-48]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_ttransporter
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjNew
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbObjStore
	mov	ebx,[ebp-20]
	mov	esi,[ebp-48]
	mov	esi,[esi]
	add	esi,0
	mov	[esi],ebx
	mov	ebx,0
	mov	esi,[ebp-48]
	mov	esi,[esi]
	add	esi,4
	mov	[esi],ebx
	sub	esp,36
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_107
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	_fsectors
	mov	[esp+8],eax
	mov	[esp+12],0
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_106
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fsector
	mov	[esp+4],eax
	mov	ebx,[ebp-48]
	mov	ebx,[ebx]
	add	ebx,8
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,8
	mov	eax,[ebp-48]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_108
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
	call	_fmillisecs
	mov	[ebp-24],eax
_109
	call	_fmillisecs
	sub	eax,[ebp-24]
	cmp	eax,[_vresponsedelay]
	setge	al
	movzx	eax,al
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadavail
	mov	ebx,eax
	mov	eax,[ebp-88]
	or	eax,ebx
	and	eax,eax
	jz	_109
_10
_110
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_freadavail
	and	eax,eax
	jz	_111
	sub	esp,8
	lea	eax,[ebp-40]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-32]
	mov	[esp],ebx
	mov	eax,ebx
	call	_freadline
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,20
	mov	[esp+8],0
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_112
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	mov	[ebp-44],ebx
	sub	esp,36
	mov	[esp+8],1
	mov	[esp+12],1
	sub	esp,4
	mov	eax,_113
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp],ebx
	mov	[esp+4],1
	mov	[esp+8],-1
	mov	eax,ebx
	call	_fmid
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-52]
	mov	[esp],eax
	call	__bbStrStore
	jmp	_114
_111
	sub	esp,8
	lea	eax,[ebp-40]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_115
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-44],0
	sub	esp,8
	lea	eax,[ebp-52]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_116
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
	sub	esp,8
	lea	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_117
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
_114
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_freadavail
	cmp	eax,0
	jnz	_118
	mov	ebx,[ebp-44]
	mov	[ebp-80],ebx
	cmp	[ebp-80],220
	jz	_120
	cmp	[ebp-80],331
	jz	_121
	cmp	[ebp-80],230
	jz	_122
	cmp	[ebp-80],213
	jz	_123
	cmp	[ebp-80],227
	jz	_124
	cmp	[ebp-80],150
	jz	_125
	jmp	_119
_120
	sub	esp,20
	mov	eax,_126
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_119
_121
	sub	esp,20
	mov	eax,_127
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp+32]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_119
_122
	sub	esp,20
	mov	eax,_128
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_119
_123
	sub	esp,12
	mov	[esp+4],8
	sub	esp,8
	lea	eax,[ebp-52]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	__bbStrToInt
	mov	[esp+8],eax
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,8
	lea	eax,[ebp-76]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,_129
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrStore
	jmp	_119
_124
	sub	esp,24
	mov	[esp+8],1
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_130
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-40]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,72
	mov	[esp+8],0
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_131
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_132
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,16
	mov	[esp+8],1
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_133
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	esi,[ebp-40]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[esp],esi
	mov	eax,esi
	call	_fsector
	mov	esi,eax
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_134
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,16
	mov	[esp+8],2
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_135
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	esi,[ebp-40]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[esp],esi
	mov	eax,esi
	call	_fsector
	mov	esi,eax
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,4
	mov	eax,_136
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,16
	mov	[esp+8],3
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_137
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	esi,[ebp-40]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[esp],esi
	mov	eax,esi
	call	_fsector
	mov	esi,eax
	mov	[esp+4],esi
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrStore
	sub	esp,28
	mov	[esp+8],5
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_139
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fsector
	mov	ebx,eax
	mov	[esp],ebx
	sub	esp,20
	mov	[esp+8],5
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_140
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	esi,[ebp-40]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[esp],esi
	mov	eax,esi
	call	_fsector
	mov	esi,eax
	mov	[esp],esi
	mov	eax,esi
	call	_flen
	mov	esi,eax
	sub	esi,1
	mov	[esp+4],esi
	mov	eax,ebx
	call	_fleft
	mov	ebx,eax
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrToInt
	mov	ebx,eax
	sub	esp,20
	mov	[esp+8],4
	mov	[esp+12],0
	sub	esp,4
	mov	eax,_138
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp+4],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	esi,[ebp-40]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrLoad
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[esp],esi
	mov	eax,esi
	call	_fsector
	mov	esi,eax
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrToInt
	mov	esi,eax
	shl	esi,byte 8
	add	esi,ebx
	mov	[ebp+24],esi
	sub	esp,12
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	mov	[esp+8],0
	sub	esp,4
	lea	eax,[ebp-8]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fopentcpstream
	mov	[ebp-84],eax
	sub	esp,12
	mov	[esp+4],4
	mov	esi,[ebp-84]
	mov	[esp+8],esi
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_fpokeint
	sub	esp,20
	mov	eax,_141
	mov	[esp],eax
	call	__bbStrConst
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_119
_125
	mov	eax,[ebp-20]
	jmp	_3_leave
	jmp	_119
_119
	cmp	[ebp-44],400
	jl	_142
	mov	ebx,[ebp-32]
	and	ebx,ebx
	jz	_143
	sub	esp,4
	mov	eax,[ebp-32]
	mov	[esp],eax
	call	_fclosetcpstream
_143
	mov	ebx,[ebp-84]
	and	ebx,ebx
	jz	_144
	sub	esp,4
	mov	eax,[ebp-84]
	mov	[esp],eax
	call	_fclosetcpstream
_144
	mov	ebx,[ebp-16]
	and	ebx,ebx
	jz	_145
	sub	esp,4
	mov	eax,[ebp-16]
	mov	[esp],eax
	call	_ffreebank
_145
	mov	ebx,[ebp-20]
	and	ebx,ebx
	jz	_146
	sub	esp,4
	mov	eax,[ebp-20]
	mov	[esp],eax
	call	_ffreebank
_146
	mov	eax,0
	jmp	_3_leave
_142
_118
	sub	esp,8
	lea	eax,[ebp-76]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	and	eax,eax
	jz	_147
	sub	esp,8
	mov	eax,[ebp-32]
	mov	[esp],eax
	mov	[ebp-88],eax
	sub	esp,4
	lea	ebx,[ebp-76]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[esp+4],ebx
	call	_fwriteline
_147
	jmp	_110
_11
	mov	eax,[ebp-20]
	jmp	_3_leave
	jmp	_53
_53
_52
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-72]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	esi,[ebp-76]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	esi,[ebp-68]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-64]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	esi,[ebp-56]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-52]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	esi,[ebp-48]
	mov	[esp],esi
	mov	eax,esi
	call	__bbObjRelease
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-40]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	esi,[ebp-36]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	esi,[ebp-8]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	esi,[ebp+32]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	ebx,[ebp+28]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-88]
	mov	[ebp-88],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-88]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fcloseremotefile
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	and	eax,eax
	jz	_148
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[esp],eax
	call	_ffreebank
_148
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekint
	and	eax,eax
	jz	_149
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekint
	mov	[esp],eax
	call	_fclosetcpstream
_149
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fbanksize
	cmp	eax,18
	jnz	_150
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekint
	and	eax,eax
	jz	_151
	sub	esp,16
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekint
	mov	[esp],eax
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,_152
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	[esp+4],ebx
	call	_fwriteline
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],12
	call	_fpeekint
	mov	[esp],eax
	call	_fclosetcpstream
_151
_150
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_ffreebank
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_ttransporter
	call	__bbObjEachFirst
	and	eax,eax
	jz	_14
_153
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,[ebp+20]
	jnz	_154
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjDelete
	jmp	_14
_154
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_153
_14
	mov	eax,0
	jmp	_13_leave
_13_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_feorf
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekint
	cmp	eax,0
	jnz	_155
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[esp],eax
	call	_fbanksize
	cmp	eax,0
	jnz	_156
	mov	eax,1
	jmp	_15_leave
_156
	jmp	_157
_155
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekint
	mov	[esp],eax
	call	_feof
	and	eax,eax
	jz	_158
	mov	eax,1
	jmp	_15_leave
_158
_157
	mov	eax,0
	jmp	_15_leave
_15_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fremotefilesize
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],8
	call	_fpeekint
	jmp	_16_leave
	mov	eax,0
	jmp	_16_leave
_16_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fremotefilename
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_ttransporter
	call	__bbObjEachFirst
	and	eax,eax
	jz	_18
_159
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,[ebp+20]
	jnz	_160
	sub	esp,4
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,8
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_17_leave
_160
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_159
_18
	sub	esp,4
	mov	eax,_161
	mov	[esp],eax
	call	__bbStrConst
	jmp	_17_leave
_17_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fremotefilecode
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_ttransporter
	call	__bbObjEachFirst
	and	eax,eax
	jz	_20
_162
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,[ebp+20]
	jnz	_163
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,4
	mov	eax,[eax]
	jmp	_19_leave
_163
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_162
_20
	mov	eax,0
	jmp	_19_leave
_19_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fremotefileprotocol
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	[ebp-4],0
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],_ttransporter
	call	__bbObjEachFirst
	and	eax,eax
	jz	_22
_164
	mov	ebx,[ebp-4]
	mov	ebx,[ebx]
	add	ebx,0
	mov	ebx,[ebx]
	cmp	ebx,[ebp+20]
	jnz	_165
	sub	esp,4
	mov	eax,[ebp-4]
	mov	eax,[eax]
	add	eax,12
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_21_leave
_165
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbObjEachNext
	and	eax,eax
	jnz	_164
_22
	sub	esp,4
	mov	eax,_166
	mov	[esp],eax
	call	__bbStrConst
	jmp	_21_leave
_21_leave
	mov	[ebp-8],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbObjRelease
	mov	ebx,eax
	mov	eax,[ebp-8]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_freadremoteline
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,36
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekint
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fupdateremotefile
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_167
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-20],0
	jmp	_168
_169
	sub	esp,8
	mov	eax,[ebp-8]
	mov	[esp],eax
	mov	ebx,[ebp-20]
	mov	[esp+4],ebx
	call	_fpeekbyte
	mov	[ebp-24],eax
	sub	esp,20
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-24]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fchr
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrConcat
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	sub	esp,20
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_vnewline
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	_fright
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_vnewline
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_170
	jmp	_24
_170
	add	[ebp-20],1
_168
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fbanksize
	sub	eax,1
	cmp	[ebp-20],eax
	jle	_169
_24
	sub	esp,20
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],2
	call	_fright
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,_vnewline
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_171
	sub	esp,28
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	mov	[ebp-32],eax
	sub	esp,4
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_vnewline
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-32]
	sub	eax,ebx
	mov	[esp+8],eax
	mov	[esp+4],1
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
	jmp	_172
_171
	sub	esp,20
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	mov	[esp+4],1
	call	_fright
	mov	[esp],eax
	mov	[ebp-32],eax
	sub	esp,8
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_vnewline
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp],ebx
	mov	[esp+4],1
	mov	eax,ebx
	call	_fright
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_173
	sub	esp,28
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	mov	[ebp-32],eax
	sub	esp,4
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_vnewline
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-32]
	sub	ebx,1
	sub	eax,ebx
	mov	[esp+8],eax
	mov	[esp+4],1
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	lea	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrStore
	mov	ebx,eax
_173
_172
	sub	esp,8
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	mov	[ebp-32],eax
	sub	esp,4
	mov	[ebp-36],eax
	sub	esp,4
	mov	ebx,_vnewline
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-36]
	mov	[esp],ebx
	mov	eax,ebx
	call	_flen
	mov	ebx,eax
	mov	eax,[ebp-32]
	add	eax,ebx
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-8]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fbanksize
	mov	ebx,eax
	mov	eax,[ebp-32]
	sub	ebx,eax
	mov	[ebp-28],ebx
	cmp	[ebp-28],0
	jge	_174
	mov	[ebp-28],0
_174
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	ebx,[ebp-28]
	mov	[esp+4],ebx
	call	_fresizeremotebank
	sub	esp,4
	lea	eax,[ebp-16]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_23_leave
	sub	esp,4
	mov	eax,_175
	mov	[esp],eax
	call	__bbStrConst
	jmp	_23_leave
_23_leave
	mov	[ebp-32],eax
	sub	esp,4
	mov	ebx,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-32]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_freadremotestring
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,20
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fupdateremotefile
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[ebp-8],eax
	sub	esp,8
	lea	eax,[ebp-12]
	mov	[esp],eax
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,_176
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-16],0
	jmp	_177
_178
	sub	esp,28
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,4
	add	ebx,[ebp-16]
	mov	[esp+4],ebx
	call	_fpeekbyte
	mov	[esp],eax
	call	_fchr
	mov	[esp+4],eax
	mov	[ebp-20],eax
	sub	esp,4
	lea	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrStore
	add	[ebp-16],1
_177
	mov	ebx,[ebp-8]
	sub	ebx,1
	cmp	[ebp-16],ebx
	jle	_178
_26
	sub	esp,12
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fbanksize
	mov	ebx,4
	add	ebx,[ebp-8]
	sub	eax,ebx
	mov	[esp+4],eax
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fresizeremotebank
	mov	ebx,eax
	sub	esp,4
	lea	eax,[ebp-12]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_25_leave
	sub	esp,4
	mov	eax,_179
	mov	[esp],eax
	call	__bbStrConst
	jmp	_25_leave
_25_leave
	mov	[ebp-20],eax
	sub	esp,4
	mov	ebx,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-20]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_freadremoteint
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fupdateremotefile
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fbanksize
	mov	ebx,eax
	mov	eax,[ebp-12]
	sub	ebx,4
	mov	[esp+4],ebx
	call	_fresizeremotebank
	mov	eax,[ebp-8]
	jmp	_27_leave
	mov	eax,0
	jmp	_27_leave
_27_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_freadremoteshort
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fupdateremotefile
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekshort
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fbanksize
	mov	ebx,eax
	mov	eax,[ebp-12]
	sub	ebx,2
	mov	[esp+4],ebx
	call	_fresizeremotebank
	mov	eax,[ebp-8]
	jmp	_28_leave
	mov	eax,0
	jmp	_28_leave
_28_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_freadremotebyte
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fupdateremotefile
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekbyte
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fbanksize
	mov	ebx,eax
	mov	eax,[ebp-12]
	sub	ebx,1
	mov	[esp+4],ebx
	call	_fresizeremotebank
	mov	eax,[ebp-8]
	jmp	_29_leave
	mov	eax,0
	jmp	_29_leave
_29_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fwriteremotebytes
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fupdateremotefile
	sub	esp,16
	mov	ebx,[ebp+28]
	mov	[esp+8],ebx
	mov	esi,[ebp+32]
	mov	[esp+12],esi
	mov	esi,[ebp+24]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fwritebytes
	mov	[ebp-8],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	_fbanksize
	mov	ebx,eax
	mov	eax,[ebp-12]
	sub	ebx,[ebp-8]
	mov	[esp+4],ebx
	call	_fresizeremotebank
	mov	eax,[ebp-8]
	jmp	_30_leave
	mov	eax,0
	jmp	_30_leave
_30_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fremotereadavail
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,4
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fupdateremotefile
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[esp],eax
	call	_fbanksize
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekint
	and	eax,eax
	jz	_180
	sub	esp,12
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekint
	mov	[esp],eax
	call	_freadavail
	mov	[ebp-8],eax
	jmp	_181
_180
	mov	[ebp-8],0
_181
	mov	eax,[ebp-4]
	add	eax,[ebp-8]
	jmp	_31_leave
	mov	eax,0
	jmp	_31_leave
_31_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fupdateremotefile
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[ebp-4],eax
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],4
	call	_fpeekint
	mov	[ebp-8],eax
	mov	ebx,[ebp-8]
	mov	esi,[ebp-4]
	and	ebx,esi
	and	ebx,ebx
	jz	_182
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_freadavail
	mov	[ebp-12],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fbanksize
	mov	[ebp-16],eax
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp-16]
	add	ebx,[ebp-12]
	mov	[esp+4],ebx
	call	_fresizebank
	sub	esp,16
	mov	ebx,[ebp-16]
	mov	[esp+8],ebx
	mov	esi,[ebp-12]
	mov	[esp+12],esi
	mov	esi,[ebp-8]
	mov	[esp+4],esi
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_freadbytes
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_feof
	and	eax,eax
	jz	_183
	sub	esp,4
	mov	eax,[ebp-8]
	mov	[esp],eax
	call	_fclosetcpstream
	sub	esp,12
	mov	[esp+4],4
	mov	[esp+8],0
	mov	eax,[ebp+20]
	mov	[esp],eax
	call	_fpokeint
_183
_182
	mov	eax,0
	jmp	_32_leave
_32_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 4
	.align	16
_fresizeremotebank
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,8
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	sub	esp,8
	mov	eax,[ebp+20]
	mov	[esp],eax
	mov	[esp+4],0
	call	_fpeekint
	mov	[ebp-4],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fbanksize
	sub	eax,[ebp+24]
	mov	[ebp-8],eax
	sub	esp,4
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fbanksize
	and	eax,eax
	jz	_184
	sub	esp,20
	mov	[esp+12],0
	mov	esi,[ebp+24]
	mov	[esp+16],esi
	mov	esi,[ebp-4]
	mov	[esp+8],esi
	mov	ebx,[ebp-8]
	mov	[esp+4],ebx
	mov	eax,[ebp-4]
	mov	[esp],eax
	call	_fcopybank
	sub	esp,8
	mov	eax,[ebp-4]
	mov	[esp],eax
	mov	ebx,[ebp+24]
	mov	[esp+4],ebx
	call	_fresizebank
_184
	mov	eax,0
	jmp	_33_leave
_33_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	16
_fsector
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,16
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	sub	esp,8
	lea	eax,[ebp-4]
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,_185
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConst
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrStore
	mov	[ebp-12],1
	jmp	_186
_187
	sub	esp,20
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp+4],ebx
	call	__bbStrCompare
	cmp	eax,0
	jnz	_188
	add	[ebp-8],1
	mov	ebx,[ebp+32]
	mov	eax,[ebp+28]
	cmp	[ebp-8],eax
	setg	al
	movzx	eax,al
	and	ebx,eax
	and	ebx,ebx
	jz	_189
	sub	esp,28
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrStore
_189
	jmp	_190
_188
	mov	ebx,[ebp+28]
	cmp	[ebp-8],ebx
	jl	_191
	sub	esp,28
	mov	ebx,[ebp-12]
	mov	[esp+4],ebx
	mov	[esp+8],1
	sub	esp,4
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_fmid
	mov	[esp+4],eax
	mov	[ebp-16],eax
	sub	esp,4
	lea	ebx,[ebp-4]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrConcat
	mov	ebx,eax
	mov	[esp+4],ebx
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrStore
_191
_190
	cmp	[ebp+32],0
	jnz	_192
	mov	ebx,[ebp+28]
	cmp	[ebp-8],ebx
	jle	_193
	jmp	_35
_193
_192
	add	[ebp-12],1
_186
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-12],eax
	jle	_187
_35
	sub	esp,4
	lea	eax,[ebp-4]
	mov	[esp],eax
	call	__bbStrLoad
	jmp	_34_leave
	sub	esp,4
	mov	eax,_194
	mov	[esp],eax
	call	__bbStrConst
	jmp	_34_leave
_34_leave
	mov	[ebp-16],eax
	sub	esp,4
	mov	ebx,[ebp+24]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	sub	esp,4
	mov	esi,[ebp-4]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-16]
	mov	[ebp-16],eax
	sub	esp,4
	mov	esi,[ebp+20]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-16]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 16
	.align	16
_fsectors
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,12
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-4],0
	mov	[ebp-8],1
	jmp	_195
_196
	sub	esp,16
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	ebx,[ebp-8]
	mov	[esp+8],ebx
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	and	ebx,ebx
	jz	_197
	add	[ebp-4],1
	sub	esp,16
	lea	eax,[ebp+24]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp+4],eax
	mov	ebx,[ebp-8]
	mov	[esp+8],ebx
	mov	[ebp-12],eax
	sub	esp,4
	lea	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrLoad
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[esp],ebx
	mov	eax,ebx
	call	_finstr
	mov	ebx,eax
	mov	[ebp-8],ebx
	jmp	_198
_197
	jmp	_37
_198
	add	[ebp-8],1
_195
	sub	esp,8
	lea	eax,[ebp+20]
	mov	[esp],eax
	call	__bbStrLoad
	mov	[esp],eax
	call	_flen
	cmp	[ebp-8],eax
	jle	_196
_37
	mov	eax,[ebp-4]
	jmp	_36_leave
	mov	eax,0
	jmp	_36_leave
_36_leave
	mov	[ebp-12],eax
	sub	esp,4
	mov	ebx,[ebp+20]
	mov	[esp],ebx
	mov	eax,ebx
	call	__bbStrRelease
	mov	ebx,eax
	mov	eax,[ebp-12]
	mov	[ebp-12],eax
	sub	esp,4
	mov	esi,[ebp+24]
	mov	[esp],esi
	mov	eax,esi
	call	__bbStrRelease
	mov	esi,eax
	mov	eax,[ebp-12]
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 8
	.align	4
_vuseragent	.dd	0
_38	.db	"Transporter",0
	.align	4
_vresponsedelay	.dd	0
	.align	4
_vnewline	.dd	0
	.align	4
_ttransporter	.dd	5
_39	.dd	0
	.dd	_39
	.dd	_39
	.dd	0
	.dd	-1
_40	.dd	0
	.dd	_40
	.dd	_40
	.dd	0
	.dd	-1
	.dd	4
	.dd	__bbIntType
	.dd	__bbIntType
	.dd	__bbStrType
	.dd	__bbStrType
_41	.db	":",0
_42	.db	"/",0
_43	.db	"www.",0
_44	.db	".",0
_45	.db	".",0
_46	.db	".",0
_47	.db	".",0
_48	.db	".",0
_49	.db	"/",0
_50	.db	"/",0
_55	.db	"http",0
_56	.db	"https",0
_58	.db	"ftp",0
_60	.db	"GET ",0
_61	.db	" HTTP/1.1",0
_63	.db	"POST ",0
_64	.db	" HTTP/1.1",0
_65	.db	"Host: ",0
_66	.db	"User-Agent: ",0
_68	.db	"Content-Type: application/x-www-form-urlencoded",0
_69	.db	"Content-Length: ",0
_71	.db	"Connection: Close",0
_72	.db	"",0
_76	.db	" ",0
_77	.db	"HTTP/1.1",0
_78	.db	" ",0
_79	.db	"HTTP/1.0",0
_80	.db	" ",0
_82	.db	"/",0
_83	.db	"/",0
_84	.db	"http",0
_86	.db	":",0
_87	.db	":",0
_90	.db	"",0
_92	.db	"Content-Disposition",0
_94	.db	"Content-Length",0
_97	.db	";",0
_98	.db	"=",0
_99	.db	"=",0
_102	.db	"filename",0
_103	.db	"[",0
_104	.db	"]",0
_105	.db	";",0
_106	.db	"/",0
_107	.db	"/",0
_108	.db	"ftp",0
_112	.db	" ",0
_113	.db	" ",0
_115	.db	"",0
_116	.db	"",0
_117	.db	"",0
_126	.db	"USER ",0
_127	.db	"PASS ",0
_128	.db	"SIZE ",0
_129	.db	"PASV",0
_130	.db	"(",0
_131	.db	",",0
_132	.db	".",0
_133	.db	",",0
_134	.db	".",0
_135	.db	",",0
_136	.db	".",0
_137	.db	",",0
_138	.db	",",0
_139	.db	",",0
_140	.db	",",0
_141	.db	"RETR ",0
_152	.db	"BYE",0
_161	.db	"",0
_166	.db	"",0
_167	.db	"",0
_175	.db	"",0
_176	.db	"",0
_179	.db	"",0
_185	.db	"",0
_194	.db	"",0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

