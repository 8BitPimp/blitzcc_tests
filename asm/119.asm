
	.align	16
__MAIN
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,4
	mov	eax,__DATA
	mov	[esp],eax
	call	__bbRestore
	sub	esp,4
	mov	eax,__LIBS
	mov	[esp],eax
	call	__bbLoadLibs
	call	_2_begin
	jmp	_2_leave
_2_begin
	ret
_2_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	16
_fdisplay_iswindowed
	push	ebx
	push	esi
	push	edi
	push	ebp
	mov	ebp,esp
	sub	esp,44
	mov	ebx,0
	mov	[ebp-4],ebx
	mov	[ebp-8],ebx
	mov	[ebp-12],ebx
	mov	[ebp-16],ebx
	mov	[ebp-20],ebx
	mov	[ebp-24],ebx
	mov	[ebp-28],ebx
	mov	[ebp-32],ebx
	mov	[ebp-36],ebx
	mov	[ebp-40],ebx
	call	_fgraphicswidth
	mov	[ebp-28],eax
	call	_fgraphicsheight
	mov	[ebp-32],eax
	call	_fmousex
	mov	[ebp-4],eax
	call	_fmousey
	mov	[ebp-8],eax
	sub	esp,8
	mov	[esp],-1
	mov	[esp+4],-1
	call	_fmovemouse
	call	_fmousex
	mov	[ebp-12],eax
	call	_fmousey
	mov	[ebp-16],eax
	sub	esp,8
	mov	eax,[ebp-28]
	mov	[esp],eax
	mov	ebx,[ebp-32]
	mov	[esp+4],ebx
	call	_fmovemouse
	call	_fmousex
	mov	[ebp-20],eax
	call	_fmousey
	mov	[ebp-24],eax
	sub	esp,8
	mov	eax,[ebp-36]
	mov	[esp],eax
	mov	ebx,[ebp-40]
	mov	[esp+4],ebx
	call	_fmovemouse
	call	_fmousexspeed
	call	_fmouseyspeed
	cmp	[ebp-12],-1
	setz	al
	movzx	eax,al
	mov	[ebp-44],eax
	mov	ebx,[ebp-28]
	cmp	[ebp-20],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	or	eax,ebx
	and	eax,eax
	jz	_4
	mov	eax,1
	jmp	_3_leave
_4
	cmp	[ebp-16],-1
	setz	al
	movzx	eax,al
	mov	[ebp-44],eax
	mov	ebx,[ebp-32]
	cmp	[ebp-24],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	or	eax,ebx
	and	eax,eax
	jz	_5
	mov	eax,1
	jmp	_3_leave
_5
	cmp	[ebp-12],0
	setz	al
	movzx	eax,al
	mov	[ebp-44],eax
	cmp	[ebp-16],0
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	and	eax,ebx
	mov	[ebp-44],eax
	mov	ebx,[ebp-28]
	sub	ebx,1
	cmp	[ebp-20],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	and	eax,ebx
	mov	[ebp-44],eax
	mov	ebx,[ebp-32]
	sub	ebx,1
	cmp	[ebp-24],ebx
	mov	eax,ebx
	setz	al
	movzx	eax,al
	mov	ebx,eax
	mov	eax,[ebp-44]
	and	eax,ebx
	and	eax,eax
	jz	_6
	mov	eax,0
	jmp	_3_leave
_6
	mov	eax,1
	jmp	_3_leave
	mov	eax,0
	jmp	_3_leave
_3_leave
	mov	esp,ebp
	pop	ebp
	pop	edi
	pop	esi
	pop	ebx
	ret	word 0
	.align	4
__LIBS
	.db	"",0
	.align	4
__DATA
	.dd	0

